function ControlVersion() {
    var e, t;
    try {
        t = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7"),
        e = t.GetVariable("$version")
    } catch (i) {}
    if (!e)
        try {
            t = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6"),
            e = "WIN 6,0,21,0",
            t.AllowScriptAccess = "always",
            e = t.GetVariable("$version")
        } catch (i) {}
    if (!e)
        try {
            t = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.3"),
            e = t.GetVariable("$version")
        } catch (i) {}
    if (!e)
        try {
            t = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.3"),
            e = "WIN 3,0,18,0"
        } catch (i) {}
    if (!e)
        try {
            t = new ActiveXObject("ShockwaveFlash.ShockwaveFlash"),
            e = "WIN 2,0,0,11"
        } catch (i) {
            e = -1
        }
    return e
}
function GetSwfVer() {
    var e = -1;
    if (null != navigator.plugins && navigator.plugins.length > 0) {
        if (navigator.plugins["Shockwave Flash 2.0"] || navigator.plugins["Shockwave Flash"]) {
            var t = navigator.plugins["Shockwave Flash 2.0"] ? " 2.0" : ""
              , i = navigator.plugins["Shockwave Flash" + t].description
              , n = i.split(" ")
              , r = n[2].split(".")
              , o = r[0]
              , a = r[1];
            tempArrayMinor = "" != n[3] ? n[3].split("r") : n[4].split("r");
            var s = tempArrayMinor[1] > 0 ? tempArrayMinor[1] : 0
              , e = o + "." + a + "." + s
        }
    } else
        -1 != navigator.userAgent.toLowerCase().indexOf("webtv/2.6") ? e = 4 : -1 != navigator.userAgent.toLowerCase().indexOf("webtv/2.5") ? e = 3 : -1 != navigator.userAgent.toLowerCase().indexOf("webtv") ? e = 2 : isIE && isWin && !isOpera && (e = ControlVersion());
    return e
}
function DetectFlashVer(e, t, i, n) {
    if (-1 == n)
        return !1;
    if (0 != n) {
        isIE && isWin && !isOpera ? (tempArray = n.split(" "),
        tempString = tempArray[1],
        versionArray = tempString.split(",")) : versionArray = n.split(".");
        var r = versionArray[0]
          , o = versionArray[1]
          , a = versionArray[2];
        if (r > parseFloat(e))
            return !0;
        if (r == parseFloat(e)) {
            if (o > parseFloat(t))
                return !0;
            if (o == parseFloat(t) && a >= parseFloat(i))
                return !0
        }
        return !1
    }
}
function Mash() {
    var e = 4022871197
      , t = function(t) {
        t = t.toString();
        for (var i = 0; i < t.length; i++) {
            e += t.charCodeAt(i);
            var n = .02519603282416938 * e;
            e = n >>> 0,
            n -= e,
            n *= e,
            e = n >>> 0,
            n -= e,
            e += 4294967296 * n
        }
        return 2.3283064365386963e-10 * (e >>> 0)
    }
    ;
    return t.version = "Mash 0.9",
    t
}
function Alea() {
    var e = Math.pow(2, 32) - 1;
    return this.next = function(e) {
        var t = 0
          , i = 0
          , n = 0
          , r = 1;
        0 == e.length && (e = [+new Date]);
        var o = Mash();
        t = o(" "),
        i = o(" "),
        n = o(" ");
        for (var a = 0; a < e.length; a++)
            t -= o(e[a]),
            0 > t && (t += 1),
            i -= o(e[a]),
            0 > i && (i += 1),
            n -= o(e[a]),
            0 > n && (n += 1);
        o = null ;
        var s = function() {
            var e = 2091639 * t + 2.3283064365386963e-10 * r;
            return t = i,
            i = n,
            n = e - (r = 0 | e)
        }
        ;
        return s.uint32 = function() {
            return 4294967296 * s()
        }
        ,
        s.fract53 = function() {
            return s() + 1.1102230246251565e-16 * (2097152 * s() | 0)
        }
        ,
        s.version = "Alea 0.9",
        s.args = e,
        s
    }(Array.prototype.slice.call(arguments)),
    this.nextInt = function(t) {
        return void 0 == t && (t = e),
        Math.floor(this.next() * t)
    }
    ,
    this
}
function BigInteger(e, t, i) {
    null != e && ("number" == typeof e ? this.fromNumber(e, t, i) : null == t && "string" != typeof e ? this.fromString(e, 256) : this.fromString(e, t))
}
function nbi() {
    return new BigInteger(null )
}
function am1(e, t, i, n, r, o) {
    for (; --o >= 0; ) {
        var a = t * this[e++] + i[n] + r;
        r = Math.floor(a / 67108864),
        i[n++] = 67108863 & a
    }
    return r
}
function am2(e, t, i, n, r, o) {
    for (var a = 32767 & t, s = t >> 15; --o >= 0; ) {
        var l = 32767 & this[e]
          , c = this[e++] >> 15
          , d = s * l + c * a;
        l = a * l + ((32767 & d) << 15) + i[n] + (1073741823 & r),
        r = (l >>> 30) + (d >>> 15) + s * c + (r >>> 30),
        i[n++] = 1073741823 & l
    }
    return r
}
function am3(e, t, i, n, r, o) {
    for (var a = 16383 & t, s = t >> 14; --o >= 0; ) {
        var l = 16383 & this[e]
          , c = this[e++] >> 14
          , d = s * l + c * a;
        l = a * l + ((16383 & d) << 14) + i[n] + r,
        r = (l >> 28) + (d >> 14) + s * c,
        i[n++] = 268435455 & l
    }
    return r
}
function int2char(e) {
    return BI_RM.charAt(e)
}
function intAt(e, t) {
    var i = BI_RC[e.charCodeAt(t)];
    return null == i ? -1 : i
}
function bnpCopyTo(e) {
    for (var t = this.t - 1; t >= 0; --t)
        e[t] = this[t];
    e.t = this.t,
    e.s = this.s
}
function bnpFromInt(e) {
    this.t = 1,
    this.s = 0 > e ? -1 : 0,
    e > 0 ? this[0] = e : -1 > e ? this[0] = e + this.DV : this.t = 0
}
function nbv(e) {
    var t = nbi();
    return t.fromInt(e),
    t
}
function bnpFromString(e, t) {
    var i;
    if (16 == t)
        i = 4;
    else if (8 == t)
        i = 3;
    else if (256 == t)
        i = 8;
    else if (2 == t)
        i = 1;
    else if (32 == t)
        i = 5;
    else {
        if (4 != t)
            return void this.fromRadix(e, t);
        i = 2
    }
    this.t = 0,
    this.s = 0;
    for (var n = e.length, r = !1, o = 0; --n >= 0; ) {
        var a = 8 == i ? 255 & e[n] : intAt(e, n);
        0 > a ? "-" == e.charAt(n) && (r = !0) : (r = !1,
        0 == o ? this[this.t++] = a : o + i > this.DB ? (this[this.t - 1] |= (a & (1 << this.DB - o) - 1) << o,
        this[this.t++] = a >> this.DB - o) : this[this.t - 1] |= a << o,
        o += i,
        o >= this.DB && (o -= this.DB))
    }
    8 == i && 0 != (128 & e[0]) && (this.s = -1,
    o > 0 && (this[this.t - 1] |= (1 << this.DB - o) - 1 << o)),
    this.clamp(),
    r && BigInteger.ZERO.subTo(this, this)
}
function bnpClamp() {
    for (var e = this.s & this.DM; this.t > 0 && this[this.t - 1] == e; )
        --this.t
}
function bnToString(e) {
    if (this.s < 0)
        return "-" + this.negate().toString(e);
    var t;
    if (16 == e)
        t = 4;
    else if (8 == e)
        t = 3;
    else if (2 == e)
        t = 1;
    else if (32 == e)
        t = 5;
    else {
        if (4 != e)
            return this.toRadix(e);
        t = 2
    }
    var i, n = (1 << t) - 1, r = !1, o = "", a = this.t, s = this.DB - a * this.DB % t;
    if (a-- > 0)
        for (s < this.DB && (i = this[a] >> s) > 0 && (r = !0,
        o = int2char(i)); a >= 0; )
            t > s ? (i = (this[a] & (1 << s) - 1) << t - s,
            i |= this[--a] >> (s += this.DB - t)) : (i = this[a] >> (s -= t) & n,
            0 >= s && (s += this.DB,
            --a)),
            i > 0 && (r = !0),
            r && (o += int2char(i));
    return r ? o : "0"
}
function bnNegate() {
    var e = nbi();
    return BigInteger.ZERO.subTo(this, e),
    e
}
function bnAbs() {
    return this.s < 0 ? this.negate() : this
}
function bnCompareTo(e) {
    var t = this.s - e.s;
    if (0 != t)
        return t;
    var i = this.t;
    if (t = i - e.t,
    0 != t)
        return this.s < 0 ? -t : t;
    for (; --i >= 0; )
        if (0 != (t = this[i] - e[i]))
            return t;
    return 0
}
function nbits(e) {
    var t, i = 1;
    return 0 != (t = e >>> 16) && (e = t,
    i += 16),
    0 != (t = e >> 8) && (e = t,
    i += 8),
    0 != (t = e >> 4) && (e = t,
    i += 4),
    0 != (t = e >> 2) && (e = t,
    i += 2),
    0 != (t = e >> 1) && (e = t,
    i += 1),
    i
}
function bnBitLength() {
    return this.t <= 0 ? 0 : this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM)
}
function bnpDLShiftTo(e, t) {
    var i;
    for (i = this.t - 1; i >= 0; --i)
        t[i + e] = this[i];
    for (i = e - 1; i >= 0; --i)
        t[i] = 0;
    t.t = this.t + e,
    t.s = this.s
}
function bnpDRShiftTo(e, t) {
    for (var i = e; i < this.t; ++i)
        t[i - e] = this[i];
    t.t = Math.max(this.t - e, 0),
    t.s = this.s
}
function bnpLShiftTo(e, t) {
    var i, n = e % this.DB, r = this.DB - n, o = (1 << r) - 1, a = Math.floor(e / this.DB), s = this.s << n & this.DM;
    for (i = this.t - 1; i >= 0; --i)
        t[i + a + 1] = this[i] >> r | s,
        s = (this[i] & o) << n;
    for (i = a - 1; i >= 0; --i)
        t[i] = 0;
    t[a] = s,
    t.t = this.t + a + 1,
    t.s = this.s,
    t.clamp()
}
function bnpRShiftTo(e, t) {
    t.s = this.s;
    var i = Math.floor(e / this.DB);
    if (i >= this.t)
        return void (t.t = 0);
    var n = e % this.DB
      , r = this.DB - n
      , o = (1 << n) - 1;
    t[0] = this[i] >> n;
    for (var a = i + 1; a < this.t; ++a)
        t[a - i - 1] |= (this[a] & o) << r,
        t[a - i] = this[a] >> n;
    n > 0 && (t[this.t - i - 1] |= (this.s & o) << r),
    t.t = this.t - i,
    t.clamp()
}
function bnpSubTo(e, t) {
    for (var i = 0, n = 0, r = Math.min(e.t, this.t); r > i; )
        n += this[i] - e[i],
        t[i++] = n & this.DM,
        n >>= this.DB;
    if (e.t < this.t) {
        for (n -= e.s; i < this.t; )
            n += this[i],
            t[i++] = n & this.DM,
            n >>= this.DB;
        n += this.s
    } else {
        for (n += this.s; i < e.t; )
            n -= e[i],
            t[i++] = n & this.DM,
            n >>= this.DB;
        n -= e.s
    }
    t.s = 0 > n ? -1 : 0,
    -1 > n ? t[i++] = this.DV + n : n > 0 && (t[i++] = n),
    t.t = i,
    t.clamp()
}
function bnpMultiplyTo(e, t) {
    var i = this.abs()
      , n = e.abs()
      , r = i.t;
    for (t.t = r + n.t; --r >= 0; )
        t[r] = 0;
    for (r = 0; r < n.t; ++r)
        t[r + i.t] = i.am(0, n[r], t, r, 0, i.t);
    t.s = 0,
    t.clamp(),
    this.s != e.s && BigInteger.ZERO.subTo(t, t)
}
function bnpSquareTo(e) {
    for (var t = this.abs(), i = e.t = 2 * t.t; --i >= 0; )
        e[i] = 0;
    for (i = 0; i < t.t - 1; ++i) {
        var n = t.am(i, t[i], e, 2 * i, 0, 1);
        (e[i + t.t] += t.am(i + 1, 2 * t[i], e, 2 * i + 1, n, t.t - i - 1)) >= t.DV && (e[i + t.t] -= t.DV,
        e[i + t.t + 1] = 1)
    }
    e.t > 0 && (e[e.t - 1] += t.am(i, t[i], e, 2 * i, 0, 1)),
    e.s = 0,
    e.clamp()
}
function bnpDivRemTo(e, t, i) {
    var n = e.abs();
    if (!(n.t <= 0)) {
        var r = this.abs();
        if (r.t < n.t)
            return null != t && t.fromInt(0),
            void (null != i && this.copyTo(i));
        null == i && (i = nbi());
        var o = nbi()
          , a = this.s
          , s = e.s
          , l = this.DB - nbits(n[n.t - 1]);
        l > 0 ? (n.lShiftTo(l, o),
        r.lShiftTo(l, i)) : (n.copyTo(o),
        r.copyTo(i));
        var c = o.t
          , d = o[c - 1];
        if (0 != d) {
            var h = d * (1 << this.F1) + (c > 1 ? o[c - 2] >> this.F2 : 0)
              , u = this.FV / h
              , p = (1 << this.F1) / h
              , f = 1 << this.F2
              , g = i.t
              , m = g - c
              , v = null == t ? nbi() : t;
            for (o.dlShiftTo(m, v),
            i.compareTo(v) >= 0 && (i[i.t++] = 1,
            i.subTo(v, i)),
            BigInteger.ONE.dlShiftTo(c, v),
            v.subTo(o, o); o.t < c; )
                o[o.t++] = 0;
            for (; --m >= 0; ) {
                var y = i[--g] == d ? this.DM : Math.floor(i[g] * u + (i[g - 1] + f) * p);
                if ((i[g] += o.am(0, y, i, m, 0, c)) < y)
                    for (o.dlShiftTo(m, v),
                    i.subTo(v, i); i[g] < --y; )
                        i.subTo(v, i)
            }
            null != t && (i.drShiftTo(c, t),
            a != s && BigInteger.ZERO.subTo(t, t)),
            i.t = c,
            i.clamp(),
            l > 0 && i.rShiftTo(l, i),
            0 > a && BigInteger.ZERO.subTo(i, i)
        }
    }
}
function bnMod(e) {
    var t = nbi();
    return this.abs().divRemTo(e, null , t),
    this.s < 0 && t.compareTo(BigInteger.ZERO) > 0 && e.subTo(t, t),
    t
}
function Classic(e) {
    this.m = e
}
function cConvert(e) {
    return e.s < 0 || e.compareTo(this.m) >= 0 ? e.mod(this.m) : e
}
function cRevert(e) {
    return e
}
function cReduce(e) {
    e.divRemTo(this.m, null , e)
}
function cMulTo(e, t, i) {
    e.multiplyTo(t, i),
    this.reduce(i)
}
function cSqrTo(e, t) {
    e.squareTo(t),
    this.reduce(t)
}
function bnpInvDigit() {
    if (this.t < 1)
        return 0;
    var e = this[0];
    if (0 == (1 & e))
        return 0;
    var t = 3 & e;
    return t = t * (2 - (15 & e) * t) & 15,
    t = t * (2 - (255 & e) * t) & 255,
    t = t * (2 - ((65535 & e) * t & 65535)) & 65535,
    t = t * (2 - e * t % this.DV) % this.DV,
    t > 0 ? this.DV - t : -t
}
function Montgomery(e) {
    this.m = e,
    this.mp = e.invDigit(),
    this.mpl = 32767 & this.mp,
    this.mph = this.mp >> 15,
    this.um = (1 << e.DB - 15) - 1,
    this.mt2 = 2 * e.t
}
function montConvert(e) {
    var t = nbi();
    return e.abs().dlShiftTo(this.m.t, t),
    t.divRemTo(this.m, null , t),
    e.s < 0 && t.compareTo(BigInteger.ZERO) > 0 && this.m.subTo(t, t),
    t
}
function montRevert(e) {
    var t = nbi();
    return e.copyTo(t),
    this.reduce(t),
    t
}
function montReduce(e) {
    for (; e.t <= this.mt2; )
        e[e.t++] = 0;
    for (var t = 0; t < this.m.t; ++t) {
        var i = 32767 & e[t]
          , n = i * this.mpl + ((i * this.mph + (e[t] >> 15) * this.mpl & this.um) << 15) & e.DM;
        for (i = t + this.m.t,
        e[i] += this.m.am(0, n, e, t, 0, this.m.t); e[i] >= e.DV; )
            e[i] -= e.DV,
            e[++i]++
    }
    e.clamp(),
    e.drShiftTo(this.m.t, e),
    e.compareTo(this.m) >= 0 && e.subTo(this.m, e)
}
function montSqrTo(e, t) {
    e.squareTo(t),
    this.reduce(t)
}
function montMulTo(e, t, i) {
    e.multiplyTo(t, i),
    this.reduce(i)
}
function bnpIsEven() {
    return 0 == (this.t > 0 ? 1 & this[0] : this.s)
}
function bnpExp(e, t) {
    if (e > 4294967295 || 1 > e)
        return BigInteger.ONE;
    var i = nbi()
      , n = nbi()
      , r = t.convert(this)
      , o = nbits(e) - 1;
    for (r.copyTo(i); --o >= 0; )
        if (t.sqrTo(i, n),
        (e & 1 << o) > 0)
            t.mulTo(n, r, i);
        else {
            var a = i;
            i = n,
            n = a
        }
    return t.revert(i)
}
function bnModPowInt(e, t) {
    var i;
    return i = 256 > e || t.isEven() ? new Classic(t) : new Montgomery(t),
    this.exp(e, i)
}
function bnClone() {
    var e = nbi();
    return this.copyTo(e),
    e
}
function bnIntValue() {
    if (this.s < 0) {
        if (1 == this.t)
            return this[0] - this.DV;
        if (0 == this.t)
            return -1
    } else {
        if (1 == this.t)
            return this[0];
        if (0 == this.t)
            return 0
    }
    return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0]
}
function bnByteValue() {
    return 0 == this.t ? this.s : this[0] << 24 >> 24
}
function bnShortValue() {
    return 0 == this.t ? this.s : this[0] << 16 >> 16
}
function bnpChunkSize(e) {
    return Math.floor(Math.LN2 * this.DB / Math.log(e))
}
function bnSigNum() {
    return this.s < 0 ? -1 : this.t <= 0 || 1 == this.t && this[0] <= 0 ? 0 : 1
}
function bnpToRadix(e) {
    if (null == e && (e = 10),
    0 == this.signum() || 2 > e || e > 36)
        return "0";
    var t = this.chunkSize(e)
      , i = Math.pow(e, t)
      , n = nbv(i)
      , r = nbi()
      , o = nbi()
      , a = "";
    for (this.divRemTo(n, r, o); r.signum() > 0; )
        a = (i + o.intValue()).toString(e).substr(1) + a,
        r.divRemTo(n, r, o);
    return o.intValue().toString(e) + a
}
function bnpFromRadix(e, t) {
    this.fromInt(0),
    null == t && (t = 10);
    for (var i = this.chunkSize(t), n = Math.pow(t, i), r = !1, o = 0, a = 0, s = 0; s < e.length; ++s) {
        var l = intAt(e, s);
        0 > l ? "-" == e.charAt(s) && 0 == this.signum() && (r = !0) : (a = t * a + l,
        ++o >= i && (this.dMultiply(n),
        this.dAddOffset(a, 0),
        o = 0,
        a = 0))
    }
    o > 0 && (this.dMultiply(Math.pow(t, o)),
    this.dAddOffset(a, 0)),
    r && BigInteger.ZERO.subTo(this, this)
}
function bnpFromNumber(e, t, i) {
    if ("number" == typeof t)
        if (2 > e)
            this.fromInt(1);
        else
            for (this.fromNumber(e, i),
            this.testBit(e - 1) || this.bitwiseTo(BigInteger.ONE.shiftLeft(e - 1), op_or, this),
            this.isEven() && this.dAddOffset(1, 0); !this.isProbablePrime(t); )
                this.dAddOffset(2, 0),
                this.bitLength() > e && this.subTo(BigInteger.ONE.shiftLeft(e - 1), this);
    else {
        var n = new Array
          , r = 7 & e;
        n.length = (e >> 3) + 1,
        t.nextBytes(n),
        r > 0 ? n[0] &= (1 << r) - 1 : n[0] = 0,
        this.fromString(n, 256)
    }
}
function bnToByteArray() {
    var e = this.t
      , t = new Array;
    t[0] = this.s;
    var i, n = this.DB - e * this.DB % 8, r = 0;
    if (e-- > 0)
        for (n < this.DB && (i = this[e] >> n) != (this.s & this.DM) >> n && (t[r++] = i | this.s << this.DB - n); e >= 0; )
            8 > n ? (i = (this[e] & (1 << n) - 1) << 8 - n,
            i |= this[--e] >> (n += this.DB - 8)) : (i = this[e] >> (n -= 8) & 255,
            0 >= n && (n += this.DB,
            --e)),
            0 != (128 & i) && (i |= -256),
            0 == r && (128 & this.s) != (128 & i) && ++r,
            (r > 0 || i != this.s) && (t[r++] = i);
    return t
}
function bnEquals(e) {
    return 0 == this.compareTo(e)
}
function bnMin(e) {
    return this.compareTo(e) < 0 ? this : e
}
function bnMax(e) {
    return this.compareTo(e) > 0 ? this : e
}
function bnpBitwiseTo(e, t, i) {
    var n, r, o = Math.min(e.t, this.t);
    for (n = 0; o > n; ++n)
        i[n] = t(this[n], e[n]);
    if (e.t < this.t) {
        for (r = e.s & this.DM,
        n = o; n < this.t; ++n)
            i[n] = t(this[n], r);
        i.t = this.t
    } else {
        for (r = this.s & this.DM,
        n = o; n < e.t; ++n)
            i[n] = t(r, e[n]);
        i.t = e.t
    }
    i.s = t(this.s, e.s),
    i.clamp()
}
function op_and(e, t) {
    return e & t
}
function bnAnd(e) {
    var t = nbi();
    return this.bitwiseTo(e, op_and, t),
    t
}
function op_or(e, t) {
    return e | t
}
function bnOr(e) {
    var t = nbi();
    return this.bitwiseTo(e, op_or, t),
    t
}
function op_xor(e, t) {
    return e ^ t
}
function bnXor(e) {
    var t = nbi();
    return this.bitwiseTo(e, op_xor, t),
    t
}
function op_andnot(e, t) {
    return e & ~t
}
function bnAndNot(e) {
    var t = nbi();
    return this.bitwiseTo(e, op_andnot, t),
    t
}
function bnNot() {
    for (var e = nbi(), t = 0; t < this.t; ++t)
        e[t] = this.DM & ~this[t];
    return e.t = this.t,
    e.s = ~this.s,
    e
}
function bnShiftLeft(e) {
    var t = nbi();
    return 0 > e ? this.rShiftTo(-e, t) : this.lShiftTo(e, t),
    t
}
function bnShiftRight(e) {
    var t = nbi();
    return 0 > e ? this.lShiftTo(-e, t) : this.rShiftTo(e, t),
    t
}
function lbit(e) {
    if (0 == e)
        return -1;
    var t = 0;
    return 0 == (65535 & e) && (e >>= 16,
    t += 16),
    0 == (255 & e) && (e >>= 8,
    t += 8),
    0 == (15 & e) && (e >>= 4,
    t += 4),
    0 == (3 & e) && (e >>= 2,
    t += 2),
    0 == (1 & e) && ++t,
    t
}
function bnGetLowestSetBit() {
    for (var e = 0; e < this.t; ++e)
        if (0 != this[e])
            return e * this.DB + lbit(this[e]);
    return this.s < 0 ? this.t * this.DB : -1
}
function cbit(e) {
    for (var t = 0; 0 != e; )
        e &= e - 1,
        ++t;
    return t
}
function bnBitCount() {
    for (var e = 0, t = this.s & this.DM, i = 0; i < this.t; ++i)
        e += cbit(this[i] ^ t);
    return e
}
function bnTestBit(e) {
    var t = Math.floor(e / this.DB);
    return t >= this.t ? 0 != this.s : 0 != (this[t] & 1 << e % this.DB)
}
function bnpChangeBit(e, t) {
    var i = BigInteger.ONE.shiftLeft(e);
    return this.bitwiseTo(i, t, i),
    i
}
function bnSetBit(e) {
    return this.changeBit(e, op_or)
}
function bnClearBit(e) {
    return this.changeBit(e, op_andnot)
}
function bnFlipBit(e) {
    return this.changeBit(e, op_xor)
}
function bnpAddTo(e, t) {
    for (var i = 0, n = 0, r = Math.min(e.t, this.t); r > i; )
        n += this[i] + e[i],
        t[i++] = n & this.DM,
        n >>= this.DB;
    if (e.t < this.t) {
        for (n += e.s; i < this.t; )
            n += this[i],
            t[i++] = n & this.DM,
            n >>= this.DB;
        n += this.s
    } else {
        for (n += this.s; i < e.t; )
            n += e[i],
            t[i++] = n & this.DM,
            n >>= this.DB;
        n += e.s
    }
    t.s = 0 > n ? -1 : 0,
    n > 0 ? t[i++] = n : -1 > n && (t[i++] = this.DV + n),
    t.t = i,
    t.clamp()
}
function bnAdd(e) {
    var t = nbi();
    return this.addTo(e, t),
    t
}
function bnSubtract(e) {
    var t = nbi();
    return this.subTo(e, t),
    t
}
function bnMultiply(e) {
    var t = nbi();
    return this.multiplyTo(e, t),
    t
}
function bnSquare() {
    var e = nbi();
    return this.squareTo(e),
    e
}
function bnDivide(e) {
    var t = nbi();
    return this.divRemTo(e, t, null ),
    t
}
function bnRemainder(e) {
    var t = nbi();
    return this.divRemTo(e, null , t),
    t
}
function bnDivideAndRemainder(e) {
    var t = nbi()
      , i = nbi();
    return this.divRemTo(e, t, i),
    new Array(t,i)
}
function bnpDMultiply(e) {
    this[this.t] = this.am(0, e - 1, this, 0, 0, this.t),
    ++this.t,
    this.clamp()
}
function bnpDAddOffset(e, t) {
    if (0 != e) {
        for (; this.t <= t; )
            this[this.t++] = 0;
        for (this[t] += e; this[t] >= this.DV; )
            this[t] -= this.DV,
            ++t >= this.t && (this[this.t++] = 0),
            ++this[t]
    }
}
function NullExp() {}
function nNop(e) {
    return e
}
function nMulTo(e, t, i) {
    e.multiplyTo(t, i)
}
function nSqrTo(e, t) {
    e.squareTo(t)
}
function bnPow(e) {
    return this.exp(e, new NullExp)
}
function bnpMultiplyLowerTo(e, t, i) {
    var n = Math.min(this.t + e.t, t);
    for (i.s = 0,
    i.t = n; n > 0; )
        i[--n] = 0;
    var r;
    for (r = i.t - this.t; r > n; ++n)
        i[n + this.t] = this.am(0, e[n], i, n, 0, this.t);
    for (r = Math.min(e.t, t); r > n; ++n)
        this.am(0, e[n], i, n, 0, t - n);
    i.clamp()
}
function bnpMultiplyUpperTo(e, t, i) {
    --t;
    var n = i.t = this.t + e.t - t;
    for (i.s = 0; --n >= 0; )
        i[n] = 0;
    for (n = Math.max(t - this.t, 0); n < e.t; ++n)
        i[this.t + n - t] = this.am(t - n, e[n], i, 0, 0, this.t + n - t);
    i.clamp(),
    i.drShiftTo(1, i)
}
function Barrett(e) {
    this.r2 = nbi(),
    this.q3 = nbi(),
    BigInteger.ONE.dlShiftTo(2 * e.t, this.r2),
    this.mu = this.r2.divide(e),
    this.m = e
}
function barrettConvert(e) {
    if (e.s < 0 || e.t > 2 * this.m.t)
        return e.mod(this.m);
    if (e.compareTo(this.m) < 0)
        return e;
    var t = nbi();
    return e.copyTo(t),
    this.reduce(t),
    t
}
function barrettRevert(e) {
    return e
}
function barrettReduce(e) {
    for (e.drShiftTo(this.m.t - 1, this.r2),
    e.t > this.m.t + 1 && (e.t = this.m.t + 1,
    e.clamp()),
    this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3),
    this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2); e.compareTo(this.r2) < 0; )
        e.dAddOffset(1, this.m.t + 1);
    for (e.subTo(this.r2, e); e.compareTo(this.m) >= 0; )
        e.subTo(this.m, e)
}
function barrettSqrTo(e, t) {
    e.squareTo(t),
    this.reduce(t)
}
function barrettMulTo(e, t, i) {
    e.multiplyTo(t, i),
    this.reduce(i)
}
function bnModPow(e, t) {
    var i, n, r = e.bitLength(), o = nbv(1);
    if (0 >= r)
        return o;
    i = 18 > r ? 1 : 48 > r ? 3 : 144 > r ? 4 : 768 > r ? 5 : 6,
    n = 8 > r ? new Classic(t) : t.isEven() ? new Barrett(t) : new Montgomery(t);
    var a = new Array
      , s = 3
      , l = i - 1
      , c = (1 << i) - 1;
    if (a[1] = n.convert(this),
    i > 1) {
        var d = nbi();
        for (n.sqrTo(a[1], d); c >= s; )
            a[s] = nbi(),
            n.mulTo(d, a[s - 2], a[s]),
            s += 2
    }
    var h, u, p = e.t - 1, f = !0, g = nbi();
    for (r = nbits(e[p]) - 1; p >= 0; ) {
        for (r >= l ? h = e[p] >> r - l & c : (h = (e[p] & (1 << r + 1) - 1) << l - r,
        p > 0 && (h |= e[p - 1] >> this.DB + r - l)),
        s = i; 0 == (1 & h); )
            h >>= 1,
            --s;
        if ((r -= s) < 0 && (r += this.DB,
        --p),
        f)
            a[h].copyTo(o),
            f = !1;
        else {
            for (; s > 1; )
                n.sqrTo(o, g),
                n.sqrTo(g, o),
                s -= 2;
            s > 0 ? n.sqrTo(o, g) : (u = o,
            o = g,
            g = u),
            n.mulTo(g, a[h], o)
        }
        for (; p >= 0 && 0 == (e[p] & 1 << r); )
            n.sqrTo(o, g),
            u = o,
            o = g,
            g = u,
            --r < 0 && (r = this.DB - 1,
            --p)
    }
    return n.revert(o)
}
function bnGCD(e) {
    var t = this.s < 0 ? this.negate() : this.clone()
      , i = e.s < 0 ? e.negate() : e.clone();
    if (t.compareTo(i) < 0) {
        var n = t;
        t = i,
        i = n
    }
    var r = t.getLowestSetBit()
      , o = i.getLowestSetBit();
    if (0 > o)
        return t;
    for (o > r && (o = r),
    o > 0 && (t.rShiftTo(o, t),
    i.rShiftTo(o, i)); t.signum() > 0; )
        (r = t.getLowestSetBit()) > 0 && t.rShiftTo(r, t),
        (r = i.getLowestSetBit()) > 0 && i.rShiftTo(r, i),
        t.compareTo(i) >= 0 ? (t.subTo(i, t),
        t.rShiftTo(1, t)) : (i.subTo(t, i),
        i.rShiftTo(1, i));
    return o > 0 && i.lShiftTo(o, i),
    i
}
function bnpModInt(e) {
    if (0 >= e)
        return 0;
    var t = this.DV % e
      , i = this.s < 0 ? e - 1 : 0;
    if (this.t > 0)
        if (0 == t)
            i = this[0] % e;
        else
            for (var n = this.t - 1; n >= 0; --n)
                i = (t * i + this[n]) % e;
    return i
}
function bnModInverse(e) {
    var t = e.isEven();
    if (this.isEven() && t || 0 == e.signum())
        return BigInteger.ZERO;
    for (var i = e.clone(), n = this.clone(), r = nbv(1), o = nbv(0), a = nbv(0), s = nbv(1); 0 != i.signum(); ) {
        for (; i.isEven(); )
            i.rShiftTo(1, i),
            t ? (r.isEven() && o.isEven() || (r.addTo(this, r),
            o.subTo(e, o)),
            r.rShiftTo(1, r)) : o.isEven() || o.subTo(e, o),
            o.rShiftTo(1, o);
        for (; n.isEven(); )
            n.rShiftTo(1, n),
            t ? (a.isEven() && s.isEven() || (a.addTo(this, a),
            s.subTo(e, s)),
            a.rShiftTo(1, a)) : s.isEven() || s.subTo(e, s),
            s.rShiftTo(1, s);
        i.compareTo(n) >= 0 ? (i.subTo(n, i),
        t && r.subTo(a, r),
        o.subTo(s, o)) : (n.subTo(i, n),
        t && a.subTo(r, a),
        s.subTo(o, s))
    }
    return 0 != n.compareTo(BigInteger.ONE) ? BigInteger.ZERO : s.compareTo(e) >= 0 ? s.subtract(e) : s.signum() < 0 ? (s.addTo(e, s),
    s.signum() < 0 ? s.add(e) : s) : s
}
function bnIsProbablePrime(e) {
    var t, i = this.abs();
    if (1 == i.t && i[0] <= lowprimes[lowprimes.length - 1]) {
        for (t = 0; t < lowprimes.length; ++t)
            if (i[0] == lowprimes[t])
                return !0;
        return !1
    }
    if (i.isEven())
        return !1;
    for (t = 1; t < lowprimes.length; ) {
        for (var n = lowprimes[t], r = t + 1; r < lowprimes.length && lplim > n; )
            n *= lowprimes[r++];
        for (n = i.modInt(n); r > t; )
            if (n % lowprimes[t++] == 0)
                return !1
    }
    return i.millerRabin(e)
}
function bnpMillerRabin(e) {
    var t = this.subtract(BigInteger.ONE)
      , i = t.getLowestSetBit();
    if (0 >= i)
        return !1;
    var n = t.shiftRight(i);
    e = e + 1 >> 1,
    e > lowprimes.length && (e = lowprimes.length);
    for (var r = nbi(), o = 0; e > o; ++o) {
        r.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);
        var a = r.modPow(n, this);
        if (0 != a.compareTo(BigInteger.ONE) && 0 != a.compareTo(t)) {
            for (var s = 1; s++ < i && 0 != a.compareTo(t); )
                if (a = a.modPowInt(2, this),
                0 == a.compareTo(BigInteger.ONE))
                    return !1;
            if (0 != a.compareTo(t))
                return !1
        }
    }
    return !0
}
function parseBigInt(e, t) {
    return new BigInteger(e,t)
}
function linebrk(e, t) {
    for (var i = "", n = 0; n + t < e.length; )
        i += e.substring(n, n + t) + "\n",
        n += t;
    return i + e.substring(n, e.length)
}
function byte2Hex(e) {
    return 16 > e ? "0" + e.toString(16) : e.toString(16)
}
function pkcs1pad2(e, t) {
    if (t < e.length + 11)
        return alert("Message too long for RSA"),
        null ;
    for (var i = new Array, n = e.length - 1; n >= 0 && t > 0; ) {
        var r = e.charCodeAt(n--);
        128 > r ? i[--t] = r : r > 127 && 2048 > r ? (i[--t] = 63 & r | 128,
        i[--t] = r >> 6 | 192) : (i[--t] = 63 & r | 128,
        i[--t] = r >> 6 & 63 | 128,
        i[--t] = r >> 12 | 224)
    }
    i[--t] = 0;
    for (var o = new SecureRandom, a = new Array; t > 2; ) {
        for (a[0] = 0; 0 == a[0]; )
            o.nextBytes(a);
        i[--t] = a[0]
    }
    return i[--t] = 2,
    i[--t] = 0,
    new BigInteger(i)
}
function oaep_mgf1_arr(e, t, i) {
    for (var n = "", r = 0; n.length < t; )
        n += i(String.fromCharCode.apply(String, e.concat([(4278190080 & r) >> 24, (16711680 & r) >> 16, (65280 & r) >> 8, 255 & r]))),
        r += 1;
    return n
}
function oaep_pad(e, t, i) {
    if (e.length + 2 * SHA1_SIZE + 2 > t)
        throw "Message too long for RSA";
    var n, r = "";
    for (n = 0; n < t - e.length - 2 * SHA1_SIZE - 2; n += 1)
        r += "\x00";
    var o = rstr_sha1("") + r + "" + e
      , a = new Array(SHA1_SIZE);
    (new SecureRandom).nextBytes(a);
    var s = oaep_mgf1_arr(a, o.length, i || rstr_sha1)
      , l = [];
    for (n = 0; n < o.length; n += 1)
        l[n] = o.charCodeAt(n) ^ s.charCodeAt(n);
    var c = oaep_mgf1_arr(l, a.length, rstr_sha1)
      , d = [0];
    for (n = 0; n < a.length; n += 1)
        d[n + 1] = a[n] ^ c.charCodeAt(n);
    return new BigInteger(d.concat(l))
}
function RSAKey() {
    this.n = null ,
    this.e = 0,
    this.d = null ,
    this.p = null ,
    this.q = null ,
    this.dmp1 = null ,
    this.dmq1 = null ,
    this.coeff = null
}
function RSASetPublic(e, t) {
    this.isPublic = !0,
    "string" != typeof e ? (this.n = e,
    this.e = t) : null != e && null != t && e.length > 0 && t.length > 0 ? (this.n = parseBigInt(e, 16),
    this.e = parseInt(t, 16)) : alert("Invalid RSA public key")
}
function RSADoPublic(e) {
    return e.modPowInt(this.e, this.n)
}
function RSAEncrypt(e) {
    var t = pkcs1pad2(e, this.n.bitLength() + 7 >> 3);
    if (null == t)
        return null ;
    var i = this.doPublic(t);
    if (null == i)
        return null ;
    var n = i.toString(16);
    return 0 == (1 & n.length) ? n : "0" + n
}
function RSAEncryptOAEP(e, t) {
    var i = oaep_pad(e, this.n.bitLength() + 7 >> 3, t);
    if (null == i)
        return null ;
    var n = this.doPublic(i);
    if (null == n)
        return null ;
    var r = n.toString(16);
    return 0 == (1 & r.length) ? r : "0" + r
}
function pkcs1unpad2(e, t) {
    for (var i = e.toByteArray(), n = 0; n < i.length && 0 == i[n]; )
        ++n;
    if (i.length - n != t - 1 || 2 != i[n])
        return null ;
    for (++n; 0 != i[n]; )
        if (++n >= i.length)
            return null ;
    for (var r = ""; ++n < i.length; ) {
        var o = 255 & i[n];
        128 > o ? r += String.fromCharCode(o) : o > 191 && 224 > o ? (r += String.fromCharCode((31 & o) << 6 | 63 & i[n + 1]),
        ++n) : (r += String.fromCharCode((15 & o) << 12 | (63 & i[n + 1]) << 6 | 63 & i[n + 2]),
        n += 2)
    }
    return r
}
function oaep_mgf1_str(e, t, i) {
    for (var n = "", r = 0; n.length < t; )
        n += i(e + String.fromCharCode.apply(String, [(4278190080 & r) >> 24, (16711680 & r) >> 16, (65280 & r) >> 8, 255 & r])),
        r += 1;
    return n
}
function oaep_unpad(e, t, i) {
    e = e.toByteArray();
    var n;
    for (n = 0; n < e.length; n += 1)
        e[n] &= 255;
    for (; e.length < t; )
        e.unshift(0);
    if (e = String.fromCharCode.apply(String, e),
    e.length < 2 * SHA1_SIZE + 2)
        throw "Cipher too short";
    var n, r = e.substr(1, SHA1_SIZE), o = e.substr(SHA1_SIZE + 1), a = oaep_mgf1_str(o, SHA1_SIZE, i || rstr_sha1), s = [];
    for (n = 0; n < r.length; n += 1)
        s[n] = r.charCodeAt(n) ^ a.charCodeAt(n);
    var l = oaep_mgf1_str(String.fromCharCode.apply(String, s), e.length - SHA1_SIZE, rstr_sha1)
      , c = [];
    for (n = 0; n < o.length; n += 1)
        c[n] = o.charCodeAt(n) ^ l.charCodeAt(n);
    if (c = String.fromCharCode.apply(String, c),
    c.substr(0, SHA1_SIZE) !== rstr_sha1(""))
        throw "Hash mismatch";
    c = c.substr(SHA1_SIZE);
    var d = c.indexOf("")
      , h = -1 != d ? c.substr(0, d).lastIndexOf("\x00") : -1;
    if (h + 1 != d)
        throw "Malformed data";
    return c.substr(d + 1)
}
function RSASetPrivate(e, t, i) {
    this.isPrivate = !0,
    "string" != typeof e ? (this.n = e,
    this.e = t,
    this.d = i) : null != e && null != t && e.length > 0 && t.length > 0 ? (this.n = parseBigInt(e, 16),
    this.e = parseInt(t, 16),
    this.d = parseBigInt(i, 16)) : alert("Invalid RSA private key")
}
function RSASetPrivateEx(e, t, i, n, r, o, a, s) {
    if (this.isPrivate = !0,
    null == e)
        throw "RSASetPrivateEx N == null";
    if (null == t)
        throw "RSASetPrivateEx E == null";
    if (0 == e.length)
        throw "RSASetPrivateEx N.length == 0";
    if (0 == t.length)
        throw "RSASetPrivateEx E.length == 0";
    null != e && null != t && e.length > 0 && t.length > 0 ? (this.n = parseBigInt(e, 16),
    this.e = parseInt(t, 16),
    this.d = parseBigInt(i, 16),
    this.p = parseBigInt(n, 16),
    this.q = parseBigInt(r, 16),
    this.dmp1 = parseBigInt(o, 16),
    this.dmq1 = parseBigInt(a, 16),
    this.coeff = parseBigInt(s, 16)) : alert("Invalid RSA private key in RSASetPrivateEx")
}
function RSAGenerate(e, t) {
    var i = new SecureRandom
      , n = e >> 1;
    this.e = parseInt(t, 16);
    for (var r = new BigInteger(t,16); ; ) {
        for (; this.p = new BigInteger(e - n,1,i),
        0 != this.p.subtract(BigInteger.ONE).gcd(r).compareTo(BigInteger.ONE) || !this.p.isProbablePrime(10); )
            ;
        for (; this.q = new BigInteger(n,1,i),
        0 != this.q.subtract(BigInteger.ONE).gcd(r).compareTo(BigInteger.ONE) || !this.q.isProbablePrime(10); )
            ;
        if (this.p.compareTo(this.q) <= 0) {
            var o = this.p;
            this.p = this.q,
            this.q = o
        }
        var a = this.p.subtract(BigInteger.ONE)
          , s = this.q.subtract(BigInteger.ONE)
          , l = a.multiply(s);
        if (0 == l.gcd(r).compareTo(BigInteger.ONE)) {
            this.n = this.p.multiply(this.q),
            this.d = r.modInverse(l),
            this.dmp1 = this.d.mod(a),
            this.dmq1 = this.d.mod(s),
            this.coeff = this.q.modInverse(this.p);
            break
        }
    }
}
function RSADoPrivate(e) {
    if (null == this.p || null == this.q)
        return e.modPow(this.d, this.n);
    for (var t = e.mod(this.p).modPow(this.dmp1, this.p), i = e.mod(this.q).modPow(this.dmq1, this.q); t.compareTo(i) < 0; )
        t = t.add(this.p);
    return t.subtract(i).multiply(this.coeff).mod(this.p).multiply(this.q).add(i)
}
function RSADecrypt(e) {
    var t = parseBigInt(e, 16)
      , i = this.doPrivate(t);
    return null == i ? null : pkcs1unpad2(i, this.n.bitLength() + 7 >> 3)
}
function RSADecryptOAEP(e, t) {
    var i = parseBigInt(e, 16)
      , n = this.doPrivate(i);
    return null == n ? null : oaep_unpad(n, this.n.bitLength() + 7 >> 3, t)
}
function hex2b64(e) {
    var t, i, n = "";
    for (t = 0; t + 3 <= e.length; t += 3)
        i = parseInt(e.substring(t, t + 3), 16),
        n += b64map.charAt(i >> 6) + b64map.charAt(63 & i);
    if (t + 1 == e.length ? (i = parseInt(e.substring(t, t + 1), 16),
    n += b64map.charAt(i << 2)) : t + 2 == e.length && (i = parseInt(e.substring(t, t + 2), 16),
    n += b64map.charAt(i >> 2) + b64map.charAt((3 & i) << 4)),
    b64pad)
        for (; (3 & n.length) > 0; )
            n += b64pad;
    return n
}
function b64tohex(e) {
    var t, i, n, r = "", o = 0;
    for (t = 0; t < e.length && e.charAt(t) != b64pad; ++t)
        n = b64map.indexOf(e.charAt(t)),
        0 > n || (0 == o ? (r += int2char(n >> 2),
        i = 3 & n,
        o = 1) : 1 == o ? (r += int2char(i << 2 | n >> 4),
        i = 15 & n,
        o = 2) : 2 == o ? (r += int2char(i),
        r += int2char(n >> 2),
        i = 3 & n,
        o = 3) : (r += int2char(i << 2 | n >> 4),
        r += int2char(15 & n),
        o = 0));
    return 1 == o && (r += int2char(i << 2)),
    r
}
function b64toBA(e) {
    var t, i = b64tohex(e), n = new Array;
    for (t = 0; 2 * t < i.length; ++t)
        n[t] = parseInt(i.substring(2 * t, 2 * t + 2), 16);
    return n
}
function _rsapem_pemToBase64(e) {
    var t = e;
    return t = t.replace("-----BEGIN RSA PRIVATE KEY-----", ""),
    t = t.replace("-----END RSA PRIVATE KEY-----", ""),
    t = t.replace(/[ \n]+/g, "")
}
function _rsapem_getPosArrayOfChildrenFromHex(e) {
    var t = new Array
      , i = ASN1HEX.getStartPosOfV_AtObj(e, 0)
      , n = ASN1HEX.getPosOfNextSibling_AtObj(e, i)
      , r = ASN1HEX.getPosOfNextSibling_AtObj(e, n)
      , o = ASN1HEX.getPosOfNextSibling_AtObj(e, r)
      , a = ASN1HEX.getPosOfNextSibling_AtObj(e, o)
      , s = ASN1HEX.getPosOfNextSibling_AtObj(e, a)
      , l = ASN1HEX.getPosOfNextSibling_AtObj(e, s)
      , c = ASN1HEX.getPosOfNextSibling_AtObj(e, l)
      , d = ASN1HEX.getPosOfNextSibling_AtObj(e, c);
    return t.push(i, n, r, o, a, s, l, c, d),
    t
}
function _rsapem_getHexValueArrayOfChildrenFromHex(e) {
    var t = _rsapem_getPosArrayOfChildrenFromHex(e)
      , i = ASN1HEX.getHexOfV_AtObj(e, t[0])
      , n = ASN1HEX.getHexOfV_AtObj(e, t[1])
      , r = ASN1HEX.getHexOfV_AtObj(e, t[2])
      , o = ASN1HEX.getHexOfV_AtObj(e, t[3])
      , a = ASN1HEX.getHexOfV_AtObj(e, t[4])
      , s = ASN1HEX.getHexOfV_AtObj(e, t[5])
      , l = ASN1HEX.getHexOfV_AtObj(e, t[6])
      , c = ASN1HEX.getHexOfV_AtObj(e, t[7])
      , d = ASN1HEX.getHexOfV_AtObj(e, t[8])
      , h = new Array;
    return h.push(i, n, r, o, a, s, l, c, d),
    h
}
function _rsapem_readPrivateKeyFromASN1HexString(e) {
    var t = _rsapem_getHexValueArrayOfChildrenFromHex(e);
    this.setPrivateEx(t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8])
}
function _rsapem_readPrivateKeyFromPEMString(e) {
    var t = _rsapem_pemToBase64(e)
      , i = b64tohex(t)
      , n = _rsapem_getHexValueArrayOfChildrenFromHex(i);
    this.setPrivateEx(n[1], n[2], n[3], n[4], n[5], n[6], n[7], n[8])
}
function _rsasign_getHexPaddedDigestInfoForString(e, t, i) {
    var n = function(e) {
        return KJUR.crypto.Util.hashString(e, i)
    }
      , r = n(e);
    return KJUR.crypto.Util.getPaddedDigestInfoHex(r, i, t)
}
function _zeroPaddingOfSignature(e, t) {
    for (var i = "", n = t / 4 - e.length, r = 0; n > r; r++)
        i += "0";
    return i + e
}
function _rsasign_signString(e, t) {
    var i = function(e) {
        return KJUR.crypto.Util.hashString(e, t)
    }
      , n = i(e);
    return this.signWithMessageHash(n, t)
}
function _rsasign_signWithMessageHash(e, t) {
    var i = KJUR.crypto.Util.getPaddedDigestInfoHex(e, t, this.n.bitLength())
      , n = parseBigInt(i, 16)
      , r = this.doPrivate(n)
      , o = r.toString(16);
    return _zeroPaddingOfSignature(o, this.n.bitLength())
}
function _rsasign_signStringWithSHA1(e) {
    return _rsasign_signString.call(this, e, "sha1")
}
function _rsasign_signStringWithSHA256(e) {
    return _rsasign_signString.call(this, e, "sha256")
}
function pss_mgf1_str(e, t, i) {
    for (var n = "", r = 0; n.length < t; )
        n += hextorstr(i(rstrtohex(e + String.fromCharCode.apply(String, [(4278190080 & r) >> 24, (16711680 & r) >> 16, (65280 & r) >> 8, 255 & r])))),
        r += 1;
    return n
}
function _rsasign_signStringPSS(e, t, i) {
    var n = function(e) {
        return KJUR.crypto.Util.hashHex(e, t)
    }
      , r = n(rstrtohex(e));
    return void 0 === i && (i = -1),
    this.signWithMessageHashPSS(r, t, i)
}
function _rsasign_signWithMessageHashPSS(e, t, i) {
    var n, r = hextorstr(e), o = r.length, a = this.n.bitLength() - 1, s = Math.ceil(a / 8), l = function(e) {
        return KJUR.crypto.Util.hashHex(e, t)
    }
    ;
    if (-1 === i || void 0 === i)
        i = o;
    else if (-2 === i)
        i = s - o - 2;
    else if (-2 > i)
        throw "invalid salt length";
    if (o + i + 2 > s)
        throw "data too long";
    var c = "";
    i > 0 && (c = new Array(i),
    (new SecureRandom).nextBytes(c),
    c = String.fromCharCode.apply(String, c));
    var d = hextorstr(l(rstrtohex("\x00\x00\x00\x00\x00\x00\x00\x00" + r + c)))
      , h = [];
    for (n = 0; s - i - o - 2 > n; n += 1)
        h[n] = 0;
    var u = String.fromCharCode.apply(String, h) + "" + c
      , p = pss_mgf1_str(d, u.length, l)
      , f = [];
    for (n = 0; n < u.length; n += 1)
        f[n] = u.charCodeAt(n) ^ p.charCodeAt(n);
    var g = 65280 >> 8 * s - a & 255;
    for (f[0] &= ~g,
    n = 0; o > n; n++)
        f.push(d.charCodeAt(n));
    return f.push(188),
    _zeroPaddingOfSignature(this.doPrivate(new BigInteger(f)).toString(16), this.n.bitLength())
}
function _rsasign_getDecryptSignatureBI(e, t, i) {
    var n = new RSAKey;
    n.setPublic(t, i);
    var r = n.doPublic(e);
    return r
}
function _rsasign_getHexDigestInfoFromSig(e, t, i) {
    var n = _rsasign_getDecryptSignatureBI(e, t, i)
      , r = n.toString(16).replace(/^1f+00/, "");
    return r
}
function _rsasign_getAlgNameAndHashFromHexDisgestInfo(e) {
    for (var t in KJUR.crypto.Util.DIGESTINFOHEAD) {
        var i = KJUR.crypto.Util.DIGESTINFOHEAD[t]
          , n = i.length;
        if (e.substring(0, n) == i) {
            var r = [t, e.substring(n)];
            return r
        }
    }
    return []
}
function _rsasign_verifySignatureWithArgs(e, t, i, n) {
    var r = _rsasign_getHexDigestInfoFromSig(t, i, n)
      , o = _rsasign_getAlgNameAndHashFromHexDisgestInfo(r);
    if (0 == o.length)
        return !1;
    var a = o[0]
      , s = o[1]
      , l = function(e) {
        return KJUR.crypto.Util.hashString(e, a)
    }
      , c = l(e);
    return s == c
}
function _rsasign_verifyHexSignatureForMessage(e, t) {
    var i = parseBigInt(e, 16)
      , n = _rsasign_verifySignatureWithArgs(t, i, this.n.toString(16), this.e.toString(16));
    return n
}
function _rsasign_verifyString(e, t) {
    t = t.replace(_RE_HEXDECONLY, ""),
    t = t.replace(/[ \n]+/g, "");
    var i = parseBigInt(t, 16);
    if (i.bitLength() > this.n.bitLength())
        return 0;
    var n = this.doPublic(i)
      , r = n.toString(16).replace(/^1f+00/, "")
      , o = _rsasign_getAlgNameAndHashFromHexDisgestInfo(r);
    if (0 == o.length)
        return !1;
    var a = o[0]
      , s = o[1]
      , l = function(e) {
        return KJUR.crypto.Util.hashString(e, a)
    }
      , c = l(e);
    return s == c
}
function _rsasign_verifyWithMessageHash(e, t) {
    t = t.replace(_RE_HEXDECONLY, ""),
    t = t.replace(/[ \n]+/g, "");
    var i = parseBigInt(t, 16);
    if (i.bitLength() > this.n.bitLength())
        return 0;
    var n = this.doPublic(i)
      , r = n.toString(16).replace(/^1f+00/, "")
      , o = _rsasign_getAlgNameAndHashFromHexDisgestInfo(r);
    if (0 == o.length)
        return !1;
    var a = (o[0],
    o[1]);
    return a == e
}
function _rsasign_verifyStringPSS(e, t, i, n) {
    var r = function(e) {
        return KJUR.crypto.Util.hashHex(e, i)
    }
      , o = r(rstrtohex(e));
    return void 0 === n && (n = -1),
    this.verifyWithMessageHashPSS(o, t, i, n)
}
function _rsasign_verifyWithMessageHashPSS(e, t, i, n) {
    var r = new BigInteger(t,16);
    if (r.bitLength() > this.n.bitLength())
        return !1;
    var o, a = function(e) {
        return KJUR.crypto.Util.hashHex(e, i)
    }
    , s = hextorstr(e), l = s.length, c = this.n.bitLength() - 1, d = Math.ceil(c / 8);
    if (-1 === n || void 0 === n)
        n = l;
    else if (-2 === n)
        n = d - l - 2;
    else if (-2 > n)
        throw "invalid salt length";
    if (l + n + 2 > d)
        throw "data too long";
    var h = this.doPublic(r).toByteArray();
    for (o = 0; o < h.length; o += 1)
        h[o] &= 255;
    for (; h.length < d; )
        h.unshift(0);
    if (188 !== h[d - 1])
        throw "encoded message does not end in 0xbc";
    h = String.fromCharCode.apply(String, h);
    var u = h.substr(0, d - l - 1)
      , p = h.substr(u.length, l)
      , f = 65280 >> 8 * d - c & 255;
    if (0 !== (u.charCodeAt(0) & f))
        throw "bits beyond keysize not zero";
    var g = pss_mgf1_str(p, u.length, a)
      , m = [];
    for (o = 0; o < u.length; o += 1)
        m[o] = u.charCodeAt(o) ^ g.charCodeAt(o);
    m[0] &= ~f;
    var v = d - l - n - 2;
    for (o = 0; v > o; o += 1)
        if (0 !== m[o])
            throw "leftmost octets not zero";
    if (1 !== m[v])
        throw "0x01 marker not found";
    return p === hextorstr(a(rstrtohex("\x00\x00\x00\x00\x00\x00\x00\x00" + s + String.fromCharCode.apply(String, m.slice(-n)))))
}
function X509() {
    this.subjectPublicKeyRSA = null ,
    this.subjectPublicKeyRSA_hN = null ,
    this.subjectPublicKeyRSA_hE = null ,
    this.hex = null ,
    this.getSerialNumberHex = function() {
        return ASN1HEX.getDecendantHexVByNthList(this.hex, 0, [0, 1])
    }
    ,
    this.getIssuerHex = function() {
        return ASN1HEX.getDecendantHexTLVByNthList(this.hex, 0, [0, 3])
    }
    ,
    this.getIssuerString = function() {
        return X509.hex2dn(ASN1HEX.getDecendantHexTLVByNthList(this.hex, 0, [0, 3]))
    }
    ,
    this.getSubjectHex = function() {
        return ASN1HEX.getDecendantHexTLVByNthList(this.hex, 0, [0, 5])
    }
    ,
    this.getSubjectString = function() {
        return X509.hex2dn(ASN1HEX.getDecendantHexTLVByNthList(this.hex, 0, [0, 5]))
    }
    ,
    this.getNotBefore = function() {
        var e = ASN1HEX.getDecendantHexVByNthList(this.hex, 0, [0, 4, 0]);
        return e = e.replace(/(..)/g, "%$1"),
        e = decodeURIComponent(e)
    }
    ,
    this.getNotAfter = function() {
        var e = ASN1HEX.getDecendantHexVByNthList(this.hex, 0, [0, 4, 1]);
        return e = e.replace(/(..)/g, "%$1"),
        e = decodeURIComponent(e)
    }
    ,
    this.readCertPEM = function(e) {
        var t = X509.pemToHex(e)
          , i = X509.getPublicKeyHexArrayFromCertHex(t)
          , n = new RSAKey;
        n.setPublic(i[0], i[1]),
        this.subjectPublicKeyRSA = n,
        this.subjectPublicKeyRSA_hN = i[0],
        this.subjectPublicKeyRSA_hE = i[1],
        this.hex = t
    }
    ,
    this.readCertPEMWithoutRSAInit = function(e) {
        var t = X509.pemToHex(e)
          , i = X509.getPublicKeyHexArrayFromCertHex(t);
        this.subjectPublicKeyRSA.setPublic(i[0], i[1]),
        this.subjectPublicKeyRSA_hN = i[0],
        this.subjectPublicKeyRSA_hE = i[1],
        this.hex = t
    }
}
var JSON;
JSON || (JSON = {}),
function() {
    function str(e, t) {
        var i, n, r, o, a, s = gap, l = t[e];
        switch (l && "object" == typeof l && "function" == typeof l.toJSON && (l = l.toJSON(e)),
        "function" == typeof rep && (l = rep.call(t, e, l)),
        typeof l) {
        case "string":
            return quote(l);
        case "number":
            return isFinite(l) ? String(l) : "null";
        case "boolean":
        case "null":
            return String(l);
        case "object":
            if (!l)
                return "null";
            if (gap += indent,
            a = [],
            "[object Array]" === Object.prototype.toString.apply(l)) {
                for (o = l.length,
                i = 0; o > i; i += 1)
                    a[i] = str(i, l) || "null";
                return r = 0 === a.length ? "[]" : gap ? "[\n" + gap + a.join(",\n" + gap) + "\n" + s + "]" : "[" + a.join(",") + "]",
                gap = s,
                r
            }
            if (rep && "object" == typeof rep)
                for (o = rep.length,
                i = 0; o > i; i += 1)
                    "string" == typeof rep[i] && (n = rep[i],
                    r = str(n, l),
                    r && a.push(quote(n) + (gap ? ": " : ":") + r));
            else
                for (n in l)
                    Object.prototype.hasOwnProperty.call(l, n) && (r = str(n, l),
                    r && a.push(quote(n) + (gap ? ": " : ":") + r));
            return r = 0 === a.length ? "{}" : gap ? "{\n" + gap + a.join(",\n" + gap) + "\n" + s + "}" : "{" + a.join(",") + "}",
            gap = s,
            r
        }
    }
    function quote(e) {
        return escapable.lastIndex = 0,
        escapable.test(e) ? '"' + e.replace(escapable, function(e) {
            var t = meta[e];
            return "string" == typeof t ? t : "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4)
        }) + '"' : '"' + e + '"'
    }
    function f(e) {
        return 10 > e ? "0" + e : e
    }
    "function" != typeof Date.prototype.toJSON && (Date.prototype.toJSON = function() {
        return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null
    }
    ,
    String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function() {
        return this.valueOf()
    }
    );
    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, gap, indent, meta = {
        "\b": "\\b",
        "	": "\\t",
        "\n": "\\n",
        "\f": "\\f",
        "\r": "\\r",
        '"': '\\"',
        "\\": "\\\\"
    }, rep;
    "function" != typeof JSON.stringify && (JSON.stringify = function(e, t, i) {
        var n;
        if (gap = "",
        indent = "",
        "number" == typeof i)
            for (n = 0; i > n; n += 1)
                indent += " ";
        else
            "string" == typeof i && (indent = i);
        if (rep = t,
        !t || "function" == typeof t || "object" == typeof t && "number" == typeof t.length)
            return str("", {
                "": e
            });
        throw new Error("JSON.stringify")
    }
    ),
    "function" != typeof JSON.parse && (JSON.parse = function(text, reviver) {
        function walk(e, t) {
            var i, n, r = e[t];
            if (r && "object" == typeof r)
                for (i in r)
                    Object.prototype.hasOwnProperty.call(r, i) && (n = walk(r, i),
                    void 0 !== n ? r[i] = n : delete r[i]);
            return reviver.call(e, t, r)
        }
        var j;
        if (text = String(text),
        cx.lastIndex = 0,
        cx.test(text) && (text = text.replace(cx, function(e) {
            return "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4)
        })),
        /^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, "")))
            return j = eval("(" + text + ")"),
            "function" == typeof reviver ? walk({
                "": j
            }, "") : j;
        throw new SyntaxError("JSON.parse")
    }
    )
}(),
SockJS = function() {
    var e = document
      , t = window
      , i = {}
      , n = function() {}
    ;
    n.prototype.addEventListener = function(e, t) {
        this._listeners || (this._listeners = {}),
        e in this._listeners || (this._listeners[e] = []);
        var n = this._listeners[e];
        -1 === i.arrIndexOf(n, t) && n.push(t)
    }
    ,
    n.prototype.removeEventListener = function(e, t) {
        if (this._listeners && e in this._listeners) {
            var n = this._listeners[e]
              , r = i.arrIndexOf(n, t);
            return -1 !== r ? void (n.length > 1 ? this._listeners[e] = n.slice(0, r).concat(n.slice(r + 1)) : delete this._listeners[e]) : void 0
        }
    }
    ,
    n.prototype.dispatchEvent = function(e) {
        var t = e.type
          , i = Array.prototype.slice.call(arguments, 0);
        if (this["on" + t] && this["on" + t].apply(this, i),
        this._listeners && t in this._listeners)
            for (var n = 0; n < this._listeners[t].length; n++)
                this._listeners[t][n].apply(this, i)
    }
    ;
    var r = function(e, t) {
        if (this.type = e,
        "undefined" != typeof t)
            for (var i in t)
                t.hasOwnProperty(i) && (this[i] = t[i])
    }
    ;
    r.prototype.toString = function() {
        var e = [];
        for (var t in this)
            if (this.hasOwnProperty(t)) {
                var i = this[t];
                "function" == typeof i && (i = "[function]"),
                e.push(t + "=" + i)
            }
        return "SimpleEvent(" + e.join(", ") + ")"
    }
    ;
    var o = function(e) {
        var t = this;
        t._events = e || [],
        t._listeners = {}
    }
    ;
    o.prototype.emit = function(e) {
        var t = this;
        if (t._verifyType(e),
        !t._nuked) {
            var i = Array.prototype.slice.call(arguments, 1);
            if (t["on" + e] && t["on" + e].apply(t, i),
            e in t._listeners)
                for (var n = 0; n < t._listeners[e].length; n++)
                    t._listeners[e][n].apply(t, i)
        }
    }
    ,
    o.prototype.on = function(e, t) {
        var i = this;
        i._verifyType(e),
        i._nuked || (e in i._listeners || (i._listeners[e] = []),
        i._listeners[e].push(t))
    }
    ,
    o.prototype._verifyType = function(e) {
        var t = this;
        -1 === i.arrIndexOf(t._events, e) && i.log("Event " + JSON.stringify(e) + " not listed " + JSON.stringify(t._events) + " in " + t)
    }
    ,
    o.prototype.nuke = function() {
        var e = this;
        e._nuked = !0;
        for (var t = 0; t < e._events.length; t++)
            delete e[e._events[t]];
        e._listeners = {}
    }
    ;
    var a = "abcdefghijklmnopqrstuvwxyz0123456789_";
    i.random_string = function(e, t) {
        t = t || a.length;
        var i, n = [];
        for (i = 0; e > i; i++)
            n.push(a.substr(Math.floor(Math.random() * t), 1));
        return n.join("")
    }
    ,
    i.random_number = function(e) {
        return Math.floor(Math.random() * e)
    }
    ,
    i.random_number_string = function(e) {
        var t = ("" + (e - 1)).length
          , n = Array(t + 1).join("0");
        return (n + i.random_number(e)).slice(-t)
    }
    ,
    i.getOrigin = function(e) {
        e += "/";
        var t = e.split("/").slice(0, 3);
        return t.join("/")
    }
    ,
    i.isSameOriginUrl = function(e, i) {
        return i || (i = t.location.href),
        e.split("/").slice(0, 3).join("/") === i.split("/").slice(0, 3).join("/")
    }
    ,
    i.getParentDomain = function(e) {
        if (/^[0-9.]*$/.test(e))
            return e;
        if (/^\[/.test(e))
            return e;
        if (!/[.]/.test(e))
            return e;
        var t = e.split(".").slice(1);
        return t.join(".")
    }
    ,
    i.objectExtend = function(e, t) {
        for (var i in t)
            t.hasOwnProperty(i) && (e[i] = t[i]);
        return e
    }
    ;
    var s = "_jp";
    i.polluteGlobalNamespace = function() {
        s in t || (t[s] = {})
    }
    ,
    i.closeFrame = function(e, t) {
        return "c" + JSON.stringify([e, t])
    }
    ,
    i.userSetCode = function(e) {
        return 1e3 === e || e >= 3e3 && 4999 >= e
    }
    ,
    i.countRTO = function(e) {
        var t;
        return t = e > 100 ? 3 * e : e + 200
    }
    ,
    i.log = function() {
        t.console && console.log && console.log.apply && console.log.apply(console, arguments)
    }
    ,
    i.bind = function(e, t) {
        return e.bind ? e.bind(t) : function() {
            return e.apply(t, arguments)
        }
    }
    ,
    i.flatUrl = function(e) {
        return -1 === e.indexOf("?") && -1 === e.indexOf("#")
    }
    ,
    i.amendUrl = function(t) {
        var n = e.location;
        if (!t)
            throw new Error("Wrong url for SockJS");
        if (!i.flatUrl(t))
            throw new Error("Only basic urls are supported in SockJS");
        return 0 === t.indexOf("//") && (t = n.protocol + t),
        0 === t.indexOf("/") && (t = n.protocol + "//" + n.host + t),
        t = t.replace(/[\/]+$/, "")
    }
    ,
    i.arrIndexOf = function(e, t) {
        for (var i = 0; i < e.length; i++)
            if (e[i] === t)
                return i;
        return -1
    }
    ,
    i.arrSkip = function(e, t) {
        var n = i.arrIndexOf(e, t);
        if (-1 === n)
            return e.slice();
        var r = e.slice(0, n);
        return r.concat(e.slice(n + 1))
    }
    ,
    i.isArray = Array.isArray || function(e) {
        return {}.toString.call(e).indexOf("Array") >= 0
    }
    ,
    i.delay = function(e, t) {
        return "function" == typeof e && (t = e,
        e = 0),
        setTimeout(t, e)
    }
    ;
    var l, c = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, d = {
        "\x00": "\\u0000",
        "": "\\u0001",
        "": "\\u0002",
        "": "\\u0003",
        "": "\\u0004",
        "": "\\u0005",
        "": "\\u0006",
        "": "\\u0007",
        "\b": "\\b",
        "	": "\\t",
        "\n": "\\n",
        "": "\\u000b",
        "\f": "\\f",
        "\r": "\\r",
        "": "\\u000e",
        "": "\\u000f",
        "": "\\u0010",
        "": "\\u0011",
        "": "\\u0012",
        "": "\\u0013",
        "": "\\u0014",
        "": "\\u0015",
        "": "\\u0016",
        "": "\\u0017",
        "": "\\u0018",
        "": "\\u0019",
        "": "\\u001a",
        "": "\\u001b",
        "": "\\u001c",
        "": "\\u001d",
        "": "\\u001e",
        "": "\\u001f",
        '"': '\\"',
        "\\": "\\\\",
        "": "\\u007f",
        "\x80": "\\u0080",
        "\x81": "\\u0081",
        "\x82": "\\u0082",
        "\x83": "\\u0083",
        "\x84": "\\u0084",
        "\x85": "\\u0085",
        "\x86": "\\u0086",
        "\x87": "\\u0087",
        "\x88": "\\u0088",
        "\x89": "\\u0089",
        "\x8a": "\\u008a",
        "\x8b": "\\u008b",
        "\x8c": "\\u008c",
        "\x8d": "\\u008d",
        "\x8e": "\\u008e",
        "\x8f": "\\u008f",
        "\x90": "\\u0090",
        "\x91": "\\u0091",
        "\x92": "\\u0092",
        "\x93": "\\u0093",
        "\x94": "\\u0094",
        "\x95": "\\u0095",
        "\x96": "\\u0096",
        "\x97": "\\u0097",
        "\x98": "\\u0098",
        "\x99": "\\u0099",
        "\x9a": "\\u009a",
        "\x9b": "\\u009b",
        "\x9c": "\\u009c",
        "\x9d": "\\u009d",
        "\x9e": "\\u009e",
        "\x9f": "\\u009f",
        "\xad": "\\u00ad",
        "\u0600": "\\u0600",
        "\u0601": "\\u0601",
        "\u0602": "\\u0602",
        "\u0603": "\\u0603",
        "\u0604": "\\u0604",
        "\u070f": "\\u070f",
        "\u17b4": "\\u17b4",
        "\u17b5": "\\u17b5",
        "\u200c": "\\u200c",
        "\u200d": "\\u200d",
        "\u200e": "\\u200e",
        "\u200f": "\\u200f",
        "\u2028": "\\u2028",
        "\u2029": "\\u2029",
        "\u202a": "\\u202a",
        "\u202b": "\\u202b",
        "\u202c": "\\u202c",
        "\u202d": "\\u202d",
        "\u202e": "\\u202e",
        "\u202f": "\\u202f",
        "\u2060": "\\u2060",
        "\u2061": "\\u2061",
        "\u2062": "\\u2062",
        "\u2063": "\\u2063",
        "\u2064": "\\u2064",
        "\u2065": "\\u2065",
        "\u2066": "\\u2066",
        "\u2067": "\\u2067",
        "\u2068": "\\u2068",
        "\u2069": "\\u2069",
        "\u206a": "\\u206a",
        "\u206b": "\\u206b",
        "\u206c": "\\u206c",
        "\u206d": "\\u206d",
        "\u206e": "\\u206e",
        "\u206f": "\\u206f",
        "\ufeff": "\\ufeff",
        "\ufff0": "\\ufff0",
        "\ufff1": "\\ufff1",
        "\ufff2": "\\ufff2",
        "\ufff3": "\\ufff3",
        "\ufff4": "\\ufff4",
        "\ufff5": "\\ufff5",
        "\ufff6": "\\ufff6",
        "\ufff7": "\\ufff7",
        "\ufff8": "\\ufff8",
        "\ufff9": "\\ufff9",
        "\ufffa": "\\ufffa",
        "\ufffb": "\\ufffb",
        "\ufffc": "\\ufffc",
        "\ufffd": "\\ufffd",
        "\ufffe": "\\ufffe",
        "\uffff": "\\uffff"
    }, h = /[\x00-\x1f\ud800-\udfff\ufffe\uffff\u0300-\u0333\u033d-\u0346\u034a-\u034c\u0350-\u0352\u0357-\u0358\u035c-\u0362\u0374\u037e\u0387\u0591-\u05af\u05c4\u0610-\u0617\u0653-\u0654\u0657-\u065b\u065d-\u065e\u06df-\u06e2\u06eb-\u06ec\u0730\u0732-\u0733\u0735-\u0736\u073a\u073d\u073f-\u0741\u0743\u0745\u0747\u07eb-\u07f1\u0951\u0958-\u095f\u09dc-\u09dd\u09df\u0a33\u0a36\u0a59-\u0a5b\u0a5e\u0b5c-\u0b5d\u0e38-\u0e39\u0f43\u0f4d\u0f52\u0f57\u0f5c\u0f69\u0f72-\u0f76\u0f78\u0f80-\u0f83\u0f93\u0f9d\u0fa2\u0fa7\u0fac\u0fb9\u1939-\u193a\u1a17\u1b6b\u1cda-\u1cdb\u1dc0-\u1dcf\u1dfc\u1dfe\u1f71\u1f73\u1f75\u1f77\u1f79\u1f7b\u1f7d\u1fbb\u1fbe\u1fc9\u1fcb\u1fd3\u1fdb\u1fe3\u1feb\u1fee-\u1fef\u1ff9\u1ffb\u1ffd\u2000-\u2001\u20d0-\u20d1\u20d4-\u20d7\u20e7-\u20e9\u2126\u212a-\u212b\u2329-\u232a\u2adc\u302b-\u302c\uaab2-\uaab3\uf900-\ufa0d\ufa10\ufa12\ufa15-\ufa1e\ufa20\ufa22\ufa25-\ufa26\ufa2a-\ufa2d\ufa30-\ufa6d\ufa70-\ufad9\ufb1d\ufb1f\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufb4e\ufff0-\uffff]/g, u = JSON && JSON.stringify || function(e) {
        return c.lastIndex = 0,
        c.test(e) && (e = e.replace(c, function(e) {
            return d[e]
        })),
        '"' + e + '"'
    }
    , p = function(e) {
        var t, i = {}, n = [];
        for (t = 0; 65536 > t; t++)
            n.push(String.fromCharCode(t));
        return e.lastIndex = 0,
        n.join("").replace(e, function(e) {
            return i[e] = "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4),
            ""
        }),
        e.lastIndex = 0,
        i
    }
    ;
    i.quote = function(e) {
        var t = u(e);
        return h.lastIndex = 0,
        h.test(t) ? (l || (l = p(h)),
        t.replace(h, function(e) {
            return l[e]
        })) : t
    }
    ;
    var f = ["websocket", "xdr-streaming", "xhr-streaming", "iframe-eventsource", "iframe-htmlfile", "xdr-polling", "xhr-polling", "iframe-xhr-polling", "jsonp-polling"];
    i.probeProtocols = function() {
        for (var e = {}, t = 0; t < f.length; t++) {
            var i = f[t];
            e[i] = T[i] && T[i].enabled()
        }
        return e
    }
    ,
    i.detectProtocols = function(e, t, i) {
        var n = {}
          , r = [];
        t || (t = f);
        for (var o = 0; o < t.length; o++) {
            var a = t[o];
            n[a] = e[a]
        }
        var s = function(e) {
            var t = e.shift();
            n[t] ? r.push(t) : e.length > 0 && s(e)
        }
        ;
        return i.websocket !== !1 && s(["websocket"]),
        n["xhr-streaming"] && !i.null_origin ? r.push("xhr-streaming") : !n["xdr-streaming"] || i.cookie_needed || i.null_origin ? s(["iframe-eventsource", "iframe-htmlfile"]) : r.push("xdr-streaming"),
        n["xhr-polling"] && !i.null_origin ? r.push("xhr-polling") : !n["xdr-polling"] || i.cookie_needed || i.null_origin ? s(["iframe-xhr-polling", "jsonp-polling"]) : r.push("xdr-polling"),
        r
    }
    ;
    var g = "_sockjs_global";
    i.createHook = function() {
        var e = "a" + i.random_string(8);
        if (!(g in t)) {
            var n = {};
            t[g] = function(e) {
                return e in n || (n[e] = {
                    id: e,
                    del: function() {
                        delete n[e]
                    }
                }),
                n[e]
            }
        }
        return t[g](e)
    }
    ,
    i.attachMessage = function(e) {
        i.attachEvent("message", e)
    }
    ,
    i.attachEvent = function(i, n) {
        "undefined" != typeof t.addEventListener ? t.addEventListener(i, n, !1) : (e.attachEvent("on" + i, n),
        t.attachEvent("on" + i, n))
    }
    ,
    i.detachMessage = function(e) {
        i.detachEvent("message", e)
    }
    ,
    i.detachEvent = function(i, n) {
        "undefined" != typeof t.addEventListener ? t.removeEventListener(i, n, !1) : (e.detachEvent("on" + i, n),
        t.detachEvent("on" + i, n))
    }
    ;
    var m = {}
      , v = !1
      , y = function() {
        for (var e in m)
            m[e](),
            delete m[e]
    }
      , b = function() {
        v || (v = !0,
        y())
    }
    ;
    i.attachEvent("unload", b),
    i.unload_add = function(e) {
        var t = i.random_string(8);
        return m[t] = e,
        v && i.delay(y),
        t
    }
    ,
    i.unload_del = function(e) {
        e in m && delete m[e]
    }
    ,
    i.createIframe = function(t, n) {
        var r, o, a = e.createElement("iframe"), s = function() {
            clearTimeout(r);
            try {
                a.onload = null
            } catch (e) {}
            a.onerror = null
        }
        , l = function() {
            a && (s(),
            setTimeout(function() {
                a && a.parentNode.removeChild(a),
                a = null
            }, 0),
            i.unload_del(o))
        }
        , c = function(e) {
            a && (l(),
            n(e))
        }
        , d = function(e, t) {
            try {
                a && a.contentWindow && a.contentWindow.postMessage(e, t)
            } catch (i) {}
        }
        ;
        return a.src = t,
        a.style.display = "none",
        a.style.position = "absolute",
        a.onerror = function() {
            c("onerror")
        }
        ,
        a.onload = function() {
            clearTimeout(r),
            r = setTimeout(function() {
                c("onload timeout")
            }, 2e3)
        }
        ,
        e.body.appendChild(a),
        r = setTimeout(function() {
            c("timeout")
        }, 15e3),
        o = i.unload_add(l),
        {
            post: d,
            cleanup: l,
            loaded: s
        }
    }
    ,
    i.createHtmlfile = function(e, n) {
        var r, o, a, l = new ActiveXObject("htmlfile"), c = function() {
            clearTimeout(r)
        }
        , d = function() {
            l && (c(),
            i.unload_del(o),
            a.parentNode.removeChild(a),
            a = l = null ,
            CollectGarbage())
        }
        , h = function(e) {
            l && (d(),
            n(e))
        }
        , u = function(e, t) {
            try {
                a && a.contentWindow && a.contentWindow.postMessage(e, t)
            } catch (i) {}
        }
        ;
        l.open(),
        l.write('<html><script>document.domain="' + document.domain + '";</script></html>'),
        l.close(),
        l.parentWindow[s] = t[s];
        var p = l.createElement("div");
        return l.body.appendChild(p),
        a = l.createElement("iframe"),
        p.appendChild(a),
        a.src = e,
        r = setTimeout(function() {
            h("timeout")
        }, 15e3),
        o = i.unload_add(d),
        {
            post: u,
            cleanup: d,
            loaded: c
        }
    }
    ;
    var w = function() {}
    ;
    w.prototype = new o(["chunk", "finish"]),
    w.prototype._start = function(e, n, r, o) {
        var a = this;
        try {
            a.xhr = new XMLHttpRequest
        } catch (s) {}
        if (!a.xhr)
            try {
                a.xhr = new t.ActiveXObject("Microsoft.XMLHTTP")
            } catch (s) {}
        (t.ActiveXObject || t.XDomainRequest) && (n += (-1 === n.indexOf("?") ? "?" : "&") + "t=" + +new Date),
        a.unload_ref = i.unload_add(function() {
            a._cleanup(!0)
        });
        try {
            a.xhr.open(e, n, !0)
        } catch (l) {
            return a.emit("finish", 0, ""),
            void a._cleanup()
        }
        if (o && o.no_credentials || (a.xhr.withCredentials = "true"),
        o && o.headers)
            for (var c in o.headers)
                a.xhr.setRequestHeader(c, o.headers[c]);
        a.xhr.onreadystatechange = function() {
            if (a.xhr) {
                var e = a.xhr;
                switch (e.readyState) {
                case 3:
                    try {
                        var t = e.status
                          , i = e.responseText
                    } catch (e) {}
                    1223 === t && (t = 204),
                    i && i.length > 0 && a.emit("chunk", t, i);
                    break;
                case 4:
                    var t = e.status;
                    1223 === t && (t = 204),
                    a.emit("finish", t, e.responseText),
                    a._cleanup(!1)
                }
            }
        }
        ,
        a.xhr.send(r)
    }
    ,
    w.prototype._cleanup = function(e) {
        var t = this;
        if (t.xhr) {
            if (i.unload_del(t.unload_ref),
            t.xhr.onreadystatechange = function() {}
            ,
            e)
                try {
                    t.xhr.abort()
                } catch (n) {}
            t.unload_ref = t.xhr = null
        }
    }
    ,
    w.prototype.close = function() {
        var e = this;
        e.nuke(),
        e._cleanup(!0)
    }
    ;
    var x = i.XHRCorsObject = function() {
        var e = this
          , t = arguments;
        i.delay(function() {
            e._start.apply(e, t)
        })
    }
    ;
    x.prototype = new w;
    var E = i.XHRLocalObject = function(e, t, n) {
        var r = this;
        i.delay(function() {
            r._start(e, t, n, {
                no_credentials: !0
            })
        })
    }
    ;
    E.prototype = new w;
    var _ = i.XDRObject = function(e, t, n) {
        var r = this;
        i.delay(function() {
            r._start(e, t, n)
        })
    }
    ;
    _.prototype = new o(["chunk", "finish"]),
    _.prototype._start = function(e, t, n) {
        var r = this
          , o = new XDomainRequest;
        t += (-1 === t.indexOf("?") ? "?" : "&") + "t=" + +new Date;
        var a = o.ontimeout = o.onerror = function() {
            r.emit("finish", 0, ""),
            r._cleanup(!1)
        }
        ;
        o.onprogress = function() {
            r.emit("chunk", 200, o.responseText)
        }
        ,
        o.onload = function() {
            r.emit("finish", 200, o.responseText),
            r._cleanup(!1)
        }
        ,
        r.xdr = o,
        r.unload_ref = i.unload_add(function() {
            r._cleanup(!0)
        });
        try {
            r.xdr.open(e, t),
            r.xdr.send(n)
        } catch (s) {
            a()
        }
    }
    ,
    _.prototype._cleanup = function(e) {
        var t = this;
        if (t.xdr) {
            if (i.unload_del(t.unload_ref),
            t.xdr.ontimeout = t.xdr.onerror = t.xdr.onprogress = t.xdr.onload = null ,
            e)
                try {
                    t.xdr.abort()
                } catch (n) {}
            t.unload_ref = t.xdr = null
        }
    }
    ,
    _.prototype.close = function() {
        var e = this;
        e.nuke(),
        e._cleanup(!0)
    }
    ,
    i.isXHRCorsCapable = function() {
        return t.XMLHttpRequest && "withCredentials"in new XMLHttpRequest ? 1 : t.XDomainRequest && e.domain ? 2 : I.enabled() ? 3 : 4
    }
    ;
    var T = function(e, n, r) {
        if (this === t)
            return new T(e,n,r);
        var o, a = this;
        a._options = {
            devel: !1,
            debug: !1,
            protocols_whitelist: [],
            info: void 0,
            rtt: void 0
        },
        r && i.objectExtend(a._options, r),
        a._base_url = i.amendUrl(e),
        a._server = a._options.server || i.random_number_string(1e3),
        a._options.protocols_whitelist && a._options.protocols_whitelist.length ? o = a._options.protocols_whitelist : (o = "string" == typeof n && n.length > 0 ? [n] : i.isArray(n) ? n : null ,
        o && a._debug('Deprecated API: Use "protocols_whitelist" option instead of supplying protocol list as a second parameter to SockJS constructor.')),
        a._protocols = [],
        a.protocol = null ,
        a.readyState = T.CONNECTING,
        a._ir = V(a._base_url),
        a._ir.onfinish = function(e, t) {
            a._ir = null ,
            e ? (a._options.info && (e = i.objectExtend(e, a._options.info)),
            a._options.rtt && (t = a._options.rtt),
            a._applyInfo(e, t, o),
            a._didClose()) : a._didClose(1002, "Can't connect to server", !0)
        }
    }
    ;
    T.prototype = new n,
    T.version = "0.3.4",
    T.CONNECTING = 0,
    T.OPEN = 1,
    T.CLOSING = 2,
    T.CLOSED = 3,
    T.prototype._debug = function() {
        this._options.debug && i.log.apply(i, arguments)
    }
    ,
    T.prototype._dispatchOpen = function() {
        var e = this;
        e.readyState === T.CONNECTING ? (e._transport_tref && (clearTimeout(e._transport_tref),
        e._transport_tref = null ),
        e.readyState = T.OPEN,
        e.dispatchEvent(new r("open"))) : e._didClose(1006, "Server lost session")
    }
    ,
    T.prototype._dispatchMessage = function(e) {
        var t = this;
        t.readyState === T.OPEN && t.dispatchEvent(new r("message",{
            data: e
        }))
    }
    ,
    T.prototype._dispatchHeartbeat = function() {
        var e = this;
        e.readyState === T.OPEN && e.dispatchEvent(new r("heartbeat",{}))
    }
    ,
    T.prototype._didClose = function(e, t, n) {
        var o = this;
        if (o.readyState !== T.CONNECTING && o.readyState !== T.OPEN && o.readyState !== T.CLOSING)
            throw new Error("INVALID_STATE_ERR");
        o._ir && (o._ir.nuke(),
        o._ir = null ),
        o._transport && (o._transport.doCleanup(),
        o._transport = null );
        var a = new r("close",{
            code: e,
            reason: t,
            wasClean: i.userSetCode(e)
        });
        if (!i.userSetCode(e) && o.readyState === T.CONNECTING && !n) {
            if (o._try_next_protocol(a))
                return;
            a = new r("close",{
                code: 2e3,
                reason: "All transports failed",
                wasClean: !1,
                last_event: a
            })
        }
        o.readyState = T.CLOSED,
        i.delay(function() {
            o.dispatchEvent(a)
        })
    }
    ,
    T.prototype._didMessage = function(e) {
        var t = this
          , i = e.slice(0, 1);
        switch (i) {
        case "o":
            t._dispatchOpen();
            break;
        case "a":
            for (var n = JSON.parse(e.slice(1) || "[]"), r = 0; r < n.length; r++)
                t._dispatchMessage(n[r]);
            break;
        case "m":
            var n = JSON.parse(e.slice(1) || "null");
            t._dispatchMessage(n);
            break;
        case "c":
            var n = JSON.parse(e.slice(1) || "[]");
            t._didClose(n[0], n[1]);
            break;
        case "h":
            t._dispatchHeartbeat()
        }
    }
    ,
    T.prototype._try_next_protocol = function(t) {
        var n = this;
        for (n.protocol && (n._debug("Closed transport:", n.protocol, "" + t),
        n.protocol = null ),
        n._transport_tref && (clearTimeout(n._transport_tref),
        n._transport_tref = null ); ; ) {
            var r = n.protocol = n._protocols.shift();
            if (!r)
                return !1;
            if (T[r] && T[r].need_body === !0 && (!e.body || "undefined" != typeof e.readyState && "complete" !== e.readyState))
                return n._protocols.unshift(r),
                n.protocol = "waiting-for-load",
                i.attachEvent("load", function() {
                    n._try_next_protocol()
                }),
                !0;
            if (T[r] && T[r].enabled(n._options)) {
                var o = T[r].roundTrips || 1
                  , a = (n._options.rto || 0) * o || 5e3;
                n._transport_tref = i.delay(a, function() {
                    n.readyState === T.CONNECTING && n._didClose(2007, "Transport timeouted")
                });
                var s = i.random_string(8)
                  , l = n._base_url + "/" + n._server + "/" + s;
                return n._debug("Opening transport:", r, " url:" + l, " RTO:" + n._options.rto),
                n._transport = new T[r](n,l,n._base_url),
                !0
            }
            n._debug("Skipping transport:", r)
        }
    }
    ,
    T.prototype.close = function(e, t) {
        var n = this;
        if (e && !i.userSetCode(e))
            throw new Error("INVALID_ACCESS_ERR");
        return n.readyState !== T.CONNECTING && n.readyState !== T.OPEN ? !1 : (n.readyState = T.CLOSING,
        n._didClose(e || 1e3, t || "Normal closure"),
        !0)
    }
    ,
    T.prototype.send = function(e) {
        var t = this;
        if (t.readyState === T.CONNECTING)
            throw new Error("INVALID_STATE_ERR");
        return t.readyState === T.OPEN && t._transport.doSend(i.quote("" + e)),
        !0
    }
    ,
    T.prototype._applyInfo = function(t, n, r) {
        var o = this;
        o._options.info = t,
        o._options.rtt = n,
        o._options.rto = i.countRTO(n),
        o._options.info.null_origin = !e.domain;
        var a = i.probeProtocols();
        o._protocols = i.detectProtocols(a, r, t)
    }
    ;
    var C = T.websocket = function(e, n) {
        var r = this
          , o = n + "/websocket";
        o = "https" === o.slice(0, 5) ? "wss" + o.slice(5) : "ws" + o.slice(4),
        r.ri = e,
        r.url = o;
        var a = t.WebSocket || t.MozWebSocket;
        r.ws = new a(r.url),
        r.ws.onmessage = function(e) {
            r.ri._didMessage(e.data)
        }
        ,
        r.unload_ref = i.unload_add(function() {
            r.ws.close()
        }),
        r.ws.onclose = function() {
            r.ri._didMessage(i.closeFrame(1006, "WebSocket connection broken"))
        }
    }
    ;
    C.prototype.doSend = function(e) {
        this.ws.send("[" + e + "]")
    }
    ,
    C.prototype.doCleanup = function() {
        var e = this
          , t = e.ws;
        t && (t.onmessage = t.onclose = null ,
        t.close(),
        i.unload_del(e.unload_ref),
        e.unload_ref = e.ri = e.ws = null )
    }
    ,
    C.enabled = function() {
        return !!t.WebSocket || !!t.MozWebSocket
    }
    ,
    C.roundTrips = 2;
    var R = function() {}
    ;
    R.prototype.send_constructor = function(e) {
        var t = this;
        t.send_buffer = [],
        t.sender = e
    }
    ,
    R.prototype.doSend = function(e) {
        var t = this;
        t.send_buffer.push(e),
        t.send_stop || t.send_schedule()
    }
    ,
    R.prototype.send_schedule_wait = function() {
        var e, t = this;
        t.send_stop = function() {
            t.send_stop = null ,
            clearTimeout(e)
        }
        ,
        e = i.delay(25, function() {
            t.send_stop = null ,
            t.send_schedule()
        })
    }
    ,
    R.prototype.send_schedule = function() {
        var e = this;
        if (e.send_buffer.length > 0) {
            var t = "[" + e.send_buffer.join(",") + "]";
            e.send_stop = e.sender(e.trans_url, t, function(t, i) {
                e.send_stop = null ,
                t === !1 ? e.ri._didClose(1006, "Sending error " + i) : e.send_schedule_wait()
            }),
            e.send_buffer = []
        }
    }
    ,
    R.prototype.send_destructor = function() {
        var e = this;
        e._send_stop && e._send_stop(),
        e._send_stop = null
    }
    ;
    var S = function(t, n, r) {
        var o = this;
        if (!("_send_form"in o)) {
            var a = o._send_form = e.createElement("form")
              , s = o._send_area = e.createElement("textarea");
            s.name = "d",
            a.style.display = "none",
            a.style.position = "absolute",
            a.method = "POST",
            a.enctype = "application/x-www-form-urlencoded",
            a.acceptCharset = "UTF-8",
            a.appendChild(s),
            e.body.appendChild(a)
        }
        var a = o._send_form
          , s = o._send_area
          , l = "a" + i.random_string(8);
        a.target = l,
        a.action = t + "/jsonp_send?i=" + l;
        var c;
        try {
            c = e.createElement('<iframe name="' + l + '">')
        } catch (d) {
            c = e.createElement("iframe"),
            c.name = l
        }
        c.id = l,
        a.appendChild(c),
        c.style.display = "none";
        try {
            s.value = n
        } catch (h) {
            i.log("Your browser is seriously broken. Go home! " + h.message)
        }
        a.submit();
        var u = function() {
            c.onerror && (c.onreadystatechange = c.onerror = c.onload = null ,
            i.delay(500, function() {
                c.parentNode.removeChild(c),
                c = null
            }),
            s.value = "",
            r(!0))
        }
        ;
        return c.onerror = c.onload = u,
        c.onreadystatechange = function() {
            "complete" == c.readyState && u()
        }
        ,
        u
    }
      , k = function(e) {
        return function(t, i, n) {
            var r = new e("POST",t + "/xhr_send",i);
            return r.onfinish = function(e) {
                n(200 === e || 204 === e, "http status " + e)
            }
            ,
            function(e) {
                n(!1, e)
            }
        }
    }
      , M = function(t, n) {
        var r, o, a = e.createElement("script"), s = function(e) {
            o && (o.parentNode.removeChild(o),
            o = null ),
            a && (clearTimeout(r),
            a.parentNode.removeChild(a),
            a.onreadystatechange = a.onerror = a.onload = a.onclick = null ,
            a = null ,
            n(e),
            n = null )
        }
        , l = !1, c = null ;
        if (a.id = "a" + i.random_string(8),
        a.src = t,
        a.type = "text/javascript",
        a.charset = "UTF-8",
        a.onerror = function() {
            c || (c = setTimeout(function() {
                l || s(i.closeFrame(1006, "JSONP script loaded abnormally (onerror)"))
            }, 1e3))
        }
        ,
        a.onload = function() {
            s(i.closeFrame(1006, "JSONP script loaded abnormally (onload)"))
        }
        ,
        a.onreadystatechange = function() {
            if (/loaded|closed/.test(a.readyState)) {
                if (a && a.htmlFor && a.onclick) {
                    l = !0;
                    try {
                        a.onclick()
                    } catch (e) {}
                }
                a && s(i.closeFrame(1006, "JSONP script loaded abnormally (onreadystatechange)"))
            }
        }
        ,
        "undefined" == typeof a.async && e.attachEvent)
            if (/opera/i.test(navigator.userAgent))
                o = e.createElement("script"),
                o.text = "try{var a = document.getElementById('" + a.id + "'); if(a)a.onerror();}catch(x){};",
                a.async = o.async = !1;
            else {
                try {
                    a.htmlFor = a.id,
                    a.event = "onclick"
                } catch (d) {}
                a.async = !0
            }
        "undefined" != typeof a.async && (a.async = !0),
        r = setTimeout(function() {
            s(i.closeFrame(1006, "JSONP script loaded abnormally (timeout)"))
        }, 35e3);
        var h = e.getElementsByTagName("head")[0];
        return h.insertBefore(a, h.firstChild),
        o && h.insertBefore(o, h.firstChild),
        s
    }
      , A = T["jsonp-polling"] = function(e, t) {
        i.polluteGlobalNamespace();
        var n = this;
        n.ri = e,
        n.trans_url = t,
        n.send_constructor(S),
        n._schedule_recv()
    }
    ;
    A.prototype = new R,
    A.prototype._schedule_recv = function() {
        var e = this
          , t = function(t) {
            e._recv_stop = null ,
            t && (e._is_closing || e.ri._didMessage(t)),
            e._is_closing || e._schedule_recv()
        }
        ;
        e._recv_stop = H(e.trans_url + "/jsonp", M, t)
    }
    ,
    A.enabled = function() {
        return !0
    }
    ,
    A.need_body = !0,
    A.prototype.doCleanup = function() {
        var e = this;
        e._is_closing = !0,
        e._recv_stop && e._recv_stop(),
        e.ri = e._recv_stop = null ,
        e.send_destructor()
    }
    ;
    var H = function(e, n, r) {
        var o = "a" + i.random_string(6)
          , a = e + "?c=" + escape(s + "." + o)
          , l = 0
          , c = function(e) {
            switch (l) {
            case 0:
                delete t[s][o],
                r(e);
                break;
            case 1:
                r(e),
                l = 2;
                break;
            case 2:
                delete t[s][o]
            }
        }
          , d = n(a, c);
        t[s][o] = d;
        var h = function() {
            t[s][o] && (l = 1,
            t[s][o](i.closeFrame(1e3, "JSONP user aborted read")))
        }
        ;
        return h
    }
      , P = function() {}
    ;
    P.prototype = new R,
    P.prototype.run = function(e, t, i, n, r) {
        var o = this;
        o.ri = e,
        o.trans_url = t,
        o.send_constructor(k(r)),
        o.poll = new Z(e,n,t + i,r)
    }
    ,
    P.prototype.doCleanup = function() {
        var e = this;
        e.poll && (e.poll.abort(),
        e.poll = null )
    }
    ;
    var O = T["xhr-streaming"] = function(e, t) {
        this.run(e, t, "/xhr_streaming", nt, i.XHRCorsObject)
    }
    ;
    O.prototype = new P,
    O.enabled = function() {
        return t.XMLHttpRequest && "withCredentials"in new XMLHttpRequest && !/opera/i.test(navigator.userAgent)
    }
    ,
    O.roundTrips = 2,
    O.need_body = !0;
    var D = T["xdr-streaming"] = function(e, t) {
        this.run(e, t, "/xhr_streaming", nt, i.XDRObject)
    }
    ;
    D.prototype = new P,
    D.enabled = function() {
        return !!t.XDomainRequest
    }
    ,
    D.roundTrips = 2;
    var $ = T["xhr-polling"] = function(e, t) {
        this.run(e, t, "/xhr", nt, i.XHRCorsObject)
    }
    ;
    $.prototype = new P,
    $.enabled = O.enabled,
    $.roundTrips = 2;
    var L = T["xdr-polling"] = function(e, t) {
        this.run(e, t, "/xhr", nt, i.XDRObject)
    }
    ;
    L.prototype = new P,
    L.enabled = D.enabled,
    L.roundTrips = 2;
    var I = function() {}
    ;
    I.prototype.i_constructor = function(e, t, n) {
        var r = this;
        r.ri = e,
        r.origin = i.getOrigin(n),
        r.base_url = n,
        r.trans_url = t;
        var o = n + "/iframe.html";
        r.ri._options.devel && (o += "?t=" + +new Date),
        r.window_id = i.random_string(8),
        o += "#" + r.window_id,
        r.iframeObj = i.createIframe(o, function(e) {
            r.ri._didClose(1006, "Unable to load an iframe (" + e + ")")
        }),
        r.onmessage_cb = i.bind(r.onmessage, r),
        i.attachMessage(r.onmessage_cb)
    }
    ,
    I.prototype.doCleanup = function() {
        var e = this;
        if (e.iframeObj) {
            i.detachMessage(e.onmessage_cb);
            try {
                e.iframeObj.iframe.contentWindow && e.postMessage("c")
            } catch (t) {}
            e.iframeObj.cleanup(),
            e.iframeObj = null ,
            e.onmessage_cb = e.iframeObj = null
        }
    }
    ,
    I.prototype.onmessage = function(e) {
        var t = this;
        if (e.origin === t.origin) {
            var i = e.data.slice(0, 8)
              , n = e.data.slice(8, 9)
              , r = e.data.slice(9);
            if (i === t.window_id)
                switch (n) {
                case "s":
                    t.iframeObj.loaded(),
                    t.postMessage("s", JSON.stringify([T.version, t.protocol, t.trans_url, t.base_url]));
                    break;
                case "t":
                    t.ri._didMessage(r)
                }
        }
    }
    ,
    I.prototype.postMessage = function(e, t) {
        var i = this;
        i.iframeObj.post(i.window_id + e + (t || ""), i.origin)
    }
    ,
    I.prototype.doSend = function(e) {
        this.postMessage("m", e)
    }
    ,
    I.enabled = function() {
        var e = navigator && navigator.userAgent && -1 !== navigator.userAgent.indexOf("Konqueror");
        return ("function" == typeof t.postMessage || "object" == typeof t.postMessage) && !e
    }
    ;
    var F, B = function(e, n) {
        parent !== t ? parent.postMessage(F + e + (n || ""), "*") : i.log("Can't postMessage, no parent window.", e, n)
    }
    , j = function() {}
    ;
    j.prototype._didClose = function(e, t) {
        B("t", i.closeFrame(e, t))
    }
    ,
    j.prototype._didMessage = function(e) {
        B("t", e)
    }
    ,
    j.prototype._doSend = function(e) {
        this._transport.doSend(e)
    }
    ,
    j.prototype._doCleanup = function() {
        this._transport.doCleanup()
    }
    ,
    i.parent_origin = void 0,
    T.bootstrap_iframe = function() {
        var n;
        F = e.location.hash.slice(1);
        var r = function(e) {
            if (e.source === parent && ("undefined" == typeof i.parent_origin && (i.parent_origin = e.origin),
            e.origin === i.parent_origin)) {
                var r = e.data.slice(0, 8)
                  , o = e.data.slice(8, 9)
                  , a = e.data.slice(9);
                if (r === F)
                    switch (o) {
                    case "s":
                        var s = JSON.parse(a)
                          , l = s[0]
                          , c = s[1]
                          , d = s[2]
                          , h = s[3];
                        if (l !== T.version && i.log('Incompatibile SockJS! Main site uses: "' + l + '", the iframe: "' + T.version + '".'),
                        !i.flatUrl(d) || !i.flatUrl(h))
                            return void i.log("Only basic urls are supported in SockJS");
                        if (!i.isSameOriginUrl(d) || !i.isSameOriginUrl(h))
                            return void i.log("Can't connect to different domain from within an iframe. (" + JSON.stringify([t.location.href, d, h]) + ")");
                        n = new j,
                        n._transport = new j[c](n,d,h);
                        break;
                    case "m":
                        n._doSend(a);
                        break;
                    case "c":
                        n && n._doCleanup(),
                        n = null
                    }
            }
        }
        ;
        i.attachMessage(r),
        B("s")
    }
    ;
    var N = function(e, t) {
        var n = this;
        i.delay(function() {
            n.doXhr(e, t)
        })
    }
    ;
    N.prototype = new o(["finish"]),
    N.prototype.doXhr = function(e, t) {
        var n = this
          , r = (new Date).getTime()
          , o = new t("GET",e + "/info")
          , a = i.delay(8e3, function() {
            o.ontimeout()
        });
        o.onfinish = function(e, t) {
            if (clearTimeout(a),
            a = null ,
            200 === e) {
                var i = (new Date).getTime() - r
                  , o = JSON.parse(t);
                "object" != typeof o && (o = {}),
                n.emit("finish", o, i)
            } else
                n.emit("finish")
        }
        ,
        o.ontimeout = function() {
            o.close(),
            n.emit("finish")
        }
    }
    ;
    var z = function(t) {
        var n = this
          , r = function() {
            var e = new I;
            e.protocol = "w-iframe-info-receiver";
            var i = function(t) {
                if ("string" == typeof t && "m" === t.substr(0, 1)) {
                    var i = JSON.parse(t.substr(1))
                      , r = i[0]
                      , o = i[1];
                    n.emit("finish", r, o)
                } else
                    n.emit("finish");
                e.doCleanup(),
                e = null
            }
              , r = {
                _options: {},
                _didClose: i,
                _didMessage: i
            };
            e.i_constructor(r, t, t)
        }
        ;
        e.body ? r() : i.attachEvent("load", r)
    }
    ;
    z.prototype = new o(["finish"]);
    var U = function() {
        var e = this;
        i.delay(function() {
            e.emit("finish", {}, 2e3)
        })
    }
    ;
    U.prototype = new o(["finish"]);
    var V = function(e) {
        if (i.isSameOriginUrl(e))
            return new N(e,i.XHRLocalObject);
        switch (i.isXHRCorsCapable()) {
        case 1:
            return new N(e,i.XHRLocalObject);
        case 2:
            return new N(e,i.XDRObject);
        case 3:
            return new z(e);
        default:
            return new U
        }
    }
      , W = j["w-iframe-info-receiver"] = function(e, t, n) {
        var r = new N(n,i.XHRLocalObject);
        r.onfinish = function(t, i) {
            e._didMessage("m" + JSON.stringify([t, i])),
            e._didClose()
        }
    }
    ;
    W.prototype.doCleanup = function() {}
    ;
    var G = T["iframe-eventsource"] = function() {
        var e = this;
        e.protocol = "w-iframe-eventsource",
        e.i_constructor.apply(e, arguments)
    }
    ;
    G.prototype = new I,
    G.enabled = function() {
        return "EventSource"in t && I.enabled()
    }
    ,
    G.need_body = !0,
    G.roundTrips = 3;
    var q = j["w-iframe-eventsource"] = function(e, t) {
        this.run(e, t, "/eventsource", Q, i.XHRLocalObject)
    }
    ;
    q.prototype = new P;
    var X = T["iframe-xhr-polling"] = function() {
        var e = this;
        e.protocol = "w-iframe-xhr-polling",
        e.i_constructor.apply(e, arguments)
    }
    ;
    X.prototype = new I,
    X.enabled = function() {
        return t.XMLHttpRequest && I.enabled()
    }
    ,
    X.need_body = !0,
    X.roundTrips = 3;
    var Y = j["w-iframe-xhr-polling"] = function(e, t) {
        this.run(e, t, "/xhr", nt, i.XHRLocalObject)
    }
    ;
    Y.prototype = new P;
    var J = T["iframe-htmlfile"] = function() {
        var e = this;
        e.protocol = "w-iframe-htmlfile",
        e.i_constructor.apply(e, arguments)
    }
    ;
    J.prototype = new I,
    J.enabled = function() {
        return I.enabled()
    }
    ,
    J.need_body = !0,
    J.roundTrips = 3;
    var K = j["w-iframe-htmlfile"] = function(e, t) {
        this.run(e, t, "/htmlfile", it, i.XHRLocalObject)
    }
    ;
    K.prototype = new P;
    var Z = function(e, t, i, n) {
        var r = this;
        r.ri = e,
        r.Receiver = t,
        r.recv_url = i,
        r.AjaxObject = n,
        r._scheduleRecv()
    }
    ;
    Z.prototype._scheduleRecv = function() {
        var e = this
          , t = e.poll = new e.Receiver(e.recv_url,e.AjaxObject)
          , i = 0;
        t.onmessage = function(t) {
            i += 1,
            e.ri._didMessage(t.data)
        }
        ,
        t.onclose = function(i) {
            e.poll = t = t.onmessage = t.onclose = null ,
            e.poll_is_closing || ("permanent" === i.reason ? e.ri._didClose(1006, "Polling error (" + i.reason + ")") : e._scheduleRecv())
        }
    }
    ,
    Z.prototype.abort = function() {
        var e = this;
        e.poll_is_closing = !0,
        e.poll && e.poll.abort()
    }
    ;
    var Q = function(e) {
        var t = this
          , n = new EventSource(e);
        n.onmessage = function(e) {
            t.dispatchEvent(new r("message",{
                data: unescape(e.data)
            }))
        }
        ,
        t.es_close = n.onerror = function(e, o) {
            var a = o ? "user" : 2 !== n.readyState ? "network" : "permanent";
            t.es_close = n.onmessage = n.onerror = null ,
            n.close(),
            n = null ,
            i.delay(200, function() {
                t.dispatchEvent(new r("close",{
                    reason: a
                }))
            })
        }
    }
    ;
    Q.prototype = new n,
    Q.prototype.abort = function() {
        var e = this;
        e.es_close && e.es_close({}, !0)
    }
    ;
    var et, tt = function() {
        if (void 0 === et)
            if ("ActiveXObject"in t)
                try {
                    et = !!new ActiveXObject("htmlfile")
                } catch (e) {}
            else
                et = !1;
        return et
    }
    , it = function(e) {
        var n = this;
        i.polluteGlobalNamespace(),
        n.id = "a" + i.random_string(6, 26),
        e += (-1 === e.indexOf("?") ? "?" : "&") + "c=" + escape(s + "." + n.id);
        var o, a = tt() ? i.createHtmlfile : i.createIframe;
        t[s][n.id] = {
            start: function() {
                o.loaded()
            },
            message: function(e) {
                n.dispatchEvent(new r("message",{
                    data: e
                }))
            },
            stop: function() {
                n.iframe_close({}, "network")
            }
        },
        n.iframe_close = function(e, i) {
            o.cleanup(),
            n.iframe_close = o = null ,
            delete t[s][n.id],
            n.dispatchEvent(new r("close",{
                reason: i
            }))
        }
        ,
        o = a(e, function() {
            n.iframe_close({}, "permanent")
        })
    }
    ;
    it.prototype = new n,
    it.prototype.abort = function() {
        var e = this;
        e.iframe_close && e.iframe_close({}, "user")
    }
    ;
    var nt = function(e, t) {
        var i = this
          , n = 0;
        i.xo = new t("POST",e,null ),
        i.xo.onchunk = function(e, t) {
            if (200 === e)
                for (; ; ) {
                    var o = t.slice(n)
                      , a = o.indexOf("\n");
                    if (-1 === a)
                        break;
                    n += a + 1;
                    var s = o.slice(0, a);
                    i.dispatchEvent(new r("message",{
                        data: s
                    }))
                }
        }
        ,
        i.xo.onfinish = function(e, t) {
            i.xo.onchunk(e, t),
            i.xo = null ;
            var n = 200 === e ? "network" : "permanent";
            i.dispatchEvent(new r("close",{
                reason: n
            }))
        }
    }
    ;
    return nt.prototype = new n,
    nt.prototype.abort = function() {
        var e = this;
        e.xo && (e.xo.close(),
        e.dispatchEvent(new r("close",{
            reason: "user"
        })),
        e.xo = null )
    }
    ,
    T.getUtils = function() {
        return i
    }
    ,
    T.getIframeTransport = function() {
        return I
    }
    ,
    T
}(),
"_sockjs_onload"in window && setTimeout(_sockjs_onload, 1),
"function" == typeof define && define.amd && define("sockjs", [], function() {
    return SockJS
}),
function(e, t) {
    var i = window.FIREBASE_ROOT + window.campaign_storage_path
      , n = function(e, t) {
        return this.reference = new Firebase(i + e.url),
        this.collection = e,
        this.options = t || {},
        this.events = this.options.events ? this.options.events : n.defaultEvents,
        this._bindEvents(),
        this.initialize(e, t),
        this
    }
    ;
    _.extend(n.prototype, Backbone.Events, {
        initialize: function() {},
        _bindEvents: function() {
            if (this.events)
                for (var e in this.events)
                    this.events.hasOwnProperty(e) && this.reference.on(e, _.bind(this.events[e], this))
        },
        _unbindEvents: function() {
            if (this.events)
                for (var e in this.events)
                    this.events.hasOwnProperty(e) && this.reference.off(e)
        },
        _add: function(e) {
            var t = this.collection;
            return t.add(e.val()),
            this.trigger("remote_create", e),
            e
        }
    }),
    n.defaultEvents = {
        child_added: function(e) {
            var t = this.collection.get(e.val());
            if (t)
                return t;
            this._add(e);
            var i = this.collection.get(e.val());
            return i
        },
        child_changed: function(e) {
            var i = e.val()
              , n = this.collection.get(i.id);
            if (n) {
                var r = n.toJSON();
                for (var o in r)
                    r[o] !== n.defaults[o] && i[o] === t && (i[o] = n.defaults[o]);
                return this.trigger("remote_update", n),
                n._ignore_remote || n.trigger("remote_update"),
                n.set(i),
                n
            }
            return this._add(e)
        },
        child_removed: function(e) {
            var t = this.collection.get(e.val());
            return t ? (this.collection.remove(t),
            this.trigger("remote_destroy", t),
            t) : void 0
        }
    };
    var r = Backbone.sync;
    Backbone.updateServer = function() {
        window.is_gm && $.get("/editor/updatefromrt/" + window.campaign_id)
    }
    ;
    var o = _.throttle(Backbone.updateServer, 3e5);
    Backbone.sync = function(e, n, s) {
        if (n.nofirebase)
            return r(e, n, s);
        if (o(),
        typeof Firebase === t)
            return !1;
        s || (s = {});
        try {
            var l = a(n, "url")
        } catch (c) {
            return void console.log("No url, probably already deleted.")
        }
        var d = new Firebase(i + l)
          , h = !0;
        switch (n.collection === t && (h = !1),
        e) {
        case "read":
            d.once("value", function(e) {
                e = _.toArray(e.val()),
                s.success && s.success(e, "success", {})
            });
            break;
        case "create":
        case "update":
            {
                (new Date).getTime()
            }
            d.once("value", function(e) {
                var i = e.val();
                null == i && (i = {},
                n.persisted = !0);
                var r = n.toJSON()
                  , o = {};
                for (var a in r)
                    if (i[a] === t)
                        r[a] !== n.defaults[a] && (o[a] = r[a]);
                    else if (window.is_gm && h && r[a] === n.defaults[a])
                        o[a] = null ;
                    else if (i[a] !== r[a]) {
                        if ("object" == typeof r[a] && _.isEqual(i[a], r[a]))
                            continue;o[a] = r[a]
                    }
                _.keys(o).length > 0 && (n._ignore_remote = !0,
                d.update(o, function(e) {
                    !e && s.success ? s.success() : e && s.error && s.error()
                }),
                n._ignore_remote = !1)
            }, function() {
                return "tutorial" === window.GNTKN ? void (s.success && s.success()) : (console.log("ERROR: UNABLE TO READ OR SET DATA"),
                void alert("Unable to read or set data from server. There may be a problem with your session. Try reloading the page to fix this issue. If you are persitently receiving this error, please contact support."))
            });
            break;
        case "delete":
            d.remove(function(e) {
                !e && s.success ? s.success() : e && s.error && s.error()
            })
        }
        return d
    }
    ;
    var a = function(e, t) {
        return e && e[t] ? _.isFunction(e[t]) ? e[t]() : e[t] : null
    }
    ;
    e.BackboneFirebase = n
}("undefined" != typeof exports ? exports : this),
function(e) {
    function t(t, i) {
        function n(e) {
            return at.preferFlash && tt && !at.ignoreFlash && "undefined" != typeof at.flash[e] && at.flash[e]
        }
        function r(e) {
            return function(t) {
                var i, n = this._t;
                return i = n && n._a ? e.call(this, t) : null
            }
        }
        this.setupOptions = {
            url: t || null ,
            flashVersion: 8,
            debugMode: !0,
            debugFlash: !1,
            useConsole: !0,
            consoleOnly: !0,
            waitForWindowLoad: !1,
            bgColor: "#ffffff",
            useHighPerformance: !1,
            flashPollingInterval: null ,
            html5PollingInterval: null ,
            flashLoadTimeout: 1e3,
            wmode: null ,
            allowScriptAccess: "always",
            useFlashBlock: !1,
            useHTML5Audio: !0,
            html5Test: /^(probably|maybe)$/i,
            preferFlash: !0,
            noSWFCache: !1
        },
        this.defaultOptions = {
            autoLoad: !1,
            autoPlay: !1,
            from: null ,
            loops: 1,
            onid3: null ,
            onload: null ,
            whileloading: null ,
            onplay: null ,
            onpause: null ,
            onresume: null ,
            whileplaying: null ,
            onposition: null ,
            onstop: null ,
            onfailure: null ,
            onfinish: null ,
            multiShot: !0,
            multiShotEvents: !1,
            position: null ,
            pan: 0,
            stream: !0,
            to: null ,
            type: null ,
            usePolicyFile: !1,
            volume: 100
        },
        this.flash9Options = {
            isMovieStar: null ,
            usePeakData: !1,
            useWaveformData: !1,
            useEQData: !1,
            onbufferchange: null ,
            ondataerror: null
        },
        this.movieStarOptions = {
            bufferTime: 3,
            serverURL: null ,
            onconnect: null ,
            duration: null
        },
        this.audioFormats = {
            mp3: {
                type: ['audio/mpeg; codecs="mp3"', "audio/mpeg", "audio/mp3", "audio/MPA", "audio/mpa-robust"],
                required: !0
            },
            mp4: {
                related: ["aac", "m4a"],
                type: ['audio/mp4; codecs="mp4a.40.2"', "audio/aac", "audio/x-m4a", "audio/MP4A-LATM", "audio/mpeg4-generic"],
                required: !1
            },
            ogg: {
                type: ["audio/ogg; codecs=vorbis"],
                required: !1
            },
            wav: {
                type: ['audio/wav; codecs="1"', "audio/wav", "audio/wave", "audio/x-wav"],
                required: !1
            }
        },
        this.movieID = "sm2-container",
        this.id = i || "sm2movie",
        this.debugID = "soundmanager-debug",
        this.debugURLParam = /([#?&])debug=1/i,
        this.versionNumber = "V2.97a.20120624",
        this.version = null ,
        this.movieURL = null ,
        this.altURL = null ,
        this.swfLoaded = !1,
        this.enabled = !1,
        this.oMC = null ,
        this.sounds = {},
        this.soundIDs = [],
        this.muted = !1,
        this.didFlashBlock = !1,
        this.filePattern = null ,
        this.filePatterns = {
            flash8: /\.mp3(\?.*)?$/i,
            flash9: /\.mp3(\?.*)?$/i
        },
        this.features = {
            buffering: !1,
            peakData: !1,
            waveformData: !1,
            eqData: !1,
            movieStar: !1
        },
        this.sandbox = {},
        this.hasHTML5 = function() {
            try {
                return "undefined" != typeof Audio && "undefined" != typeof (new Audio).canPlayType
            } catch (e) {
                return !1
            }
        }(),
        this.html5 = {
            usingFlash: null
        },
        this.flash = {},
        this.html5Only = !1,
        this.ignoreFlash = !1;
        var o, a, s, l, c, d, h, u, p, f, g, m, v, y, b, w, x, E, _, T, C, R, S, k, M, A, H, P, O, D, $, L, I, F, B, j, N, z, U, V, W, G, q, X, Y, J, K, Z, Q, et, tt, it, nt, rt, ot, at = this, st = null , lt = "soundManager", ct = navigator.userAgent, dt = e, ht = dt.location.href.toString(), ut = document, pt = [], ft = !1, gt = !1, mt = !1, vt = !1, yt = !1, bt = 8, wt = null , xt = null , Et = !1, _t = !1, Tt = 0, Ct = null , Rt = null , St = Array.prototype.slice, kt = !1, Mt = ct.match(/(ipad|iphone|ipod)/i), At = ct.match(/msie/i), Ht = ct.match(/webkit/i), Pt = ct.match(/safari/i) && !ct.match(/chrome/i), Ot = ct.match(/opera/i), Dt = ct.match(/(mobile|pre\/|xoom)/i) || Mt, $t = !ht.match(/usehtml5audio/i) && !ht.match(/sm2\-ignorebadua/i) && Pt && !ct.match(/silk/i) && ct.match(/OS X 10_6_([3-7])/i), Lt = ("undefined" != typeof console && "undefined" != typeof console.log,
        "undefined" != typeof ut.hasFocus ? ut.hasFocus() : null ), It = Pt && ("undefined" == typeof ut.hasFocus || !ut.hasFocus()), Ft = !It, Bt = /(mp3|mp4|mpa|m4a)/i, jt = "about:blank", Nt = ut.location ? ut.location.protocol.match(/http/i) : null , zt = Nt ? "" : "http://", Ut = /^\s*audio\/(?:x-)?(?:mpeg4|aac|flv|mov|mp4||m4v|m4a|mp4v|3gp|3g2)\s*(?:$|;)/i, Vt = ["mpeg4", "aac", "flv", "mov", "mp4", "m4v", "f4v", "m4a", "mp4v", "3gp", "3g2"], Wt = new RegExp("\\.(" + Vt.join("|") + ")(\\?.*)?$","i");
        this.mimePattern = /^\s*audio\/(?:x-)?(?:mp(?:eg|3))\s*(?:$|;)/i,
        this.useAltURL = !Nt,
        this._global_a = null ,
        F = {
            swfBox: "sm2-object-box",
            swfDefault: "movieContainer",
            swfError: "swf_error",
            swfTimedout: "swf_timedout",
            swfLoaded: "swf_loaded",
            swfUnblocked: "swf_unblocked",
            sm2Debug: "sm2_debug",
            highPerf: "high_performance",
            flashDebug: "flash_debug"
        },
        Dt && (at.useHTML5Audio = !0,
        at.preferFlash = !1,
        Mt && (at.ignoreFlash = !0,
        kt = !0)),
        this.setup = function(e) {
            return "undefined" != typeof e && mt && Rt && at.ok() && ("undefined" != typeof e.flashVersion || "undefined" != typeof e.url) && N($("setupLate")),
            p(e),
            at
        }
        ,
        this.ok = function() {
            return Rt ? mt && !vt : at.useHTML5Audio && at.hasHTML5
        }
        ,
        this.supported = this.ok,
        this.getMovie = function(e) {
            return a(e) || ut[e] || dt[e]
        }
        ,
        this.createSound = function(e, t) {
            function i() {
                return a = B(a),
                at.sounds[l.id] = new o(l),
                at.soundIDs.push(l.id),
                at.sounds[l.id]
            }
            var n, r, a = null , s = null , l = null ;
            return mt && at.ok() ? ("undefined" != typeof t && (e = {
                id: e,
                url: t
            }),
            a = u(e),
            a.url = G(a.url),
            l = a,
            z(l.id, !0) ? at.sounds[l.id] : (X(l) ? (s = i(),
            s._setup_html5(l)) : (d > 8 && null === l.isMovieStar && (l.isMovieStar = !(!l.serverURL && (l.type ? !l.type.match(Ut) : 1) && !l.url.match(Wt))),
            l = j(l, n),
            s = i(),
            8 === d ? st._createSound(l.id, l.loops || 1, l.usePolicyFile) : (st._createSound(l.id, l.url, l.usePeakData, l.useWaveformData, l.useEQData, l.isMovieStar, l.isMovieStar ? l.bufferTime : !1, l.loops || 1, l.serverURL, l.duration || null , l.autoPlay, !0, l.autoLoad, l.usePolicyFile),
            l.serverURL || (s.connected = !0,
            l.onconnect && l.onconnect.apply(s))),
            l.serverURL || !l.autoLoad && !l.autoPlay || s.load(l)),
            !l.serverURL && l.autoPlay && s.play(),
            s)) : (N(r),
            !1)
        }
        ,
        this.destroySound = function(e, t) {
            if (!z(e))
                return !1;
            var i, n = at.sounds[e];
            for (n._iO = {},
            n.stop(),
            n.unload(),
            i = 0; i < at.soundIDs.length; i++)
                if (at.soundIDs[i] === e) {
                    at.soundIDs.splice(i, 1);
                    break
                }
            return t || n.destruct(!0),
            n = null ,
            delete at.sounds[e],
            !0
        }
        ,
        this.load = function(e, t) {
            return z(e) ? at.sounds[e].load(t) : !1
        }
        ,
        this.unload = function(e) {
            return z(e) ? at.sounds[e].unload() : !1
        }
        ,
        this.onPosition = function(e, t, i, n) {
            return z(e) ? at.sounds[e].onposition(t, i, n) : !1
        }
        ,
        this.onposition = this.onPosition,
        this.clearOnPosition = function(e, t, i) {
            return z(e) ? at.sounds[e].clearOnPosition(t, i) : !1
        }
        ,
        this.play = function(e, t) {
            var i = !1;
            return mt && at.ok() ? z(e) ? at.sounds[e].play(t) : (t instanceof Object || (t = {
                url: t
            }),
            t && t.url && (t.id = e,
            i = at.createSound(t).play()),
            i) : (N(lt + ".play(): " + $(mt ? "notOK" : "notReady")),
            i)
        }
        ,
        this.start = this.play,
        this.setPosition = function(e, t) {
            return z(e) ? at.sounds[e].setPosition(t) : !1
        }
        ,
        this.stop = function(e) {
            return z(e) ? at.sounds[e].stop() : !1
        }
        ,
        this.stopAll = function() {
            var e;
            for (e in at.sounds)
                at.sounds.hasOwnProperty(e) && at.sounds[e].stop()
        }
        ,
        this.pause = function(e) {
            return z(e) ? at.sounds[e].pause() : !1
        }
        ,
        this.pauseAll = function() {
            var e;
            for (e = at.soundIDs.length - 1; e >= 0; e--)
                at.sounds[at.soundIDs[e]].pause()
        }
        ,
        this.resume = function(e) {
            return z(e) ? at.sounds[e].resume() : !1
        }
        ,
        this.resumeAll = function() {
            var e;
            for (e = at.soundIDs.length - 1; e >= 0; e--)
                at.sounds[at.soundIDs[e]].resume()
        }
        ,
        this.togglePause = function(e) {
            return z(e) ? at.sounds[e].togglePause() : !1
        }
        ,
        this.setPan = function(e, t) {
            return z(e) ? at.sounds[e].setPan(t) : !1
        }
        ,
        this.setVolume = function(e, t) {
            return z(e) ? at.sounds[e].setVolume(t) : !1
        }
        ,
        this.mute = function(e) {
            var t = 0;
            if ("string" != typeof e && (e = null ),
            e)
                return z(e) ? at.sounds[e].mute() : !1;
            for (t = at.soundIDs.length - 1; t >= 0; t--)
                at.sounds[at.soundIDs[t]].mute();
            return at.muted = !0,
            !0
        }
        ,
        this.muteAll = function() {
            at.mute()
        }
        ,
        this.unmute = function(e) {
            var t;
            if ("string" != typeof e && (e = null ),
            e)
                return z(e) ? at.sounds[e].unmute() : !1;
            for (t = at.soundIDs.length - 1; t >= 0; t--)
                at.sounds[at.soundIDs[t]].unmute();
            return at.muted = !1,
            !0
        }
        ,
        this.unmuteAll = function() {
            at.unmute()
        }
        ,
        this.toggleMute = function(e) {
            return z(e) ? at.sounds[e].toggleMute() : !1
        }
        ,
        this.getMemoryUse = function() {
            var e = 0;
            return st && 8 !== d && (e = parseInt(st._getMemoryUse(), 10)),
            e
        }
        ,
        this.disable = function(e) {
            var t;
            if ("undefined" == typeof e && (e = !1),
            vt)
                return !1;
            for (vt = !0,
            t = at.soundIDs.length - 1; t >= 0; t--)
                P(at.sounds[at.soundIDs[t]]);
            return h(e),
            et.remove(dt, "load", v),
            !0
        }
        ,
        this.canPlayMIME = function(e) {
            var t;
            return at.hasHTML5 && (t = Y({
                type: e
            })),
            !t && Rt && (t = e && at.ok() ? !!((d > 8 ? e.match(Ut) : null ) || e.match(at.mimePattern)) : null ),
            t
        }
        ,
        this.canPlayURL = function(e) {
            var t;
            return at.hasHTML5 && (t = Y({
                url: e
            })),
            !t && Rt && (t = e && at.ok() ? !!e.match(at.filePattern) : null ),
            t
        }
        ,
        this.canPlayLink = function(e) {
            return "undefined" != typeof e.type && e.type && at.canPlayMIME(e.type) ? !0 : at.canPlayURL(e.href)
        }
        ,
        this.getSoundById = function(e) {
            if (!e)
                throw new Error(lt + ".getSoundById(): sID is null/undefined");
            var t = at.sounds[e];
            return t
        }
        ,
        this.onready = function(e, t) {
            var i = "onready"
              , n = !1;
            if ("function" != typeof e)
                throw $("needFunction", i);
            return t || (t = dt),
            g(i, e, t),
            m(),
            n = !0,
            n
        }
        ,
        this.ontimeout = function(e, t) {
            var i = "ontimeout"
              , n = !1;
            if ("function" != typeof e)
                throw $("needFunction", i);
            return t || (t = dt),
            g(i, e, t),
            m({
                type: i
            }),
            n = !0,
            n
        }
        ,
        this._writeDebug = function() {
            return !0
        }
        ,
        this._wD = this._writeDebug,
        this._debug = function() {}
        ,
        this.reboot = function() {
            var e, t;
            for (e = at.soundIDs.length - 1; e >= 0; e--)
                at.sounds[at.soundIDs[e]].destruct();
            if (st)
                try {
                    At && (xt = st.innerHTML),
                    wt = st.parentNode.removeChild(st)
                } catch (i) {}
            xt = wt = Rt = null ,
            at.enabled = R = mt = Et = _t = ft = gt = vt = at.swfLoaded = !1,
            at.soundIDs = [],
            at.sounds = {},
            st = null ;
            for (e in pt)
                if (pt.hasOwnProperty(e))
                    for (t = pt[e].length - 1; t >= 0; t--)
                        pt[e][t].fired = !1;
            dt.setTimeout(at.beginDelayedInit, 20)
        }
        ,
        this.getMoviePercent = function() {
            return st && "undefined" != typeof st.PercentLoaded ? st.PercentLoaded() : null
        }
        ,
        this.beginDelayedInit = function() {
            yt = !0,
            T(),
            setTimeout(function() {
                return _t ? !1 : (k(),
                _(),
                _t = !0,
                !0)
            }, 20),
            y()
        }
        ,
        this.destruct = function() {
            at.disable(!0)
        }
        ,
        o = function(e) {
            var t, i, n, r, o, a, s, l, c, h = this, p = !1, f = [], g = 0, m = null ;
            c = {
                duration: null ,
                time: null
            },
            this.id = e.id,
            this.sID = this.id,
            this.url = e.url,
            this.options = u(e),
            this.instanceOptions = this.options,
            this._iO = this.instanceOptions,
            this.pan = this.options.pan,
            this.volume = this.options.volume,
            this.isHTML5 = !1,
            this._a = null ,
            this.id3 = {},
            this._debug = function() {}
            ,
            this.load = function(e) {
                var t, i = null ;
                if ("undefined" != typeof e ? (h._iO = u(e, h.options),
                h.instanceOptions = h._iO) : (e = h.options,
                h._iO = e,
                h.instanceOptions = h._iO,
                m && m !== h.url && (h._iO.url = h.url,
                h.url = null )),
                h._iO.url || (h._iO.url = h.url),
                h._iO.url = G(h._iO.url),
                h._iO.url === h.url && 0 !== h.readyState && 2 !== h.readyState)
                    return 3 === h.readyState && h._iO.onload && h._iO.onload.apply(h, [!!h.duration]),
                    h;
                if (t = h._iO,
                m = h.url,
                h.loaded = !1,
                h.readyState = 1,
                h.playState = 0,
                h.id3 = {},
                X(t))
                    i = h._setup_html5(t),
                    i._called_load || (h._html5_canplay = !1,
                    h._a.src !== t.url && (h._a.src = t.url,
                    h.setPosition(0)),
                    h._a.autobuffer = "auto",
                    h._a.preload = "auto",
                    i._called_load = !0,
                    t.autoPlay && h.play());
                else
                    try {
                        h.isHTML5 = !1,
                        h._iO = j(B(t)),
                        t = h._iO,
                        8 === d ? st._load(h.id, t.url, t.stream, t.autoPlay, t.whileloading ? 1 : 0, t.loops || 1, t.usePolicyFile) : st._load(h.id, t.url, !!t.stream, !!t.autoPlay, t.loops || 1, !!t.autoLoad, t.usePolicyFile)
                    } catch (n) {
                        M({
                            type: "SMSOUND_LOAD_JS_EXCEPTION",
                            fatal: !0
                        })
                    }
                return h
            }
            ,
            this.unload = function() {
                return 0 !== h.readyState && (h.isHTML5 ? (r(),
                h._a && (h._a.pause(),
                K(h._a, jt),
                h.url = jt)) : 8 === d ? st._unload(h.id, jt) : st._unload(h.id),
                t()),
                h
            }
            ,
            this.destruct = function(e) {
                h.isHTML5 ? (r(),
                h._a && (h._a.pause(),
                K(h._a),
                kt || n(),
                h._a._t = null ,
                h._a = null )) : (h._iO.onfailure = null ,
                st._destroySound(h.id)),
                e || at.destroySound(h.id, !0)
            }
            ,
            this.play = function(e, t) {
                var i, n, r, s = !0, c = null ;
                if (t = "undefined" == typeof t ? !0 : t,
                e || (e = {}),
                h._iO = u(e, h._iO),
                h._iO = u(h._iO, h.options),
                h._iO.url = G(h._iO.url),
                h.instanceOptions = h._iO,
                h._iO.serverURL && !h.connected)
                    return h.getAutoPlay() || h.setAutoPlay(!0),
                    h;
                if (X(h._iO) && (h._setup_html5(h._iO),
                o()),
                1 !== h.playState || h.paused || (i = h._iO.multiShot,
                i || (c = h)),
                null !== c)
                    return c;
                if (h.loaded || (0 === h.readyState ? h.isHTML5 ? h.load(h._iO) : (h._iO.autoPlay = !0,
                h.load(h._iO)) : 2 === h.readyState && (c = h)),
                null !== c)
                    return c;
                if (!h.isHTML5 && 9 === d && h.position > 0 && h.position === h.duration && (e.position = 0),
                h.paused && h.position && h.position > 0)
                    h.resume();
                else {
                    if (h._iO = u(e, h._iO),
                    null !== h._iO.from && null !== h._iO.to && 0 === h.instanceCount && 0 === h.playState && !h._iO.serverURL) {
                        if (r = function() {
                            h._iO = u(e, h._iO),
                            h.play(h._iO)
                        }
                        ,
                        h.isHTML5 && !h._html5_canplay ? (h.load({
                            _oncanplay: r
                        }),
                        c = !1) : h.isHTML5 || h.loaded || h.readyState && 2 === h.readyState || (h.load({
                            onload: r
                        }),
                        c = !1),
                        null !== c)
                            return c;
                        h._iO = l()
                    }
                    (!h.instanceCount || h._iO.multiShotEvents || !h.isHTML5 && d > 8 && !h.getAutoPlay()) && h.instanceCount++,
                    h._iO.onposition && 0 === h.playState && a(h),
                    h.playState = 1,
                    h.paused = !1,
                    h.position = "undefined" == typeof h._iO.position || isNaN(h._iO.position) ? 0 : h._iO.position,
                    h.isHTML5 || (h._iO = j(B(h._iO))),
                    h._iO.onplay && t && (h._iO.onplay.apply(h),
                    p = !0),
                    h.setVolume(h._iO.volume, !0),
                    h.setPan(h._iO.pan, !0),
                    h.isHTML5 ? (o(),
                    n = h._setup_html5(),
                    h.setPosition(h._iO.position),
                    n.play()) : (s = st._start(h.id, h._iO.loops || 1, 9 === d ? h._iO.position : h._iO.position / 1e3, h._iO.multiShot),
                    9 !== d || s || h._iO.onplayerror && h._iO.onplayerror.apply(h))
                }
                return h
            }
            ,
            this.start = this.play,
            this.stop = function(e) {
                var t, i = h._iO;
                return 1 === h.playState && (h._onbufferchange(0),
                h._resetOnPosition(0),
                h.paused = !1,
                h.isHTML5 || (h.playState = 0),
                s(),
                i.to && h.clearOnPosition(i.to),
                h.isHTML5 ? h._a && (t = h.position,
                h.setPosition(0),
                h.position = t,
                h._a.pause(),
                h.playState = 0,
                h._onTimer(),
                r()) : (st._stop(h.id, e),
                i.serverURL && h.unload()),
                h.instanceCount = 0,
                h._iO = {},
                i.onstop && i.onstop.apply(h)),
                h
            }
            ,
            this.setAutoPlay = function(e) {
                h._iO.autoPlay = e,
                h.isHTML5 || (st._setAutoPlay(h.id, e),
                e && (h.instanceCount || 1 !== h.readyState || h.instanceCount++))
            }
            ,
            this.getAutoPlay = function() {
                return h._iO.autoPlay
            }
            ,
            this.setPosition = function(e) {
                "undefined" == typeof e && (e = 0);
                var t, i, n, r = h.isHTML5 ? Math.max(e, 0) : Math.min(h.duration || h._iO.duration, Math.max(e, 0));
                if (t = h.position,
                h.position = r,
                n = h.position / 1e3,
                h._resetOnPosition(h.position),
                h._iO.position = r,
                h.isHTML5) {
                    if (h._a && h._html5_canplay && h._a.currentTime !== n)
                        try {
                            h._a.currentTime = n,
                            (0 === h.playState || h.paused) && h._a.pause()
                        } catch (o) {}
                } else
                    i = 9 === d ? h.position : n,
                    h.readyState && 2 !== h.readyState && st._setPosition(h.id, i, h.paused || !h.playState, h._iO.multiShot);
                return h.isHTML5 && h.paused && h._onTimer(!0),
                h
            }
            ,
            this.pause = function(e) {
                return h.paused || 0 === h.playState && 1 !== h.readyState ? h : (h.paused = !0,
                h.isHTML5 ? (h._setup_html5().pause(),
                r()) : (e || "undefined" == typeof e) && st._pause(h.id, h._iO.multiShot),
                h._iO.onpause && h._iO.onpause.apply(h),
                h)
            }
            ,
            this.resume = function() {
                var e = h._iO;
                return h.paused ? (h.paused = !1,
                h.playState = 1,
                h.isHTML5 ? (h._setup_html5().play(),
                o()) : (e.isMovieStar && !e.serverURL && h.setPosition(h.position),
                st._pause(h.id, e.multiShot)),
                !p && e.onplay ? (e.onplay.apply(h),
                p = !0) : e.onresume && e.onresume.apply(h),
                h) : h
            }
            ,
            this.togglePause = function() {
                return 0 === h.playState ? (h.play({
                    position: 9 !== d || h.isHTML5 ? h.position / 1e3 : h.position
                }),
                h) : (h.paused ? h.resume() : h.pause(),
                h)
            }
            ,
            this.setPan = function(e, t) {
                return "undefined" == typeof e && (e = 0),
                "undefined" == typeof t && (t = !1),
                h.isHTML5 || st._setPan(h.id, e),
                h._iO.pan = e,
                t || (h.pan = e,
                h.options.pan = e),
                h
            }
            ,
            this.setVolume = function(e, t) {
                return "undefined" == typeof e && (e = 100),
                "undefined" == typeof t && (t = !1),
                h.isHTML5 ? h._a && (h._a.volume = Math.max(0, Math.min(1, e / 100))) : st._setVolume(h.id, at.muted && !h.muted || h.muted ? 0 : e),
                h._iO.volume = e,
                t || (h.volume = e,
                h.options.volume = e),
                h
            }
            ,
            this.mute = function() {
                return h.muted = !0,
                h.isHTML5 ? h._a && (h._a.muted = !0) : st._setVolume(h.id, 0),
                h
            }
            ,
            this.unmute = function() {
                h.muted = !1;
                var e = "undefined" != typeof h._iO.volume;
                return h.isHTML5 ? h._a && (h._a.muted = !1) : st._setVolume(h.id, e ? h._iO.volume : h.options.volume),
                h
            }
            ,
            this.toggleMute = function() {
                return h.muted ? h.unmute() : h.mute()
            }
            ,
            this.onPosition = function(e, t, i) {
                return f.push({
                    position: parseInt(e, 10),
                    method: t,
                    scope: "undefined" != typeof i ? i : h,
                    fired: !1
                }),
                h
            }
            ,
            this.onposition = this.onPosition,
            this.clearOnPosition = function(e, t) {
                var i;
                if (e = parseInt(e, 10),
                isNaN(e))
                    return !1;
                for (i = 0; i < f.length; i++)
                    e === f[i].position && (t && t !== f[i].method || (f[i].fired && g--,
                    f.splice(i, 1)))
            }
            ,
            this._processOnPosition = function() {
                var e, t, i = f.length;
                if (!i || !h.playState || g >= i)
                    return !1;
                for (e = i - 1; e >= 0; e--)
                    t = f[e],
                    !t.fired && h.position >= t.position && (t.fired = !0,
                    g++,
                    t.method.apply(t.scope, [t.position]));
                return !0
            }
            ,
            this._resetOnPosition = function(e) {
                var t, i, n = f.length;
                if (!n)
                    return !1;
                for (t = n - 1; t >= 0; t--)
                    i = f[t],
                    i.fired && e <= i.position && (i.fired = !1,
                    g--);
                return !0
            }
            ,
            l = function() {
                var e, t, i = h._iO, n = i.from, r = i.to;
                return t = function() {
                    h.clearOnPosition(r, t),
                    h.stop()
                }
                ,
                e = function() {
                    null === r || isNaN(r) || h.onPosition(r, t)
                }
                ,
                null === n || isNaN(n) || (i.position = n,
                i.multiShot = !1,
                e()),
                i
            }
            ,
            a = function() {
                var e, t = h._iO.onposition;
                if (t)
                    for (e in t)
                        t.hasOwnProperty(e) && h.onPosition(parseInt(e, 10), t[e])
            }
            ,
            s = function() {
                var e, t = h._iO.onposition;
                if (t)
                    for (e in t)
                        t.hasOwnProperty(e) && h.clearOnPosition(parseInt(e, 10))
            }
            ,
            o = function() {
                h.isHTML5 && U(h)
            }
            ,
            r = function() {
                h.isHTML5 && V(h)
            }
            ,
            t = function(e) {
                e || (f = [],
                g = 0),
                p = !1,
                h._hasTimer = null ,
                h._a = null ,
                h._html5_canplay = !1,
                h.bytesLoaded = null ,
                h.bytesTotal = null ,
                h.duration = h._iO && h._iO.duration ? h._iO.duration : null ,
                h.durationEstimate = null ,
                h.buffered = [],
                h.eqData = [],
                h.eqData.left = [],
                h.eqData.right = [],
                h.failures = 0,
                h.isBuffering = !1,
                h.instanceOptions = {},
                h.instanceCount = 0,
                h.loaded = !1,
                h.metadata = {},
                h.readyState = 0,
                h.muted = !1,
                h.paused = !1,
                h.peakData = {
                    left: 0,
                    right: 0
                },
                h.waveformData = {
                    left: [],
                    right: []
                },
                h.playState = 0,
                h.position = null ,
                h.id3 = {}
            }
            ,
            t(),
            this._onTimer = function(e) {
                var t, i, n = !1, r = {};
                return h._hasTimer || e ? (h._a && (e || (h.playState > 0 || 1 === h.readyState) && !h.paused) && (t = h._get_html5_duration(),
                t !== c.duration && (c.duration = t,
                h.duration = t,
                n = !0),
                h.durationEstimate = h.duration,
                i = 1e3 * h._a.currentTime || 0,
                i !== c.time && (c.time = i,
                n = !0),
                (n || e) && h._whileplaying(i, r, r, r, r)),
                n) : void 0
            }
            ,
            this._get_html5_duration = function() {
                var e = h._iO
                  , t = h._a ? 1e3 * h._a.duration : e ? e.duration : void 0
                  , i = t && !isNaN(t) && 1 / 0 !== t ? t : e ? e.duration : null ;
                return i
            }
            ,
            this._apply_loop = function(e, t) {
                e.loop = t > 1 ? "loop" : ""
            }
            ,
            this._setup_html5 = function(e) {
                var n, r = u(h._iO, e), o = decodeURI, a = kt ? at._global_a : h._a, s = o(r.url), l = a && a._t ? a._t.instanceOptions : null ;
                if (a) {
                    if (a._t && (kt || s !== o(m) ? !kt || l.url !== r.url || m && m !== l.url || (n = a) : n = a,
                    n))
                        return h._apply_loop(a, r.loops),
                        n;
                    kt && a._t && a._t.playState && r.url !== l.url && a._t.stop(),
                    t(l && l.url ? r.url === l.url : m ? m === r.url : !1),
                    a.src = r.url,
                    h.url = r.url,
                    m = r.url,
                    a._called_load = !1
                } else
                    h._a = r.autoLoad || r.autoPlay ? new Audio(r.url) : Ot ? new Audio(null ) : new Audio,
                    a = h._a,
                    a._called_load = !1,
                    kt && (at._global_a = a);
                return h.isHTML5 = !0,
                h._a = a,
                a._t = h,
                i(),
                h._apply_loop(a, r.loops),
                r.autoLoad || r.autoPlay ? h.load() : (a.autobuffer = !1,
                a.preload = "auto"),
                a
            }
            ,
            i = function() {
                function e(e, t, i) {
                    return h._a ? h._a.addEventListener(e, t, i || !1) : null
                }
                if (h._a._added_events)
                    return !1;
                var t;
                h._a._added_events = !0;
                for (t in rt)
                    rt.hasOwnProperty(t) && e(t, rt[t]);
                return !0
            }
            ,
            n = function() {
                function e(e, t, i) {
                    return h._a ? h._a.removeEventListener(e, t, i || !1) : null
                }
                var t;
                h._a._added_events = !1;
                for (t in rt)
                    rt.hasOwnProperty(t) && e(t, rt[t])
            }
            ,
            this._onload = function(e) {
                var t = !!e || !h.isHTML5 && 8 === d && h.duration;
                return h.loaded = t,
                h.readyState = t ? 3 : 2,
                h._onbufferchange(0),
                h._iO.onload && h._iO.onload.apply(h, [t]),
                !0
            }
            ,
            this._onbufferchange = function(e) {
                return 0 === h.playState ? !1 : e && h.isBuffering || !e && !h.isBuffering ? !1 : (h.isBuffering = 1 === e,
                h._iO.onbufferchange && h._iO.onbufferchange.apply(h),
                !0)
            }
            ,
            this._onsuspend = function() {
                return h._iO.onsuspend && h._iO.onsuspend.apply(h),
                !0
            }
            ,
            this._onfailure = function(e, t, i) {
                h.failures++,
                h._iO.onfailure && 1 === h.failures && h._iO.onfailure(h, e, t, i)
            }
            ,
            this._onfinish = function() {
                var e = h._iO.onfinish;
                h._onbufferchange(0),
                h._resetOnPosition(0),
                h.instanceCount && (h.instanceCount--,
                h.instanceCount || (s(),
                h.playState = 0,
                h.paused = !1,
                h.instanceCount = 0,
                h.instanceOptions = {},
                h._iO = {},
                r(),
                h.isHTML5 && (h.position = 0)),
                (!h.instanceCount || h._iO.multiShotEvents) && e && e.apply(h))
            }
            ,
            this._whileloading = function(e, t, i, n) {
                var r = h._iO;
                h.bytesLoaded = e,
                h.bytesTotal = t,
                h.duration = Math.floor(i),
                h.bufferLength = n,
                r.isMovieStar ? h.durationEstimate = h.duration : (h.durationEstimate = r.duration ? h.duration > r.duration ? h.duration : r.duration : parseInt(h.bytesTotal / h.bytesLoaded * h.duration, 10),
                "undefined" == typeof h.durationEstimate && (h.durationEstimate = h.duration)),
                h.isHTML5 || (h.buffered = [{
                    start: 0,
                    end: h.duration
                }]),
                (3 !== h.readyState || h.isHTML5) && r.whileloading && r.whileloading.apply(h)
            }
            ,
            this._whileplaying = function(e, t, i, n, r) {
                var o, a = h._iO;
                return isNaN(e) || null === e ? !1 : (h.position = Math.max(0, e),
                h._processOnPosition(),
                !h.isHTML5 && d > 8 && (a.usePeakData && "undefined" != typeof t && t && (h.peakData = {
                    left: t.leftPeak,
                    right: t.rightPeak
                }),
                a.useWaveformData && "undefined" != typeof i && i && (h.waveformData = {
                    left: i.split(","),
                    right: n.split(",")
                }),
                a.useEQData && "undefined" != typeof r && r && r.leftEQ && (o = r.leftEQ.split(","),
                h.eqData = o,
                h.eqData.left = o,
                "undefined" != typeof r.rightEQ && r.rightEQ && (h.eqData.right = r.rightEQ.split(",")))),
                1 === h.playState && (h.isHTML5 || 8 !== d || h.position || !h.isBuffering || h._onbufferchange(0),
                a.whileplaying && a.whileplaying.apply(h)),
                !0)
            }
            ,
            this._oncaptiondata = function(e) {
                h.captiondata = e,
                h._iO.oncaptiondata && h._iO.oncaptiondata.apply(h)
            }
            ,
            this._onmetadata = function(e, t) {
                var i, n, r = {};
                for (i = 0,
                n = e.length; n > i; i++)
                    r[e[i]] = t[i];
                h.metadata = r,
                h._iO.onmetadata && h._iO.onmetadata.apply(h)
            }
            ,
            this._onid3 = function(e, t) {
                var i, n, r = [];
                for (i = 0,
                n = e.length; n > i; i++)
                    r[e[i]] = t[i];
                h.id3 = u(h.id3, r),
                h._iO.onid3 && h._iO.onid3.apply(h)
            }
            ,
            this._onconnect = function(e) {
                e = 1 === e,
                h.connected = e,
                e && (h.failures = 0,
                z(h.id) && (h.getAutoPlay() ? h.play(void 0, h.getAutoPlay()) : h._iO.autoLoad && h.load()),
                h._iO.onconnect && h._iO.onconnect.apply(h, [e]))
            }
            ,
            this._ondataerror = function() {
                h.playState > 0 && h._iO.ondataerror && h._iO.ondataerror.apply(h)
            }
        }
        ,
        S = function() {
            return ut.body || ut._docElement || ut.getElementsByTagName("div")[0]
        }
        ,
        a = function(e) {
            return ut.getElementById(e)
        }
        ,
        u = function(e, t) {
            var i, n, r = e || {};
            i = "undefined" == typeof t ? at.defaultOptions : t;
            for (n in i)
                i.hasOwnProperty(n) && "undefined" == typeof r[n] && (r[n] = "object" != typeof i[n] || null === i[n] ? i[n] : u(r[n], i[n]));
            return r
        }
        ,
        f = {
            onready: 1,
            ontimeout: 1,
            defaultOptions: 1,
            flash9Options: 1,
            movieStarOptions: 1
        },
        p = function(e, t) {
            var i, n = !0, r = "undefined" != typeof t, o = at.setupOptions, a = f;
            for (i in e)
                if (e.hasOwnProperty(i))
                    if ("object" != typeof e[i] || null === e[i] || e[i]instanceof Array)
                        r && "undefined" != typeof a[t] ? at[t][i] = e[i] : "undefined" != typeof o[i] ? (at.setupOptions[i] = e[i],
                        at[i] = e[i]) : "undefined" == typeof a[i] ? (N($("undefined" == typeof at[i] ? "setupUndef" : "setupError", i), 2),
                        n = !1) : at[i]instanceof Function ? at[i].apply(at, e[i]instanceof Array ? e[i] : [e[i]]) : at[i] = e[i];
                    else {
                        if ("undefined" != typeof a[i])
                            return p(e[i], i);
                        N($("undefined" == typeof at[i] ? "setupUndef" : "setupError", i), 2),
                        n = !1
                    }
            return n
        }
        ,
        et = function() {
            function e(e) {
                var t = St.call(e)
                  , i = t.length;
                return r ? (t[1] = "on" + t[1],
                i > 3 && t.pop()) : 3 === i && t.push(!1),
                t
            }
            function t(e, t) {
                var i = e.shift()
                  , n = [o[t]];
                r ? i[n](e[0], e[1]) : i[n].apply(i, e)
            }
            function i() {
                t(e(arguments), "add")
            }
            function n() {
                t(e(arguments), "remove")
            }
            var r = dt.attachEvent
              , o = {
                add: r ? "attachEvent" : "addEventListener",
                remove: r ? "detachEvent" : "removeEventListener"
            };
            return {
                add: i,
                remove: n
            }
        }(),
        rt = {
            abort: r(function() {}),
            canplay: r(function() {
                var e, t = this._t;
                if (t._html5_canplay)
                    return !0;
                if (t._html5_canplay = !0,
                t._onbufferchange(0),
                e = "undefined" == typeof t._iO.position || isNaN(t._iO.position) ? null : t._iO.position / 1e3,
                t.position && this.currentTime !== e)
                    try {
                        this.currentTime = e
                    } catch (i) {}
                t._iO._oncanplay && t._iO._oncanplay()
            }),
            canplaythrough: r(function() {
                var e = this._t;
                e.loaded || (e._onbufferchange(0),
                e._whileloading(e.bytesLoaded, e.bytesTotal, e._get_html5_duration()),
                e._onload(!0))
            }),
            ended: r(function() {
                var e = this._t;
                e._onfinish()
            }),
            error: r(function() {
                this._t._onload(!1)
            }),
            loadeddata: r(function() {
                var e = this._t;
                e._loaded || Pt || (e.duration = e._get_html5_duration())
            }),
            loadedmetadata: r(function() {}),
            loadstart: r(function() {
                this._t._onbufferchange(1)
            }),
            play: r(function() {
                this._t._onbufferchange(0)
            }),
            playing: r(function() {
                this._t._onbufferchange(0)
            }),
            progress: r(function(e) {
                var t, i, n = this._t, r = 0, o = ("progress" === e.type,
                e.target.buffered), a = e.loaded || 0, s = e.total || 1;
                if (n.buffered = [],
                o && o.length) {
                    for (t = 0,
                    i = o.length; i > t; t++)
                        n.buffered.push({
                            start: o.start(t),
                            end: o.end(t)
                        });
                    r = o.end(0) - o.start(0),
                    a = r / e.target.duration
                }
                isNaN(a) || (n._onbufferchange(0),
                n._whileloading(a, s, n._get_html5_duration()),
                a && s && a === s && rt.canplaythrough.call(this, e))
            }),
            ratechange: r(function() {}),
            suspend: r(function(e) {
                var t = this._t;
                rt.progress.call(this, e),
                t._onsuspend()
            }),
            stalled: r(function() {}),
            timeupdate: r(function() {
                this._t._onTimer()
            }),
            waiting: r(function() {
                var e = this._t;
                e._onbufferchange(1)
            })
        },
        X = function(e) {
            var t;
            return t = e.serverURL || e.type && n(e.type) ? !1 : e.type ? Y({
                type: e.type
            }) : Y({
                url: e.url
            }) || at.html5Only
        }
        ,
        K = function(e, t) {
            e && (e.src = t)
        }
        ,
        Y = function(e) {
            if (!at.useHTML5Audio || !at.hasHTML5)
                return !1;
            var t, i, r, o, a = e.url || null , s = e.type || null , l = at.audioFormats;
            if (s && "undefined" != typeof at.html5[s])
                return at.html5[s] && !n(s);
            if (!J) {
                J = [];
                for (o in l)
                    l.hasOwnProperty(o) && (J.push(o),
                    l[o].related && (J = J.concat(l[o].related)));
                J = new RegExp("\\.(" + J.join("|") + ")(\\?.*)?$","i")
            }
            return r = a ? a.toLowerCase().match(J) : null ,
            r && r.length ? r = r[1] : s ? (i = s.indexOf(";"),
            r = (-1 !== i ? s.substr(0, i) : s).substr(6)) : t = !1,
            r && "undefined" != typeof at.html5[r] ? t = at.html5[r] && !n(r) : (s = "audio/" + r,
            t = at.html5.canPlayType({
                type: s
            }),
            at.html5[r] = t,
            t = t && at.html5[s] && !n(s)),
            t
        }
        ,
        Q = function() {
            function e(e) {
                var t, i, n, r = !1, a = !1;
                if (!o || "function" != typeof o.canPlayType)
                    return r;
                if (e instanceof Array) {
                    for (i = 0,
                    n = e.length; n > i && !a; i++)
                        (at.html5[e[i]] || o.canPlayType(e[i]).match(at.html5Test)) && (a = !0,
                        at.html5[e[i]] = !0,
                        at.flash[e[i]] = !!e[i].match(Bt));
                    r = a
                } else
                    t = o && "function" == typeof o.canPlayType ? o.canPlayType(e) : !1,
                    r = !(!t || !t.match(at.html5Test));
                return r
            }
            if (!at.useHTML5Audio || "undefined" == typeof Audio)
                return !1;
            var t, i, n, r, o = "undefined" != typeof Audio ? Ot ? new Audio(null ) : new Audio : null , a = {};
            n = at.audioFormats;
            for (t in n)
                if (n.hasOwnProperty(t) && (i = "audio/" + t,
                a[t] = e(n[t].type),
                a[i] = a[t],
                t.match(Bt) ? (at.flash[t] = !0,
                at.flash[i] = !0) : (at.flash[t] = !1,
                at.flash[i] = !1),
                n[t] && n[t].related))
                    for (r = n[t].related.length - 1; r >= 0; r--)
                        a["audio/" + n[t].related[r]] = a[t],
                        at.html5[n[t].related[r]] = a[t],
                        at.flash[n[t].related[r]] = a[t];
            return a.canPlayType = o ? e : null ,
            at.html5 = u(at.html5, a),
            !0
        }
        ,
        E = {},
        $ = function() {}
        ,
        B = function(e) {
            return 8 === d && e.loops > 1 && e.stream && (e.stream = !1),
            e
        }
        ,
        j = function(e) {
            return e && !e.usePolicyFile && (e.onid3 || e.usePeakData || e.useWaveformData || e.useEQData) && (e.usePolicyFile = !0),
            e
        }
        ,
        N = function() {}
        ,
        s = function() {
            return !1
        }
        ,
        P = function(e) {
            var t;
            for (t in e)
                e.hasOwnProperty(t) && "function" == typeof e[t] && (e[t] = s);
            t = null
        }
        ,
        O = function(e) {
            "undefined" == typeof e && (e = !1),
            (vt || e) && at.disable(e)
        }
        ,
        D = function(e) {
            var t, i = null ;
            if (e)
                if (e.match(/\.swf(\?.*)?$/i)) {
                    if (i = e.substr(e.toLowerCase().lastIndexOf(".swf?") + 4))
                        return e
                } else
                    e.lastIndexOf("/") !== e.length - 1 && (e += "/");
            return t = (e && -1 !== e.lastIndexOf("/") ? e.substr(0, e.lastIndexOf("/") + 1) : "./") + at.movieURL,
            at.noSWFCache && (t += "?ts=" + (new Date).getTime()),
            t
        }
        ,
        w = function() {
            d = parseInt(at.flashVersion, 10),
            8 !== d && 9 !== d && (at.flashVersion = d = bt);
            var e = at.debugMode || at.debugFlash ? "_debug.swf" : ".swf";
            at.useHTML5Audio && !at.html5Only && at.audioFormats.mp4.required && 9 > d && (at.flashVersion = d = 9),
            at.version = at.versionNumber + (at.html5Only ? " (HTML5-only mode)" : 9 === d ? " (AS3/Flash 9)" : " (AS2/Flash 8)"),
            d > 8 ? (at.defaultOptions = u(at.defaultOptions, at.flash9Options),
            at.features.buffering = !0,
            at.defaultOptions = u(at.defaultOptions, at.movieStarOptions),
            at.filePatterns.flash9 = new RegExp("\\.(mp3|" + Vt.join("|") + ")(\\?.*)?$","i"),
            at.features.movieStar = !0) : at.features.movieStar = !1,
            at.filePattern = at.filePatterns[8 !== d ? "flash9" : "flash8"],
            at.movieURL = (8 === d ? "soundmanager2.swf" : "soundmanager2_flash9.swf").replace(".swf", e),
            at.features.peakData = at.features.waveformData = at.features.eqData = d > 8
        }
        ,
        A = function(e, t) {
            return st ? void st._setPolling(e, t) : !1
        }
        ,
        H = function() {
            at.debugURLParam.test(ht) && (at.debugMode = !0)
        }
        ,
        z = this.getSoundById,
        I = function() {
            var e = [];
            return at.debugMode && e.push(F.sm2Debug),
            at.debugFlash && e.push(F.flashDebug),
            at.useHighPerformance && e.push(F.highPerf),
            e.join(" ")
        }
        ,
        L = function() {
            var e = ($("fbHandler"),
            at.getMoviePercent())
              , t = F
              , i = {
                type: "FLASHBLOCK"
            };
            return at.html5Only ? !1 : void (at.ok() ? at.oMC && (at.oMC.className = [I(), t.swfDefault, t.swfLoaded + (at.didFlashBlock ? " " + t.swfUnblocked : "")].join(" ")) : (Rt && (at.oMC.className = I() + " " + t.swfDefault + " " + (null === e ? t.swfTimedout : t.swfError)),
            at.didFlashBlock = !0,
            m({
                type: "ontimeout",
                ignoreInit: !0,
                error: i
            }),
            M(i)))
        }
        ,
        g = function(e, t, i) {
            "undefined" == typeof pt[e] && (pt[e] = []),
            pt[e].push({
                method: t,
                scope: i || null ,
                fired: !1
            })
        }
        ,
        m = function(e) {
            if (e || (e = {
                type: at.ok() ? "onready" : "ontimeout"
            }),
            !mt && e && !e.ignoreInit)
                return !1;
            if ("ontimeout" === e.type && (at.ok() || vt && !e.ignoreInit))
                return !1;
            var t, i, n = {
                success: e && e.ignoreInit ? at.ok() : !vt
            }, r = e && e.type ? pt[e.type] || [] : [], o = [], a = [n], s = Rt && at.useFlashBlock && !at.ok();
            for (e.error && (a[0].error = e.error),
            t = 0,
            i = r.length; i > t; t++)
                r[t].fired !== !0 && o.push(r[t]);
            if (o.length)
                for (t = 0,
                i = o.length; i > t; t++)
                    o[t].scope ? o[t].method.apply(o[t].scope, a) : o[t].method.apply(this, a),
                    s || (o[t].fired = !0);
            return !0
        }
        ,
        v = function() {
            dt.setTimeout(function() {
                at.useFlashBlock && L(),
                m(),
                "function" == typeof at.onload && at.onload.apply(dt),
                at.waitForWindowLoad && et.add(dt, "load", v)
            }, 1)
        }
        ,
        it = function() {
            if ("undefined" != typeof tt)
                return tt;
            var e, t, i, n = !1, r = navigator, o = r.plugins, a = dt.ActiveXObject;
            if (o && o.length)
                t = "application/x-shockwave-flash",
                i = r.mimeTypes,
                i && i[t] && i[t].enabledPlugin && i[t].enabledPlugin.description && (n = !0);
            else if ("undefined" != typeof a) {
                try {
                    e = new a("ShockwaveFlash.ShockwaveFlash")
                } catch (s) {}
                n = !!e
            }
            return tt = n,
            n
        }
        ,
        q = function() {
            var e, t, i = !0, n = at.audioFormats, r = Mt && !!ct.match(/os (1|2|3_0|3_1)/i);
            if (r ? (at.hasHTML5 = !1,
            at.html5Only = !0,
            at.oMC && (at.oMC.style.display = "none"),
            i = !1) : at.useHTML5Audio && (at.hasHTML5 = at.html5 && at.html5.canPlayType ? !0 : !1),
            at.useHTML5Audio && at.hasHTML5)
                for (t in n)
                    n.hasOwnProperty(t) && (n[t].required && !at.html5.canPlayType(n[t].type) || at.preferFlash && (at.flash[t] || at.flash[n[t].type])) && (e = !0);
            return at.ignoreFlash && (e = !1),
            at.html5Only = at.hasHTML5 && at.useHTML5Audio && !e,
            !at.html5Only
        }
        ,
        G = function(e) {
            var t, i, n, r = 0;
            if (e instanceof Array) {
                for (t = 0,
                i = e.length; i > t; t++)
                    if (e[t]instanceof Object) {
                        if (at.canPlayMIME(e[t].type)) {
                            r = t;
                            break
                        }
                    } else if (at.canPlayURL(e[t])) {
                        r = t;
                        break
                    }
                e[r].url && (e[r] = e[r].url),
                n = e[r]
            } else
                n = e;
            return n
        }
        ,
        U = function(e) {
            e._hasTimer || (e._hasTimer = !0,
            !Dt && at.html5PollingInterval && (null === Ct && 0 === Tt && (Ct = dt.setInterval(W, at.html5PollingInterval)),
            Tt++))
        }
        ,
        V = function(e) {
            e._hasTimer && (e._hasTimer = !1,
            !Dt && at.html5PollingInterval && Tt--)
        }
        ,
        W = function() {
            var e;
            if (null !== Ct && !Tt)
                return dt.clearInterval(Ct),
                Ct = null ,
                !1;
            for (e = at.soundIDs.length - 1; e >= 0; e--)
                at.sounds[at.soundIDs[e]].isHTML5 && at.sounds[at.soundIDs[e]]._hasTimer && at.sounds[at.soundIDs[e]]._onTimer()
        }
        ,
        M = function(e) {
            e = "undefined" != typeof e ? e : {},
            "function" == typeof at.onerror && at.onerror.apply(dt, [{
                type: "undefined" != typeof e.type ? e.type : null
            }]),
            "undefined" != typeof e.fatal && e.fatal && at.disable()
        }
        ,
        nt = function() {
            if (!$t || !it())
                return !1;
            var e, t, i = at.audioFormats;
            for (t in i)
                if (i.hasOwnProperty(t) && ("mp3" === t || "mp4" === t) && (at.html5[t] = !1,
                i[t] && i[t].related))
                    for (e = i[t].related.length - 1; e >= 0; e--)
                        at.html5[i[t].related[e]] = !1
        }
        ,
        this._setSandboxType = function() {}
        ,
        this._externalInterfaceOK = function() {
            if (at.swfLoaded)
                return !1;
            (new Date).getTime();
            at.swfLoaded = !0,
            It = !1,
            $t && nt(),
            setTimeout(c, At ? 100 : 1)
        }
        ,
        k = function(e, t) {
            function i() {}
            function n(e, t) {
                return '<param name="' + e + '" value="' + t + '" />'
            }
            if (ft && gt)
                return !1;
            if (at.html5Only)
                return w(),
                i(),
                at.oMC = a(at.movieID),
                c(),
                ft = !0,
                gt = !0,
                !1;
            var r, o, s, l, d, h, u, p, f = t || at.url, g = at.altURL || f, m = "JS/Flash audio component (SoundManager 2)", v = S(), y = I(), b = null , x = ut.getElementsByTagName("html")[0];
            if (b = x && x.dir && x.dir.match(/rtl/i),
            e = "undefined" == typeof e ? at.id : e,
            w(),
            at.url = D(Nt ? f : g),
            t = at.url,
            at.wmode = !at.wmode && at.useHighPerformance ? "transparent" : at.wmode,
            null !== at.wmode && (ct.match(/msie 8/i) || !At && !at.useHighPerformance) && navigator.platform.match(/win32|win64/i) && (at.wmode = null ),
            r = {
                name: e,
                id: e,
                src: t,
                quality: "high",
                allowScriptAccess: at.allowScriptAccess,
                bgcolor: at.bgColor,
                pluginspage: zt + "www.macromedia.com/go/getflashplayer",
                title: m,
                type: "application/x-shockwave-flash",
                wmode: at.wmode,
                hasPriority: "true"
            },
            at.debugFlash && (r.FlashVars = "debug=1"),
            at.wmode || delete r.wmode,
            At)
                o = ut.createElement("div"),
                l = ['<object id="' + e + '" data="' + t + '" type="' + r.type + '" title="' + r.title + '" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="' + zt + 'download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0">', n("movie", t), n("AllowScriptAccess", at.allowScriptAccess), n("quality", r.quality), at.wmode ? n("wmode", at.wmode) : "", n("bgcolor", at.bgColor), n("hasPriority", "true"), at.debugFlash ? n("FlashVars", r.FlashVars) : "", "</object>"].join("");
            else {
                o = ut.createElement("embed");
                for (s in r)
                    r.hasOwnProperty(s) && o.setAttribute(s, r[s])
            }
            if (H(),
            y = I(),
            v = S())
                if (at.oMC = a(at.movieID) || ut.createElement("div"),
                at.oMC.id)
                    p = at.oMC.className,
                    at.oMC.className = (p ? p + " " : F.swfDefault) + (y ? " " + y : ""),
                    at.oMC.appendChild(o),
                    At && (d = at.oMC.appendChild(ut.createElement("div")),
                    d.className = F.swfBox,
                    d.innerHTML = l),
                    gt = !0;
                else {
                    if (at.oMC.id = at.movieID,
                    at.oMC.className = F.swfDefault + " " + y,
                    h = null ,
                    d = null ,
                    at.useFlashBlock || (at.useHighPerformance ? h = {
                        position: "fixed",
                        width: "8px",
                        height: "8px",
                        bottom: "0px",
                        left: "0px",
                        overflow: "hidden"
                    } : (h = {
                        position: "absolute",
                        width: "6px",
                        height: "6px",
                        top: "-9999px",
                        left: "-9999px"
                    },
                    b && (h.left = Math.abs(parseInt(h.left, 10)) + "px"))),
                    Ht && (at.oMC.style.zIndex = 1e4),
                    !at.debugFlash)
                        for (u in h)
                            h.hasOwnProperty(u) && (at.oMC.style[u] = h[u]);
                    try {
                        At || at.oMC.appendChild(o),
                        v.appendChild(at.oMC),
                        At && (d = at.oMC.appendChild(ut.createElement("div")),
                        d.className = F.swfBox,
                        d.innerHTML = l),
                        gt = !0
                    } catch (E) {
                        throw new Error($("domError") + " \n" + E.toString())
                    }
                }
            return ft = !0,
            i(),
            !0
        }
        ,
        _ = function() {
            return at.html5Only ? (k(),
            !1) : st ? !1 : (st = at.getMovie(at.id),
            st || (wt ? (At ? at.oMC.innerHTML = xt : at.oMC.appendChild(wt),
            wt = null ,
            ft = !0) : k(at.id, at.url),
            st = at.getMovie(at.id)),
            "function" == typeof at.oninitmovie && setTimeout(at.oninitmovie, 1),
            !0)
        }
        ,
        y = function() {
            setTimeout(b, 1e3)
        }
        ,
        b = function() {
            var e, t = !1;
            return Et ? !1 : (Et = !0,
            et.remove(dt, "load", y),
            It && !Lt ? !1 : (mt || (e = at.getMoviePercent(),
            e > 0 && 100 > e && (t = !0)),
            void setTimeout(function() {
                return e = at.getMoviePercent(),
                t ? (Et = !1,
                dt.setTimeout(y, 1),
                !1) : void (!mt && Ft && (null === e ? at.useFlashBlock || 0 === at.flashLoadTimeout ? at.useFlashBlock && L() : O(!0) : 0 === at.flashLoadTimeout || O(!0)))
            }, at.flashLoadTimeout)))
        }
        ,
        x = function() {
            function e() {
                et.remove(dt, "focus", x)
            }
            return Lt || !It ? (e(),
            !0) : (Ft = !0,
            Lt = !0,
            Et = !1,
            y(),
            e(),
            !0)
        }
        ,
        ot = function() {
            var e, t = [];
            if (at.useHTML5Audio && at.hasHTML5)
                for (e in at.audioFormats)
                    at.audioFormats.hasOwnProperty(e) && t.push(e + ": " + at.html5[e] + (!at.html5[e] && tt && at.flash[e] ? " (using flash)" : at.preferFlash && at.flash[e] && tt ? " (preferring flash)" : at.html5[e] ? "" : " (" + (at.audioFormats[e].required ? "required, " : "") + "and no flash support)"))
        }
        ,
        h = function(e) {
            if (mt)
                return !1;
            if (at.html5Only)
                return mt = !0,
                v(),
                !0;
            var t, i = at.useFlashBlock && at.flashLoadTimeout && !at.getMoviePercent(), n = !0;
            return i || (mt = !0,
            vt && (t = {
                type: !tt && Rt ? "NO_FLASH" : "INIT_TIMEOUT"
            })),
            (vt || e) && (at.useFlashBlock && at.oMC && (at.oMC.className = I() + " " + (null === at.getMoviePercent() ? F.swfTimedout : F.swfError)),
            m({
                type: "ontimeout",
                error: t,
                ignoreInit: !0
            }),
            M(t),
            n = !1),
            vt || (at.waitForWindowLoad && !yt ? et.add(dt, "load", v) : v()),
            n
        }
        ,
        l = function() {
            var e, t = at.setupOptions;
            for (e in t)
                t.hasOwnProperty(e) && ("undefined" == typeof at[e] ? at[e] = t[e] : at[e] !== t[e] && (at.setupOptions[e] = at[e]))
        }
        ,
        c = function() {
            function e() {
                et.remove(dt, "load", at.beginDelayedInit)
            }
            if (mt)
                return !1;
            if (at.html5Only)
                return mt || (e(),
                at.enabled = !0,
                h()),
                !0;
            _();
            try {
                st._externalInterfaceTest(!1),
                A(!0, at.flashPollingInterval || (at.useHighPerformance ? 10 : 50)),
                at.debugMode || st._disableDebug(),
                at.enabled = !0,
                at.html5Only || et.add(dt, "unload", s)
            } catch (t) {
                return M({
                    type: "JS_TO_FLASH_EXCEPTION",
                    fatal: !0
                }),
                O(!0),
                h(),
                !1
            }
            return h(),
            e(),
            !0
        }
        ,
        T = function() {
            return R ? !1 : (R = !0,
            l(),
            H(),
            !tt && at.hasHTML5 && at.setup({
                useHTML5Audio: !0,
                preferFlash: !1
            }),
            Q(),
            at.html5.usingFlash = q(),
            Rt = at.html5.usingFlash,
            ot(),
            !tt && Rt && at.setup({
                flashLoadTimeout: 1
            }),
            ut.removeEventListener && ut.removeEventListener("DOMContentLoaded", T, !1),
            _(),
            !0)
        }
        ,
        Z = function() {
            return "complete" === ut.readyState && (T(),
            ut.detachEvent("onreadystatechange", Z)),
            !0
        }
        ,
        C = function() {
            yt = !0,
            et.remove(dt, "load", C)
        }
        ,
        it(),
        et.add(dt, "focus", x),
        et.add(dt, "load", y),
        et.add(dt, "load", C),
        ut.addEventListener ? ut.addEventListener("DOMContentLoaded", T, !1) : ut.attachEvent ? ut.attachEvent("onreadystatechange", Z) : M({
            type: "NO_DOM2_EVENTS",
            fatal: !0
        }),
        "complete" === ut.readyState && setTimeout(T, 100)
    }
    var i = null ;
    "undefined" != typeof SM2_DEFER && SM2_DEFER || (i = new t),
    e.SoundManager = t,
    e.soundManager = i
}(window),
function() {
    var d = Object.prototype.hasOwnProperty
      , f = function(e, t) {
        return function() {
            return e.apply(t, arguments)
        }
    }
    ;
    window.SC || (window.SC = {}),
    SC.Helper = {
        merge: function(e, t) {
            var i, n, r, o;
            if (e.constructor === Array)
                for (n = Array.apply(null , e),
                i = 0,
                o = t.length; o > i; i++)
                    r = t[i],
                    n.push(r);
            else {
                n = {};
                for (i in e)
                    d.call(e, i) && (r = e[i],
                    n[i] = r);
                for (i in t)
                    d.call(t, i) && (r = t[i],
                    n[i] = r)
            }
            return n
        },
        groupBy: function(e, t) {
            var i, n, r, o, a;
            for (i = {},
            r = 0,
            o = e.length; o > r; r++)
                n = e[r],
                n[t] && (i[a = n[t]] || (i[a] = []),
                i[n[t]].push(n));
            return i
        },
        loadJavascript: function(e, t) {
            var i;
            return i = document.createElement("script"),
            i.async = !0,
            i.src = e,
            SC.Helper.attachLoadEvent(i, t),
            document.body.appendChild(i),
            i
        },
        openCenteredPopup: function(e, t, i) {
            var n, r, t = {
                location: 1,
                width: t,
                height: i,
                left: window.screenX + (window.outerWidth - t) / 2,
                top: window.screenY + (window.outerHeight - i) / 2,
                toolbar: "no",
                scrollbars: "yes"
            }, i = [];
            for (n in t)
                d.call(t, n) && (r = t[n],
                i.push(n + "=" + r));
            return window.open(e, "connectWithSoundCloud", i.join(", "))
        },
        attachLoadEvent: function(e, t) {
            return e.addEventListener ? e.addEventListener("load", t, !1) : e.onreadystatechange = function() {
                return "complete" === this.readyState ? t() : void 0
            }
        },
        millisecondsToHMS: function(e) {
            var t, i, n, e = {
                h: Math.floor(e / 36e5),
                m: Math.floor(e / 6e4 % 60),
                s: Math.floor(e / 1e3 % 60)
            };
            return n = [],
            e.h > 0 && n.push(e.h),
            i = t = "",
            e.m < 10 && e.h > 0 && (t = "0"),
            e.s < 10 && (i = "0"),
            n.push(t + e.m),
            n.push(i + e.s),
            n.join(".")
        },
        setFlashStatusCodeMaps: function(e) {
            return e["_status_code_map[400]"] = 200,
            e["_status_code_map[401]"] = 200,
            e["_status_code_map[403]"] = 200,
            e["_status_code_map[404]"] = 200,
            e["_status_code_map[422]"] = 200,
            e["_status_code_map[500]"] = 200,
            e["_status_code_map[503]"] = 200,
            e["_status_code_map[504]"] = 200
        },
        responseHandler: function(e, t) {
            var i, n;
            return n = SC.Helper.JSON.parse(e),
            i = null ,
            n ? n.errors && (i = {
                message: n.errors && n.errors[0].error_message
            }) : i = t ? {
                message: "HTTP Error: " + t.status
            } : {
                message: "Unknown error"
            },
            {
                json: n,
                error: i
            }
        },
        FakeStorage: function() {
            return {
                _store: {},
                getItem: function(e) {
                    return this._store[e] || null
                },
                setItem: function(e, t) {
                    return this._store[e] = t.toString()
                },
                removeItem: function(e) {
                    return delete this._store[e]
                }
            }
        },
        JSON: {
            parse: function(b) {
                return "{" !== b[0] && "[" !== b[0] ? null : null != window.JSON ? window.JSON.parse(b) : eval(b)
            }
        }
    },
    window.SC = SC.Helper.merge(SC || {}, {
        _version: "1.1.1",
        options: {
            baseUrl: "http://connect.soundcloud.com",
            site: "soundcloud.com"
        },
        connectCallbacks: {},
        _popupWindow: void 0,
        initialize: function(e) {
            var t, i, n;
            null == e && (e = {}),
            this.accessToken(e.access_token);
            for (t in e)
                d.call(e, t) && (i = e[t],
                this.options[t] = i);
            return (n = this.options).flashXHR || (n.flashXHR = void 0 === (new XMLHttpRequest).withCredentials),
            this
        },
        hostname: function(e) {
            var t;
            return t = "",
            null != e && (t += e + "."),
            t += this.options.site
        }
    }),
    window.SC = SC.Helper.merge(SC || {}, {
        _apiRequest: function(e, t, i, n) {
            var r;
            return null == n && (n = i,
            i = void 0),
            i || (i = {}),
            t = SC.prepareRequestURI(t, i),
            t.query.format = "json",
            SC.options.flashXHR ? SC.Helper.setFlashStatusCodeMaps(t.query) : t.query["_status_code_map[302]"] = 200,
            ("PUT" === e || "DELETE" === e) && (t.query._method = e,
            e = "POST"),
            "GET" !== e && (r = t.encodeParams(t.query),
            t.query = {}),
            this._request(e, t, "application/x-www-form-urlencoded", r, function(e, t) {
                var i;
                return i = SC.Helper.responseHandler(e, t),
                i.json && "302 - Found" === i.json.status ? SC._apiRequest("GET", i.json.location, n) : n(i.json, i.error)
            })
        },
        _request: function(e, t, i, n, r) {
            return SC.options.flashXHR ? this._flashRequest(e, t, i, n, r) : this._xhrRequest(e, t, i, n, r)
        },
        _xhrRequest: function(e, t, i, n, r) {
            var o;
            return o = new XMLHttpRequest,
            o.open(e, t.toString(), !0),
            o.setRequestHeader("Content-Type", i),
            o.onreadystatechange = function(e) {
                return 4 === e.target.readyState ? r(e.target.responseText, e.target) : void 0
            }
            ,
            o.send(n)
        },
        _flashRequest: function(e, t, i, n, r) {
            return this.whenRecordingReady(function() {
                return Recorder.request(e, t.toString(), i, n, function(e, t) {
                    return r(Recorder._externalInterfaceDecode(e), t)
                })
            })
        },
        post: function(e, t, i) {
            return this._apiRequest("POST", e, t, i)
        },
        put: function(e, t, i) {
            return this._apiRequest("PUT", e, t, i)
        },
        get: function(e, t, i) {
            return this._apiRequest("GET", e, t, i)
        },
        "delete": function(e, t) {
            return this._apiRequest("DELETE", e, {}, t)
        },
        prepareRequestURI: function(e, t) {
            var i, n, r;
            null == t && (t = {}),
            n = new SC.URI(e,{
                decodeQuery: !0
            });
            for (i in t)
                d.call(t, i) && (r = t[i],
                n.query[i] = r);
            return n.isRelative() && (n.host = this.hostname("api"),
            n.scheme = "http"),
            null != this.accessToken() ? (n.query.oauth_token = this.accessToken(),
            n.scheme = "https") : n.query.client_id = this.options.client_id,
            n
        },
        _getAll: function(e, t, i, n) {
            return null == n && (n = []),
            null == i && (i = t,
            t = void 0),
            t || (t = {}),
            t.offset || (t.offset = 0),
            t.limit || (t.limit = 50),
            this.get(e, t, function(r) {
                return r.constructor === Array && r.length > 0 ? (n = SC.Helper.merge(n, r),
                t.offset += t.limit,
                SC._getAll(e, t, i, n)) : i(n, null )
            })
        }
    }),
    window.SC = SC.Helper.merge(SC || {}, {
        connect: function(e) {
            var t, e = "function" == typeof e ? {
                connected: e
            } : e;
            if (e.client_id || (e.client_id = SC.options.client_id),
            e.redirect_uri || (e.redirect_uri = SC.options.redirect_uri),
            SC.connectCallbacks.success = e.connected,
            SC.connectCallbacks.error = e.error,
            SC.connectCallbacks.general = e.callback,
            e.client_id && e.redirect_uri)
                return t = new SC.URI("https://" + this.hostname() + "/connect?"),
                t.query = {
                    client_id: e.client_id,
                    redirect_uri: e.redirect_uri,
                    response_type: "code_and_token",
                    scope: e.scope || "non-expiring",
                    display: "popup"
                },
                SC._popupWindow = SC.Helper.openCenteredPopup(t.toString(), 456, 510);
            throw "Either client_id and redirect_uri (for user agent flow) must be passed as an option"
        },
        connectCallback: function() {
            var e, t, i;
            if (t = SC._popupWindow,
            i = new SC.URI(t.location.toString(),{
                decodeQuery: !0,
                decodeFragment: !0
            }),
            e = i.query.error || i.fragment.error,
            t.close(),
            e)
                throw Error("SC OAuth2 Error: " + i.query.error_description);
            return SC.accessToken(i.fragment.access_token),
            SC._trigger("success"),
            SC._trigger("general", e)
        },
        disconnect: function() {
            return this.accessToken(null )
        },
        _trigger: function(e, t) {
            return null != this.connectCallbacks[e] ? this.connectCallbacks[e](t) : void 0
        },
        accessToken: function(e) {
            var t;
            return t = this.storage(),
            void 0 === e ? t.getItem("SC.accessToken") : null === e ? t.removeItem("SC.accessToken") : t.setItem("SC.accessToken", e)
        },
        isConnected: function() {
            return null != this.accessToken()
        }
    }),
    window.SC = SC.Helper.merge(SC || {}, {
        dialog: function(e, t, i) {
            return SC.Helper.extractOptionsAndCallbackArguments(t, i).callback
        },
        Dialog: {
            _activeDialogs: {},
            _handleDialogReturn: function() {},
            _handleInPopupContext: function() {},
            buildUrl: function() {}
        }
    }),
    window.SC = SC.Helper.merge(SC || {}, {
        oEmbed: function(e, t, i) {
            var n;
            return null == i && (i = t,
            t = void 0),
            t || (t = {}),
            t.url = e,
            e = new SC.URI("http://" + SC.hostname() + "/oembed.json"),
            e.query = t,
            void 0 !== i.nodeType && 1 === i.nodeType && (n = i,
            i = f(function(e) {
                return n.innerHTML = e.html
            }, this)),
            this._request("GET", e.toString(), null , null , function(e, t) {
                var n;
                return n = SC.Helper.responseHandler(e, t),
                i(n.json, n.error)
            })
        }
    }),
    window.SC = SC.Helper.merge(SC || {}, {
        _recorderSwfPath: "/recorder.js/recorder-0.8.swf",
        whenRecordingReady: function(e) {
            return window.Recorder.flashInterface() && null != window.Recorder.flashInterface().record ? e() : Recorder.initialize({
                swfSrc: this.options.baseUrl + this._recorderSwfPath + "?" + this._version,
                initialized: function() {
                    return e()
                }
            })
        },
        record: function(e) {
            return null == e && (e = {}),
            this.whenRecordingReady(function() {
                return Recorder.record(e)
            })
        },
        recordStop: function() {
            return Recorder.stop()
        },
        recordPlay: function(e) {
            return null == e && (e = {}),
            Recorder.play(e)
        },
        recordUpload: function(e, t) {
            var i;
            return null == e && (e = {}),
            i = SC.prepareRequestURI("/tracks", e),
            i.query.format = "json",
            SC.Helper.setFlashStatusCodeMaps(i.query),
            i = i.flattenParams(i.query),
            Recorder.upload({
                method: "POST",
                url: "https://" + this.hostname("api") + "/tracks",
                audioParam: "track[asset_data]",
                params: i,
                success: function(e) {
                    return e = SC.Helper.responseHandler(e),
                    t(e.json, e.error)
                }
            })
        }
    }),
    window.SC = SC.Helper.merge(SC || {}, {
        storage: function() {
            return this._fakeStorage || (this._fakeStorage = new SC.Helper.FakeStorage)
        }
    }),
    window.SC = SC.Helper.merge(SC || {}, {
        _soundmanagerPath: "/soundmanager2/",
        _soundmanagerScriptPath: "soundmanager2.js",
        whenStreamingReady: function(e) {
            var t;
            return window.soundManager ? e() : (t = this.options.baseUrl + this._soundmanagerPath,
            window.SM2_DEFER = !0,
            SC.Helper.loadJavascript(t + this._soundmanagerScriptPath, function() {
                return window.soundManager = new SoundManager,
                soundManager.url = t,
                soundManager.flashVersion = 9,
                soundManager.useFlashBlock = !1,
                soundManager.useHTML5Audio = !1,
                soundManager.beginDelayedInit(),
                soundManager.onready(function() {
                    return e()
                })
            }))
        },
        _prepareStreamUrl: function(e) {
            return e = e.toString().match(/^\d.*$/) ? "/tracks/" + e : e,
            e = SC.prepareRequestURI(e),
            e.path.match(/\/stream/) || (e.path += "/stream"),
            e.toString()
        },
        _setOnPositionListenersForComments: function(e, t, i) {
            var n, r, o;
            n = SC.Helper.groupBy(t, "timestamp"),
            o = [];
            for (r in n)
                t = n[r],
                o.push(function(t, i, n) {
                    return e.onposition(parseInt(t, 10), function() {
                        return n(i)
                    })
                }(r, t, i));
            return o
        },
        stream: function(e, t, i) {
            var n;
            return null != i ? n = t : "function" == typeof t ? i = t : n = t || {},
            SC.whenStreamingReady(f(function() {
                var t, r;
                return n.id = "T" + e + "-" + Math.random(),
                n.url = this._prepareStreamUrl(e),
                t = f(function(e) {
                    return e = soundManager.createSound(e),
                    null != i && i(e),
                    e
                }, this),
                (r = n.ontimedcomments) ? (delete n.ontimedcomments,
                SC._getAll(n.url.replace("/stream", "/comments"), f(function(e) {
                    return this._setOnPositionListenersForComments(t(n), e, r)
                }, this))) : t(n)
            }, this))
        },
        streamStopAll: function() {
            return null != window.soundManager ? window.soundManager.stopAll() : void 0
        }
    })
}
.call(this);
var Recorder = {
    swfObject: null ,
    _callbacks: {},
    _events: {},
    _initialized: !1,
    options: {},
    initialize: function(e) {
        this.options = e || {},
        this.options.flashContainer || this._setupFlashContainer(),
        this.bind("initialized", function() {
            Recorder._initialized = !0,
            e.initialized()
        }),
        this.bind("showFlash", this.options.onFlashSecurity || this._defaultOnShowFlash),
        this._loadFlash()
    },
    clear: function() {
        Recorder._events = {}
    },
    record: function(e) {
        e = e || {},
        this.clearBindings("recordingStart"),
        this.clearBindings("recordingProgress"),
        this.clearBindings("recordingCancel"),
        this.bind("recordingStart", this._defaultOnHideFlash),
        this.bind("recordingCancel", this._defaultOnHideFlash),
        this.bind("recordingCancel", this._loadFlash),
        this.bind("recordingStart", e.start),
        this.bind("recordingProgress", e.progress),
        this.bind("recordingCancel", e.cancel),
        this.flashInterface().record()
    },
    stop: function() {
        return this.flashInterface()._stop()
    },
    play: function(e) {
        e = e || {},
        this.clearBindings("playingProgress"),
        this.bind("playingProgress", e.progress),
        this.bind("playingStop", e.finished),
        this.flashInterface()._play()
    },
    upload: function(e) {
        e.audioParam = e.audioParam || "audio",
        e.params = e.params || {},
        this.clearBindings("uploadSuccess"),
        this.bind("uploadSuccess", function(t) {
            e.success(Recorder._externalInterfaceDecode(t))
        }),
        this.flashInterface().upload(e.url, e.audioParam, e.params)
    },
    audioData: function() {
        return this.flashInterface().audioData().split(";")
    },
    request: function(e, t, i, n, r) {
        r = this.registerCallback(r),
        this.flashInterface().request(e, t, i, n, r)
    },
    clearBindings: function(e) {
        Recorder._events[e] = []
    },
    bind: function(e, t) {
        Recorder._events[e] || (Recorder._events[e] = []),
        Recorder._events[e].push(t)
    },
    triggerEvent: function(e, t, i) {
        Recorder._executeInWindowContext(function() {
            for (var n in Recorder._events[e])
                Recorder._events[e][n] && Recorder._events[e][n].apply(Recorder, [t, i])
        })
    },
    triggerCallback: function(e, t) {
        Recorder._executeInWindowContext(function() {
            Recorder._callbacks[e].apply(null , t)
        })
    },
    registerCallback: function(e) {
        var t = "CB" + parseInt(999999 * Math.random(), 10);
        return Recorder._callbacks[t] = e,
        t
    },
    flashInterface: function() {
        return this.swfObject ? this.swfObject.record ? this.swfObject : this.swfObject.children[3].record ? this.swfObject.children[3] : void 0 : null
    },
    _executeInWindowContext: function(e) {
        window.setTimeout(e, 1)
    },
    _setupFlashContainer: function() {
        this.options.flashContainer = document.createElement("div"),
        this.options.flashContainer.setAttribute("id", "recorderFlashContainer"),
        this.options.flashContainer.setAttribute("style", "position: fixed; left: -9999px; top: -9999px; width: 230px; height: 140px; margin-left: 10px; border-top: 6px solid rgba(128, 128, 128, 0.6); border-bottom: 6px solid rgba(128, 128, 128, 0.6); border-radius: 5px 5px; padding-bottom: 1px; padding-right: 1px;"),
        document.body.appendChild(this.options.flashContainer)
    },
    _clearFlash: function() {
        var e = this.options.flashContainer.children[0];
        e && this.options.flashContainer.removeChild(e)
    },
    _loadFlash: function() {
        this._clearFlash();
        var e = document.createElement("div");
        e.setAttribute("id", "recorderFlashObject"),
        this.options.flashContainer.appendChild(e),
        swfobject.embedSWF(this.options.swfSrc, "recorderFlashObject", "231", "141", "10.0.0", void 0, void 0, {
            allowscriptaccess: "always"
        }, void 0, function(e) {
            e.success ? (Recorder.swfObject = e.ref,
            Recorder._checkForFlashBlock()) : Recorder._showFlashRequiredDialog()
        })
    },
    _defaultOnShowFlash: function() {
        var e = Recorder.options.flashContainer;
        e.style.left = (window.innerWidth || document.body.offsetWidth) / 2 - 115 + "px",
        e.style.top = (window.innerHeight || document.body.offsetHeight) / 2 - 70 + "px"
    },
    _defaultOnHideFlash: function() {
        var e = Recorder.options.flashContainer;
        e.style.left = "-9999px",
        e.style.top = "-9999px"
    },
    _checkForFlashBlock: function() {
        window.setTimeout(function() {
            Recorder._initialized || Recorder.triggerEvent("showFlash")
        }, 500)
    },
    _showFlashRequiredDialog: function() {
        Recorder.options.flashContainer.innerHTML = "<p>Adobe Flash Player 10.1 or newer is required to use this feature.</p><p><a href='http://get.adobe.com/flashplayer' target='_top'>Get it on Adobe.com.</a></p>",
        Recorder.options.flashContainer.style.color = "white",
        Recorder.options.flashContainer.style.backgroundColor = "#777",
        Recorder.options.flashContainer.style.textAlign = "center",
        Recorder.triggerEvent("showFlash")
    },
    _externalInterfaceDecode: function(e) {
        return e.replace(/%22/g, '"').replace(/%5c/g, "\\").replace(/%26/g, "&").replace(/%25/g, "%")
    }
};
if (void 0 == swfobject)
    var swfobject = function() {
        function e() {
            if (!L) {
                try {
                    var e = M.getElementsByTagName("body")[0].appendChild(M.createElement("span"));
                    e.parentNode.removeChild(e)
                } catch (t) {
                    return
                }
                L = !0;
                for (var e = P.length, i = 0; e > i; i++)
                    P[i]()
            }
        }
        function t(e) {
            L ? e() : P[P.length] = e
        }
        function i(e) {
            if (typeof k.addEventListener != T)
                k.addEventListener("load", e, !1);
            else if (typeof M.addEventListener != T)
                M.addEventListener("load", e, !1);
            else if (typeof k.attachEvent != T)
                p(k, "onload", e);
            else if ("function" == typeof k.onload) {
                var t = k.onload;
                k.onload = function() {
                    t(),
                    e()
                }
            } else
                k.onload = e
        }
        function n() {
            var e = M.getElementsByTagName("body")[0]
              , t = M.createElement(C);
            t.setAttribute("type", R);
            var i = e.appendChild(t);
            if (i) {
                var n = 0;
                !function() {
                    if (typeof i.GetVariable != T) {
                        var o = i.GetVariable("$version");
                        o && (o = o.split(" ")[1].split(","),
                        B.pv = [parseInt(o[0], 10), parseInt(o[1], 10), parseInt(o[2], 10)])
                    } else if (10 > n)
                        return n++,
                        void setTimeout(arguments.callee, 10);
                    e.removeChild(t),
                    i = null ,
                    r()
                }()
            } else
                r()
        }
        function r() {
            var e = O.length;
            if (e > 0)
                for (var t = 0; e > t; t++) {
                    var i = O[t].id
                      , n = O[t].callbackFn
                      , r = {
                        success: !1,
                        id: i
                    };
                    if (B.pv[0] > 0) {
                        var c = u(i);
                        if (c)
                            if (!f(O[t].swfVersion) || B.wk && B.wk < 312)
                                if (O[t].expressInstall && a()) {
                                    r = {},
                                    r.data = O[t].expressInstall,
                                    r.width = c.getAttribute("width") || "0",
                                    r.height = c.getAttribute("height") || "0",
                                    c.getAttribute("class") && (r.styleclass = c.getAttribute("class")),
                                    c.getAttribute("align") && (r.align = c.getAttribute("align"));
                                    for (var d = {}, c = c.getElementsByTagName("param"), h = c.length, p = 0; h > p; p++)
                                        "movie" != c[p].getAttribute("name").toLowerCase() && (d[c[p].getAttribute("name")] = c[p].getAttribute("value"));
                                    s(r, d, i, n)
                                } else
                                    l(c),
                                    n && n(r);
                            else
                                m(i, !0),
                                n && (r.success = !0,
                                r.ref = o(i),
                                n(r))
                    } else
                        m(i, !0),
                        n && ((i = o(i)) && typeof i.SetVariable != T && (r.success = !0,
                        r.ref = i),
                        n(r))
                }
        }
        function o(e) {
            var t = null ;
            return (e = u(e)) && "OBJECT" == e.nodeName && (typeof e.SetVariable != T ? t = e : (e = e.getElementsByTagName(C)[0]) && (t = e)),
            t
        }
        function a() {
            return !I && f("6.0.65") && (B.win || B.mac) && !(B.wk && B.wk < 312)
        }
        function s(e, t, i, n) {
            I = !0,
            w = n || null ,
            x = {
                success: !1,
                id: i
            };
            var r = u(i);
            r && ("OBJECT" == r.nodeName ? (y = c(r),
            b = null ) : (y = r,
            b = i),
            e.id = S,
            (typeof e.width == T || !/%$/.test(e.width) && parseInt(e.width, 10) < 310) && (e.width = "310"),
            (typeof e.height == T || !/%$/.test(e.height) && parseInt(e.height, 10) < 137) && (e.height = "137"),
            M.title = M.title.slice(0, 47) + " - Flash Player Installation",
            n = B.ie && B.win ? "ActiveX" : "PlugIn",
            n = "MMredirectURL=" + encodeURI(k.location).toString().replace(/&/g, "%26") + "&MMplayerType=" + n + "&MMdoctitle=" + M.title,
            typeof t.flashvars != T ? t.flashvars += "&" + n : t.flashvars = n,
            B.ie && B.win && 4 != r.readyState && (n = M.createElement("div"),
            i += "SWFObjectNew",
            n.setAttribute("id", i),
            r.parentNode.insertBefore(n, r),
            r.style.display = "none",
            function() {
                4 == r.readyState ? r.parentNode.removeChild(r) : setTimeout(arguments.callee, 10)
            }()),
            d(e, t, i))
        }
        function l(e) {
            if (B.ie && B.win && 4 != e.readyState) {
                var t = M.createElement("div");
                e.parentNode.insertBefore(t, e),
                t.parentNode.replaceChild(c(e), t),
                e.style.display = "none",
                function() {
                    4 == e.readyState ? e.parentNode.removeChild(e) : setTimeout(arguments.callee, 10)
                }()
            } else
                e.parentNode.replaceChild(c(e), e)
        }
        function c(e) {
            var t = M.createElement("div");
            if (B.win && B.ie)
                t.innerHTML = e.innerHTML;
            else if ((e = e.getElementsByTagName(C)[0]) && (e = e.childNodes))
                for (var i = e.length, n = 0; i > n; n++)
                    !(1 == e[n].nodeType && "PARAM" == e[n].nodeName) && 8 != e[n].nodeType && t.appendChild(e[n].cloneNode(!0));
            return t
        }
        function d(e, t, i) {
            var n, r = u(i);
            if (B.wk && B.wk < 312)
                return n;
            if (r)
                if (typeof e.id == T && (e.id = i),
                B.ie && B.win) {
                    var o, a = "";
                    for (o in e)
                        e[o] != Object.prototype[o] && ("data" == o.toLowerCase() ? t.movie = e[o] : "styleclass" == o.toLowerCase() ? a += ' class="' + e[o] + '"' : "classid" != o.toLowerCase() && (a += " " + o + '="' + e[o] + '"'));
                    o = "";
                    for (var s in t)
                        t[s] != Object.prototype[s] && (o += '<param name="' + s + '" value="' + t[s] + '" />');
                    r.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + a + ">" + o + "</object>",
                    D[D.length] = e.id,
                    n = u(e.id)
                } else {
                    s = M.createElement(C),
                    s.setAttribute("type", R);
                    for (var l in e)
                        e[l] != Object.prototype[l] && ("styleclass" == l.toLowerCase() ? s.setAttribute("class", e[l]) : "classid" != l.toLowerCase() && s.setAttribute(l, e[l]));
                    for (a in t)
                        t[a] != Object.prototype[a] && "movie" != a.toLowerCase() && (e = s,
                        o = a,
                        l = t[a],
                        i = M.createElement("param"),
                        i.setAttribute("name", o),
                        i.setAttribute("value", l),
                        e.appendChild(i));
                    r.parentNode.replaceChild(s, r),
                    n = s
                }
            return n
        }
        function h(e) {
            var t = u(e);
            t && "OBJECT" == t.nodeName && (B.ie && B.win ? (t.style.display = "none",
            function() {
                if (4 == t.readyState) {
                    var i = u(e);
                    if (i) {
                        for (var n in i)
                            "function" == typeof i[n] && (i[n] = null );
                        i.parentNode.removeChild(i)
                    }
                } else
                    setTimeout(arguments.callee, 10)
            }()) : t.parentNode.removeChild(t))
        }
        function u(e) {
            var t = null ;
            try {
                t = M.getElementById(e)
            } catch (i) {}
            return t
        }
        function p(e, t, i) {
            e.attachEvent(t, i),
            $[$.length] = [e, t, i]
        }
        function f(e) {
            var t = B.pv
              , e = e.split(".");
            return e[0] = parseInt(e[0], 10),
            e[1] = parseInt(e[1], 10) || 0,
            e[2] = parseInt(e[2], 10) || 0,
            t[0] > e[0] || t[0] == e[0] && t[1] > e[1] || t[0] == e[0] && t[1] == e[1] && t[2] >= e[2] ? !0 : !1
        }
        function g(e, t, i, n) {
            if (!B.ie || !B.mac) {
                var r = M.getElementsByTagName("head")[0];
                r && (i = i && "string" == typeof i ? i : "screen",
                n && (_ = E = null ),
                E && _ == i || (n = M.createElement("style"),
                n.setAttribute("type", "text/css"),
                n.setAttribute("media", i),
                E = r.appendChild(n),
                B.ie && B.win && typeof M.styleSheets != T && M.styleSheets.length > 0 && (E = M.styleSheets[M.styleSheets.length - 1]),
                _ = i),
                B.ie && B.win ? E && typeof E.addRule == C && E.addRule(e, t) : E && typeof M.createTextNode != T && E.appendChild(M.createTextNode(e + " {" + t + "}")))
            }
        }
        function m(e, t) {
            if (F) {
                var i = t ? "visible" : "hidden";
                L && u(e) ? u(e).style.visibility = i : g("#" + e, "visibility:" + i)
            }
        }
        function v(e) {
            return null != /[\\\"<>\.;]/.exec(e) && typeof encodeURIComponent != T ? encodeURIComponent(e) : e
        }
        var y, b, w, x, E, _, T = "undefined", C = "object", R = "application/x-shockwave-flash", S = "SWFObjectExprInst", k = window, M = document, A = navigator, H = !1, P = [function() {
            H ? n() : r()
        }
        ], O = [], D = [], $ = [], L = !1, I = !1, F = !0, B = function() {
            var e = typeof M.getElementById != T && typeof M.getElementsByTagName != T && typeof M.createElement != T
              , t = A.userAgent.toLowerCase()
              , i = A.platform.toLowerCase()
              , n = /win/.test(i ? i : t)
              , i = /mac/.test(i ? i : t)
              , t = /webkit/.test(t) ? parseFloat(t.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : !1
              , r = !1
              , o = [0, 0, 0]
              , a = null ;
            if (typeof A.plugins != T && typeof A.plugins["Shockwave Flash"] == C)
                !(a = A.plugins["Shockwave Flash"].description) || typeof A.mimeTypes != T && A.mimeTypes[R] && !A.mimeTypes[R].enabledPlugin || (H = !0,
                r = !1,
                a = a.replace(/^.*\s+(\S+\s+\S+$)/, "$1"),
                o[0] = parseInt(a.replace(/^(.*)\..*$/, "$1"), 10),
                o[1] = parseInt(a.replace(/^.*\.(.*)\s.*$/, "$1"), 10),
                o[2] = /[a-zA-Z]/.test(a) ? parseInt(a.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0);
            else if (typeof k.ActiveXObject != T)
                try {
                    var s = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
                    s && (a = s.GetVariable("$version")) && (r = !0,
                    a = a.split(" ")[1].split(","),
                    o = [parseInt(a[0], 10), parseInt(a[1], 10), parseInt(a[2], 10)])
                } catch (l) {}
            return {
                w3: e,
                pv: o,
                wk: t,
                ie: r,
                win: n,
                mac: i
            }
        }();
        return function() {
            B.w3 && ((typeof M.readyState != T && "complete" == M.readyState || typeof M.readyState == T && (M.getElementsByTagName("body")[0] || M.body)) && e(),
            L || (typeof M.addEventListener != T && M.addEventListener("DOMContentLoaded", e, !1),
            B.ie && B.win && (M.attachEvent("onreadystatechange", function() {
                "complete" == M.readyState && (M.detachEvent("onreadystatechange", arguments.callee),
                e())
            }),
            k == top && function() {
                if (!L) {
                    try {
                        M.documentElement.doScroll("left")
                    } catch (t) {
                        return void setTimeout(arguments.callee, 0)
                    }
                    e()
                }
            }()),
            B.wk && function() {
                L || (/loaded|complete/.test(M.readyState) ? e() : setTimeout(arguments.callee, 0))
            }(),
            i(e)))
        }(),
        function() {
            B.ie && B.win && window.attachEvent("onunload", function() {
                for (var e = $.length, t = 0; e > t; t++)
                    $[t][0].detachEvent($[t][1], $[t][2]);
                for (e = D.length,
                t = 0; e > t; t++)
                    h(D[t]);
                for (var i in B)
                    B[i] = null ;
                B = null ;
                for (var n in swfobject)
                    swfobject[n] = null ;
                swfobject = null
            })
        }(),
        {
            registerObject: function(e, t, i, n) {
                if (B.w3 && e && t) {
                    var r = {};
                    r.id = e,
                    r.swfVersion = t,
                    r.expressInstall = i,
                    r.callbackFn = n,
                    O[O.length] = r,
                    m(e, !1)
                } else
                    n && n({
                        success: !1,
                        id: e
                    })
            },
            getObjectById: function(e) {
                return B.w3 ? o(e) : void 0
            },
            embedSWF: function(e, i, n, r, o, l, c, h, u, p) {
                var g = {
                    success: !1,
                    id: i
                };
                B.w3 && !(B.wk && B.wk < 312) && e && i && n && r && o ? (m(i, !1),
                t(function() {
                    n += "",
                    r += "";
                    var t = {};
                    if (u && typeof u === C)
                        for (var v in u)
                            t[v] = u[v];
                    if (t.data = e,
                    t.width = n,
                    t.height = r,
                    v = {},
                    h && typeof h === C)
                        for (var y in h)
                            v[y] = h[y];
                    if (c && typeof c === C)
                        for (var b in c)
                            typeof v.flashvars != T ? v.flashvars += "&" + b + "=" + c[b] : v.flashvars = b + "=" + c[b];
                    if (f(o))
                        y = d(t, v, i),
                        t.id == i && m(i, !0),
                        g.success = !0,
                        g.ref = y;
                    else {
                        if (l && a())
                            return t.data = l,
                            void s(t, v, i, p);
                        m(i, !0)
                    }
                    p && p(g)
                })) : p && p(g)
            },
            switchOffAutoHideShow: function() {
                F = !1
            },
            ua: B,
            getFlashPlayerVersion: function() {
                return {
                    major: B.pv[0],
                    minor: B.pv[1],
                    release: B.pv[2]
                }
            },
            hasFlashPlayerVersion: f,
            createSWF: function(e, t, i) {
                return B.w3 ? d(e, t, i) : void 0
            },
            showExpressInstall: function(e, t, i, n) {
                B.w3 && a() && s(e, t, i, n)
            },
            removeSWF: function(e) {
                B.w3 && h(e)
            },
            createCSS: function(e, t, i, n) {
                B.w3 && g(e, t, i, n)
            },
            addDomLoadEvent: t,
            addLoadEvent: i,
            getQueryParamValue: function(e) {
                var t = M.location.search || M.location.hash;
                if (t) {
                    if (/\?/.test(t) && (t = t.split("?")[1]),
                    null == e)
                        return v(t);
                    for (var t = t.split("&"), i = 0; i < t.length; i++)
                        if (t[i].substring(0, t[i].indexOf("=")) == e)
                            return v(t[i].substring(t[i].indexOf("=") + 1))
                }
                return ""
            },
            expressInstallCallback: function() {
                if (I) {
                    var e = u(S);
                    e && y && (e.parentNode.replaceChild(y, e),
                    b && (m(b, !0),
                    B.ie && B.win) && (y.style.display = "block"),
                    w && w(x)),
                    I = !1
                }
            }
        }
    }();
var __hasProp = Object.prototype.hasOwnProperty;
window.SC.URI = function(e, t) {
    var i, n;
    return null == e && (e = ""),
    null == t && (t = {}),
    n = /^(?:([^:\/?\#]+):)?(?:\/\/([^\/?\#]*))?([^?\#]*)(?:\?([^\#]*))?(?:\#(.*))?/,
    i = /^(?:([^@]*)@)?([^:]*)(?::(\d*))?/,
    this.scheme = this.user = this.password = this.host = this.port = this.path = this.query = this.fragment = null ,
    this.toString = function() {
        var e;
        return e = "",
        this.isAbsolute() && (e += this.scheme,
        e += "://",
        null != this.user && (e += this.user + ":" + this.password + "@"),
        e += this.host,
        null != this.port && (e += ":" + this.port)),
        e += this.path,
        "" !== this.path || null == this.query && null == this.fragment || (e += "/"),
        null != this.query && (e += this.encodeParamsWithPrepend(this.query, "?")),
        null != this.fragment && (e += this.encodeParamsWithPrepend(this.fragment, "#")),
        e
    }
    ,
    this.isRelative = function() {
        return !this.isAbsolute()
    }
    ,
    this.isAbsolute = function() {
        return null != this.host
    }
    ,
    this.decodeParams = function(e) {
        var t, i, n, r, o;
        for (null == e && (e = ""),
        i = {},
        o = e.split("&"),
        e = 0,
        r = o.length; r > e; e++)
            t = o[e],
            "" !== t && (n = t.split("="),
            t = decodeURIComponent(n[0]),
            n = decodeURIComponent(n[1] || "").replace(/\+/g, " "),
            this.normalizeParams(i, t, n));
        return i
    }
    ,
    this.normalizeParams = function(e, t, i) {
        var n, r;
        return null == i && (i = NULL),
        n = t.match(/^[\[\]]*([^\[\]]+)\]*(.*)/),
        t = n[1] || "",
        n = n[2] || "",
        "" === n ? e[t] = i : "[]" === n ? (e[t] || (e[t] = []),
        e[t].push(i)) : (r = n.match(/^\[\]\[([^\[\]]+)\]$/) || (r = n.match(/^\[\](.+)$/))) ? (n = r[1],
        e[t] || (e[t] = []),
        r = e[t][e[t].length - 1],
        null != r && r.constructor === Object && null == r[n] ? this.normalizeParams(r, n, i) : e[t].push(this.normalizeParams({}, n, i))) : (e[t] || (e[t] = {}),
        e[t] = this.normalizeParams(e[t], n, i)),
        e
    }
    ,
    this.encodeParamsWithPrepend = function(e, t) {
        var i;
        return i = this.encodeParams(e),
        "" !== i ? t + i : ""
    }
    ,
    this.encodeParams = function(e) {
        var t, i, n, r, o;
        if (e.constructor === String)
            return e;
        for (e = this.flattenParams(e),
        i = [],
        r = 0,
        o = e.length; o > r; r++)
            n = e[r],
            t = n[0],
            n = n[1],
            i.push(null === n ? t : t + "=" + encodeURIComponent(n));
        return i.join("&")
    }
    ,
    this.flattenParams = function(e, t, i) {
        var n, r, o;
        if (null == t && (t = ""),
        null == i && (i = []),
        null == e)
            null != t && i.push([t, null ]);
        else if (e.constructor === Object)
            for (n in e)
                __hasProp.call(e, n) && (o = e[n],
                r = "" !== t ? t + "[" + n + "]" : n,
                this.flattenParams(o, r, i));
        else if (e.constructor === Array)
            for (n = 0,
            r = e.length; r > n; n++)
                o = e[n],
                this.flattenParams(o, t + "[]", i);
        else
            "" !== t && i.push([t, e]);
        return i
    }
    ,
    this.parse = function(e, t) {
        var r, o, a, s;
        return null == e && (e = ""),
        null == t && (t = {}),
        o = function(e) {
            return "" === e ? null : e
        }
        ,
        a = e.match(n),
        this.scheme = o(a[1]),
        r = a[2],
        null != r && (r = r.match(i),
        s = o(r[1]),
        null != s && (this.user = s.split(":")[0],
        this.password = s.split(":")[1]),
        this.host = o(r[2]),
        this.port = parseInt(r[3], 10) || null ),
        this.path = a[3],
        this.query = o(a[4]),
        t.decodeQuery && (this.query = this.decodeParams(this.query)),
        this.fragment = o(a[5]),
        t.decodeFragment ? this.fragment = this.decodeParams(this.fragment) : void 0
    }
    ,
    this.parse(e.toString(), t),
    this
}
,
function() {
    var e = function(e) {
        window.console && (window.console.error ? window.console.error(e) : window.console.log && window.console.log(e))
    }
      , t = function() {
        return window != window.top
    }
      , i = function(e) {
        return '<table style="background-color: #8CE; width: 100%; height: 100%;"><tr><td align="center"><div style="display: table-cell; vertical-align: middle;"><div style="">' + e + "</div></div></td></tr></table>"
    }
      , n = 'This page requires a browser that supports WebGL.<br/><a href="http://get.webgl.org">Click here to upgrade your browser.</a>'
      , r = 'It doesn\'t appear your computer can support WebGL.<br/><a href="http://get.webgl.org/troubleshooting/">Click here for more information.</a>'
      , o = function(e, t) {
        function o(t) {
            var n = e.parentNode;
            n && (n.innerHTML = i(t))
        }
        if (!window.WebGLRenderingContext)
            return o(n),
            null ;
        var s = a(e, t);
        return s || o(r),
        s
    }
      , a = function(e, t) {
        for (var i = ["webgl", "experimental-webgl"], n = null , r = 0; r < i.length; ++r) {
            try {
                n = e.getContext(i[r], t)
            } catch (o) {}
            if (n)
                break
        }
        return n
    }
      , s = function() {
        t() && (document.body.className = "iframe")
    }
      , l = function(e, i) {
        if (t())
            s(),
            e.width = e.clientWidth,
            e.height = e.clientHeight;
        else {
            var n = document.title
              , r = document.createElement("h1");
            r.innerText = n,
            document.body.insertBefore(r, document.body.children[0])
        }
        var a = o(e, i);
        return a
    }
      , c = function(t, i, n, r) {
        var o = r || e
          , a = t.createShader(n);
        t.shaderSource(a, i),
        t.compileShader(a);
        var s = t.getShaderParameter(a, t.COMPILE_STATUS);
        return s ? a : (lastError = t.getShaderInfoLog(a),
        o("*** Error compiling shader '" + a + "':" + lastError),
        t.deleteShader(a),
        null )
    }
      , d = function(t, i, n, r, o) {
        for (var a = o || e, s = t.createProgram(), l = 0; l < i.length; ++l)
            t.attachShader(s, i[l]);
        if (n)
            for (var l = 0; l < n.length; ++l)
                t.bindAttribLocation(s, r ? r[l] : l, n[l]);
        t.linkProgram(s);
        var c = t.getProgramParameter(s, t.LINK_STATUS);
        return c ? s : (lastError = t.getProgramInfoLog(s),
        a("Error in program linking:" + lastError),
        t.deleteProgram(s),
        null )
    }
      , h = function(e, t, i, n) {
        var r, o = "", a = document.getElementById(t);
        if (!a)
            throw "*** Error: unknown script element" + t;
        if (o = a.text,
        !i)
            if ("x-shader/x-vertex" == a.type)
                r = e.VERTEX_SHADER;
            else if ("x-shader/x-fragment" == a.type)
                r = e.FRAGMENT_SHADER;
            else if (r != e.VERTEX_SHADER && r != e.FRAGMENT_SHADER)
                throw "*** Error: unknown shader type";
        return c(e, o, i ? i : r, n)
    }
      , u = ["VERTEX_SHADER", "FRAGMENT_SHADER"]
      , p = function(e, t, i, n, r) {
        for (var o = [], a = 0; a < t.length; ++a)
            o.push(h(e, t[a], e[u[a]], r));
        return d(e, o, i, n, r)
    }
      , f = ["", "MOZ_", "OP_", "WEBKIT_"]
      , g = function(e, t) {
        for (var i = 0; i < f.length; ++i) {
            var n = f[i] + t
              , r = e.getExtension(n);
            if (r)
                return r
        }
    }
      , m = function(e) {
        (e.width != e.clientWidth || e.height != e.clientHeight) && (e.width = e.clientWidth,
        e.height = e.clientHeight)
    }
    ;
    this.createProgram = d,
    this.createProgramFromScripts = p,
    this.createShaderFromScriptElement = h,
    this.getWebGLContext = l,
    this.updateCSSIfInIFrame = s,
    this.getExtensionWithKnownPrefixes = g,
    this.resizeCanvasToDisplaySize = m,
    this.requestAnimFrame = function() {
        return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(e) {
            return window.setTimeout(e, 1e3 / 60)
        }
    }(),
    this.cancelRequestAnimFrame = function() {
        return window.cancelCancelRequestAnimationFrame || window.webkitCancelRequestAnimationFrame || window.mozCancelRequestAnimationFrame || window.oCancelRequestAnimationFrame || window.msCancelRequestAnimationFrame || window.clearTimeout
    }()
}(),
function(e) {
    e.fn.colorPicker = function() {
        return this.length > 0 && buildSelector(),
        this.each(function() {
            buildPicker(this)
        })
    }
    ;
    var t, i = !1;
    buildPicker = function(t) {
        control = e("<div class='color_picker'>&nbsp;</div>"),
        control.css("background-color", e(t).val()),
        control.bind(clicktype, toggleSelector),
        e(t).after(control),
        e(t).bind("change change-silent", function() {
            selectedValue = toHex(e(t).val());
            var i = e(t).next(".color_picker");
            "transparent" == selectedValue ? i.css("background-image", "url(https://d3clqjduf2gvxg.cloudfront.net/images/transparent.png)") : i.css("background-image", "none"),
            i.css("background-color", selectedValue)
        }),
        e(t).hide()
    }
    ,
    buildSelector = function() {
        selector = e("<div id='color_selector'></div>"),
        e.each(e.fn.colorPicker.defaultColors, function() {
            swatch = e("<div class='color_swatch'>&nbsp;</div>"),
            "transparent" == this ? (swatch.css("background-image", "url(https://d3clqjduf2gvxg.cloudfront.net/images/transparent.png)"),
            swatch.css("background-color", this)) : swatch.css("background-color", "#" + this),
            swatch.bind(clicktype, function(t) {
                changeColor(e(this).css("background-color")),
                t.stopPropagation()
            }),
            swatch.bind("mouseover", function() {
                e(this).css("border-color", "#598FEF"),
                e("input#color_value").val(toHex(e(this).css("background-color")))
            }),
            swatch.bind("mouseout", function() {
                e(this).css("border-color", "#000"),
                e("input#color_value").val(toHex(e(t).css("background-color")))
            }),
            swatch.appendTo(selector)
        }),
        hex_field = e("<label for='color_value'>Hex</label><input type='text' size='8' id='color_value'/>"),
        hex_field.bind("keydown", function(t) {
            13 == t.keyCode && changeColor(e(this).val()),
            27 == t.keyCode && toggleSelector()
        }),
        e("<div id='color_custom'></div>").append(hex_field).appendTo(selector),
        selector.on("mousedown mouseup mouseover touchstart touchmove touchend", function(e) {
            e.stopPropagation()
        }),
        e("body").append(selector),
        selector.hide()
    }
    ,
    checkMouse = function(i) {
        var n = "div#color_selector"
          , r = e(i.target).parents(n).length;
        return i.target == e(n)[0] || i.target == t || r > 0 ? !1 : (console.log("hide colorpicker"),
        void hideSelector())
    }
    ,
    hideSelector = function() {
        var t = e("div#color_selector");
        e(document).unbind(clicktype, checkMouse),
        t.hide(),
        i = !1
    }
    ,
    showSelector = function() {
        var n = e("div#color_selector")
          , r = e(t).prev("input")
          , o = r.attr("data-offsetleft") ? parseInt(r.attr("data-offsetleft"), 10) : 0
          , a = r.attr("data-offsettop") ? parseInt(r.attr("data-offsettop"), 10) : 0
          , s = e(t).offset().left - n.width() + 30 + o;
        30 > s && (s = 30);
        var l = e(t).offset().top + e(t).outerHeight() + a;
        l + 265 > e(window).height() && (l = e(t).offset().top - 265 + a),
        n.css({
            top: l,
            left: s
        }),
        hexColor = e(t).prev("input").val(),
        e("input#color_value").val(hexColor),
        n.show(),
        e(document).bind(clicktype, checkMouse),
        i = !0,
        n.bind(clicktype, function(e) {
            e.stopPropagation()
        }),
        n.bind("touchstart", function() {
            return !1
        })
    }
    ,
    toggleSelector = function(e) {
        t = this,
        i ? hideSelector() : showSelector(),
        e.stopPropagation()
    }
    ,
    changeColor = function(i) {
        (selectedValue = toHex(i)) && ("transparent" == selectedValue ? e(t).css("background-image", "url(https://d3clqjduf2gvxg.cloudfront.net/images/transparent.png)") : e(t).css("background-image", "none"),
        e(t).css("background-color", selectedValue),
        e(t).prev("input").val(selectedValue).change(),
        hideSelector())
    }
    ,
    toHex = function(e) {
        if ("transparent" == e || "rgba(0, 0, 0, 0)" == e.toString())
            return "transparent";
        if (e.match(/[0-9a-fA-F]{3}$/) || e.match(/[0-9a-fA-F]{6}$/))
            e = "#" == e.charAt(0) ? e : "#" + e;
        else if (e.match(/^rgb\(([0-9]|[1-9][0-9]|[1][0-9]{2}|[2][0-4][0-9]|[2][5][0-5]),[ ]{0,1}([0-9]|[1-9][0-9]|[1][0-9]{2}|[2][0-4][0-9]|[2][5][0-5]),[ ]{0,1}([0-9]|[1-9][0-9]|[1][0-9]{2}|[2][0-4][0-9]|[2][5][0-5])\)$/)) {
            var t = [parseInt(RegExp.$1), parseInt(RegExp.$2), parseInt(RegExp.$3)]
              , i = function(e) {
                if (e.length < 2)
                    for (var t = 0, i = 2 - e.length; i > t; t++)
                        e = "0" + e;
                return e
            }
            ;
            if (3 == t.length) {
                var n = i(t[0].toString(16))
                  , r = i(t[1].toString(16))
                  , o = i(t[2].toString(16));
                e = "#" + n + r + o
            }
        } else
            e = !1;
        return e
    }
    ,
    e.fn.colorPicker.addColors = function(t) {
        e.fn.colorPicker.defaultColors = e.fn.colorPicker.defaultColors.concat(t)
    }
    ,
    e.fn.colorPicker.hide = function() {
        hideSelector()
    }
    ,
    e.fn.colorPicker.defaultColors = ["000000", "434343", "666666", "c0c0c0", "d9d9d9", "ffffff", "980000", "ff0000", "ff9900", "ffff00", "00ff00", "00ffff", "4a86e8", "0000ff", "9900ff", "ff00ff", "e6b8af", "f4cccc", "fce5cd", "fff2cc", "d9ead3", "d0e0e3", "c9daf8", "cfe2f3", "d9d2e9", "ead1dc", "dd7e6b", "ea9999", "f9cb9c", "ffe599", "b6d7a8", "a2c4c9", "a4c2f4", "9fc5e8", "b4a7d6", "d5a6bd", "cc4125", "e06666", "f6b26b", "ffd966", "93c47d", "76a5af", "6d9eeb", "6fa8dc", "8e7cc3", "c27ba0", "a61c00", "cc0000", "e69138", "f1c232", "6aa84f", "45818e", "3c78d8", "3d85c6", "674ea7", "a64d79", "5b0f00", "660000", "783f04", "7f6000", "274e13", "0c343d", "1c4587", "073763", "20124d", "transparent"]
}(jQuery),
function(e) {
    function t() {
        s = !1
    }
    function i() {
        c && (window.clearTimeout(h),
        c = !1,
        d = null )
    }
    function n(e) {
        c || (c = !0,
        d = e.changedTouches[0],
        h = window.setTimeout("doRightClick();", 800))
    }
    function r(e) {
        var i = e.changedTouches
          , r = i[0]
          , o = "mouseover"
          , c = document.createEvent("MouseEvent");
        c.initMouseEvent(o, !0, !0, window, 1, r.screenX, r.screenY, r.clientX, r.clientY, !1, !1, !1, !1, 0, null ),
        r.target.dispatchEvent(c),
        o = "mousedown",
        c = document.createEvent("MouseEvent"),
        c.initMouseEvent(o, !0, !0, window, 1, r.screenX, r.screenY, r.clientX, r.clientY, !1, !1, !1, !1, 0, null ),
        r.target.dispatchEvent(c),
        s ? (window.clearTimeout(l),
        r.target == a ? (a = null ,
        s = !1,
        o = "click",
        c = document.createEvent("MouseEvent"),
        c.initMouseEvent(o, !0, !0, window, 1, r.screenX, r.screenY, r.clientX, r.clientY, !1, !1, !1, !1, 0, null ),
        r.target.dispatchEvent(c),
        o = "dblclick",
        c = document.createEvent("MouseEvent"),
        c.initMouseEvent(o, !0, !0, window, 1, r.screenX, r.screenY, r.clientX, r.clientY, !1, !1, !1, !1, 0, null ),
        r.target.dispatchEvent(c)) : (a = r.target,
        s = !0,
        l = window.setTimeout(function() {
            t()
        }, 600),
        n(e))) : (a = r.target,
        s = !0,
        l = window.setTimeout(function() {
            t()
        }, 600),
        n(e))
    }
    function o(t) {
        var n = ""
          , o = 0;
        if (!(t.touches.length > 1)) {
            switch (t.type) {
            case "touchstart":
                if (e(t.changedTouches[0].target).is("select"))
                    return;
                return r(t),
                t.preventDefault(),
                !1;
            case "touchmove":
                i(),
                n = "mousemove",
                t.preventDefault();
                break;
            case "touchend":
                if (u)
                    return u = !1,
                    t.preventDefault(),
                    !1;
                i(),
                n = "mouseup";
                break;
            default:
                return
            }
            var l = t.changedTouches
              , c = l[0]
              , d = document.createEvent("MouseEvent");
            d.initMouseEvent(n, !0, !0, window, 1, c.screenX, c.screenY, c.clientX, c.clientY, !1, !1, !1, !1, o, null ),
            c.target.dispatchEvent(d),
            "mouseup" == n && s && c.target == a && (d = document.createEvent("MouseEvent"),
            d.initMouseEvent("click", !0, !0, window, 1, c.screenX, c.screenY, c.clientX, c.clientY, !1, !1, !1, !1, o, null ),
            c.target.dispatchEvent(d))
        }
    }
    var a = null
      , s = !1
      , l = null
      , c = !1
      , d = null
      , h = null
      , u = !1;
    e.extend(e.support, {
        touch: "ontouchend"in document
    }),
    e.fn.addTouch = function() {
        e.support.touch && this.each(function(e, t) {
            t.addEventListener("touchstart", o, !1),
            t.addEventListener("touchmove", o, !1),
            t.addEventListener("touchend", o, !1),
            t.addEventListener("touchcancel", o, !1)
        })
    }
    ,
    e.fn.addTouchLive = function(t) {
        e.support.touch && this.each(function(i, n) {
            e(n).on("touchstart", t, function(e) {
                o(e.originalEvent)
            }),
            e(n).on("touchmove", t, function(e) {
                o(e.originalEvent)
            }),
            e(n).on("touchend", t, function(e) {
                o(e.originalEvent)
            }),
            e(n).on("touchcancel", t, function(e) {
                o(e.originalEvent)
            })
        })
    }
}(jQuery);
var isIE = -1 != navigator.appVersion.indexOf("MSIE") ? !0 : !1
  , isWin = -1 != navigator.appVersion.toLowerCase().indexOf("win") ? !0 : !1
  , isOpera = -1 != navigator.userAgent.indexOf("Opera") ? !0 : !1;
!function(e) {
    function t(e, t) {
        var i = document.createElement("canvas");
        return i.width = e,
        i.height = t,
        {
            canvas: i,
            ctx: i.getContext("2d"),
            w: e,
            h: t
        }
    }
    function i(e, t, i) {
        var n = t[0];
        e.moveTo(n.x, n.y);
        for (var r = 1; r < t.length; ++r)
            n = t[r],
            e.lineTo(n.x, n.y);
        !i && t.length > 2 && (n = t[0],
        e.lineTo(n.x, n.y))
    }
    function n(e) {
        for (var t = 1; t < arguments.length; ++t) {
            var i = arguments[t];
            if (i)
                for (var n in i)
                    void 0 !== i[n] && (e[n] = i[n])
        }
    }
    function r() {}
    function o(e, t) {
        var i = e;
        r.prototype = t.prototype,
        e.prototype = new r,
        e.prototype.constructor = i,
        e.prototype.__super = t.prototype
    }
    var a = function(e, t) {
        return !(t.left > e.right || t.right < e.left || t.top > e.bottom || t.bottom < e.top)
    }
    ;
    e.Vec2 = function(e, t) {
        this.x = e || 0,
        this.y = t || 0
    }
    ,
    e.Vec2.prototype.copy = function() {
        return new e.Vec2(this.x,this.y)
    }
    ,
    e.Vec2.prototype.dot = function(e) {
        return e.x * this.x + e.y * this.y
    }
    ,
    e.Vec2.prototype.sub = function(t) {
        return new e.Vec2(this.x - t.x,this.y - t.y)
    }
    ,
    e.Vec2.prototype.add = function(t) {
        return new e.Vec2(this.x + t.x,this.y + t.y)
    }
    ,
    e.Vec2.prototype.mul = function(t) {
        return new e.Vec2(this.x * t,this.y * t)
    }
    ,
    e.Vec2.prototype.inv = function() {
        return this.mul(-1)
    }
    ,
    e.Vec2.prototype.dist2 = function(e) {
        var t = this.x - e.x
          , i = this.y - e.y;
        return t * t + i * i
    }
    ,
    e.Vec2.prototype.normalize = function() {
        var t = Math.sqrt(this.length2());
        return new e.Vec2(this.x / t,this.y / t)
    }
    ,
    e.Vec2.prototype.length2 = function() {
        return this.x * this.x + this.y * this.y
    }
    ,
    e.Vec2.prototype.toString = function() {
        return this.x + "," + this.y
    }
    ,
    e.Vec2.prototype.inBound = function(e, t) {
        return e.x < this.x && this.x < t.x && e.y < this.y && this.y < t.y
    }
    ,
    e.Light = function(t) {
        n(this, e.Light.defaults, t)
    }
    ,
    e.Light.defaults = {
        position: new e.Vec2,
        distance: 100,
        diffuse: .8
    },
    e.Light.prototype.render = function() {}
    ,
    e.Light.prototype.bounds = function() {
        return {
            topleft: new e.Vec2(this.position.x - this.distance,this.position.y - this.distance),
            bottomright: new e.Vec2(this.position.x + this.distance,this.position.y + this.distance)
        }
    }
    ,
    e.Light.prototype.center = function() {
        return new e.Vec2(this.distance,this.distance)
    }
    ,
    e.Light.prototype.forEachSample = function(e) {
        e(this.position)
    }
    ,
    e.OpaqueObject = function(t) {
        n(this, e.OpaqueObject.defaults, t)
    }
    ,
    e.OpaqueObject.defaults = {
        diffuse: .8
    },
    e.OpaqueObject.prototype.cast = function() {}
    ,
    e.OpaqueObject.prototype.path = function() {}
    ,
    e.OpaqueObject.prototype.bounds = function() {
        return {
            topleft: new e.Vec2,
            bottomright: new e.Vec2
        }
    }
    ,
    e.OpaqueObject.prototype.contains = function() {
        return !1
    }
    ,
    e.Lamp = function(t) {
        n(this, e.Light.defaults, e.Lamp.defaults, t)
    }
    ,
    o(e.Lamp, e.Light),
    e.Lamp.defaults = {
        color: "rgba(252,236,0,0.50)",
        radius: 0,
        samples: 1,
        angle: 0,
        roughness: 0
    },
    e.Lamp.prototype._getHashCache = function() {
        return [this.color, this.distance, this.diffuse, this.angle, this.roughness].toString()
    }
    ,
    e.Lamp.prototype.center = function() {
        return new e.Vec2((1 - Math.cos(this.angle) * this.roughness) * this.distance,(1 + Math.sin(this.angle) * this.roughness) * this.distance)
    }
    ,
    e.Lamp.prototype.castlight = function(e, t) {
        var i = Math.round(this.distance);
        1 > i && (i = 1);
        var n = 2 * i;
        t.save(),
        t.translate(this.position.x - i, this.position.y - i);
        var r = t.createRadialGradient(Math.floor(e.x), Math.floor(e.y), 0, i, i, i);
        r.addColorStop(Math.min(1, this.radius / this.distance), "rgb(255,255,255)"),
        r.addColorStop(Math.min(1, this.radius / this.distance + .04), "rgba(255,255,255, 0.50)"),
        r.addColorStop(1, "rgba(255,255,255,0)"),
        t.fillStyle = r,
        t.globalCompositeOperation = "destination-out",
        t.fillRect(0, 0, n, n),
        t.restore()
    }
    ,
    e.Lamp.prototype.render = function(e) {
        var t = (this.center(),
        this.cachedimg);
        e.drawImage(t, Math.round(this.position.x - t.width / 2 - d20.engine.currentCanvasOffset[0]), Math.round(this.position.y - t.height / 2 - d20.engine.currentCanvasOffset[1]))
    }
    ,
    e.Lamp.prototype.forEachSample = function(t) {
        for (var i = 0; i < this.samples; ++i) {
            var n = i * s
              , r = Math.sqrt(i / this.samples) * this.radius
              , o = new e.Vec2(Math.cos(n) * r,Math.sin(n) * r);
            t(this.position.add(o))
        }
    }
    ,
    e.PolygonObject = function(t) {
        n(this, e.OpaqueObject.defaults, e.PolygonObject.defaults, t)
    }
    ,
    o(e.PolygonObject, e.OpaqueObject),
    e.PolygonObject.defaults = {
        points: []
    },
    e.PolygonObject.prototype.bounds = function() {
        for (var e = this.points[0].copy(), t = e.copy(), i = 1; i < this.points.length; ++i) {
            var n = this.points[i];
            n.x > t.x && (t.x = n.x),
            n.y > t.y && (t.y = n.y),
            n.x < e.x && (e.x = n.x),
            n.y < e.y && (e.y = n.y)
        }
        return {
            topleft: e,
            bottomright: t
        }
    }
    ,
    e.PolygonObject.prototype.contains = function(e) {
        var t, i = this.points, n = i.length - 1, r = e.x, o = e.y, a = !1;
        for (t = 0; t < i.length; t++)
            (i[t].y < o && i[n].y >= o || i[n].y < o && i[t].y >= o) && (i[t].x <= r || i[n].x <= r) && i[t].x + (o - i[t].y) / (i[n].y - i[t].y) * (i[n].x - i[t].x) < r && (a = !a),
            n = t;
        return a
    }
    ,
    e.PolygonObject.prototype.path = function(e) {
        i(e, this.points)
    }
    ,
    e.PolygonObject.prototype.cast = function(e, t, i, n) {
        var r = this.bounds();
        if (!n && !a({
            top: r.topleft.y,
            bottom: r.bottomright.y,
            left: r.topleft.x,
            right: r.bottomright.x
        }, {
            top: t.topleft.y,
            bottom: t.bottomright.y,
            left: t.topleft.x,
            right: t.bottomright.x
        }))
            return !1;
        var o = this.contains(e)
          , s = i
          , l = (this.points.length,
        []);
        return this._forEachVisibleEdges(e, t, function(t, i, n, r, a, c) {
            var d, h = n.inv().dot(a) / a.length2();
            if (0 > h)
                d = t;
            else if (h > 1)
                d = i;
            else {
                if (0 == c && o)
                    return;
                d = t.add(a.mul(h))
            }
            var u = d.sub(e);
            u = u.normalize().mul(s),
            n = n.normalize().mul(s),
            r = r.normalize().mul(s);
            var p = t.add(u)
              , f = i.add(u)
              , g = t.add(n)
              , m = i.add(r);
            l.push([t, i, m, f, p, g])
        }),
        l
    }
    ,
    e.PolygonObject.prototype._forEachVisibleEdges = function(t, i, n) {
        for (var r, o = this.points[this.points.length - 1], a = 0; a < this.points.length; ++a,
        o = r) {
            r = this.points[a];
            var s = o.sub(t)
              , l = r.sub(t)
              , c = r.sub(o)
              , d = new e.Vec2(c.y,-c.x);
            d.dot(s) < 0 && n(o, r, s, l, c, a)
        }
    }
    ,
    e.Lighting = function(t) {
        n(this, e.Lighting.defaults, t)
    }
    ,
    e.Lighting.defaults = {
        light: new e.Light,
        objects: []
    },
    e.Lighting.prototype.createCache = function(e, i) {
        this._cache = t(e, i),
        this._castcache = t(e, i)
    }
    ,
    e.Lighting.prototype.castToCtx = function(e, t) {
        for (var n = 0; n < t.length; n++)
            t[n].length && (e.beginPath(),
            i(e, t[n][0]),
            e.fill(),
            e.stroke())
    }
    ,
    e.Lighting.prototype.cast = function() {
        var e = this.light
          , t = (e.samples,
        e.bounds())
          , i = this.objects
          , n = [];
        return e.forEachSample(function(r) {
            i.forEach(function(i) {
                n.push(i.cast(r, t, e.distance_shadows, e.infinite))
            })
        }),
        n
    }
    ,
    e.Lighting.prototype.lightInObject = function() {
        for (var e = 0; e < this.objects.length; ++e)
            if (this.objects[e].contains(this.light.position))
                return !0;
        return !1
    }
    ,
    e.Lighting.prototype.compute = function() {
        this.light;
        return this.cast()
    }
    ;
    {
        var s = Math.PI * (3 - Math.sqrt(5));
        2 * Math.PI
    }
    e.createCanvasAnd2dContext = t,
    e.path = i;
    e.getRGBA = function() {
        var e = document.createElement("canvas");
        e.width = e.height = 1;
        var t = e.getContext("2d");
        return function(e, i) {
            t.clearRect(0, 0, 1, 1),
            t.fillStyle = e,
            t.fillRect(0, 0, 1, 1);
            var n = t.getImageData(0, 0, 1, 1).data;
            return "rgba(" + [n[0], n[1], n[2], i] + ")"
        }
    }(),
    e.extractColorAndAlpha = function() {
        function e(e) {
            var t = e.toString(16);
            return 1 == t.length && (t = "0" + t),
            t
        }
        var t = document.createElement("canvas");
        t.width = t.height = 1;
        var i = t.getContext("2d");
        return function(t) {
            i.clearRect(0, 0, 1, 1),
            i.fillStyle = t,
            i.fillRect(0, 0, 1, 1);
            var n = i.getImageData(0, 0, 1, 1).data;
            return {
                color: "#" + e(n[0]) + e(n[1]) + e(n[2]),
                alpha: Math.round(1e3 * n[3] / 255) / 1e3
            }
        }
    }();
    illuminated.extend = n,
    e.inherit = o
}(window.illuminated = {}),
function(e, t) {
    "use strict";
    function i(e, t) {
        var i = e.x - t.x
          , n = e.y - t.y;
        return i * i + n * n
    }
    function n(e, t, i) {
        var n, r = t.x, o = t.y, a = i.x - r, s = i.y - o;
        return (0 !== a || 0 !== s) && (n = ((e.x - r) * a + (e.y - o) * s) / (a * a + s * s),
        n > 1 ? (r = i.x,
        o = i.y) : n > 0 && (r += a * n,
        o += s * n)),
        a = e.x - r,
        s = e.y - o,
        a * a + s * s
    }
    function r(e, t) {
        var n, r, o = e.length, a = e[0], s = [a];
        for (n = 1; o > n; n++)
            r = e[n],
            r.ignoreme ? s.push(r) : i(r, a) > t && (s.push(r),
            a = r);
        return a !== r && s.push(r),
        s
    }
    function o(e, i) {
        var r, o, a, s, l = e.length, c = typeof Uint8Array != t + "" ? Uint8Array : Array, d = new c(l), h = 0, u = l - 1, p = [], f = [], g = [];
        for (d[h] = d[u] = 1; u; ) {
            for (o = 0,
            r = h + 1; u > r; r++)
                a = n(e[r], e[h], e[u]),
                a > o && (s = r,
                o = a);
            o > i && (d[s] = 1,
            p.push(h),
            f.push(s),
            p.push(s),
            f.push(u)),
            h = p.pop(),
            u = f.pop()
        }
        for (r = 0; l > r; r++)
            d[r] && g.push(e[r]);
        return g
    }
    var a = typeof exports != t + "" ? exports : e;
    a.simplify = function(e, i, n) {
        var a = i !== t ? i * i : 1;
        return n || (e = r(e, a)),
        e = o(e, a)
    }
}(this);
var Stats = function() {
    var e = Date.now()
      , t = e
      , i = 0
      , n = 1e3
      , r = 0
      , o = 0
      , a = 1e3
      , s = 0
      , l = 0
      , c = 0
      , d = document.createElement("div");
    d.id = "stats",
    d.addEventListener("mousedown", function(e) {
        e.preventDefault(),
        y(++c % 2)
    }, !1),
    d.style.cssText = "width:80px;opacity:0.9;cursor:pointer";
    var h = document.createElement("div");
    h.id = "fps",
    h.style.cssText = "padding:0 0 3px 3px;text-align:left;background-color:#002",
    d.appendChild(h);
    var u = document.createElement("div");
    u.id = "fpsText",
    u.style.cssText = "color:#0ff;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px",
    u.innerHTML = "FPS",
    h.appendChild(u);
    var p = document.createElement("div");
    for (p.id = "fpsGraph",
    p.style.cssText = "position:relative;width:74px;height:30px;background-color:#0ff",
    h.appendChild(p); 74 > p.children.length; ) {
        var f = document.createElement("span");
        f.style.cssText = "width:1px;height:30px;float:left;background-color:#113",
        p.appendChild(f)
    }
    var g = document.createElement("div");
    g.id = "ms",
    g.style.cssText = "padding:0 0 3px 3px;text-align:left;background-color:#020;display:none",
    d.appendChild(g);
    var m = document.createElement("div");
    m.id = "msText",
    m.style.cssText = "color:#0f0;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px",
    m.innerHTML = "MS",
    g.appendChild(m);
    var v = document.createElement("div");
    for (v.id = "msGraph",
    v.style.cssText = "position:relative;width:74px;height:30px;background-color:#0f0",
    g.appendChild(v); 74 > v.children.length; )
        f = document.createElement("span"),
        f.style.cssText = "width:1px;height:30px;float:left;background-color:#131",
        v.appendChild(f);
    var y = function(e) {
        switch (c = e) {
        case 0:
            h.style.display = "block",
            g.style.display = "none";
            break;
        case 1:
            h.style.display = "none",
            g.style.display = "block"
        }
    }
    ;
    return {
        domElement: d,
        setMode: y,
        begin: function() {
            e = Date.now()
        },
        end: function() {
            var c = Date.now();
            i = c - e,
            n = Math.min(n, i),
            r = Math.max(r, i),
            m.textContent = i + " MS (" + n + "-" + r + ")";
            var d = Math.min(30, 30 - 30 * (i / 200));
            return v.appendChild(v.firstChild).style.height = d + "px",
            l++,
            c > t + 1e3 && (o = Math.round(1e3 * l / (c - t)),
            a = Math.min(a, o),
            s = Math.max(s, o),
            u.textContent = o + " FPS (" + a + "-" + s + ")",
            d = Math.min(30, 30 - 30 * (o / 100)),
            p.appendChild(p.firstChild).style.height = d + "px",
            t = c,
            l = 0),
            c
        },
        update: function() {
            e = this.end()
        }
    }
}
;
!function(e, t, i, n, r, o, a) {
    function s(e) {
        var t, n, r = this, o = e.length, a = 0, s = r.i = r.j = r.m = 0;
        for (r.S = [],
        r.c = [],
        o || (e = [o++]); i > a; )
            r.S[a] = a++;
        for (a = 0; i > a; a++)
            t = r.S[a],
            s = d(s + t + e[a % o]),
            n = r.S[s],
            r.S[a] = n,
            r.S[s] = t;
        r.g = function(e) {
            var t = r.S
              , n = d(r.i + 1)
              , o = t[n]
              , a = d(r.j + o)
              , s = t[a];
            t[n] = s,
            t[a] = o;
            for (var l = t[d(o + s)]; --e; )
                n = d(n + 1),
                o = t[n],
                a = d(a + o),
                s = t[a],
                t[n] = s,
                t[a] = o,
                l = l * i + t[d(o + s)];
            return r.i = n,
            r.j = a,
            l
        }
        ,
        r.g(i)
    }
    function l(e, t, i, n, r) {
        if (i = [],
        r = typeof e,
        t && "object" == r)
            for (n in e)
                if (n.indexOf("S") < 5)
                    try {
                        i.push(l(e[n], t - 1))
                    } catch (o) {}
        return i.length ? i : e + ("string" != r ? "\x00" : "")
    }
    function c(e, t, i, n) {
        for (e += "",
        i = 0,
        n = 0; n < e.length; n++)
            t[d(n)] = d((i ^= 19 * t[d(n)]) + e.charCodeAt(n));
        e = "";
        for (n in t)
            e += String.fromCharCode(t[n]);
        return e
    }
    function d(e) {
        return e & i - 1
    }
    t.seedrandom = function(d, h) {
        var u, p = [];
        d = c(l(h ? [d, e] : arguments.length ? d : [(new Date).getTime(), e, window], 3), p),
        u = new s(p),
        c(u.S, e),
        t.random = function() {
            for (var e = u.g(n), t = a, s = 0; r > e; )
                e = (e + s) * i,
                t *= i,
                s = u.g(1);
            for (; e >= o; )
                e /= 2,
                t /= 2,
                s >>>= 1;
            return (e + s) / t
        }
        ;
        var f = function(e) {
            if (0 > e)
                throw "n must be non-negative";
            var t = Math.max(Math.ceil(Math.log(e) / Math.log(i)), 1);
            if (t > n)
                throw "n cannot be greater than " + i + "^" + n;
            var r, o = Math.pow(i, t), a = e * Math.floor(o / e), s = 0;
            do
                r = u.g(t),
                s++;
            while (r >= a && 100 > s);return r % e
        }
        ;
        return Math.randomInt = f,
        f
    }
    ,
    a = t.pow(i, n),
    r = t.pow(2, r),
    o = 2 * r,
    c(t.random(), e)
}([], Math, 256, 6, 52),
function(e) {
    var t = e.ui.position
      , i = function(t, i) {
        this.opts = e.extend({}, this.opts, i),
        this.$trigger = e(t.get(0)),
        this.$popover = e(this.opts.popover || this.$trigger.attr("href")),
        this.$popover = e(this.$popover.get(0)),
        this.$popover.hasClass("popover-before-after-applied") || this.$popover.addClass("popover-before-after-applied").prepend('<span role="presentation" class="before"/>').append('<span role="presentation" class="after"/>').hide()
    }
    ;
    i.prototype = {
        timeout: null ,
        $win: e(window),
        opts: {
            my: "center bottom",
            at: "center top",
            offset: "0 0",
            collision: "flop flop",
            popover: null ,
            thereCanBeOnlyOne: !0
        },
        flop: {
            left: function(i, n) {
                var r = n.collisionPosition
                  , o = e(this)
                  , a = t.flip.left(i, n);
                return void 0 !== i.left && o.toggleClass("flopped-x", r.left !== i.left),
                a
            },
            top: function(i, n) {
                var r = n.collisionPosition
                  , o = e(this)
                  , a = t.flip.top(i, n);
                return void 0 !== i.top && o.toggleClass("flopped-y", r.top !== i.top),
                a
            }
        },
        positionPopover: function(t, i) {
            var n = e(this);
            if (i) {
                var r = n.data("opener")
                  , o = e(r).data("popover");
                if (o && o.opts && o.opts.my) {
                    var a = o.opts.my.split(" ");
                    a.length > 0 && (n.toggleClass("flopped-x", i.horizontal !== a[0]),
                    n.toggleClass("flopped-y", i.vertical !== (a.length > 1 ? a[1] : a[0])))
                }
            }
            n.css(t)
        },
        bindEvents: function() {
            this.$trigger.click(e.proxy(function(t) {
                this.popoverIsOpen() ? this.hidePopover(t) : this.showPopover(t),
                this.opts.thereCanBeOnlyOne && e("body").trigger("popover-hide-all")
            }, this)),
            e("body").click(e.proxy(function(t) {
                this.popoverIsOpen() && (e(this.$popover).has(e(t.target)).size() || e(this.$popover).filter(e(t.target)).size() || this.hide())
            }, this)).bind("popover-hide-all", e.proxy(function() {
                this.popoverIsOpen() && !this.currentTrigger() && this.hide(!0)
            }, this)),
            this.$win.resize(e.proxy(this.pinToTargetDebounced, this))
        },
        popoverIsOpen: function() {
            var e = this.$trigger.length == this.$trigger.filter(this.$popover.data("opener")).length;
            return this.$popover.is(":visible") && e
        },
        currentTrigger: function() {
            return this.$trigger.length == this.$trigger.filter(e.fn.popover.lastTrigger).length
        },
        show: function() {
            e.fn.popover.lastTrigger = this.$trigger,
            this.$popover.fadeIn(100, e.proxy(function() {
                this.$trigger.trigger("popover-show-animation-complete")
            }, this)).data("opener", this.$trigger),
            this.pinToTarget(),
            this.$trigger.trigger("popover-show")
        },
        hide: function(t) {
            var i = e.proxy(function() {
                this.$trigger.trigger("popover-hide-animation-complete")
            }, this);
            t ? this.$popover.hide(0, i) : this.$popover.fadeOut("fast", i),
            this.$trigger.trigger("popover-hide")
        },
        toggle: function(e) {
            this.popoverIsOpen() ? this.hide(e) : this.show()
        },
        showPopover: function(e) {
            e.preventDefault(),
            e.stopPropagation(),
            this.show(e)
        },
        hidePopover: function(e) {
            e.preventDefault(),
            e.stopPropagation(),
            this.hide()
        },
        pinToTarget: function() {
            if (this.popoverIsOpen()) {
                var i = this.$popover
                  , n = e.extend({
                    of: this.$trigger,
                    using: this.positionPopover
                }, this.opts)
                  , r = {
                    left: e.proxy(this.flop.left, this.$popover),
                    top: e.proxy(this.flop.top, this.$popover)
                };
                t.flop = r,
                i.position(n),
                t.flop = void 0
            }
        },
        pinToTargetDebounced: function() {
            clearTimeout(this.timeout),
            this.timeout = setTimeout(e.proxy(this.pinToTarget, this), 50)
        }
    };
    var n = e.fn;
    n.popover = function(t) {
        var i = n.popover.Popover;
        return this.each(function() {
            var n = e(this)
              , r = new i(n,t);
            r.bindEvents(),
            n.data("popover", r)
        }),
        this
    }
    ,
    n.popover.lastTrigger = null ,
    n.popover.Popover = i
}(jQuery),
function(e) {
    "use strict";
    e.fn.inputClear = function(t) {
        var i = e.extend({
            exclude: ".no-clear"
        }, t);
        return this.each(function() {
            e(this).css("padding-right", "20px"),
            e(this).not(i.exclude).unbind("clear-focus").bind("clear-focus", function() {
                if (!e(this).data("clear-button")) {
                    var t = e("<a class='clear-text' style='cursor:pointer;color:#888; font-size: 1.1em;'><i class='pictos'>D</i></a>");
                    e(t).data("text-box", this),
                    e(t).mouseover(function() {
                        e(this).addClass("over")
                    }).mouseleave(function() {
                        e(this).removeClass("over")
                    }),
                    e(this).data("clear-button", t),
                    e(t).css({
                        position: "absolute",
                        left: e(this).position().right,
                        top: e(this).position().top,
                        margin: "8px 0px 0px -20px"
                    }),
                    e(this).after(t)
                }
            }).unbind("clear-blur").bind("clear-blur", function(t) {
                var i = e(this).data("clear-button");
                if (i && e(i).hasClass("over")) {
                    e(i).removeClass("over"),
                    e(i).hide().remove(),
                    e(this).val(""),
                    e(this).trigger("keyup"),
                    e(this).removeData("clear-button");
                    var n = this;
                    return t.stopPropagation(),
                    t.stopImmediatePropagation(),
                    setTimeout(e.proxy(function() {
                        e(this).trigger("focus")
                    }, n), 50),
                    !1
                }
                i && !e(i).hasClass("over") && (e(this).removeData("clear-button"),
                e(i).remove())
            }),
            e(this).on("focus", function() {
                e(this).trigger("clear-focus")
            }).on("blur", function() {
                e(this).trigger("clear-blur")
            })
        })
    }
}(jQuery),
function() {
    function e(e, t, i) {
        return e.addEventListener ? void e.addEventListener(t, i, !1) : void e.attachEvent("on" + t, i)
    }
    function t(e) {
        if ("keypress" == e.type) {
            var t = String.fromCharCode(e.which);
            return e.shiftKey || (t = t.toLowerCase()),
            t
        }
        return y[e.which] ? y[e.which] : b[e.which] ? b[e.which] : String.fromCharCode(e.which).toLowerCase()
    }
    function i(e, t) {
        return e.sort().join(",") === t.sort().join(",")
    }
    function n(e, t) {
        e = e || {};
        var i, n = !1;
        for (i in T)
            e[i] && T[i] > t ? n = !0 : T[i] = 0;
        n || (R = !1)
    }
    function r(e, t, n, r, o) {
        var a, s, l = [], d = n.type;
        if (!E[e])
            return [];
        for ("keyup" == d && c(e) && (t = [e]),
        a = 0; a < E[e].length; ++a)
            s = E[e][a],
            s.seq && T[s.seq] != s.level || d == s.action && ("keypress" == d && !n.metaKey && !n.ctrlKey || i(t, s.modifiers)) && (r && s.combo == o && E[e].splice(a, 1),
            l.push(s));
        return l
    }
    function o(e) {
        var t = [];
        return e.shiftKey && t.push("shift"),
        e.altKey && t.push("alt"),
        e.ctrlKey && t.push("ctrl"),
        e.metaKey && t.push("meta"),
        t
    }
    function a(e, t, i) {
        k.stopCallback(t, t.target || t.srcElement, i) || e(t, i) === !1 && (t.preventDefault && t.preventDefault(),
        t.stopPropagation && t.stopPropagation(),
        t.returnValue = !1,
        t.cancelBubble = !0)
    }
    function s(e, t) {
        var i, s = r(e, o(t), t), l = {}, d = 0, h = !1;
        for (i = 0; i < s.length; ++i)
            s[i].seq ? (h = !0,
            d = Math.max(d, s[i].level),
            l[s[i].seq] = 1,
            a(s[i].callback, t, s[i].combo)) : h || R || a(s[i].callback, t, s[i].combo);
        t.type != R || c(e) || n(l, d)
    }
    function l(e) {
        "number" != typeof e.which && (e.which = e.keyCode);
        var i = t(e);
        if (i)
            return "keyup" == e.type && C == i ? void (C = !1) : void s(i, e)
    }
    function c(e) {
        return "shift" == e || "ctrl" == e || "alt" == e || "meta" == e
    }
    function d() {
        clearTimeout(v),
        v = setTimeout(n, 1e3)
    }
    function h() {
        if (!m) {
            m = {};
            for (var e in y)
                e > 95 && 112 > e || y.hasOwnProperty(e) && (m[y[e]] = e)
        }
        return m
    }
    function u(e, t, i) {
        return i || (i = h()[e] ? "keydown" : "keypress"),
        "keypress" == i && t.length && (i = "keydown"),
        i
    }
    function p(e, i, r, o) {
        T[e] = 0,
        o || (o = u(i[0], []));
        var s, l = function() {
            R = o,
            ++T[e],
            d()
        }
        , c = function(i) {
            a(r, i, e),
            "keyup" !== o && (C = t(i)),
            setTimeout(n, 10)
        }
        ;
        for (s = 0; s < i.length; ++s)
            f(i[s], s < i.length - 1 ? l : c, o, e, s)
    }
    function f(e, t, i, n, o) {
        _[e + ":" + i] = t,
        e = e.replace(/\s+/g, " ");
        var a, s, l, d = e.split(" "), h = [];
        if (d.length > 1)
            return void p(e, d, t, i);
        for (l = "+" === e ? ["+"] : e.split("+"),
        a = 0; a < l.length; ++a)
            s = l[a],
            x[s] && (s = x[s]),
            i && "keypress" != i && w[s] && (s = w[s],
            h.push("shift")),
            c(s) && h.push(s);
        i = u(s, h, i),
        E[s] || (E[s] = []),
        r(s, h, {
            type: i
        }, !n, e),
        E[s][n ? "unshift" : "push"]({
            callback: t,
            modifiers: h,
            action: i,
            seq: n,
            level: o,
            combo: e
        })
    }
    function g(e, t, i) {
        for (var n = 0; n < e.length; ++n)
            f(e[n], t, i)
    }
    for (var m, v, y = {
        8: "backspace",
        9: "tab",
        13: "enter",
        16: "shift",
        17: "ctrl",
        18: "alt",
        20: "capslock",
        27: "esc",
        32: "space",
        33: "pageup",
        34: "pagedown",
        35: "end",
        36: "home",
        37: "left",
        38: "up",
        39: "right",
        40: "down",
        45: "ins",
        46: "del",
        91: "meta",
        93: "meta",
        224: "meta"
    }, b = {
        106: "*",
        107: "+",
        109: "-",
        110: ".",
        111: "/",
        186: ";",
        187: "=",
        188: ",",
        189: "-",
        190: ".",
        191: "/",
        192: "`",
        219: "[",
        220: "\\",
        221: "]",
        222: "'"
    }, w = {
        "~": "`",
        "!": "1",
        "@": "2",
        "#": "3",
        $: "4",
        "%": "5",
        "^": "6",
        "&": "7",
        "*": "8",
        "(": "9",
        ")": "0",
        _: "-",
        "+": "=",
        ":": ";",
        '"': "'",
        "<": ",",
        ">": ".",
        "?": "/",
        "|": "\\"
    }, x = {
        option: "alt",
        command: "meta",
        "return": "enter",
        escape: "esc"
    }, E = {}, _ = {}, T = {}, C = !1, R = !1, S = 1; 20 > S; ++S)
        y[111 + S] = "f" + S;
    for (S = 0; 9 >= S; ++S)
        y[S + 96] = S;
    e(document, "keypress", l),
    e(document, "keydown", l),
    e(document, "keyup", l);
    var k = {
        bind: function(e, t, i) {
            return e = e instanceof Array ? e : [e],
            g(e, t, i),
            this
        },
        unbind: function(e, t) {
            return k.bind(e, function() {}, t)
        },
        trigger: function(e, t) {
            return _[e + ":" + t] && _[e + ":" + t]({}, e),
            this
        },
        reset: function() {
            return E = {},
            _ = {},
            this
        },
        stopCallback: function(e, t) {
            return (" " + t.className + " ").indexOf(" mousetrap ") > -1 ? !1 : "INPUT" == t.tagName || "SELECT" == t.tagName || "TEXTAREA" == t.tagName || t.contentEditable && "true" == t.contentEditable
        }
    };
    window.Mousetrap = k,
    "function" == typeof define && define.amd && define(k)
}(),
Mousetrap = function(e) {
    var t = e.stopCallback
      , i = !0;
    return e.stopCallback = function(e, n) {
        return i ? t(e, n) : !0
    }
    ,
    e.pause = function() {
        i = !1
    }
    ,
    e.unpause = function() {
        i = !0
    }
    ,
    e
}(Mousetrap),
Mousetrap = function(e) {
    var t = {}
      , i = e.stopCallback;
    return e.stopCallback = function(e, n, r) {
        return t[r] ? !1 : i(e, n, r)
    }
    ,
    e.bindGlobal = function(i, n, r) {
        if (e.bind(i, n, r),
        i instanceof Array)
            for (n = 0; n < i.length; n++)
                t[i[n]] = !0;
        else
            t[i] = !0
    }
    ,
    e
}(Mousetrap),
function() {
    !function(e) {
        return "function" == typeof define && define.amd ? define(["jquery"], e) : e(window.jQuery)
    }(function(e) {
        var t, i, n, r, o;
        return r = {
            DOWN: 40,
            UP: 38,
            ESC: 27,
            TAB: 9,
            ENTER: 13
        },
        i = {
            data_refactor: function(t) {
                return e.isArray(t) ? e.map(t, function(t) {
                    return e.isPlainObject(t) || (t = {
                        name: t
                    }),
                    t
                }) : t
            },
            matcher: function(e, t) {
                var i, n, r;
                return r = new RegExp(e + "([A-Za-z0-9_+-|]*)$|" + e + "([^\\x00-\\xff]*)$","gi"),
                i = r.exec(t),
                n = null ,
                i && (n = i[2] ? i[2] : i[1]),
                n
            },
            filter: function(t, i, n) {
                return e.map(i, function(i) {
                    var r;
                    return r = e.isPlainObject(i) ? i[n] : i,
                    r.toLowerCase().indexOf(t) >= 0 ? i : void 0
                })
            },
            remote_filter: null ,
            sorter: function(e, t, i) {
                var n, r, o, a, s;
                if (!e)
                    return t.sort(function(e, t) {
                        return e[i].toLowerCase() > t[i].toLowerCase() ? 1 : -1
                    });
                for (r = [],
                a = 0,
                s = t.length; s > a; a++)
                    n = t[a],
                    o = n[i],
                    n.atwho_order = -o.score(e),
                    r.push(n);
                return r.sort(function(e, t) {
                    return e.atwho_order - t.atwho_order
                }),
                r = function() {
                    var e, t, i;
                    for (i = [],
                    e = 0,
                    t = r.length; t > e; e++)
                        n = r[e],
                        delete n.atwho_order,
                        i.push(n);
                    return i
                }()
            },
            tpl_eval: function(e, t) {
                var i;
                try {
                    return i = e.replace(/\$\{([^\}]*)\}/g, function(e, i) {
                        return t[i]
                    })
                } catch (n) {
                    return ""
                }
            },
            highlighter: function(e, t) {
                return t ? e.replace(new RegExp(">\\s*(\\w*)(" + t.replace("+", "\\+") + ")(\\w*)\\s*<","ig"), function(e, t, i, n) {
                    return "> " + t + "<strong>" + i + "</strong>" + n + " <"
                }) : e
            },
            selector: function(e) {
                return e.length > 0 ? this.replace_str(e.data("value") || "") : void 0
            }
        },
        t = function() {
            function t(t) {
                this.settings = {},
                this.pos = 0,
                this.flags = null ,
                this.current_flag = null ,
                this.query = null ,
                this._data_sets = {},
                this.$inputor = e(t),
                this.view = new o(this,this.$el),
                this.listen()
            }
            return t.prototype.listen = function() {
                var e = this;
                return this.$inputor.on("keyup.atwho", function(t) {
                    return e.on_keyup(t)
                }).on("keydown.atwho", function(t) {
                    return e.on_keydown(t)
                }).on("scroll.atwho", function() {
                    return e.view.hide()
                }).on("blur.atwho", function() {
                    return e.view.hide(e.get_opt("display_timeout"))
                })
            }
            ,
            t.prototype.reg = function(t, i) {
                var n, r;
                return this.current_flag = t,
                n = this.settings[t] = this.settings[t] ? e.extend({}, this.settings[t], i) : e.extend({}, e.fn.atwho["default"], i),
                r = n.data,
                "string" == typeof r ? this.load_remote_data(r) : this.save_data(r),
                this
            }
            ,
            t.prototype.trigger = function(e, t) {
                return t || (t = []),
                t.push(this),
                this.$inputor.trigger("" + e + ".atwho", t)
            }
            ,
            t.prototype.get_data = function(e) {
                return this._data_sets[e || (e = this.current_flag)]
            }
            ,
            t.prototype.save_data = function(e, t) {
                return this._data_sets[t || (t = this.current_flag)] = this.callbacks("data_refactor").call(this, e)
            }
            ,
            t.prototype.callbacks = function(e) {
                var t;
                return t = this.get_opt("callbacks")[e],
                t || (t = i[e]),
                t
            }
            ,
            t.prototype.get_opt = function(e) {
                try {
                    return this.settings[this.current_flag][e]
                } catch (t) {
                    return null
                }
            }
            ,
            t.prototype.rect = function() {
                var e, t, i;
                return e = this.$inputor.caret("offset", this.pos - 1),
                document.selection ? i = t = -2 : (t = 0,
                i = 2),
                {
                    left: e.left + t,
                    top: e.top + t,
                    bottom: e.top + e.height + i
                }
            }
            ,
            t.prototype.catch_query = function() {
                var t, i, n, r, o, a, s = this;
                return i = this.$inputor.val(),
                t = this.$inputor.caret("pos"),
                a = i.slice(0, t),
                r = null ,
                e.each(this.settings, function(e) {
                    return r = s.callbacks("matcher").call(s, e, a),
                    null != r ? (s.current_flag = e,
                    !1) : void 0
                }),
                "string" == typeof r && r.length <= 20 ? (o = t - r.length,
                n = o + r.length,
                this.pos = o,
                r = {
                    text: r.toLowerCase(),
                    head_pos: o,
                    end_pos: n
                },
                this.trigger("matched", [this.current_flag, r.text])) : this.view.hide(),
                this.query = r
            }
            ,
            t.prototype.replace_str = function(e) {
                var t, i, n, r, o;
                return t = this.$inputor,
                e = "" + e,
                n = t.val(),
                i = this.get_opt("display_flag") ? 0 : this.current_flag.length,
                r = n.slice(0, (this.query.head_pos || 0) - i),
                o = "" + r + e + " " + n.slice(this.query.end_pos || 0),
                t.val(o),
                t.caret("pos", r.length + e.length + 1),
                t.change()
            }
            ,
            t.prototype.on_keyup = function(t) {
                switch (t.keyCode) {
                case r.ESC:
                    t.preventDefault(),
                    this.view.hide();
                    break;
                case r.DOWN:
                case r.UP:
                    e.noop();
                    break;
                default:
                    this.look_up()
                }
                return t.stopPropagation()
            }
            ,
            t.prototype.on_keydown = function(t) {
                if (this.view.visible()) {
                    switch (t.keyCode) {
                    case r.ESC:
                        t.preventDefault(),
                        this.view.hide();
                        break;
                    case r.UP:
                        t.preventDefault(),
                        this.view.prev();
                        break;
                    case r.DOWN:
                        t.preventDefault(),
                        this.view.next();
                        break;
                    case r.TAB:
                    case r.ENTER:
                        if (!this.view.visible())
                            return;
                        t.preventDefault(),
                        this.view.choose();
                        break;
                    default:
                        e.noop()
                    }
                    return t.stopPropagation()
                }
            }
            ,
            t.prototype.render_view = function(e) {
                var t;
                return t = this.get_opt("search_key"),
                e = this.callbacks("sorter").call(this, this.query.text, e, t),
                e = e.slice(0, this.get_opt("limit")),
                this.view.render(e)
            }
            ,
            t.prototype.remote_call = function(t) {
                var i;
                return i = function(e) {
                    return this.render_view(e)
                }
                ,
                i = e.proxy(i, this),
                this.callbacks("remote_filter").call(this, t.text, i)
            }
            ,
            t.prototype.load_remote_data = function(t) {
                var i = this;
                return e.get(t).done(function(e) {
                    return i.save_data(e)
                })
            }
            ,
            t.prototype.look_up = function() {
                var t, i, n;
                return (i = this.catch_query()) ? (t = this.get_data(),
                n = this.get_opt("search_key"),
                t = this.callbacks("filter").call(this, i.text, t || [], n),
                t && t.length > 0 ? this.render_view(t) : this.callbacks("remote_filter") ? this.remote_call(i) : this.view.hide(),
                e.noop()) : !1
            }
            ,
            t
        }(),
        o = function() {
            function t(t) {
                this.controller = t,
                this.id = this.controller.get_opt("view_id") || "at-view",
                this.timeout_id = null ,
                this.$el = e("#" + this.id),
                this.create_view()
            }
            return t.prototype.create_view = function() {
                var t, i, n = this;
                if (!this.exist())
                    return i = "<div id='" + this.id + "' class='at-view'><ul id='" + this.id + "-ul'></ul></div>",
                    e("body").append(i),
                    this.$el = e("#" + this.id),
                    t = this.$el.find("ul"),
                    t.on("mouseenter.view", "li", function(i) {
                        return t.find(".cur").removeClass("cur"),
                        e(i.currentTarget).addClass("cur")
                    }).on("click", function(e) {
                        return e.stopPropagation(),
                        e.preventDefault(),
                        n.$el.data("_view").choose()
                    })
            }
            ,
            t.prototype.exist = function() {
                return e("#" + this.id).length > 0
            }
            ,
            t.prototype.visible = function() {
                return this.$el.is(":visible")
            }
            ,
            t.prototype.choose = function() {
                var e;
                return e = this.$el.find(".cur"),
                this.controller.callbacks("selector").call(this.controller, e),
                this.controller.trigger("choose", [e]),
                this.hide()
            }
            ,
            t.prototype.reposition = function() {
                var t, i;
                return i = this.controller.rect(),
                i.bottom + this.$el.height() - e(window).scrollTop() > e(window).height() && (i.bottom = i.top - this.$el.height()),
                t = {
                    left: i.left,
                    top: i.bottom
                },
                this.$el.offset(t),
                this.controller.trigger("reposition", [t])
            }
            ,
            t.prototype.next = function() {
                var t, i;
                return t = this.$el.find(".cur").removeClass("cur"),
                i = t.next(),
                i.length || (i = e(this.$el.find("li")[0])),
                i.addClass("cur")
            }
            ,
            t.prototype.prev = function() {
                var e, t;
                return e = this.$el.find(".cur").removeClass("cur"),
                t = e.prev(),
                t.length || (t = this.$el.find("li").last()),
                t.addClass("cur")
            }
            ,
            t.prototype.show = function() {
                return this.visible() || this.$el.show(),
                this.reposition()
            }
            ,
            t.prototype.hide = function(e) {
                var t, i = this;
                return isNaN(e) ? this.visible() ? this.$el.hide() : void 0 : (t = function() {
                    return i.hide()
                }
                ,
                clearTimeout(this.timeout_id),
                this.timeout_id = setTimeout(t, e))
            }
            ,
            t.prototype.clear = function() {
                return this.$el.find("ul").empty()
            }
            ,
            t.prototype.render = function(t) {
                var i, r, o = this;
                return e.isArray(t) ? t.length <= 0 ? (this.hide(),
                !0) : (this.clear(),
                this.$el.data("_view", this),
                i = this.$el.find("ul"),
                r = this.controller.get_opt("tpl", n),
                e.each(t, function(t, n) {
                    var a, s;
                    return s = o.controller.callbacks("tpl_eval").call(o.controller, r, n),
                    a = e(o.controller.callbacks("highlighter").call(o.controller, s, o.controller.query.text)),
                    a.data("info", n),
                    i.append(a)
                }),
                this.show(),
                i.find("li:eq(0)").addClass("cur")) : !1
            }
            ,
            t
        }(),
        n = "<li data-value='${name}'>${name}</li>",
        e.fn.atwho = function(i, n) {
            return this.filter("textarea, input").each(function() {
                var r, o;
                return r = e(this),
                o = r.data("atwho"),
                o || r.data("atwho", o = new t(this)),
                o.reg(i, n)
            })
        }
        ,
        e.fn.atwho.Controller = t,
        e.fn.atwho.View = o,
        e.fn.atwho["default"] = {
            data: null ,
            search_key: "name",
            callbacks: i,
            limit: 5,
            display_flag: !0,
            display_timeout: 300,
            tpl: n
        }
    })
}
.call(this),
function() {
    !function(e) {
        return "function" == typeof define && define.amd ? define(["jquery"], e) : e(window.jQuery)
    }(function(e) {
        "use strict";
        var t, i, n, r;
        return r = "caret",
        t = function() {
            function t(e) {
                this.$inputor = e,
                this.domInputor = this.$inputor[0]
            }
            return t.prototype.getPos = function() {
                var e, t, i, n, r, o, a, s, l;
                return i = this.domInputor,
                i.focus(),
                document.selection ? (a = document.selection.createRange(),
                o = 0,
                a && a.parentElement() === i && (r = i.value.replace(/\r\n/g, "\n"),
                n = r.length,
                l = i.createTextRange(),
                l.moveToBookmark(a.getBookmark()),
                t = i.createTextRange(),
                t.collapse(!1),
                l.compareEndPoints("StartToEnd", t) > -1 ? s = e = n : (s = -l.moveStart("character", -n),
                e = -l.moveEnd("character", -n)))) : s = i.selectionStart,
                s
            }
            ,
            t.prototype.setPos = function(e) {
                var t, i;
                return t = this.domInputor,
                document.selection ? (i = t.createTextRange(),
                i.move("character", e),
                i.select()) : t.setSelectionRange(e, e)
            }
            ,
            t.prototype.getPosition = function(e) {
                var t, n, r, o, a, s, l, c, d;
                return t = this.$inputor,
                r = function(e) {
                    return e.replace(/</g, "&lt").replace(/>/g, "&gt").replace(/`/g, "&#96").replace(/"/g, "&quot").replace(/\r\n|\r|\n/g, "<br />")
                }
                ,
                e = e || this.getPos(),
                l = t.val().slice(0, e),
                a = "<span>" + r(l) + "</span>",
                a += "<span id='caret'>|</span>",
                s = new i(t),
                n = s.create(a).rect(),
                c = n.left - t.scrollLeft(),
                d = n.top - t.scrollTop(),
                o = n.height,
                {
                    left: c,
                    top: d,
                    height: o
                }
            }
            ,
            t.prototype.getOffset = function(t) {
                var i, n, r, o, a, s, l;
                return i = this.$inputor,
                document.selection ? (a = this.domInputor.createRange(),
                t && a.move("character", t),
                s = a.boundingLeft + i.scrollLeft(),
                l = a.boundingTop + e(window).scrollTop() + i.scrollTop(),
                n = a.boundingHeight) : (r = i.offset(),
                o = this.getPosition(t),
                s = r.left + o.left,
                l = r.top + o.top,
                n = o.height),
                {
                    left: s,
                    top: l,
                    height: n
                }
            }
            ,
            t
        }(),
        i = function() {
            function t(e) {
                this.$inputor = e
            }
            return t.prototype.css_attr = ["overflowY", "height", "width", "paddingTop", "paddingLeft", "paddingRight", "paddingBottom", "marginTop", "marginLeft", "marginRight", "marginBottom", "fontFamily", "borderStyle", "borderWidth", "wordWrap", "fontSize", "lineHeight", "overflowX", "text-align"],
            t.prototype.mirrorCss = function() {
                var t, i = this;
                return t = {
                    position: "absolute",
                    left: -9999,
                    top: 0,
                    zIndex: -2e4,
                    "white-space": "pre-wrap"
                },
                e.each(this.css_attr, function(e, n) {
                    return t[n] = i.$inputor.css(n)
                }),
                t
            }
            ,
            t.prototype.create = function(t) {
                return this.$mirror = e("<div></div>"),
                this.$mirror.css(this.mirrorCss()),
                this.$mirror.html(t),
                this.$inputor.after(this.$mirror),
                this
            }
            ,
            t.prototype.rect = function() {
                var e, t, i;
                return e = this.$mirror.find("#caret"),
                t = e.position(),
                i = {
                    left: t.left,
                    top: t.top,
                    height: e.height()
                },
                this.$mirror.remove(),
                i
            }
            ,
            t
        }(),
        n = {
            pos: function(e) {
                return e ? this.setPos(e) : this.getPos()
            },
            position: function(e) {
                return this.getPosition(e)
            },
            offset: function(e) {
                return this.getOffset(e)
            }
        },
        e.fn.caret = function(i) {
            var r;
            return r = new t(this),
            n[i] ? n[i].apply(r, Array.prototype.slice.call(arguments, 1)) : e.error("Method " + i + " does not exist on jQuery.caret")
        }
    })
}
.call(this);
var HT = HT || {};
HT.Point = function(e, t) {
    this.X = e,
    this.Y = t
}
,
HT.Rectangle = function(e, t, i, n) {
    this.X = e,
    this.Y = t,
    this.Width = i,
    this.Height = n
}
,
HT.Line = function(e, t, i, n) {
    this.X1 = e,
    this.Y1 = t,
    this.X2 = i,
    this.Y2 = n
}
,
HT.Hexagon = function(e, t, i) {
    this.Points = [];
    var n = null
      , r = null ;
    HT.Hexagon.Static.ORIENTATION == HT.Hexagon.Orientation.Normal ? (n = (HT.Hexagon.Static.WIDTH - HT.Hexagon.Static.SIDE) / 2,
    r = HT.Hexagon.Static.HEIGHT / 2,
    this.Points.push(new HT.Point(n + t,i)),
    this.Points.push(new HT.Point(n + HT.Hexagon.Static.SIDE + t,i)),
    this.Points.push(new HT.Point(HT.Hexagon.Static.WIDTH + t,r + i)),
    this.Points.push(new HT.Point(n + HT.Hexagon.Static.SIDE + t,HT.Hexagon.Static.HEIGHT + i)),
    this.Points.push(new HT.Point(n + t,HT.Hexagon.Static.HEIGHT + i)),
    this.Points.push(new HT.Point(t,r + i))) : (n = HT.Hexagon.Static.WIDTH / 2,
    r = (HT.Hexagon.Static.HEIGHT - HT.Hexagon.Static.SIDE) / 2,
    this.Points.push(new HT.Point(n + t,i)),
    this.Points.push(new HT.Point(HT.Hexagon.Static.WIDTH + t,r + i)),
    this.Points.push(new HT.Point(HT.Hexagon.Static.WIDTH + t,r + HT.Hexagon.Static.SIDE + i)),
    this.Points.push(new HT.Point(n + t,HT.Hexagon.Static.HEIGHT + i)),
    this.Points.push(new HT.Point(t,r + HT.Hexagon.Static.SIDE + i)),
    this.Points.push(new HT.Point(t,r + i))),
    this.Id = e,
    this.x = t,
    this.y = i,
    this.x1 = n,
    this.y1 = r,
    this.TopLeftPoint = new HT.Point(this.x,this.y),
    this.BottomRightPoint = new HT.Point(this.x + HT.Hexagon.Static.WIDTH,this.y + HT.Hexagon.Static.HEIGHT),
    this.MidPoint = new HT.Point(this.x + HT.Hexagon.Static.WIDTH / 2,this.y + HT.Hexagon.Static.HEIGHT / 2),
    this.P1 = new HT.Point(t + n,i + r),
    this.selected = !1
}
,
HT.Hexagon.prototype.draw = function(e, t, i, n) {
    e.beginPath(),
    e.moveTo(this.Points[0].X + t, this.Points[0].Y + i);
    for (var r = 1; r < this.Points.length; r++) {
        var o = this.Points[r];
        e.lineTo(o.X + t, o.Y + i)
    }
    e.closePath(),
    e.stroke(),
    n && this.Id && (e.fillStyle = e.strokeStyle,
    e.font = "bolder 8pt Trebuchet MS,Tahoma,Verdana,Arial,sans-serif",
    e.textAlign = "center",
    e.textBaseline = "middle",
    e.fillText(this.Id, this.MidPoint.X + t, this.MidPoint.Y + i))
}
,
HT.Hexagon.prototype.isInBounds = function(e, t) {
    return this.Contains(new HT.Point(e,t))
}
,
HT.Hexagon.prototype.isInHexBounds = function(e) {
    return this.TopLeftPoint.X < e.X && this.TopLeftPoint.Y < e.Y && e.X < this.BottomRightPoint.X && e.Y < this.BottomRightPoint.Y ? !0 : !1
}
,
HT.Hexagon.prototype.Contains = function(e) {
    var t = !1;
    if (this.isInHexBounds(e)) {
        var i, n = 0;
        for (i = 0,
        n = this.Points.length - 1; i < this.Points.length; n = i++) {
            var r = this.Points[i]
              , o = this.Points[n];
            (r.Y <= e.Y && e.Y < o.Y || o.Y <= e.Y && e.Y < r.Y) && e.X < (o.X - r.X) * (e.Y - r.Y) / (o.Y - r.Y) + r.X && (t = !t)
        }
    }
    return t
}
,
HT.Hexagon.Orientation = {
    Normal: 0,
    Rotated: 1
},
HT.Hexagon.Static = {
    HEIGHT: 91.14378277661477,
    WIDTH: 91.14378277661477,
    SIDE: 50,
    ORIENTATION: HT.Hexagon.Orientation.Normal,
    DRAWSTATS: !1
},
HT.Grid = function(e, t) {
    this.Hexes = [];
    for (var i = {}, n = 0, r = 0; r + HT.Hexagon.Static.HEIGHT <= t; ) {
        var o = 0
          , a = 0;
        n % 2 == 1 && (a = HT.Hexagon.Static.ORIENTATION == HT.Hexagon.Orientation.Normal ? (HT.Hexagon.Static.WIDTH - HT.Hexagon.Static.SIDE) / 2 + HT.Hexagon.Static.SIDE : HT.Hexagon.Static.WIDTH / 2,
        o = 1);
        for (var s = a; s + HT.Hexagon.Static.WIDTH <= e; ) {
            var l = this.GetHexId(n, o)
              , c = new HT.Hexagon(l,s,r)
              , d = o;
            HT.Hexagon.Static.ORIENTATION == HT.Hexagon.Orientation.Normal ? c.PathCoOrdX = o : (c.PathCoOrdY = n,
            d = n),
            this.Hexes.push(c),
            i[d] || (i[d] = []),
            i[d].push(c),
            o += 2,
            s += HT.Hexagon.Static.ORIENTATION == HT.Hexagon.Orientation.Normal ? HT.Hexagon.Static.WIDTH + HT.Hexagon.Static.SIDE : HT.Hexagon.Static.WIDTH
        }
        n++,
        r += HT.Hexagon.Static.ORIENTATION == HT.Hexagon.Orientation.Normal ? HT.Hexagon.Static.HEIGHT / 2 : (HT.Hexagon.Static.HEIGHT - HT.Hexagon.Static.SIDE) / 2 + HT.Hexagon.Static.SIDE
    }
    for (var h in i) {
        var u = i[h]
          , p = Math.floor(h / 2) + h % 2;
        for (var f in u) {
            var c = u[f];
            HT.Hexagon.Static.ORIENTATION == HT.Hexagon.Orientation.Normal ? c.PathCoOrdY = p++ : c.PathCoOrdX = p++
        }
    }
}
,
HT.Grid.Static = {
    Letters: "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
},
HT.Grid.prototype.GetHexId = function(e, t) {
    for (var i = e, n = ""; i > 25; )
        n = HT.Grid.Static.Letters[i % 26] + n,
        i -= 26;
    return HT.Grid.Static.Letters[i] + n + (t + 1)
}
,
HT.Grid.prototype.GetHexAt = function(e) {
    for (var t in this.Hexes)
        if (this.Hexes[t].Contains(e))
            return this.Hexes[t];
    return null
}
,
HT.Grid.prototype.GetHexDistance = function(e, t) {
    var i = e.PathCoOrdX - t.PathCoOrdX
      , n = e.PathCoOrdY - t.PathCoOrdY;
    return (Math.abs(i) + Math.abs(n) + Math.abs(i - n)) / 2
}
,
HT.Grid.prototype.GetHexById = function(e) {
    for (var t in this.Hexes)
        if (this.Hexes[t].Id == e)
            return this.Hexes[t];
    return null
}
;
var THREE = {
    REVISION: "69"
};
"object" == typeof module && (module.exports = THREE),
void 0 === Math.sign && (Math.sign = function(e) {
    return 0 > e ? -1 : e > 0 ? 1 : 0
}
),
THREE.MOUSE = {
    LEFT: 0,
    MIDDLE: 1,
    RIGHT: 2
},
THREE.CullFaceNone = 0,
THREE.CullFaceBack = 1,
THREE.CullFaceFront = 2,
THREE.CullFaceFrontBack = 3,
THREE.FrontFaceDirectionCW = 0,
THREE.FrontFaceDirectionCCW = 1,
THREE.BasicShadowMap = 0,
THREE.PCFShadowMap = 1,
THREE.PCFSoftShadowMap = 2,
THREE.FrontSide = 0,
THREE.BackSide = 1,
THREE.DoubleSide = 2,
THREE.NoShading = 0,
THREE.FlatShading = 1,
THREE.SmoothShading = 2,
THREE.NoColors = 0,
THREE.FaceColors = 1,
THREE.VertexColors = 2,
THREE.NoBlending = 0,
THREE.NormalBlending = 1,
THREE.AdditiveBlending = 2,
THREE.SubtractiveBlending = 3,
THREE.MultiplyBlending = 4,
THREE.CustomBlending = 5,
THREE.AddEquation = 100,
THREE.SubtractEquation = 101,
THREE.ReverseSubtractEquation = 102,
THREE.MinEquation = 103,
THREE.MaxEquation = 104,
THREE.ZeroFactor = 200,
THREE.OneFactor = 201,
THREE.SrcColorFactor = 202,
THREE.OneMinusSrcColorFactor = 203,
THREE.SrcAlphaFactor = 204,
THREE.OneMinusSrcAlphaFactor = 205,
THREE.DstAlphaFactor = 206,
THREE.OneMinusDstAlphaFactor = 207,
THREE.DstColorFactor = 208,
THREE.OneMinusDstColorFactor = 209,
THREE.SrcAlphaSaturateFactor = 210,
THREE.MultiplyOperation = 0,
THREE.MixOperation = 1,
THREE.AddOperation = 2,
THREE.UVMapping = function() {}
,
THREE.CubeReflectionMapping = function() {}
,
THREE.CubeRefractionMapping = function() {}
,
THREE.SphericalReflectionMapping = function() {}
,
THREE.SphericalRefractionMapping = function() {}
,
THREE.RepeatWrapping = 1e3,
THREE.ClampToEdgeWrapping = 1001,
THREE.MirroredRepeatWrapping = 1002,
THREE.NearestFilter = 1003,
THREE.NearestMipMapNearestFilter = 1004,
THREE.NearestMipMapLinearFilter = 1005,
THREE.LinearFilter = 1006,
THREE.LinearMipMapNearestFilter = 1007,
THREE.LinearMipMapLinearFilter = 1008,
THREE.UnsignedByteType = 1009,
THREE.ByteType = 1010,
THREE.ShortType = 1011,
THREE.UnsignedShortType = 1012,
THREE.IntType = 1013,
THREE.UnsignedIntType = 1014,
THREE.FloatType = 1015,
THREE.UnsignedShort4444Type = 1016,
THREE.UnsignedShort5551Type = 1017,
THREE.UnsignedShort565Type = 1018,
THREE.AlphaFormat = 1019,
THREE.RGBFormat = 1020,
THREE.RGBAFormat = 1021,
THREE.LuminanceFormat = 1022,
THREE.LuminanceAlphaFormat = 1023,
THREE.RGB_S3TC_DXT1_Format = 2001,
THREE.RGBA_S3TC_DXT1_Format = 2002,
THREE.RGBA_S3TC_DXT3_Format = 2003,
THREE.RGBA_S3TC_DXT5_Format = 2004,
THREE.RGB_PVRTC_4BPPV1_Format = 2100,
THREE.RGB_PVRTC_2BPPV1_Format = 2101,
THREE.RGBA_PVRTC_4BPPV1_Format = 2102,
THREE.RGBA_PVRTC_2BPPV1_Format = 2103,
THREE.Color = function(e) {
    return 3 === arguments.length ? this.setRGB(arguments[0], arguments[1], arguments[2]) : this.set(e)
}
,
THREE.Color.prototype = {
    constructor: THREE.Color,
    r: 1,
    g: 1,
    b: 1,
    set: function(e) {
        return e instanceof THREE.Color ? this.copy(e) : "number" == typeof e ? this.setHex(e) : "string" == typeof e && this.setStyle(e),
        this
    },
    setHex: function(e) {
        return e = Math.floor(e),
        this.r = (e >> 16 & 255) / 255,
        this.g = (e >> 8 & 255) / 255,
        this.b = (255 & e) / 255,
        this
    },
    setRGB: function(e, t, i) {
        return this.r = e,
        this.g = t,
        this.b = i,
        this
    },
    setHSL: function(e, t, i) {
        if (0 === t)
            this.r = this.g = this.b = i;
        else {
            var n = function(e, t, i) {
                return 0 > i && (i += 1),
                i > 1 && (i -= 1),
                1 / 6 > i ? e + 6 * (t - e) * i : .5 > i ? t : 2 / 3 > i ? e + 6 * (t - e) * (2 / 3 - i) : e
            }
              , r = .5 >= i ? i * (1 + t) : i + t - i * t
              , o = 2 * i - r;
            this.r = n(o, r, e + 1 / 3),
            this.g = n(o, r, e),
            this.b = n(o, r, e - 1 / 3)
        }
        return this
    },
    setStyle: function(e) {
        if (/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(e)) {
            var t = /^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(e);
            return this.r = Math.min(255, parseInt(t[1], 10)) / 255,
            this.g = Math.min(255, parseInt(t[2], 10)) / 255,
            this.b = Math.min(255, parseInt(t[3], 10)) / 255,
            this
        }
        if (/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(e)) {
            var t = /^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(e);
            return this.r = Math.min(100, parseInt(t[1], 10)) / 100,
            this.g = Math.min(100, parseInt(t[2], 10)) / 100,
            this.b = Math.min(100, parseInt(t[3], 10)) / 100,
            this
        }
        if (/^\#([0-9a-f]{6})$/i.test(e)) {
            var t = /^\#([0-9a-f]{6})$/i.exec(e);
            return this.setHex(parseInt(t[1], 16)),
            this
        }
        if (/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)) {
            var t = /^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e);
            return this.setHex(parseInt(t[1] + t[1] + t[2] + t[2] + t[3] + t[3], 16)),
            this
        }
        return /^(\w+)$/i.test(e) ? (this.setHex(THREE.ColorKeywords[e]),
        this) : void 0
    },
    copy: function(e) {
        return this.r = e.r,
        this.g = e.g,
        this.b = e.b,
        this
    },
    copyGammaToLinear: function(e) {
        return this.r = e.r * e.r,
        this.g = e.g * e.g,
        this.b = e.b * e.b,
        this
    },
    copyLinearToGamma: function(e) {
        return this.r = Math.sqrt(e.r),
        this.g = Math.sqrt(e.g),
        this.b = Math.sqrt(e.b),
        this
    },
    convertGammaToLinear: function() {
        var e = this.r
          , t = this.g
          , i = this.b;
        return this.r = e * e,
        this.g = t * t,
        this.b = i * i,
        this
    },
    convertLinearToGamma: function() {
        return this.r = Math.sqrt(this.r),
        this.g = Math.sqrt(this.g),
        this.b = Math.sqrt(this.b),
        this
    },
    getHex: function() {
        return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
    },
    getHexString: function() {
        return ("000000" + this.getHex().toString(16)).slice(-6)
    },
    getHSL: function(e) {
        var t, i, n = e || {
            h: 0,
            s: 0,
            l: 0
        }, r = this.r, o = this.g, a = this.b, s = Math.max(r, o, a), l = Math.min(r, o, a), c = (l + s) / 2;
        if (l === s)
            t = 0,
            i = 0;
        else {
            var d = s - l;
            switch (i = .5 >= c ? d / (s + l) : d / (2 - s - l),
            s) {
            case r:
                t = (o - a) / d + (a > o ? 6 : 0);
                break;
            case o:
                t = (a - r) / d + 2;
                break;
            case a:
                t = (r - o) / d + 4
            }
            t /= 6
        }
        return n.h = t,
        n.s = i,
        n.l = c,
        n
    },
    getStyle: function() {
        return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
    },
    offsetHSL: function(e, t, i) {
        var n = this.getHSL();
        return n.h += e,
        n.s += t,
        n.l += i,
        this.setHSL(n.h, n.s, n.l),
        this
    },
    add: function(e) {
        return this.r += e.r,
        this.g += e.g,
        this.b += e.b,
        this
    },
    addColors: function(e, t) {
        return this.r = e.r + t.r,
        this.g = e.g + t.g,
        this.b = e.b + t.b,
        this
    },
    addScalar: function(e) {
        return this.r += e,
        this.g += e,
        this.b += e,
        this
    },
    multiply: function(e) {
        return this.r *= e.r,
        this.g *= e.g,
        this.b *= e.b,
        this
    },
    multiplyScalar: function(e) {
        return this.r *= e,
        this.g *= e,
        this.b *= e,
        this
    },
    lerp: function(e, t) {
        return this.r += (e.r - this.r) * t,
        this.g += (e.g - this.g) * t,
        this.b += (e.b - this.b) * t,
        this
    },
    equals: function(e) {
        return e.r === this.r && e.g === this.g && e.b === this.b
    },
    fromArray: function(e) {
        return this.r = e[0],
        this.g = e[1],
        this.b = e[2],
        this
    },
    toArray: function() {
        return [this.r, this.g, this.b]
    },
    clone: function() {
        return (new THREE.Color).setRGB(this.r, this.g, this.b)
    }
},
THREE.ColorKeywords = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
},
THREE.Quaternion = function(e, t, i, n) {
    this._x = e || 0,
    this._y = t || 0,
    this._z = i || 0,
    this._w = void 0 !== n ? n : 1
}
,
THREE.Quaternion.prototype = {
    constructor: THREE.Quaternion,
    _x: 0,
    _y: 0,
    _z: 0,
    _w: 0,
    get x() {
        return this._x
    },
    set x(e) {
        this._x = e,
        this.onChangeCallback()
    },
    get y() {
        return this._y
    },
    set y(e) {
        this._y = e,
        this.onChangeCallback()
    },
    get z() {
        return this._z
    },
    set z(e) {
        this._z = e,
        this.onChangeCallback()
    },
    get w() {
        return this._w
    },
    set w(e) {
        this._w = e,
        this.onChangeCallback()
    },
    set: function(e, t, i, n) {
        return this._x = e,
        this._y = t,
        this._z = i,
        this._w = n,
        this.onChangeCallback(),
        this
    },
    copy: function(e) {
        return this._x = e.x,
        this._y = e.y,
        this._z = e.z,
        this._w = e.w,
        this.onChangeCallback(),
        this
    },
    setFromEuler: function(e, t) {
        if (e instanceof THREE.Euler == !1)
            throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        var i = Math.cos(e._x / 2)
          , n = Math.cos(e._y / 2)
          , r = Math.cos(e._z / 2)
          , o = Math.sin(e._x / 2)
          , a = Math.sin(e._y / 2)
          , s = Math.sin(e._z / 2);
        return "XYZ" === e.order ? (this._x = o * n * r + i * a * s,
        this._y = i * a * r - o * n * s,
        this._z = i * n * s + o * a * r,
        this._w = i * n * r - o * a * s) : "YXZ" === e.order ? (this._x = o * n * r + i * a * s,
        this._y = i * a * r - o * n * s,
        this._z = i * n * s - o * a * r,
        this._w = i * n * r + o * a * s) : "ZXY" === e.order ? (this._x = o * n * r - i * a * s,
        this._y = i * a * r + o * n * s,
        this._z = i * n * s + o * a * r,
        this._w = i * n * r - o * a * s) : "ZYX" === e.order ? (this._x = o * n * r - i * a * s,
        this._y = i * a * r + o * n * s,
        this._z = i * n * s - o * a * r,
        this._w = i * n * r + o * a * s) : "YZX" === e.order ? (this._x = o * n * r + i * a * s,
        this._y = i * a * r + o * n * s,
        this._z = i * n * s - o * a * r,
        this._w = i * n * r - o * a * s) : "XZY" === e.order && (this._x = o * n * r - i * a * s,
        this._y = i * a * r - o * n * s,
        this._z = i * n * s + o * a * r,
        this._w = i * n * r + o * a * s),
        t !== !1 && this.onChangeCallback(),
        this
    },
    setFromAxisAngle: function(e, t) {
        var i = t / 2
          , n = Math.sin(i);
        return this._x = e.x * n,
        this._y = e.y * n,
        this._z = e.z * n,
        this._w = Math.cos(i),
        this.onChangeCallback(),
        this
    },
    setFromRotationMatrix: function(e) {
        var t, i = e.elements, n = i[0], r = i[4], o = i[8], a = i[1], s = i[5], l = i[9], c = i[2], d = i[6], h = i[10], u = n + s + h;
        return u > 0 ? (t = .5 / Math.sqrt(u + 1),
        this._w = .25 / t,
        this._x = (d - l) * t,
        this._y = (o - c) * t,
        this._z = (a - r) * t) : n > s && n > h ? (t = 2 * Math.sqrt(1 + n - s - h),
        this._w = (d - l) / t,
        this._x = .25 * t,
        this._y = (r + a) / t,
        this._z = (o + c) / t) : s > h ? (t = 2 * Math.sqrt(1 + s - n - h),
        this._w = (o - c) / t,
        this._x = (r + a) / t,
        this._y = .25 * t,
        this._z = (l + d) / t) : (t = 2 * Math.sqrt(1 + h - n - s),
        this._w = (a - r) / t,
        this._x = (o + c) / t,
        this._y = (l + d) / t,
        this._z = .25 * t),
        this.onChangeCallback(),
        this
    },
    setFromUnitVectors: function() {
        var e, t, i = 1e-6;
        return function(n, r) {
            return void 0 === e && (e = new THREE.Vector3),
            t = n.dot(r) + 1,
            i > t ? (t = 0,
            Math.abs(n.x) > Math.abs(n.z) ? e.set(-n.y, n.x, 0) : e.set(0, -n.z, n.y)) : e.crossVectors(n, r),
            this._x = e.x,
            this._y = e.y,
            this._z = e.z,
            this._w = t,
            this.normalize(),
            this
        }
    }(),
    inverse: function() {
        return this.conjugate().normalize(),
        this
    },
    conjugate: function() {
        return this._x *= -1,
        this._y *= -1,
        this._z *= -1,
        this.onChangeCallback(),
        this
    },
    dot: function(e) {
        return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
    },
    lengthSq: function() {
        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
    },
    length: function() {
        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
    },
    normalize: function() {
        var e = this.length();
        return 0 === e ? (this._x = 0,
        this._y = 0,
        this._z = 0,
        this._w = 1) : (e = 1 / e,
        this._x = this._x * e,
        this._y = this._y * e,
        this._z = this._z * e,
        this._w = this._w * e),
        this.onChangeCallback(),
        this
    },
    multiply: function(e, t) {
        return void 0 !== t ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),
        this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e)
    },
    multiplyQuaternions: function(e, t) {
        var i = e._x
          , n = e._y
          , r = e._z
          , o = e._w
          , a = t._x
          , s = t._y
          , l = t._z
          , c = t._w;
        return this._x = i * c + o * a + n * l - r * s,
        this._y = n * c + o * s + r * a - i * l,
        this._z = r * c + o * l + i * s - n * a,
        this._w = o * c - i * a - n * s - r * l,
        this.onChangeCallback(),
        this
    },
    multiplyVector3: function(e) {
        return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),
        e.applyQuaternion(this)
    },
    slerp: function(e, t) {
        if (0 === t)
            return this;
        if (1 === t)
            return this.copy(e);
        var i = this._x
          , n = this._y
          , r = this._z
          , o = this._w
          , a = o * e._w + i * e._x + n * e._y + r * e._z;
        if (0 > a ? (this._w = -e._w,
        this._x = -e._x,
        this._y = -e._y,
        this._z = -e._z,
        a = -a) : this.copy(e),
        a >= 1)
            return this._w = o,
            this._x = i,
            this._y = n,
            this._z = r,
            this;
        var s = Math.acos(a)
          , l = Math.sqrt(1 - a * a);
        if (Math.abs(l) < .001)
            return this._w = .5 * (o + this._w),
            this._x = .5 * (i + this._x),
            this._y = .5 * (n + this._y),
            this._z = .5 * (r + this._z),
            this;
        var c = Math.sin((1 - t) * s) / l
          , d = Math.sin(t * s) / l;
        return this._w = o * c + this._w * d,
        this._x = i * c + this._x * d,
        this._y = n * c + this._y * d,
        this._z = r * c + this._z * d,
        this.onChangeCallback(),
        this
    },
    equals: function(e) {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w
    },
    fromArray: function(e, t) {
        return void 0 === t && (t = 0),
        this._x = e[t],
        this._y = e[t + 1],
        this._z = e[t + 2],
        this._w = e[t + 3],
        this.onChangeCallback(),
        this
    },
    toArray: function(e, t) {
        return void 0 === e && (e = []),
        void 0 === t && (t = 0),
        e[t] = this._x,
        e[t + 1] = this._y,
        e[t + 2] = this._z,
        e[t + 3] = this._w,
        e
    },
    onChange: function(e) {
        return this.onChangeCallback = e,
        this
    },
    onChangeCallback: function() {},
    clone: function() {
        return new THREE.Quaternion(this._x,this._y,this._z,this._w)
    }
},
THREE.Quaternion.slerp = function(e, t, i, n) {
    return i.copy(e).slerp(t, n)
}
,
THREE.Vector2 = function(e, t) {
    this.x = e || 0,
    this.y = t || 0
}
,
THREE.Vector2.prototype = {
    constructor: THREE.Vector2,
    set: function(e, t) {
        return this.x = e,
        this.y = t,
        this
    },
    setX: function(e) {
        return this.x = e,
        this
    },
    setY: function(e) {
        return this.y = e,
        this
    },
    setComponent: function(e, t) {
        switch (e) {
        case 0:
            this.x = t;
            break;
        case 1:
            this.y = t;
            break;
        default:
            throw new Error("index is out of range: " + e)
        }
    },
    getComponent: function(e) {
        switch (e) {
        case 0:
            return this.x;
        case 1:
            return this.y;
        default:
            throw new Error("index is out of range: " + e)
        }
    },
    copy: function(e) {
        return this.x = e.x,
        this.y = e.y,
        this
    },
    add: function(e, t) {
        return void 0 !== t ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
        this.addVectors(e, t)) : (this.x += e.x,
        this.y += e.y,
        this)
    },
    addVectors: function(e, t) {
        return this.x = e.x + t.x,
        this.y = e.y + t.y,
        this
    },
    addScalar: function(e) {
        return this.x += e,
        this.y += e,
        this
    },
    sub: function(e, t) {
        return void 0 !== t ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
        this.subVectors(e, t)) : (this.x -= e.x,
        this.y -= e.y,
        this)
    },
    subVectors: function(e, t) {
        return this.x = e.x - t.x,
        this.y = e.y - t.y,
        this
    },
    multiply: function(e) {
        return this.x *= e.x,
        this.y *= e.y,
        this
    },
    multiplyScalar: function(e) {
        return this.x *= e,
        this.y *= e,
        this
    },
    divide: function(e) {
        return this.x /= e.x,
        this.y /= e.y,
        this
    },
    divideScalar: function(e) {
        if (0 !== e) {
            var t = 1 / e;
            this.x *= t,
            this.y *= t
        } else
            this.x = 0,
            this.y = 0;
        return this
    },
    min: function(e) {
        return this.x > e.x && (this.x = e.x),
        this.y > e.y && (this.y = e.y),
        this
    },
    max: function(e) {
        return this.x < e.x && (this.x = e.x),
        this.y < e.y && (this.y = e.y),
        this
    },
    clamp: function(e, t) {
        return this.x < e.x ? this.x = e.x : this.x > t.x && (this.x = t.x),
        this.y < e.y ? this.y = e.y : this.y > t.y && (this.y = t.y),
        this
    },
    clampScalar: function() {
        var e, t;
        return function(i, n) {
            return void 0 === e && (e = new THREE.Vector2,
            t = new THREE.Vector2),
            e.set(i, i),
            t.set(n, n),
            this.clamp(e, t)
        }
    }(),
    floor: function() {
        return this.x = Math.floor(this.x),
        this.y = Math.floor(this.y),
        this
    },
    ceil: function() {
        return this.x = Math.ceil(this.x),
        this.y = Math.ceil(this.y),
        this
    },
    round: function() {
        return this.x = Math.round(this.x),
        this.y = Math.round(this.y),
        this
    },
    roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
        this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
        this
    },
    negate: function() {
        return this.x = -this.x,
        this.y = -this.y,
        this
    },
    dot: function(e) {
        return this.x * e.x + this.y * e.y
    },
    lengthSq: function() {
        return this.x * this.x + this.y * this.y
    },
    length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y)
    },
    normalize: function() {
        return this.divideScalar(this.length())
    },
    distanceTo: function(e) {
        return Math.sqrt(this.distanceToSquared(e))
    },
    distanceToSquared: function(e) {
        var t = this.x - e.x
          , i = this.y - e.y;
        return t * t + i * i
    },
    setLength: function(e) {
        var t = this.length();
        return 0 !== t && e !== t && this.multiplyScalar(e / t),
        this
    },
    lerp: function(e, t) {
        return this.x += (e.x - this.x) * t,
        this.y += (e.y - this.y) * t,
        this
    },
    equals: function(e) {
        return e.x === this.x && e.y === this.y
    },
    fromArray: function(e, t) {
        return void 0 === t && (t = 0),
        this.x = e[t],
        this.y = e[t + 1],
        this
    },
    toArray: function(e, t) {
        return void 0 === e && (e = []),
        void 0 === t && (t = 0),
        e[t] = this.x,
        e[t + 1] = this.y,
        e
    },
    clone: function() {
        return new THREE.Vector2(this.x,this.y)
    }
},
THREE.Vector3 = function(e, t, i) {
    this.x = e || 0,
    this.y = t || 0,
    this.z = i || 0
}
,
THREE.Vector3.prototype = {
    constructor: THREE.Vector3,
    set: function(e, t, i) {
        return this.x = e,
        this.y = t,
        this.z = i,
        this
    },
    setX: function(e) {
        return this.x = e,
        this
    },
    setY: function(e) {
        return this.y = e,
        this
    },
    setZ: function(e) {
        return this.z = e,
        this
    },
    setComponent: function(e, t) {
        switch (e) {
        case 0:
            this.x = t;
            break;
        case 1:
            this.y = t;
            break;
        case 2:
            this.z = t;
            break;
        default:
            throw new Error("index is out of range: " + e)
        }
    },
    getComponent: function(e) {
        switch (e) {
        case 0:
            return this.x;
        case 1:
            return this.y;
        case 2:
            return this.z;
        default:
            throw new Error("index is out of range: " + e)
        }
    },
    copy: function(e) {
        return this.x = e.x,
        this.y = e.y,
        this.z = e.z,
        this
    },
    add: function(e, t) {
        return void 0 !== t ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
        this.addVectors(e, t)) : (this.x += e.x,
        this.y += e.y,
        this.z += e.z,
        this)
    },
    addScalar: function(e) {
        return this.x += e,
        this.y += e,
        this.z += e,
        this
    },
    addVectors: function(e, t) {
        return this.x = e.x + t.x,
        this.y = e.y + t.y,
        this.z = e.z + t.z,
        this
    },
    sub: function(e, t) {
        return void 0 !== t ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
        this.subVectors(e, t)) : (this.x -= e.x,
        this.y -= e.y,
        this.z -= e.z,
        this)
    },
    subVectors: function(e, t) {
        return this.x = e.x - t.x,
        this.y = e.y - t.y,
        this.z = e.z - t.z,
        this
    },
    multiply: function(e, t) {
        return void 0 !== t ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),
        this.multiplyVectors(e, t)) : (this.x *= e.x,
        this.y *= e.y,
        this.z *= e.z,
        this)
    },
    multiplyScalar: function(e) {
        return this.x *= e,
        this.y *= e,
        this.z *= e,
        this
    },
    multiplyVectors: function(e, t) {
        return this.x = e.x * t.x,
        this.y = e.y * t.y,
        this.z = e.z * t.z,
        this
    },
    applyEuler: function() {
        var e;
        return function(t) {
            return t instanceof THREE.Euler == !1 && console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order."),
            void 0 === e && (e = new THREE.Quaternion),
            this.applyQuaternion(e.setFromEuler(t)),
            this
        }
    }(),
    applyAxisAngle: function() {
        var e;
        return function(t, i) {
            return void 0 === e && (e = new THREE.Quaternion),
            this.applyQuaternion(e.setFromAxisAngle(t, i)),
            this
        }
    }(),
    applyMatrix3: function(e) {
        var t = this.x
          , i = this.y
          , n = this.z
          , r = e.elements;
        return this.x = r[0] * t + r[3] * i + r[6] * n,
        this.y = r[1] * t + r[4] * i + r[7] * n,
        this.z = r[2] * t + r[5] * i + r[8] * n,
        this
    },
    applyMatrix4: function(e) {
        var t = this.x
          , i = this.y
          , n = this.z
          , r = e.elements;
        return this.x = r[0] * t + r[4] * i + r[8] * n + r[12],
        this.y = r[1] * t + r[5] * i + r[9] * n + r[13],
        this.z = r[2] * t + r[6] * i + r[10] * n + r[14],
        this
    },
    applyProjection: function(e) {
        var t = this.x
          , i = this.y
          , n = this.z
          , r = e.elements
          , o = 1 / (r[3] * t + r[7] * i + r[11] * n + r[15]);
        return this.x = (r[0] * t + r[4] * i + r[8] * n + r[12]) * o,
        this.y = (r[1] * t + r[5] * i + r[9] * n + r[13]) * o,
        this.z = (r[2] * t + r[6] * i + r[10] * n + r[14]) * o,
        this
    },
    applyQuaternion: function(e) {
        var t = this.x
          , i = this.y
          , n = this.z
          , r = e.x
          , o = e.y
          , a = e.z
          , s = e.w
          , l = s * t + o * n - a * i
          , c = s * i + a * t - r * n
          , d = s * n + r * i - o * t
          , h = -r * t - o * i - a * n;
        return this.x = l * s + h * -r + c * -a - d * -o,
        this.y = c * s + h * -o + d * -r - l * -a,
        this.z = d * s + h * -a + l * -o - c * -r,
        this
    },
    project: function() {
        var e;
        return function(t) {
            return void 0 === e && (e = new THREE.Matrix4),
            e.multiplyMatrices(t.projectionMatrix, e.getInverse(t.matrixWorld)),
            this.applyProjection(e)
        }
    }(),
    unproject: function() {
        var e;
        return function(t) {
            return void 0 === e && (e = new THREE.Matrix4),
            e.multiplyMatrices(t.matrixWorld, e.getInverse(t.projectionMatrix)),
            this.applyProjection(e)
        }
    }(),
    transformDirection: function(e) {
        var t = this.x
          , i = this.y
          , n = this.z
          , r = e.elements;
        return this.x = r[0] * t + r[4] * i + r[8] * n,
        this.y = r[1] * t + r[5] * i + r[9] * n,
        this.z = r[2] * t + r[6] * i + r[10] * n,
        this.normalize(),
        this
    },
    divide: function(e) {
        return this.x /= e.x,
        this.y /= e.y,
        this.z /= e.z,
        this
    },
    divideScalar: function(e) {
        if (0 !== e) {
            var t = 1 / e;
            this.x *= t,
            this.y *= t,
            this.z *= t
        } else
            this.x = 0,
            this.y = 0,
            this.z = 0;
        return this
    },
    min: function(e) {
        return this.x > e.x && (this.x = e.x),
        this.y > e.y && (this.y = e.y),
        this.z > e.z && (this.z = e.z),
        this
    },
    max: function(e) {
        return this.x < e.x && (this.x = e.x),
        this.y < e.y && (this.y = e.y),
        this.z < e.z && (this.z = e.z),
        this
    },
    clamp: function(e, t) {
        return this.x < e.x ? this.x = e.x : this.x > t.x && (this.x = t.x),
        this.y < e.y ? this.y = e.y : this.y > t.y && (this.y = t.y),
        this.z < e.z ? this.z = e.z : this.z > t.z && (this.z = t.z),
        this
    },
    clampScalar: function() {
        var e, t;
        return function(i, n) {
            return void 0 === e && (e = new THREE.Vector3,
            t = new THREE.Vector3),
            e.set(i, i, i),
            t.set(n, n, n),
            this.clamp(e, t)
        }
    }(),
    floor: function() {
        return this.x = Math.floor(this.x),
        this.y = Math.floor(this.y),
        this.z = Math.floor(this.z),
        this
    },
    ceil: function() {
        return this.x = Math.ceil(this.x),
        this.y = Math.ceil(this.y),
        this.z = Math.ceil(this.z),
        this
    },
    round: function() {
        return this.x = Math.round(this.x),
        this.y = Math.round(this.y),
        this.z = Math.round(this.z),
        this
    },
    roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
        this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
        this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
        this
    },
    negate: function() {
        return this.x = -this.x,
        this.y = -this.y,
        this.z = -this.z,
        this
    },
    dot: function(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z
    },
    lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z
    },
    length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
    },
    lengthManhattan: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
    },
    normalize: function() {
        return this.divideScalar(this.length())
    },
    setLength: function(e) {
        var t = this.length();
        return 0 !== t && e !== t && this.multiplyScalar(e / t),
        this
    },
    lerp: function(e, t) {
        return this.x += (e.x - this.x) * t,
        this.y += (e.y - this.y) * t,
        this.z += (e.z - this.z) * t,
        this
    },
    cross: function(e, t) {
        if (void 0 !== t)
            return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),
            this.crossVectors(e, t);
        var i = this.x
          , n = this.y
          , r = this.z;
        return this.x = n * e.z - r * e.y,
        this.y = r * e.x - i * e.z,
        this.z = i * e.y - n * e.x,
        this
    },
    crossVectors: function(e, t) {
        var i = e.x
          , n = e.y
          , r = e.z
          , o = t.x
          , a = t.y
          , s = t.z;
        return this.x = n * s - r * a,
        this.y = r * o - i * s,
        this.z = i * a - n * o,
        this
    },
    projectOnVector: function() {
        var e, t;
        return function(i) {
            return void 0 === e && (e = new THREE.Vector3),
            e.copy(i).normalize(),
            t = this.dot(e),
            this.copy(e).multiplyScalar(t)
        }
    }(),
    projectOnPlane: function() {
        var e;
        return function(t) {
            return void 0 === e && (e = new THREE.Vector3),
            e.copy(this).projectOnVector(t),
            this.sub(e)
        }
    }(),
    reflect: function() {
        var e;
        return function(t) {
            return void 0 === e && (e = new THREE.Vector3),
            this.sub(e.copy(t).multiplyScalar(2 * this.dot(t)))
        }
    }(),
    angleTo: function(e) {
        var t = this.dot(e) / (this.length() * e.length());
        return Math.acos(THREE.Math.clamp(t, -1, 1))
    },
    distanceTo: function(e) {
        return Math.sqrt(this.distanceToSquared(e))
    },
    distanceToSquared: function(e) {
        var t = this.x - e.x
          , i = this.y - e.y
          , n = this.z - e.z;
        return t * t + i * i + n * n
    },
    setEulerFromRotationMatrix: function() {
        console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
    },
    setEulerFromQuaternion: function() {
        console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
    },
    getPositionFromMatrix: function(e) {
        return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),
        this.setFromMatrixPosition(e)
    },
    getScaleFromMatrix: function(e) {
        return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),
        this.setFromMatrixScale(e)
    },
    getColumnFromMatrix: function(e, t) {
        return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),
        this.setFromMatrixColumn(e, t)
    },
    setFromMatrixPosition: function(e) {
        return this.x = e.elements[12],
        this.y = e.elements[13],
        this.z = e.elements[14],
        this
    },
    setFromMatrixScale: function(e) {
        var t = this.set(e.elements[0], e.elements[1], e.elements[2]).length()
          , i = this.set(e.elements[4], e.elements[5], e.elements[6]).length()
          , n = this.set(e.elements[8], e.elements[9], e.elements[10]).length();
        return this.x = t,
        this.y = i,
        this.z = n,
        this
    },
    setFromMatrixColumn: function(e, t) {
        var i = 4 * e
          , n = t.elements;
        return this.x = n[i],
        this.y = n[i + 1],
        this.z = n[i + 2],
        this
    },
    equals: function(e) {
        return e.x === this.x && e.y === this.y && e.z === this.z
    },
    fromArray: function(e, t) {
        return void 0 === t && (t = 0),
        this.x = e[t],
        this.y = e[t + 1],
        this.z = e[t + 2],
        this
    },
    toArray: function(e, t) {
        return void 0 === e && (e = []),
        void 0 === t && (t = 0),
        e[t] = this.x,
        e[t + 1] = this.y,
        e[t + 2] = this.z,
        e
    },
    clone: function() {
        return new THREE.Vector3(this.x,this.y,this.z)
    }
},
THREE.Vector4 = function(e, t, i, n) {
    this.x = e || 0,
    this.y = t || 0,
    this.z = i || 0,
    this.w = void 0 !== n ? n : 1
}
,
THREE.Vector4.prototype = {
    constructor: THREE.Vector4,
    set: function(e, t, i, n) {
        return this.x = e,
        this.y = t,
        this.z = i,
        this.w = n,
        this
    },
    setX: function(e) {
        return this.x = e,
        this
    },
    setY: function(e) {
        return this.y = e,
        this
    },
    setZ: function(e) {
        return this.z = e,
        this
    },
    setW: function(e) {
        return this.w = e,
        this
    },
    setComponent: function(e, t) {
        switch (e) {
        case 0:
            this.x = t;
            break;
        case 1:
            this.y = t;
            break;
        case 2:
            this.z = t;
            break;
        case 3:
            this.w = t;
            break;
        default:
            throw new Error("index is out of range: " + e)
        }
    },
    getComponent: function(e) {
        switch (e) {
        case 0:
            return this.x;
        case 1:
            return this.y;
        case 2:
            return this.z;
        case 3:
            return this.w;
        default:
            throw new Error("index is out of range: " + e)
        }
    },
    copy: function(e) {
        return this.x = e.x,
        this.y = e.y,
        this.z = e.z,
        this.w = void 0 !== e.w ? e.w : 1,
        this
    },
    add: function(e, t) {
        return void 0 !== t ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
        this.addVectors(e, t)) : (this.x += e.x,
        this.y += e.y,
        this.z += e.z,
        this.w += e.w,
        this)
    },
    addScalar: function(e) {
        return this.x += e,
        this.y += e,
        this.z += e,
        this.w += e,
        this
    },
    addVectors: function(e, t) {
        return this.x = e.x + t.x,
        this.y = e.y + t.y,
        this.z = e.z + t.z,
        this.w = e.w + t.w,
        this
    },
    sub: function(e, t) {
        return void 0 !== t ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
        this.subVectors(e, t)) : (this.x -= e.x,
        this.y -= e.y,
        this.z -= e.z,
        this.w -= e.w,
        this)
    },
    subVectors: function(e, t) {
        return this.x = e.x - t.x,
        this.y = e.y - t.y,
        this.z = e.z - t.z,
        this.w = e.w - t.w,
        this
    },
    multiplyScalar: function(e) {
        return this.x *= e,
        this.y *= e,
        this.z *= e,
        this.w *= e,
        this
    },
    applyMatrix4: function(e) {
        var t = this.x
          , i = this.y
          , n = this.z
          , r = this.w
          , o = e.elements;
        return this.x = o[0] * t + o[4] * i + o[8] * n + o[12] * r,
        this.y = o[1] * t + o[5] * i + o[9] * n + o[13] * r,
        this.z = o[2] * t + o[6] * i + o[10] * n + o[14] * r,
        this.w = o[3] * t + o[7] * i + o[11] * n + o[15] * r,
        this
    },
    divideScalar: function(e) {
        if (0 !== e) {
            var t = 1 / e;
            this.x *= t,
            this.y *= t,
            this.z *= t,
            this.w *= t
        } else
            this.x = 0,
            this.y = 0,
            this.z = 0,
            this.w = 1;
        return this
    },
    setAxisAngleFromQuaternion: function(e) {
        this.w = 2 * Math.acos(e.w);
        var t = Math.sqrt(1 - e.w * e.w);
        return 1e-4 > t ? (this.x = 1,
        this.y = 0,
        this.z = 0) : (this.x = e.x / t,
        this.y = e.y / t,
        this.z = e.z / t),
        this
    },
    setAxisAngleFromRotationMatrix: function(e) {
        var t, i, n, r, o = .01, a = .1, s = e.elements, l = s[0], c = s[4], d = s[8], h = s[1], u = s[5], p = s[9], f = s[2], g = s[6], m = s[10];
        if (Math.abs(c - h) < o && Math.abs(d - f) < o && Math.abs(p - g) < o) {
            if (Math.abs(c + h) < a && Math.abs(d + f) < a && Math.abs(p + g) < a && Math.abs(l + u + m - 3) < a)
                return this.set(1, 0, 0, 0),
                this;
            t = Math.PI;
            var v = (l + 1) / 2
              , y = (u + 1) / 2
              , b = (m + 1) / 2
              , w = (c + h) / 4
              , x = (d + f) / 4
              , E = (p + g) / 4;
            return v > y && v > b ? o > v ? (i = 0,
            n = .707106781,
            r = .707106781) : (i = Math.sqrt(v),
            n = w / i,
            r = x / i) : y > b ? o > y ? (i = .707106781,
            n = 0,
            r = .707106781) : (n = Math.sqrt(y),
            i = w / n,
            r = E / n) : o > b ? (i = .707106781,
            n = .707106781,
            r = 0) : (r = Math.sqrt(b),
            i = x / r,
            n = E / r),
            this.set(i, n, r, t),
            this
        }
        var _ = Math.sqrt((g - p) * (g - p) + (d - f) * (d - f) + (h - c) * (h - c));
        return Math.abs(_) < .001 && (_ = 1),
        this.x = (g - p) / _,
        this.y = (d - f) / _,
        this.z = (h - c) / _,
        this.w = Math.acos((l + u + m - 1) / 2),
        this
    },
    min: function(e) {
        return this.x > e.x && (this.x = e.x),
        this.y > e.y && (this.y = e.y),
        this.z > e.z && (this.z = e.z),
        this.w > e.w && (this.w = e.w),
        this
    },
    max: function(e) {
        return this.x < e.x && (this.x = e.x),
        this.y < e.y && (this.y = e.y),
        this.z < e.z && (this.z = e.z),
        this.w < e.w && (this.w = e.w),
        this
    },
    clamp: function(e, t) {
        return this.x < e.x ? this.x = e.x : this.x > t.x && (this.x = t.x),
        this.y < e.y ? this.y = e.y : this.y > t.y && (this.y = t.y),
        this.z < e.z ? this.z = e.z : this.z > t.z && (this.z = t.z),
        this.w < e.w ? this.w = e.w : this.w > t.w && (this.w = t.w),
        this
    },
    clampScalar: function() {
        var e, t;
        return function(i, n) {
            return void 0 === e && (e = new THREE.Vector4,
            t = new THREE.Vector4),
            e.set(i, i, i, i),
            t.set(n, n, n, n),
            this.clamp(e, t)
        }
    }(),
    floor: function() {
        return this.x = Math.floor(this.x),
        this.y = Math.floor(this.y),
        this.z = Math.floor(this.z),
        this.w = Math.floor(this.w),
        this
    },
    ceil: function() {
        return this.x = Math.ceil(this.x),
        this.y = Math.ceil(this.y),
        this.z = Math.ceil(this.z),
        this.w = Math.ceil(this.w),
        this
    },
    round: function() {
        return this.x = Math.round(this.x),
        this.y = Math.round(this.y),
        this.z = Math.round(this.z),
        this.w = Math.round(this.w),
        this
    },
    roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
        this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
        this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
        this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w),
        this
    },
    negate: function() {
        return this.x = -this.x,
        this.y = -this.y,
        this.z = -this.z,
        this.w = -this.w,
        this
    },
    dot: function(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w
    },
    lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
    },
    length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
    },
    lengthManhattan: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
    },
    normalize: function() {
        return this.divideScalar(this.length())
    },
    setLength: function(e) {
        var t = this.length();
        return 0 !== t && e !== t && this.multiplyScalar(e / t),
        this
    },
    lerp: function(e, t) {
        return this.x += (e.x - this.x) * t,
        this.y += (e.y - this.y) * t,
        this.z += (e.z - this.z) * t,
        this.w += (e.w - this.w) * t,
        this
    },
    equals: function(e) {
        return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
    },
    fromArray: function(e, t) {
        return void 0 === t && (t = 0),
        this.x = e[t],
        this.y = e[t + 1],
        this.z = e[t + 2],
        this.w = e[t + 3],
        this
    },
    toArray: function(e, t) {
        return void 0 === e && (e = []),
        void 0 === t && (t = 0),
        e[t] = this.x,
        e[t + 1] = this.y,
        e[t + 2] = this.z,
        e[t + 3] = this.w,
        e
    },
    clone: function() {
        return new THREE.Vector4(this.x,this.y,this.z,this.w)
    }
},
THREE.Euler = function(e, t, i, n) {
    this._x = e || 0,
    this._y = t || 0,
    this._z = i || 0,
    this._order = n || THREE.Euler.DefaultOrder
}
,
THREE.Euler.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"],
THREE.Euler.DefaultOrder = "XYZ",
THREE.Euler.prototype = {
    constructor: THREE.Euler,
    _x: 0,
    _y: 0,
    _z: 0,
    _order: THREE.Euler.DefaultOrder,
    get x() {
        return this._x
    },
    set x(e) {
        this._x = e,
        this.onChangeCallback()
    },
    get y() {
        return this._y
    },
    set y(e) {
        this._y = e,
        this.onChangeCallback()
    },
    get z() {
        return this._z
    },
    set z(e) {
        this._z = e,
        this.onChangeCallback()
    },
    get order() {
        return this._order
    },
    set order(e) {
        this._order = e,
        this.onChangeCallback()
    },
    set: function(e, t, i, n) {
        return this._x = e,
        this._y = t,
        this._z = i,
        this._order = n || this._order,
        this.onChangeCallback(),
        this
    },
    copy: function(e) {
        return this._x = e._x,
        this._y = e._y,
        this._z = e._z,
        this._order = e._order,
        this.onChangeCallback(),
        this
    },
    setFromRotationMatrix: function(e, t) {
        var i = THREE.Math.clamp
          , n = e.elements
          , r = n[0]
          , o = n[4]
          , a = n[8]
          , s = n[1]
          , l = n[5]
          , c = n[9]
          , d = n[2]
          , h = n[6]
          , u = n[10];
        return t = t || this._order,
        "XYZ" === t ? (this._y = Math.asin(i(a, -1, 1)),
        Math.abs(a) < .99999 ? (this._x = Math.atan2(-c, u),
        this._z = Math.atan2(-o, r)) : (this._x = Math.atan2(h, l),
        this._z = 0)) : "YXZ" === t ? (this._x = Math.asin(-i(c, -1, 1)),
        Math.abs(c) < .99999 ? (this._y = Math.atan2(a, u),
        this._z = Math.atan2(s, l)) : (this._y = Math.atan2(-d, r),
        this._z = 0)) : "ZXY" === t ? (this._x = Math.asin(i(h, -1, 1)),
        Math.abs(h) < .99999 ? (this._y = Math.atan2(-d, u),
        this._z = Math.atan2(-o, l)) : (this._y = 0,
        this._z = Math.atan2(s, r))) : "ZYX" === t ? (this._y = Math.asin(-i(d, -1, 1)),
        Math.abs(d) < .99999 ? (this._x = Math.atan2(h, u),
        this._z = Math.atan2(s, r)) : (this._x = 0,
        this._z = Math.atan2(-o, l))) : "YZX" === t ? (this._z = Math.asin(i(s, -1, 1)),
        Math.abs(s) < .99999 ? (this._x = Math.atan2(-c, l),
        this._y = Math.atan2(-d, r)) : (this._x = 0,
        this._y = Math.atan2(a, u))) : "XZY" === t ? (this._z = Math.asin(-i(o, -1, 1)),
        Math.abs(o) < .99999 ? (this._x = Math.atan2(h, l),
        this._y = Math.atan2(a, r)) : (this._x = Math.atan2(-c, u),
        this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + t),
        this._order = t,
        this.onChangeCallback(),
        this
    },
    setFromQuaternion: function(e, t, i) {
        var n = THREE.Math.clamp
          , r = e.x * e.x
          , o = e.y * e.y
          , a = e.z * e.z
          , s = e.w * e.w;
        return t = t || this._order,
        "XYZ" === t ? (this._x = Math.atan2(2 * (e.x * e.w - e.y * e.z), s - r - o + a),
        this._y = Math.asin(n(2 * (e.x * e.z + e.y * e.w), -1, 1)),
        this._z = Math.atan2(2 * (e.z * e.w - e.x * e.y), s + r - o - a)) : "YXZ" === t ? (this._x = Math.asin(n(2 * (e.x * e.w - e.y * e.z), -1, 1)),
        this._y = Math.atan2(2 * (e.x * e.z + e.y * e.w), s - r - o + a),
        this._z = Math.atan2(2 * (e.x * e.y + e.z * e.w), s - r + o - a)) : "ZXY" === t ? (this._x = Math.asin(n(2 * (e.x * e.w + e.y * e.z), -1, 1)),
        this._y = Math.atan2(2 * (e.y * e.w - e.z * e.x), s - r - o + a),
        this._z = Math.atan2(2 * (e.z * e.w - e.x * e.y), s - r + o - a)) : "ZYX" === t ? (this._x = Math.atan2(2 * (e.x * e.w + e.z * e.y), s - r - o + a),
        this._y = Math.asin(n(2 * (e.y * e.w - e.x * e.z), -1, 1)),
        this._z = Math.atan2(2 * (e.x * e.y + e.z * e.w), s + r - o - a)) : "YZX" === t ? (this._x = Math.atan2(2 * (e.x * e.w - e.z * e.y), s - r + o - a),
        this._y = Math.atan2(2 * (e.y * e.w - e.x * e.z), s + r - o - a),
        this._z = Math.asin(n(2 * (e.x * e.y + e.z * e.w), -1, 1))) : "XZY" === t ? (this._x = Math.atan2(2 * (e.x * e.w + e.y * e.z), s - r + o - a),
        this._y = Math.atan2(2 * (e.x * e.z + e.y * e.w), s + r - o - a),
        this._z = Math.asin(n(2 * (e.z * e.w - e.x * e.y), -1, 1))) : console.warn("THREE.Euler: .setFromQuaternion() given unsupported order: " + t),
        this._order = t,
        i !== !1 && this.onChangeCallback(),
        this
    },
    reorder: function() {
        var e = new THREE.Quaternion;
        return function(t) {
            e.setFromEuler(this),
            this.setFromQuaternion(e, t)
        }
    }(),
    equals: function(e) {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order
    },
    fromArray: function(e) {
        return this._x = e[0],
        this._y = e[1],
        this._z = e[2],
        void 0 !== e[3] && (this._order = e[3]),
        this.onChangeCallback(),
        this
    },
    toArray: function() {
        return [this._x, this._y, this._z, this._order]
    },
    onChange: function(e) {
        return this.onChangeCallback = e,
        this
    },
    onChangeCallback: function() {},
    clone: function() {
        return new THREE.Euler(this._x,this._y,this._z,this._order)
    }
},
THREE.Line3 = function(e, t) {
    this.start = void 0 !== e ? e : new THREE.Vector3,
    this.end = void 0 !== t ? t : new THREE.Vector3
}
,
THREE.Line3.prototype = {
    constructor: THREE.Line3,
    set: function(e, t) {
        return this.start.copy(e),
        this.end.copy(t),
        this
    },
    copy: function(e) {
        return this.start.copy(e.start),
        this.end.copy(e.end),
        this
    },
    center: function(e) {
        var t = e || new THREE.Vector3;
        return t.addVectors(this.start, this.end).multiplyScalar(.5)
    },
    delta: function(e) {
        var t = e || new THREE.Vector3;
        return t.subVectors(this.end, this.start)
    },
    distanceSq: function() {
        return this.start.distanceToSquared(this.end)
    },
    distance: function() {
        return this.start.distanceTo(this.end)
    },
    at: function(e, t) {
        var i = t || new THREE.Vector3;
        return this.delta(i).multiplyScalar(e).add(this.start)
    },
    closestPointToPointParameter: function() {
        var e = new THREE.Vector3
          , t = new THREE.Vector3;
        return function(i, n) {
            e.subVectors(i, this.start),
            t.subVectors(this.end, this.start);
            var r = t.dot(t)
              , o = t.dot(e)
              , a = o / r;
            return n && (a = THREE.Math.clamp(a, 0, 1)),
            a
        }
    }(),
    closestPointToPoint: function(e, t, i) {
        var n = this.closestPointToPointParameter(e, t)
          , r = i || new THREE.Vector3;
        return this.delta(r).multiplyScalar(n).add(this.start)
    },
    applyMatrix4: function(e) {
        return this.start.applyMatrix4(e),
        this.end.applyMatrix4(e),
        this
    },
    equals: function(e) {
        return e.start.equals(this.start) && e.end.equals(this.end)
    },
    clone: function() {
        return (new THREE.Line3).copy(this)
    }
},
THREE.Box2 = function(e, t) {
    this.min = void 0 !== e ? e : new THREE.Vector2(1 / 0,1 / 0),
    this.max = void 0 !== t ? t : new THREE.Vector2(-1 / 0,-1 / 0)
}
,
THREE.Box2.prototype = {
    constructor: THREE.Box2,
    set: function(e, t) {
        return this.min.copy(e),
        this.max.copy(t),
        this
    },
    setFromPoints: function(e) {
        this.makeEmpty();
        for (var t = 0, i = e.length; i > t; t++)
            this.expandByPoint(e[t]);
        return this
    },
    setFromCenterAndSize: function() {
        var e = new THREE.Vector2;
        return function(t, i) {
            var n = e.copy(i).multiplyScalar(.5);
            return this.min.copy(t).sub(n),
            this.max.copy(t).add(n),
            this
        }
    }(),
    copy: function(e) {
        return this.min.copy(e.min),
        this.max.copy(e.max),
        this
    },
    makeEmpty: function() {
        return this.min.x = this.min.y = 1 / 0,
        this.max.x = this.max.y = -1 / 0,
        this
    },
    empty: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y
    },
    center: function(e) {
        var t = e || new THREE.Vector2;
        return t.addVectors(this.min, this.max).multiplyScalar(.5)
    },
    size: function(e) {
        var t = e || new THREE.Vector2;
        return t.subVectors(this.max, this.min)
    },
    expandByPoint: function(e) {
        return this.min.min(e),
        this.max.max(e),
        this
    },
    expandByVector: function(e) {
        return this.min.sub(e),
        this.max.add(e),
        this
    },
    expandByScalar: function(e) {
        return this.min.addScalar(-e),
        this.max.addScalar(e),
        this
    },
    containsPoint: function(e) {
        return e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y ? !1 : !0
    },
    containsBox: function(e) {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y ? !0 : !1
    },
    getParameter: function(e, t) {
        var i = t || new THREE.Vector2;
        return i.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y))
    },
    isIntersectionBox: function(e) {
        return e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y ? !1 : !0
    },
    clampPoint: function(e, t) {
        var i = t || new THREE.Vector2;
        return i.copy(e).clamp(this.min, this.max)
    },
    distanceToPoint: function() {
        var e = new THREE.Vector2;
        return function(t) {
            var i = e.copy(t).clamp(this.min, this.max);
            return i.sub(t).length()
        }
    }(),
    intersect: function(e) {
        return this.min.max(e.min),
        this.max.min(e.max),
        this
    },
    union: function(e) {
        return this.min.min(e.min),
        this.max.max(e.max),
        this
    },
    translate: function(e) {
        return this.min.add(e),
        this.max.add(e),
        this
    },
    equals: function(e) {
        return e.min.equals(this.min) && e.max.equals(this.max)
    },
    clone: function() {
        return (new THREE.Box2).copy(this)
    }
},
THREE.Box3 = function(e, t) {
    this.min = void 0 !== e ? e : new THREE.Vector3(1 / 0,1 / 0,1 / 0),
    this.max = void 0 !== t ? t : new THREE.Vector3(-1 / 0,-1 / 0,-1 / 0)
}
,
THREE.Box3.prototype = {
    constructor: THREE.Box3,
    set: function(e, t) {
        return this.min.copy(e),
        this.max.copy(t),
        this
    },
    setFromPoints: function(e) {
        this.makeEmpty();
        for (var t = 0, i = e.length; i > t; t++)
            this.expandByPoint(e[t]);
        return this
    },
    setFromCenterAndSize: function() {
        var e = new THREE.Vector3;
        return function(t, i) {
            var n = e.copy(i).multiplyScalar(.5);
            return this.min.copy(t).sub(n),
            this.max.copy(t).add(n),
            this
        }
    }(),
    setFromObject: function() {
        var e = new THREE.Vector3;
        return function(t) {
            var i = this;
            return t.updateMatrixWorld(!0),
            this.makeEmpty(),
            t.traverse(function(t) {
                var n = t.geometry;
                if (void 0 !== n)
                    if (n instanceof THREE.Geometry)
                        for (var r = n.vertices, o = 0, a = r.length; a > o; o++)
                            e.copy(r[o]),
                            e.applyMatrix4(t.matrixWorld),
                            i.expandByPoint(e);
                    else if (n instanceof THREE.BufferGeometry && void 0 !== n.attributes.position)
                        for (var s = n.attributes.position.array, o = 0, a = s.length; a > o; o += 3)
                            e.set(s[o], s[o + 1], s[o + 2]),
                            e.applyMatrix4(t.matrixWorld),
                            i.expandByPoint(e)
            }),
            this
        }
    }(),
    copy: function(e) {
        return this.min.copy(e.min),
        this.max.copy(e.max),
        this
    },
    makeEmpty: function() {
        return this.min.x = this.min.y = this.min.z = 1 / 0,
        this.max.x = this.max.y = this.max.z = -1 / 0,
        this
    },
    empty: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
    },
    center: function(e) {
        var t = e || new THREE.Vector3;
        return t.addVectors(this.min, this.max).multiplyScalar(.5)
    },
    size: function(e) {
        var t = e || new THREE.Vector3;
        return t.subVectors(this.max, this.min)
    },
    expandByPoint: function(e) {
        return this.min.min(e),
        this.max.max(e),
        this
    },
    expandByVector: function(e) {
        return this.min.sub(e),
        this.max.add(e),
        this
    },
    expandByScalar: function(e) {
        return this.min.addScalar(-e),
        this.max.addScalar(e),
        this
    },
    containsPoint: function(e) {
        return e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z ? !1 : !0
    },
    containsBox: function(e) {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z ? !0 : !1
    },
    getParameter: function(e, t) {
        var i = t || new THREE.Vector3;
        return i.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z))
    },
    isIntersectionBox: function(e) {
        return e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z ? !1 : !0
    },
    clampPoint: function(e, t) {
        var i = t || new THREE.Vector3;
        return i.copy(e).clamp(this.min, this.max)
    },
    distanceToPoint: function() {
        var e = new THREE.Vector3;
        return function(t) {
            var i = e.copy(t).clamp(this.min, this.max);
            return i.sub(t).length()
        }
    }(),
    getBoundingSphere: function() {
        var e = new THREE.Vector3;
        return function(t) {
            var i = t || new THREE.Sphere;
            return i.center = this.center(),
            i.radius = .5 * this.size(e).length(),
            i
        }
    }(),
    intersect: function(e) {
        return this.min.max(e.min),
        this.max.min(e.max),
        this
    },
    union: function(e) {
        return this.min.min(e.min),
        this.max.max(e.max),
        this
    },
    applyMatrix4: function() {
        var e = [new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3];
        return function(t) {
            return e[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(t),
            e[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(t),
            e[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(t),
            e[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(t),
            e[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(t),
            e[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(t),
            e[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(t),
            e[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(t),
            this.makeEmpty(),
            this.setFromPoints(e),
            this
        }
    }(),
    translate: function(e) {
        return this.min.add(e),
        this.max.add(e),
        this
    },
    equals: function(e) {
        return e.min.equals(this.min) && e.max.equals(this.max)
    },
    clone: function() {
        return (new THREE.Box3).copy(this)
    }
},
THREE.Matrix3 = function() {
    this.elements = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]),
    arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
}
,
THREE.Matrix3.prototype = {
    constructor: THREE.Matrix3,
    set: function(e, t, i, n, r, o, a, s, l) {
        var c = this.elements;
        return c[0] = e,
        c[3] = t,
        c[6] = i,
        c[1] = n,
        c[4] = r,
        c[7] = o,
        c[2] = a,
        c[5] = s,
        c[8] = l,
        this
    },
    identity: function() {
        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1),
        this
    },
    copy: function(e) {
        var t = e.elements;
        return this.set(t[0], t[3], t[6], t[1], t[4], t[7], t[2], t[5], t[8]),
        this
    },
    multiplyVector3: function(e) {
        return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),
        e.applyMatrix3(this)
    },
    multiplyVector3Array: function(e) {
        return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),
        this.applyToVector3Array(e)
    },
    applyToVector3Array: function() {
        var e = new THREE.Vector3;
        return function(t, i, n) {
            void 0 === i && (i = 0),
            void 0 === n && (n = t.length);
            for (var r = 0, o = i; n > r; r += 3,
            o += 3)
                e.x = t[o],
                e.y = t[o + 1],
                e.z = t[o + 2],
                e.applyMatrix3(this),
                t[o] = e.x,
                t[o + 1] = e.y,
                t[o + 2] = e.z;
            return t
        }
    }(),
    multiplyScalar: function(e) {
        var t = this.elements;
        return t[0] *= e,
        t[3] *= e,
        t[6] *= e,
        t[1] *= e,
        t[4] *= e,
        t[7] *= e,
        t[2] *= e,
        t[5] *= e,
        t[8] *= e,
        this
    },
    determinant: function() {
        var e = this.elements
          , t = e[0]
          , i = e[1]
          , n = e[2]
          , r = e[3]
          , o = e[4]
          , a = e[5]
          , s = e[6]
          , l = e[7]
          , c = e[8];
        return t * o * c - t * a * l - i * r * c + i * a * s + n * r * l - n * o * s
    },
    getInverse: function(e, t) {
        var i = e.elements
          , n = this.elements;
        n[0] = i[10] * i[5] - i[6] * i[9],
        n[1] = -i[10] * i[1] + i[2] * i[9],
        n[2] = i[6] * i[1] - i[2] * i[5],
        n[3] = -i[10] * i[4] + i[6] * i[8],
        n[4] = i[10] * i[0] - i[2] * i[8],
        n[5] = -i[6] * i[0] + i[2] * i[4],
        n[6] = i[9] * i[4] - i[5] * i[8],
        n[7] = -i[9] * i[0] + i[1] * i[8],
        n[8] = i[5] * i[0] - i[1] * i[4];
        var r = i[0] * n[0] + i[1] * n[3] + i[2] * n[6];
        if (0 === r) {
            var o = "Matrix3.getInverse(): can't invert matrix, determinant is 0";
            if (t)
                throw new Error(o);
            return console.warn(o),
            this.identity(),
            this
        }
        return this.multiplyScalar(1 / r),
        this
    },
    transpose: function() {
        var e, t = this.elements;
        return e = t[1],
        t[1] = t[3],
        t[3] = e,
        e = t[2],
        t[2] = t[6],
        t[6] = e,
        e = t[5],
        t[5] = t[7],
        t[7] = e,
        this
    },
    flattenToArrayOffset: function(e, t) {
        var i = this.elements;
        return e[t] = i[0],
        e[t + 1] = i[1],
        e[t + 2] = i[2],
        e[t + 3] = i[3],
        e[t + 4] = i[4],
        e[t + 5] = i[5],
        e[t + 6] = i[6],
        e[t + 7] = i[7],
        e[t + 8] = i[8],
        e
    },
    getNormalMatrix: function(e) {
        return this.getInverse(e).transpose(),
        this
    },
    transposeIntoArray: function(e) {
        var t = this.elements;
        return e[0] = t[0],
        e[1] = t[3],
        e[2] = t[6],
        e[3] = t[1],
        e[4] = t[4],
        e[5] = t[7],
        e[6] = t[2],
        e[7] = t[5],
        e[8] = t[8],
        this
    },
    fromArray: function(e) {
        return this.elements.set(e),
        this
    },
    toArray: function() {
        var e = this.elements;
        return [e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8]]
    },
    clone: function() {
        return (new THREE.Matrix3).fromArray(this.elements)
    }
},
THREE.Matrix4 = function() {
    this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
    arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
}
,
THREE.Matrix4.prototype = {
    constructor: THREE.Matrix4,
    set: function(e, t, i, n, r, o, a, s, l, c, d, h, u, p, f, g) {
        var m = this.elements;
        return m[0] = e,
        m[4] = t,
        m[8] = i,
        m[12] = n,
        m[1] = r,
        m[5] = o,
        m[9] = a,
        m[13] = s,
        m[2] = l,
        m[6] = c,
        m[10] = d,
        m[14] = h,
        m[3] = u,
        m[7] = p,
        m[11] = f,
        m[15] = g,
        this
    },
    identity: function() {
        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
        this
    },
    copy: function(e) {
        return this.elements.set(e.elements),
        this
    },
    extractPosition: function(e) {
        return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),
        this.copyPosition(e)
    },
    copyPosition: function(e) {
        var t = this.elements
          , i = e.elements;
        return t[12] = i[12],
        t[13] = i[13],
        t[14] = i[14],
        this
    },
    extractRotation: function() {
        var e = new THREE.Vector3;
        return function(t) {
            var i = this.elements
              , n = t.elements
              , r = 1 / e.set(n[0], n[1], n[2]).length()
              , o = 1 / e.set(n[4], n[5], n[6]).length()
              , a = 1 / e.set(n[8], n[9], n[10]).length();
            return i[0] = n[0] * r,
            i[1] = n[1] * r,
            i[2] = n[2] * r,
            i[4] = n[4] * o,
            i[5] = n[5] * o,
            i[6] = n[6] * o,
            i[8] = n[8] * a,
            i[9] = n[9] * a,
            i[10] = n[10] * a,
            this
        }
    }(),
    makeRotationFromEuler: function(e) {
        e instanceof THREE.Euler == !1 && console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        var t = this.elements
          , i = e.x
          , n = e.y
          , r = e.z
          , o = Math.cos(i)
          , a = Math.sin(i)
          , s = Math.cos(n)
          , l = Math.sin(n)
          , c = Math.cos(r)
          , d = Math.sin(r);
        if ("XYZ" === e.order) {
            var h = o * c
              , u = o * d
              , p = a * c
              , f = a * d;
            t[0] = s * c,
            t[4] = -s * d,
            t[8] = l,
            t[1] = u + p * l,
            t[5] = h - f * l,
            t[9] = -a * s,
            t[2] = f - h * l,
            t[6] = p + u * l,
            t[10] = o * s
        } else if ("YXZ" === e.order) {
            var g = s * c
              , m = s * d
              , v = l * c
              , y = l * d;
            t[0] = g + y * a,
            t[4] = v * a - m,
            t[8] = o * l,
            t[1] = o * d,
            t[5] = o * c,
            t[9] = -a,
            t[2] = m * a - v,
            t[6] = y + g * a,
            t[10] = o * s
        } else if ("ZXY" === e.order) {
            var g = s * c
              , m = s * d
              , v = l * c
              , y = l * d;
            t[0] = g - y * a,
            t[4] = -o * d,
            t[8] = v + m * a,
            t[1] = m + v * a,
            t[5] = o * c,
            t[9] = y - g * a,
            t[2] = -o * l,
            t[6] = a,
            t[10] = o * s
        } else if ("ZYX" === e.order) {
            var h = o * c
              , u = o * d
              , p = a * c
              , f = a * d;
            t[0] = s * c,
            t[4] = p * l - u,
            t[8] = h * l + f,
            t[1] = s * d,
            t[5] = f * l + h,
            t[9] = u * l - p,
            t[2] = -l,
            t[6] = a * s,
            t[10] = o * s
        } else if ("YZX" === e.order) {
            var b = o * s
              , w = o * l
              , x = a * s
              , E = a * l;
            t[0] = s * c,
            t[4] = E - b * d,
            t[8] = x * d + w,
            t[1] = d,
            t[5] = o * c,
            t[9] = -a * c,
            t[2] = -l * c,
            t[6] = w * d + x,
            t[10] = b - E * d
        } else if ("XZY" === e.order) {
            var b = o * s
              , w = o * l
              , x = a * s
              , E = a * l;
            t[0] = s * c,
            t[4] = -d,
            t[8] = l * c,
            t[1] = b * d + E,
            t[5] = o * c,
            t[9] = w * d - x,
            t[2] = x * d - w,
            t[6] = a * c,
            t[10] = E * d + b
        }
        return t[3] = 0,
        t[7] = 0,
        t[11] = 0,
        t[12] = 0,
        t[13] = 0,
        t[14] = 0,
        t[15] = 1,
        this
    },
    setRotationFromQuaternion: function(e) {
        return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),
        this.makeRotationFromQuaternion(e)
    },
    makeRotationFromQuaternion: function(e) {
        var t = this.elements
          , i = e.x
          , n = e.y
          , r = e.z
          , o = e.w
          , a = i + i
          , s = n + n
          , l = r + r
          , c = i * a
          , d = i * s
          , h = i * l
          , u = n * s
          , p = n * l
          , f = r * l
          , g = o * a
          , m = o * s
          , v = o * l;
        return t[0] = 1 - (u + f),
        t[4] = d - v,
        t[8] = h + m,
        t[1] = d + v,
        t[5] = 1 - (c + f),
        t[9] = p - g,
        t[2] = h - m,
        t[6] = p + g,
        t[10] = 1 - (c + u),
        t[3] = 0,
        t[7] = 0,
        t[11] = 0,
        t[12] = 0,
        t[13] = 0,
        t[14] = 0,
        t[15] = 1,
        this
    },
    lookAt: function() {
        var e = new THREE.Vector3
          , t = new THREE.Vector3
          , i = new THREE.Vector3;
        return function(n, r, o) {
            var a = this.elements;
            return i.subVectors(n, r).normalize(),
            0 === i.length() && (i.z = 1),
            e.crossVectors(o, i).normalize(),
            0 === e.length() && (i.x += 1e-4,
            e.crossVectors(o, i).normalize()),
            t.crossVectors(i, e),
            a[0] = e.x,
            a[4] = t.x,
            a[8] = i.x,
            a[1] = e.y,
            a[5] = t.y,
            a[9] = i.y,
            a[2] = e.z,
            a[6] = t.z,
            a[10] = i.z,
            this
        }
    }(),
    multiply: function(e, t) {
        return void 0 !== t ? this.multiplyMatrices(e, t) : this.multiplyMatrices(this, e)
    },
    multiplyMatrices: function(e, t) {
        var i = e.elements
          , n = t.elements
          , r = this.elements
          , o = i[0]
          , a = i[4]
          , s = i[8]
          , l = i[12]
          , c = i[1]
          , d = i[5]
          , h = i[9]
          , u = i[13]
          , p = i[2]
          , f = i[6]
          , g = i[10]
          , m = i[14]
          , v = i[3]
          , y = i[7]
          , b = i[11]
          , w = i[15]
          , x = n[0]
          , E = n[4]
          , _ = n[8]
          , T = n[12]
          , C = n[1]
          , R = n[5]
          , S = n[9]
          , k = n[13]
          , M = n[2]
          , A = n[6]
          , H = n[10]
          , P = n[14]
          , O = n[3]
          , D = n[7]
          , $ = n[11]
          , L = n[15];
        return r[0] = o * x + a * C + s * M + l * O,
        r[4] = o * E + a * R + s * A + l * D,
        r[8] = o * _ + a * S + s * H + l * $,
        r[12] = o * T + a * k + s * P + l * L,
        r[1] = c * x + d * C + h * M + u * O,
        r[5] = c * E + d * R + h * A + u * D,
        r[9] = c * _ + d * S + h * H + u * $,
        r[13] = c * T + d * k + h * P + u * L,
        r[2] = p * x + f * C + g * M + m * O,
        r[6] = p * E + f * R + g * A + m * D,
        r[10] = p * _ + f * S + g * H + m * $,
        r[14] = p * T + f * k + g * P + m * L,
        r[3] = v * x + y * C + b * M + w * O,
        r[7] = v * E + y * R + b * A + w * D,
        r[11] = v * _ + y * S + b * H + w * $,
        r[15] = v * T + y * k + b * P + w * L,
        this
    },
    multiplyToArray: function(e, t, i) {
        var n = this.elements;
        return this.multiplyMatrices(e, t),
        i[0] = n[0],
        i[1] = n[1],
        i[2] = n[2],
        i[3] = n[3],
        i[4] = n[4],
        i[5] = n[5],
        i[6] = n[6],
        i[7] = n[7],
        i[8] = n[8],
        i[9] = n[9],
        i[10] = n[10],
        i[11] = n[11],
        i[12] = n[12],
        i[13] = n[13],
        i[14] = n[14],
        i[15] = n[15],
        this
    },
    multiplyScalar: function(e) {
        var t = this.elements;
        return t[0] *= e,
        t[4] *= e,
        t[8] *= e,
        t[12] *= e,
        t[1] *= e,
        t[5] *= e,
        t[9] *= e,
        t[13] *= e,
        t[2] *= e,
        t[6] *= e,
        t[10] *= e,
        t[14] *= e,
        t[3] *= e,
        t[7] *= e,
        t[11] *= e,
        t[15] *= e,
        this
    },
    multiplyVector3: function(e) {
        return e.applyProjection(this)
    },
    multiplyVector4: function(e) {
        return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),
        e.applyMatrix4(this)
    },
    multiplyVector3Array: function(e) {
        return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),
        this.applyToVector3Array(e)
    },
    applyToVector3Array: function() {
        var e = new THREE.Vector3;
        return function(t, i, n) {
            void 0 === i && (i = 0),
            void 0 === n && (n = t.length);
            for (var r = 0, o = i; n > r; r += 3,
            o += 3)
                e.x = t[o],
                e.y = t[o + 1],
                e.z = t[o + 2],
                e.applyMatrix4(this),
                t[o] = e.x,
                t[o + 1] = e.y,
                t[o + 2] = e.z;
            return t
        }
    }(),
    rotateAxis: function(e) {
        console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),
        e.transformDirection(this)
    },
    crossVector: function(e) {
        return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),
        e.applyMatrix4(this)
    },
    determinant: function() {
        var e = this.elements
          , t = e[0]
          , i = e[4]
          , n = e[8]
          , r = e[12]
          , o = e[1]
          , a = e[5]
          , s = e[9]
          , l = e[13]
          , c = e[2]
          , d = e[6]
          , h = e[10]
          , u = e[14]
          , p = e[3]
          , f = e[7]
          , g = e[11]
          , m = e[15];
        return p * (+r * s * d - n * l * d - r * a * h + i * l * h + n * a * u - i * s * u) + f * (+t * s * u - t * l * h + r * o * h - n * o * u + n * l * c - r * s * c) + g * (+t * l * d - t * a * u - r * o * d + i * o * u + r * a * c - i * l * c) + m * (-n * a * c - t * s * d + t * a * h + n * o * d - i * o * h + i * s * c)
    },
    transpose: function() {
        var e, t = this.elements;
        return e = t[1],
        t[1] = t[4],
        t[4] = e,
        e = t[2],
        t[2] = t[8],
        t[8] = e,
        e = t[6],
        t[6] = t[9],
        t[9] = e,
        e = t[3],
        t[3] = t[12],
        t[12] = e,
        e = t[7],
        t[7] = t[13],
        t[13] = e,
        e = t[11],
        t[11] = t[14],
        t[14] = e,
        this
    },
    flattenToArrayOffset: function(e, t) {
        var i = this.elements;
        return e[t] = i[0],
        e[t + 1] = i[1],
        e[t + 2] = i[2],
        e[t + 3] = i[3],
        e[t + 4] = i[4],
        e[t + 5] = i[5],
        e[t + 6] = i[6],
        e[t + 7] = i[7],
        e[t + 8] = i[8],
        e[t + 9] = i[9],
        e[t + 10] = i[10],
        e[t + 11] = i[11],
        e[t + 12] = i[12],
        e[t + 13] = i[13],
        e[t + 14] = i[14],
        e[t + 15] = i[15],
        e
    },
    getPosition: function() {
        var e = new THREE.Vector3;
        return function() {
            console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");
            var t = this.elements;
            return e.set(t[12], t[13], t[14])
        }
    }(),
    setPosition: function(e) {
        var t = this.elements;
        return t[12] = e.x,
        t[13] = e.y,
        t[14] = e.z,
        this
    },
    getInverse: function(e, t) {
        var i = this.elements
          , n = e.elements
          , r = n[0]
          , o = n[4]
          , a = n[8]
          , s = n[12]
          , l = n[1]
          , c = n[5]
          , d = n[9]
          , h = n[13]
          , u = n[2]
          , p = n[6]
          , f = n[10]
          , g = n[14]
          , m = n[3]
          , v = n[7]
          , y = n[11]
          , b = n[15];
        i[0] = d * g * v - h * f * v + h * p * y - c * g * y - d * p * b + c * f * b,
        i[4] = s * f * v - a * g * v - s * p * y + o * g * y + a * p * b - o * f * b,
        i[8] = a * h * v - s * d * v + s * c * y - o * h * y - a * c * b + o * d * b,
        i[12] = s * d * p - a * h * p - s * c * f + o * h * f + a * c * g - o * d * g,
        i[1] = h * f * m - d * g * m - h * u * y + l * g * y + d * u * b - l * f * b,
        i[5] = a * g * m - s * f * m + s * u * y - r * g * y - a * u * b + r * f * b,
        i[9] = s * d * m - a * h * m - s * l * y + r * h * y + a * l * b - r * d * b,
        i[13] = a * h * u - s * d * u + s * l * f - r * h * f - a * l * g + r * d * g,
        i[2] = c * g * m - h * p * m + h * u * v - l * g * v - c * u * b + l * p * b,
        i[6] = s * p * m - o * g * m - s * u * v + r * g * v + o * u * b - r * p * b,
        i[10] = o * h * m - s * c * m + s * l * v - r * h * v - o * l * b + r * c * b,
        i[14] = s * c * u - o * h * u - s * l * p + r * h * p + o * l * g - r * c * g,
        i[3] = d * p * m - c * f * m - d * u * v + l * f * v + c * u * y - l * p * y,
        i[7] = o * f * m - a * p * m + a * u * v - r * f * v - o * u * y + r * p * y,
        i[11] = a * c * m - o * d * m - a * l * v + r * d * v + o * l * y - r * c * y,
        i[15] = o * d * u - a * c * u + a * l * p - r * d * p - o * l * f + r * c * f;
        var w = r * i[0] + l * i[4] + u * i[8] + m * i[12];
        if (0 == w) {
            var x = "Matrix4.getInverse(): can't invert matrix, determinant is 0";
            if (t)
                throw new Error(x);
            return console.warn(x),
            this.identity(),
            this
        }
        return this.multiplyScalar(1 / w),
        this
    },
    translate: function() {
        console.warn("THREE.Matrix4: .translate() has been removed.")
    },
    rotateX: function() {
        console.warn("THREE.Matrix4: .rotateX() has been removed.")
    },
    rotateY: function() {
        console.warn("THREE.Matrix4: .rotateY() has been removed.")
    },
    rotateZ: function() {
        console.warn("THREE.Matrix4: .rotateZ() has been removed.")
    },
    rotateByAxis: function() {
        console.warn("THREE.Matrix4: .rotateByAxis() has been removed.")
    },
    scale: function(e) {
        var t = this.elements
          , i = e.x
          , n = e.y
          , r = e.z;
        return t[0] *= i,
        t[4] *= n,
        t[8] *= r,
        t[1] *= i,
        t[5] *= n,
        t[9] *= r,
        t[2] *= i,
        t[6] *= n,
        t[10] *= r,
        t[3] *= i,
        t[7] *= n,
        t[11] *= r,
        this
    },
    getMaxScaleOnAxis: function() {
        var e = this.elements
          , t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2]
          , i = e[4] * e[4] + e[5] * e[5] + e[6] * e[6]
          , n = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
        return Math.sqrt(Math.max(t, Math.max(i, n)))
    },
    makeTranslation: function(e, t, i) {
        return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, i, 0, 0, 0, 1),
        this
    },
    makeRotationX: function(e) {
        var t = Math.cos(e)
          , i = Math.sin(e);
        return this.set(1, 0, 0, 0, 0, t, -i, 0, 0, i, t, 0, 0, 0, 0, 1),
        this
    },
    makeRotationY: function(e) {
        var t = Math.cos(e)
          , i = Math.sin(e);
        return this.set(t, 0, i, 0, 0, 1, 0, 0, -i, 0, t, 0, 0, 0, 0, 1),
        this
    },
    makeRotationZ: function(e) {
        var t = Math.cos(e)
          , i = Math.sin(e);
        return this.set(t, -i, 0, 0, i, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
        this
    },
    makeRotationAxis: function(e, t) {
        var i = Math.cos(t)
          , n = Math.sin(t)
          , r = 1 - i
          , o = e.x
          , a = e.y
          , s = e.z
          , l = r * o
          , c = r * a;
        return this.set(l * o + i, l * a - n * s, l * s + n * a, 0, l * a + n * s, c * a + i, c * s - n * o, 0, l * s - n * a, c * s + n * o, r * s * s + i, 0, 0, 0, 0, 1),
        this
    },
    makeScale: function(e, t, i) {
        return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, i, 0, 0, 0, 0, 1),
        this
    },
    compose: function(e, t, i) {
        return this.makeRotationFromQuaternion(t),
        this.scale(i),
        this.setPosition(e),
        this
    },
    decompose: function() {
        var e = new THREE.Vector3
          , t = new THREE.Matrix4;
        return function(i, n, r) {
            var o = this.elements
              , a = e.set(o[0], o[1], o[2]).length()
              , s = e.set(o[4], o[5], o[6]).length()
              , l = e.set(o[8], o[9], o[10]).length()
              , c = this.determinant();
            0 > c && (a = -a),
            i.x = o[12],
            i.y = o[13],
            i.z = o[14],
            t.elements.set(this.elements);
            var d = 1 / a
              , h = 1 / s
              , u = 1 / l;
            return t.elements[0] *= d,
            t.elements[1] *= d,
            t.elements[2] *= d,
            t.elements[4] *= h,
            t.elements[5] *= h,
            t.elements[6] *= h,
            t.elements[8] *= u,
            t.elements[9] *= u,
            t.elements[10] *= u,
            n.setFromRotationMatrix(t),
            r.x = a,
            r.y = s,
            r.z = l,
            this
        }
    }(),
    makeFrustum: function(e, t, i, n, r, o) {
        var a = this.elements
          , s = 2 * r / (t - e)
          , l = 2 * r / (n - i)
          , c = (t + e) / (t - e)
          , d = (n + i) / (n - i)
          , h = -(o + r) / (o - r)
          , u = -2 * o * r / (o - r);
        return a[0] = s,
        a[4] = 0,
        a[8] = c,
        a[12] = 0,
        a[1] = 0,
        a[5] = l,
        a[9] = d,
        a[13] = 0,
        a[2] = 0,
        a[6] = 0,
        a[10] = h,
        a[14] = u,
        a[3] = 0,
        a[7] = 0,
        a[11] = -1,
        a[15] = 0,
        this
    },
    makePerspective: function(e, t, i, n) {
        var r = i * Math.tan(THREE.Math.degToRad(.5 * e))
          , o = -r
          , a = o * t
          , s = r * t;
        return this.makeFrustum(a, s, o, r, i, n)
    },
    makeOrthographic: function(e, t, i, n, r, o) {
        var a = this.elements
          , s = t - e
          , l = i - n
          , c = o - r
          , d = (t + e) / s
          , h = (i + n) / l
          , u = (o + r) / c;
        return a[0] = 2 / s,
        a[4] = 0,
        a[8] = 0,
        a[12] = -d,
        a[1] = 0,
        a[5] = 2 / l,
        a[9] = 0,
        a[13] = -h,
        a[2] = 0,
        a[6] = 0,
        a[10] = -2 / c,
        a[14] = -u,
        a[3] = 0,
        a[7] = 0,
        a[11] = 0,
        a[15] = 1,
        this
    },
    fromArray: function(e) {
        return this.elements.set(e),
        this
    },
    toArray: function() {
        var e = this.elements;
        return [e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9], e[10], e[11], e[12], e[13], e[14], e[15]]
    },
    clone: function() {
        return (new THREE.Matrix4).fromArray(this.elements)
    }
},
THREE.Ray = function(e, t) {
    this.origin = void 0 !== e ? e : new THREE.Vector3,
    this.direction = void 0 !== t ? t : new THREE.Vector3
}
,
THREE.Ray.prototype = {
    constructor: THREE.Ray,
    set: function(e, t) {
        return this.origin.copy(e),
        this.direction.copy(t),
        this
    },
    copy: function(e) {
        return this.origin.copy(e.origin),
        this.direction.copy(e.direction),
        this
    },
    at: function(e, t) {
        var i = t || new THREE.Vector3;
        return i.copy(this.direction).multiplyScalar(e).add(this.origin)
    },
    recast: function() {
        var e = new THREE.Vector3;
        return function(t) {
            return this.origin.copy(this.at(t, e)),
            this
        }
    }(),
    closestPointToPoint: function(e, t) {
        var i = t || new THREE.Vector3;
        i.subVectors(e, this.origin);
        var n = i.dot(this.direction);
        return 0 > n ? i.copy(this.origin) : i.copy(this.direction).multiplyScalar(n).add(this.origin)
    },
    distanceToPoint: function() {
        var e = new THREE.Vector3;
        return function(t) {
            var i = e.subVectors(t, this.origin).dot(this.direction);
            return 0 > i ? this.origin.distanceTo(t) : (e.copy(this.direction).multiplyScalar(i).add(this.origin),
            e.distanceTo(t))
        }
    }(),
    distanceSqToSegment: function(e, t, i, n) {
        var r, o, a, s, l = e.clone().add(t).multiplyScalar(.5), c = t.clone().sub(e).normalize(), d = .5 * e.distanceTo(t), h = this.origin.clone().sub(l), u = -this.direction.dot(c), p = h.dot(this.direction), f = -h.dot(c), g = h.lengthSq(), m = Math.abs(1 - u * u);
        if (m >= 0)
            if (r = u * f - p,
            o = u * p - f,
            s = d * m,
            r >= 0)
                if (o >= -s)
                    if (s >= o) {
                        var v = 1 / m;
                        r *= v,
                        o *= v,
                        a = r * (r + u * o + 2 * p) + o * (u * r + o + 2 * f) + g
                    } else
                        o = d,
                        r = Math.max(0, -(u * o + p)),
                        a = -r * r + o * (o + 2 * f) + g;
                else
                    o = -d,
                    r = Math.max(0, -(u * o + p)),
                    a = -r * r + o * (o + 2 * f) + g;
            else
                -s >= o ? (r = Math.max(0, -(-u * d + p)),
                o = r > 0 ? -d : Math.min(Math.max(-d, -f), d),
                a = -r * r + o * (o + 2 * f) + g) : s >= o ? (r = 0,
                o = Math.min(Math.max(-d, -f), d),
                a = o * (o + 2 * f) + g) : (r = Math.max(0, -(u * d + p)),
                o = r > 0 ? d : Math.min(Math.max(-d, -f), d),
                a = -r * r + o * (o + 2 * f) + g);
        else
            o = u > 0 ? -d : d,
            r = Math.max(0, -(u * o + p)),
            a = -r * r + o * (o + 2 * f) + g;
        return i && i.copy(this.direction.clone().multiplyScalar(r).add(this.origin)),
        n && n.copy(c.clone().multiplyScalar(o).add(l)),
        a
    },
    isIntersectionSphere: function(e) {
        return this.distanceToPoint(e.center) <= e.radius
    },
    intersectSphere: function() {
        var e = new THREE.Vector3;
        return function(t, i) {
            e.subVectors(t.center, this.origin);
            var n = e.dot(this.direction)
              , r = e.dot(e) - n * n
              , o = t.radius * t.radius;
            if (r > o)
                return null ;
            var a = Math.sqrt(o - r)
              , s = n - a
              , l = n + a;
            return 0 > s && 0 > l ? null : 0 > s ? this.at(l, i) : this.at(s, i)
        }
    }(),
    isIntersectionPlane: function(e) {
        var t = e.distanceToPoint(this.origin);
        if (0 === t)
            return !0;
        var i = e.normal.dot(this.direction);
        return 0 > i * t ? !0 : !1
    },
    distanceToPlane: function(e) {
        var t = e.normal.dot(this.direction);
        if (0 == t)
            return 0 == e.distanceToPoint(this.origin) ? 0 : null ;
        var i = -(this.origin.dot(e.normal) + e.constant) / t;
        return i >= 0 ? i : null
    },
    intersectPlane: function(e, t) {
        var i = this.distanceToPlane(e);
        return null === i ? null : this.at(i, t)
    },
    isIntersectionBox: function() {
        var e = new THREE.Vector3;
        return function(t) {
            return null !== this.intersectBox(t, e)
        }
    }(),
    intersectBox: function(e, t) {
        var i, n, r, o, a, s, l = 1 / this.direction.x, c = 1 / this.direction.y, d = 1 / this.direction.z, h = this.origin;
        return l >= 0 ? (i = (e.min.x - h.x) * l,
        n = (e.max.x - h.x) * l) : (i = (e.max.x - h.x) * l,
        n = (e.min.x - h.x) * l),
        c >= 0 ? (r = (e.min.y - h.y) * c,
        o = (e.max.y - h.y) * c) : (r = (e.max.y - h.y) * c,
        o = (e.min.y - h.y) * c),
        i > o || r > n ? null : ((r > i || i !== i) && (i = r),
        (n > o || n !== n) && (n = o),
        d >= 0 ? (a = (e.min.z - h.z) * d,
        s = (e.max.z - h.z) * d) : (a = (e.max.z - h.z) * d,
        s = (e.min.z - h.z) * d),
        i > s || a > n ? null : ((a > i || i !== i) && (i = a),
        (n > s || n !== n) && (n = s),
        0 > n ? null : this.at(i >= 0 ? i : n, t)))
    },
    intersectTriangle: function() {
        var e = new THREE.Vector3
          , t = new THREE.Vector3
          , i = new THREE.Vector3
          , n = new THREE.Vector3;
        return function(r, o, a, s, l) {
            t.subVectors(o, r),
            i.subVectors(a, r),
            n.crossVectors(t, i);
            var c, d = this.direction.dot(n);
            if (d > 0) {
                if (s)
                    return null ;
                c = 1
            } else {
                if (!(0 > d))
                    return null ;
                c = -1,
                d = -d
            }
            e.subVectors(this.origin, r);
            var h = c * this.direction.dot(i.crossVectors(e, i));
            if (0 > h)
                return null ;
            var u = c * this.direction.dot(t.cross(e));
            if (0 > u)
                return null ;
            if (h + u > d)
                return null ;
            var p = -c * e.dot(n);
            return 0 > p ? null : this.at(p / d, l)
        }
    }(),
    applyMatrix4: function(e) {
        return this.direction.add(this.origin).applyMatrix4(e),
        this.origin.applyMatrix4(e),
        this.direction.sub(this.origin),
        this.direction.normalize(),
        this
    },
    equals: function(e) {
        return e.origin.equals(this.origin) && e.direction.equals(this.direction)
    },
    clone: function() {
        return (new THREE.Ray).copy(this)
    }
},
THREE.Sphere = function(e, t) {
    this.center = void 0 !== e ? e : new THREE.Vector3,
    this.radius = void 0 !== t ? t : 0
}
,
THREE.Sphere.prototype = {
    constructor: THREE.Sphere,
    set: function(e, t) {
        return this.center.copy(e),
        this.radius = t,
        this
    },
    setFromPoints: function() {
        var e = new THREE.Box3;
        return function(t, i) {
            var n = this.center;
            void 0 !== i ? n.copy(i) : e.setFromPoints(t).center(n);
            for (var r = 0, o = 0, a = t.length; a > o; o++)
                r = Math.max(r, n.distanceToSquared(t[o]));
            return this.radius = Math.sqrt(r),
            this
        }
    }(),
    copy: function(e) {
        return this.center.copy(e.center),
        this.radius = e.radius,
        this
    },
    empty: function() {
        return this.radius <= 0
    },
    containsPoint: function(e) {
        return e.distanceToSquared(this.center) <= this.radius * this.radius
    },
    distanceToPoint: function(e) {
        return e.distanceTo(this.center) - this.radius
    },
    intersectsSphere: function(e) {
        var t = this.radius + e.radius;
        return e.center.distanceToSquared(this.center) <= t * t
    },
    clampPoint: function(e, t) {
        var i = this.center.distanceToSquared(e)
          , n = t || new THREE.Vector3;
        return n.copy(e),
        i > this.radius * this.radius && (n.sub(this.center).normalize(),
        n.multiplyScalar(this.radius).add(this.center)),
        n
    },
    getBoundingBox: function(e) {
        var t = e || new THREE.Box3;
        return t.set(this.center, this.center),
        t.expandByScalar(this.radius),
        t
    },
    applyMatrix4: function(e) {
        return this.center.applyMatrix4(e),
        this.radius = this.radius * e.getMaxScaleOnAxis(),
        this
    },
    translate: function(e) {
        return this.center.add(e),
        this
    },
    equals: function(e) {
        return e.center.equals(this.center) && e.radius === this.radius
    },
    clone: function() {
        return (new THREE.Sphere).copy(this)
    }
},
THREE.Frustum = function(e, t, i, n, r, o) {
    this.planes = [void 0 !== e ? e : new THREE.Plane, void 0 !== t ? t : new THREE.Plane, void 0 !== i ? i : new THREE.Plane, void 0 !== n ? n : new THREE.Plane, void 0 !== r ? r : new THREE.Plane, void 0 !== o ? o : new THREE.Plane]
}
,
THREE.Frustum.prototype = {
    constructor: THREE.Frustum,
    set: function(e, t, i, n, r, o) {
        var a = this.planes;
        return a[0].copy(e),
        a[1].copy(t),
        a[2].copy(i),
        a[3].copy(n),
        a[4].copy(r),
        a[5].copy(o),
        this
    },
    copy: function(e) {
        for (var t = this.planes, i = 0; 6 > i; i++)
            t[i].copy(e.planes[i]);
        return this
    },
    setFromMatrix: function(e) {
        var t = this.planes
          , i = e.elements
          , n = i[0]
          , r = i[1]
          , o = i[2]
          , a = i[3]
          , s = i[4]
          , l = i[5]
          , c = i[6]
          , d = i[7]
          , h = i[8]
          , u = i[9]
          , p = i[10]
          , f = i[11]
          , g = i[12]
          , m = i[13]
          , v = i[14]
          , y = i[15];
        return t[0].setComponents(a - n, d - s, f - h, y - g).normalize(),
        t[1].setComponents(a + n, d + s, f + h, y + g).normalize(),
        t[2].setComponents(a + r, d + l, f + u, y + m).normalize(),
        t[3].setComponents(a - r, d - l, f - u, y - m).normalize(),
        t[4].setComponents(a - o, d - c, f - p, y - v).normalize(),
        t[5].setComponents(a + o, d + c, f + p, y + v).normalize(),
        this
    },
    intersectsObject: function() {
        var e = new THREE.Sphere;
        return function(t) {
            var i = t.geometry;
            return null === i.boundingSphere && i.computeBoundingSphere(),
            e.copy(i.boundingSphere),
            e.applyMatrix4(t.matrixWorld),
            this.intersectsSphere(e)
        }
    }(),
    intersectsSphere: function(e) {
        for (var t = this.planes, i = e.center, n = -e.radius, r = 0; 6 > r; r++) {
            var o = t[r].distanceToPoint(i);
            if (n > o)
                return !1
        }
        return !0
    },
    intersectsBox: function() {
        var e = new THREE.Vector3
          , t = new THREE.Vector3;
        return function(i) {
            for (var n = this.planes, r = 0; 6 > r; r++) {
                var o = n[r];
                e.x = o.normal.x > 0 ? i.min.x : i.max.x,
                t.x = o.normal.x > 0 ? i.max.x : i.min.x,
                e.y = o.normal.y > 0 ? i.min.y : i.max.y,
                t.y = o.normal.y > 0 ? i.max.y : i.min.y,
                e.z = o.normal.z > 0 ? i.min.z : i.max.z,
                t.z = o.normal.z > 0 ? i.max.z : i.min.z;
                var a = o.distanceToPoint(e)
                  , s = o.distanceToPoint(t);
                if (0 > a && 0 > s)
                    return !1
            }
            return !0
        }
    }(),
    containsPoint: function(e) {
        for (var t = this.planes, i = 0; 6 > i; i++)
            if (t[i].distanceToPoint(e) < 0)
                return !1;
        return !0
    },
    clone: function() {
        return (new THREE.Frustum).copy(this)
    }
},
THREE.Plane = function(e, t) {
    this.normal = void 0 !== e ? e : new THREE.Vector3(1,0,0),
    this.constant = void 0 !== t ? t : 0
}
,
THREE.Plane.prototype = {
    constructor: THREE.Plane,
    set: function(e, t) {
        return this.normal.copy(e),
        this.constant = t,
        this
    },
    setComponents: function(e, t, i, n) {
        return this.normal.set(e, t, i),
        this.constant = n,
        this
    },
    setFromNormalAndCoplanarPoint: function(e, t) {
        return this.normal.copy(e),
        this.constant = -t.dot(this.normal),
        this
    },
    setFromCoplanarPoints: function() {
        var e = new THREE.Vector3
          , t = new THREE.Vector3;
        return function(i, n, r) {
            var o = e.subVectors(r, n).cross(t.subVectors(i, n)).normalize();
            return this.setFromNormalAndCoplanarPoint(o, i),
            this
        }
    }(),
    copy: function(e) {
        return this.normal.copy(e.normal),
        this.constant = e.constant,
        this
    },
    normalize: function() {
        var e = 1 / this.normal.length();
        return this.normal.multiplyScalar(e),
        this.constant *= e,
        this
    },
    negate: function() {
        return this.constant *= -1,
        this.normal.negate(),
        this
    },
    distanceToPoint: function(e) {
        return this.normal.dot(e) + this.constant
    },
    distanceToSphere: function(e) {
        return this.distanceToPoint(e.center) - e.radius
    },
    projectPoint: function(e, t) {
        return this.orthoPoint(e, t).sub(e).negate()
    },
    orthoPoint: function(e, t) {
        var i = this.distanceToPoint(e)
          , n = t || new THREE.Vector3;
        return n.copy(this.normal).multiplyScalar(i)
    },
    isIntersectionLine: function(e) {
        var t = this.distanceToPoint(e.start)
          , i = this.distanceToPoint(e.end);
        return 0 > t && i > 0 || 0 > i && t > 0
    },
    intersectLine: function() {
        var e = new THREE.Vector3;
        return function(t, i) {
            var n = i || new THREE.Vector3
              , r = t.delta(e)
              , o = this.normal.dot(r);
            if (0 == o)
                return 0 == this.distanceToPoint(t.start) ? n.copy(t.start) : void 0;
            var a = -(t.start.dot(this.normal) + this.constant) / o;
            return 0 > a || a > 1 ? void 0 : n.copy(r).multiplyScalar(a).add(t.start)
        }
    }(),
    coplanarPoint: function(e) {
        var t = e || new THREE.Vector3;
        return t.copy(this.normal).multiplyScalar(-this.constant)
    },
    applyMatrix4: function() {
        var e = new THREE.Vector3
          , t = new THREE.Vector3
          , i = new THREE.Matrix3;
        return function(n, r) {
            var o = r || i.getNormalMatrix(n)
              , a = e.copy(this.normal).applyMatrix3(o)
              , s = this.coplanarPoint(t);
            return s.applyMatrix4(n),
            this.setFromNormalAndCoplanarPoint(a, s),
            this
        }
    }(),
    translate: function(e) {
        return this.constant = this.constant - e.dot(this.normal),
        this
    },
    equals: function(e) {
        return e.normal.equals(this.normal) && e.constant == this.constant
    },
    clone: function() {
        return (new THREE.Plane).copy(this)
    }
},
THREE.Math = {
    generateUUID: function() {
        var e, t = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""), i = new Array(36), n = 0;
        return function() {
            for (var r = 0; 36 > r; r++)
                8 == r || 13 == r || 18 == r || 23 == r ? i[r] = "-" : 14 == r ? i[r] = "4" : (2 >= n && (n = 33554432 + 16777216 * Math.random() | 0),
                e = 15 & n,
                n >>= 4,
                i[r] = t[19 == r ? 3 & e | 8 : e]);
            return i.join("")
        }
    }(),
    clamp: function(e, t, i) {
        return t > e ? t : e > i ? i : e
    },
    clampBottom: function(e, t) {
        return t > e ? t : e
    },
    mapLinear: function(e, t, i, n, r) {
        return n + (e - t) * (r - n) / (i - t)
    },
    smoothstep: function(e, t, i) {
        return t >= e ? 0 : e >= i ? 1 : (e = (e - t) / (i - t),
        e * e * (3 - 2 * e))
    },
    smootherstep: function(e, t, i) {
        return t >= e ? 0 : e >= i ? 1 : (e = (e - t) / (i - t),
        e * e * e * (e * (6 * e - 15) + 10))
    },
    random16: function() {
        return (65280 * Math.random() + 255 * Math.random()) / 65535
    },
    randInt: function(e, t) {
        return e + Math.floor(Math.random() * (t - e + 1))
    },
    randFloat: function(e, t) {
        return e + Math.random() * (t - e)
    },
    randFloatSpread: function(e) {
        return e * (.5 - Math.random())
    },
    degToRad: function() {
        var e = Math.PI / 180;
        return function(t) {
            return t * e
        }
    }(),
    radToDeg: function() {
        var e = 180 / Math.PI;
        return function(t) {
            return t * e
        }
    }(),
    isPowerOfTwo: function(e) {
        return 0 === (e & e - 1) && 0 !== e
    }
},
THREE.Spline = function(e) {
    function t(e, t, i, n, r, o, a) {
        var s = .5 * (i - e)
          , l = .5 * (n - t);
        return (2 * (t - i) + s + l) * a + (-3 * (t - i) - 2 * s - l) * o + s * r + t
    }
    this.points = e;
    var i, n, r, o, a, s, l, c, d, h = [], u = {
        x: 0,
        y: 0,
        z: 0
    };
    this.initFromArray = function(e) {
        this.points = [];
        for (var t = 0; t < e.length; t++)
            this.points[t] = {
                x: e[t][0],
                y: e[t][1],
                z: e[t][2]
            }
    }
    ,
    this.getPoint = function(e) {
        return i = (this.points.length - 1) * e,
        n = Math.floor(i),
        r = i - n,
        h[0] = 0 === n ? n : n - 1,
        h[1] = n,
        h[2] = n > this.points.length - 2 ? this.points.length - 1 : n + 1,
        h[3] = n > this.points.length - 3 ? this.points.length - 1 : n + 2,
        s = this.points[h[0]],
        l = this.points[h[1]],
        c = this.points[h[2]],
        d = this.points[h[3]],
        o = r * r,
        a = r * o,
        u.x = t(s.x, l.x, c.x, d.x, r, o, a),
        u.y = t(s.y, l.y, c.y, d.y, r, o, a),
        u.z = t(s.z, l.z, c.z, d.z, r, o, a),
        u
    }
    ,
    this.getControlPointsArray = function() {
        var e, t, i = this.points.length, n = [];
        for (e = 0; i > e; e++)
            t = this.points[e],
            n[e] = [t.x, t.y, t.z];
        return n
    }
    ,
    this.getLength = function(e) {
        var t, i, n, r, o = 0, a = 0, s = 0, l = new THREE.Vector3, c = new THREE.Vector3, d = [], h = 0;
        for (d[0] = 0,
        e || (e = 100),
        n = this.points.length * e,
        l.copy(this.points[0]),
        t = 1; n > t; t++)
            i = t / n,
            r = this.getPoint(i),
            c.copy(r),
            h += c.distanceTo(l),
            l.copy(r),
            o = (this.points.length - 1) * i,
            a = Math.floor(o),
            a != s && (d[a] = h,
            s = a);
        return d[d.length] = h,
        {
            chunks: d,
            total: h
        }
    }
    ,
    this.reparametrizeByArcLength = function(e) {
        var t, i, n, r, o, a, s, l, c = [], d = new THREE.Vector3, h = this.getLength();
        for (c.push(d.copy(this.points[0]).clone()),
        t = 1; t < this.points.length; t++) {
            for (a = h.chunks[t] - h.chunks[t - 1],
            s = Math.ceil(e * a / h.total),
            r = (t - 1) / (this.points.length - 1),
            o = t / (this.points.length - 1),
            i = 1; s - 1 > i; i++)
                n = r + i * (1 / s) * (o - r),
                l = this.getPoint(n),
                c.push(d.copy(l).clone());
            c.push(d.copy(this.points[t]).clone())
        }
        this.points = c
    }
}
,
THREE.Triangle = function(e, t, i) {
    this.a = void 0 !== e ? e : new THREE.Vector3,
    this.b = void 0 !== t ? t : new THREE.Vector3,
    this.c = void 0 !== i ? i : new THREE.Vector3
}
,
THREE.Triangle.normal = function() {
    var e = new THREE.Vector3;
    return function(t, i, n, r) {
        var o = r || new THREE.Vector3;
        o.subVectors(n, i),
        e.subVectors(t, i),
        o.cross(e);
        var a = o.lengthSq();
        return a > 0 ? o.multiplyScalar(1 / Math.sqrt(a)) : o.set(0, 0, 0)
    }
}(),
THREE.Triangle.barycoordFromPoint = function() {
    var e = new THREE.Vector3
      , t = new THREE.Vector3
      , i = new THREE.Vector3;
    return function(n, r, o, a, s) {
        e.subVectors(a, r),
        t.subVectors(o, r),
        i.subVectors(n, r);
        var l = e.dot(e)
          , c = e.dot(t)
          , d = e.dot(i)
          , h = t.dot(t)
          , u = t.dot(i)
          , p = l * h - c * c
          , f = s || new THREE.Vector3;
        if (0 == p)
            return f.set(-2, -1, -1);
        var g = 1 / p
          , m = (h * d - c * u) * g
          , v = (l * u - c * d) * g;
        return f.set(1 - m - v, v, m)
    }
}(),
THREE.Triangle.containsPoint = function() {
    var e = new THREE.Vector3;
    return function(t, i, n, r) {
        var o = THREE.Triangle.barycoordFromPoint(t, i, n, r, e);
        return o.x >= 0 && o.y >= 0 && o.x + o.y <= 1
    }
}(),
THREE.Triangle.prototype = {
    constructor: THREE.Triangle,
    set: function(e, t, i) {
        return this.a.copy(e),
        this.b.copy(t),
        this.c.copy(i),
        this
    },
    setFromPointsAndIndices: function(e, t, i, n) {
        return this.a.copy(e[t]),
        this.b.copy(e[i]),
        this.c.copy(e[n]),
        this
    },
    copy: function(e) {
        return this.a.copy(e.a),
        this.b.copy(e.b),
        this.c.copy(e.c),
        this
    },
    area: function() {
        var e = new THREE.Vector3
          , t = new THREE.Vector3;
        return function() {
            return e.subVectors(this.c, this.b),
            t.subVectors(this.a, this.b),
            .5 * e.cross(t).length()
        }
    }(),
    midpoint: function(e) {
        var t = e || new THREE.Vector3;
        return t.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
    },
    normal: function(e) {
        return THREE.Triangle.normal(this.a, this.b, this.c, e)
    },
    plane: function(e) {
        var t = e || new THREE.Plane;
        return t.setFromCoplanarPoints(this.a, this.b, this.c)
    },
    barycoordFromPoint: function(e, t) {
        return THREE.Triangle.barycoordFromPoint(e, this.a, this.b, this.c, t)
    },
    containsPoint: function(e) {
        return THREE.Triangle.containsPoint(e, this.a, this.b, this.c)
    },
    equals: function(e) {
        return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c)
    },
    clone: function() {
        return (new THREE.Triangle).copy(this)
    }
},
THREE.Clock = function(e) {
    this.autoStart = void 0 !== e ? e : !0,
    this.startTime = 0,
    this.oldTime = 0,
    this.elapsedTime = 0,
    this.running = !1
}
,
THREE.Clock.prototype = {
    constructor: THREE.Clock,
    start: function() {
        this.startTime = void 0 !== self.performance && void 0 !== self.performance.now ? self.performance.now() : Date.now(),
        this.oldTime = this.startTime,
        this.running = !0
    },
    stop: function() {
        this.getElapsedTime(),
        this.running = !1
    },
    getElapsedTime: function() {
        return this.getDelta(),
        this.elapsedTime
    },
    getDelta: function() {
        var e = 0;
        if (this.autoStart && !this.running && this.start(),
        this.running) {
            var t = void 0 !== self.performance && void 0 !== self.performance.now ? self.performance.now() : Date.now();
            e = .001 * (t - this.oldTime),
            this.oldTime = t,
            this.elapsedTime += e
        }
        return e
    }
},
THREE.EventDispatcher = function() {}
,
THREE.EventDispatcher.prototype = {
    constructor: THREE.EventDispatcher,
    apply: function(e) {
        e.addEventListener = THREE.EventDispatcher.prototype.addEventListener,
        e.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener,
        e.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener,
        e.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent
    },
    addEventListener: function(e, t) {
        void 0 === this._listeners && (this._listeners = {});
        var i = this._listeners;
        void 0 === i[e] && (i[e] = []),
        -1 === i[e].indexOf(t) && i[e].push(t)
    },
    hasEventListener: function(e, t) {
        if (void 0 === this._listeners)
            return !1;
        var i = this._listeners;
        return void 0 !== i[e] && -1 !== i[e].indexOf(t) ? !0 : !1
    },
    removeEventListener: function(e, t) {
        if (void 0 !== this._listeners) {
            var i = this._listeners
              , n = i[e];
            if (void 0 !== n) {
                var r = n.indexOf(t);
                -1 !== r && n.splice(r, 1)
            }
        }
    },
    dispatchEvent: function(e) {
        if (void 0 !== this._listeners) {
            var t = this._listeners
              , i = t[e.type];
            if (void 0 !== i) {
                e.target = this;
                for (var n = [], r = i.length, o = 0; r > o; o++)
                    n[o] = i[o];
                for (var o = 0; r > o; o++)
                    n[o].call(this, e)
            }
        }
    }
},
function(e) {
    e.Raycaster = function(t, i, n, r) {
        this.ray = new e.Ray(t,i),
        this.near = n || 0,
        this.far = r || 1 / 0,
        this.params = {
            Sprite: {},
            Mesh: {},
            PointCloud: {
                threshold: 1
            },
            LOD: {},
            Line: {}
        }
    }
    ;
    var t = function(e, t) {
        return e.distance - t.distance
    }
      , i = function(e, t, n, r) {
        if (e.raycast(t, n),
        r === !0)
            for (var o = e.children, a = 0, s = o.length; s > a; a++)
                i(o[a], t, n, !0)
    }
    ;
    e.Raycaster.prototype = {
        constructor: e.Raycaster,
        precision: 1e-4,
        linePrecision: 1,
        set: function(e, t) {
            this.ray.set(e, t)
        },
        intersectObject: function(e, n) {
            var r = [];
            return i(e, this, r, n),
            r.sort(t),
            r
        },
        intersectObjects: function(e, n) {
            var r = [];
            if (e instanceof Array == !1)
                return console.log("THREE.Raycaster.intersectObjects: objects is not an Array."),
                r;
            for (var o = 0, a = e.length; a > o; o++)
                i(e[o], this, r, n);
            return r.sort(t),
            r
        }
    }
}(THREE),
THREE.Object3D = function() {
    Object.defineProperty(this, "id", {
        value: THREE.Object3DIdCount++
    }),
    this.uuid = THREE.Math.generateUUID(),
    this.name = "",
    this.type = "Object3D",
    this.parent = void 0,
    this.children = [],
    this.up = THREE.Object3D.DefaultUp.clone();
    var e = new THREE.Vector3
      , t = new THREE.Euler
      , i = new THREE.Quaternion
      , n = new THREE.Vector3(1,1,1)
      , r = function() {
        i.setFromEuler(t, !1)
    }
      , o = function() {
        t.setFromQuaternion(i, void 0, !1)
    }
    ;
    t.onChange(r),
    i.onChange(o),
    Object.defineProperties(this, {
        position: {
            enumerable: !0,
            value: e
        },
        rotation: {
            enumerable: !0,
            value: t
        },
        quaternion: {
            enumerable: !0,
            value: i
        },
        scale: {
            enumerable: !0,
            value: n
        }
    }),
    this.renderDepth = null ,
    this.rotationAutoUpdate = !0,
    this.matrix = new THREE.Matrix4,
    this.matrixWorld = new THREE.Matrix4,
    this.matrixAutoUpdate = !0,
    this.matrixWorldNeedsUpdate = !1,
    this.visible = !0,
    this.castShadow = !1,
    this.receiveShadow = !1,
    this.frustumCulled = !0,
    this.userData = {}
}
,
THREE.Object3D.DefaultUp = new THREE.Vector3(0,1,0),
THREE.Object3D.prototype = {
    constructor: THREE.Object3D,
    get eulerOrder() {
        return console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),
        this.rotation.order
    },
    set eulerOrder(e) {
        console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),
        this.rotation.order = e
    },
    get useQuaternion() {
        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
    },
    set useQuaternion(e) {
        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
    },
    applyMatrix: function(e) {
        this.matrix.multiplyMatrices(e, this.matrix),
        this.matrix.decompose(this.position, this.quaternion, this.scale)
    },
    setRotationFromAxisAngle: function(e, t) {
        this.quaternion.setFromAxisAngle(e, t)
    },
    setRotationFromEuler: function(e) {
        this.quaternion.setFromEuler(e, !0)
    },
    setRotationFromMatrix: function(e) {
        this.quaternion.setFromRotationMatrix(e)
    },
    setRotationFromQuaternion: function(e) {
        this.quaternion.copy(e)
    },
    rotateOnAxis: function() {
        var e = new THREE.Quaternion;
        return function(t, i) {
            return e.setFromAxisAngle(t, i),
            this.quaternion.multiply(e),
            this
        }
    }(),
    rotateX: function() {
        var e = new THREE.Vector3(1,0,0);
        return function(t) {
            return this.rotateOnAxis(e, t)
        }
    }(),
    rotateY: function() {
        var e = new THREE.Vector3(0,1,0);
        return function(t) {
            return this.rotateOnAxis(e, t)
        }
    }(),
    rotateZ: function() {
        var e = new THREE.Vector3(0,0,1);
        return function(t) {
            return this.rotateOnAxis(e, t)
        }
    }(),
    translateOnAxis: function() {
        var e = new THREE.Vector3;
        return function(t, i) {
            return e.copy(t).applyQuaternion(this.quaternion),
            this.position.add(e.multiplyScalar(i)),
            this
        }
    }(),
    translate: function(e, t) {
        return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),
        this.translateOnAxis(t, e)
    },
    translateX: function() {
        var e = new THREE.Vector3(1,0,0);
        return function(t) {
            return this.translateOnAxis(e, t)
        }
    }(),
    translateY: function() {
        var e = new THREE.Vector3(0,1,0);
        return function(t) {
            return this.translateOnAxis(e, t)
        }
    }(),
    translateZ: function() {
        var e = new THREE.Vector3(0,0,1);
        return function(t) {
            return this.translateOnAxis(e, t)
        }
    }(),
    localToWorld: function(e) {
        return e.applyMatrix4(this.matrixWorld)
    },
    worldToLocal: function() {
        var e = new THREE.Matrix4;
        return function(t) {
            return t.applyMatrix4(e.getInverse(this.matrixWorld))
        }
    }(),
    lookAt: function() {
        var e = new THREE.Matrix4;
        return function(t) {
            e.lookAt(t, this.position, this.up),
            this.quaternion.setFromRotationMatrix(e)
        }
    }(),
    add: function(e) {
        if (arguments.length > 1) {
            for (var t = 0; t < arguments.length; t++)
                this.add(arguments[t]);
            return this
        }
        return e === this ? (console.error("THREE.Object3D.add:", e, "can't be added as a child of itself."),
        this) : (e instanceof THREE.Object3D ? (void 0 !== e.parent && e.parent.remove(e),
        e.parent = this,
        e.dispatchEvent({
            type: "added"
        }),
        this.children.push(e)) : console.error("THREE.Object3D.add:", e, "is not an instance of THREE.Object3D."),
        this)
    },
    remove: function(e) {
        if (arguments.length > 1)
            for (var t = 0; t < arguments.length; t++)
                this.remove(arguments[t]);
        var i = this.children.indexOf(e);
        -1 !== i && (e.parent = void 0,
        e.dispatchEvent({
            type: "removed"
        }),
        this.children.splice(i, 1))
    },
    getChildByName: function(e, t) {
        return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),
        this.getObjectByName(e, t)
    },
    getObjectById: function(e, t) {
        if (this.id === e)
            return this;
        for (var i = 0, n = this.children.length; n > i; i++) {
            var r = this.children[i]
              , o = r.getObjectById(e, t);
            if (void 0 !== o)
                return o
        }
        return void 0
    },
    getObjectByName: function(e, t) {
        if (this.name === e)
            return this;
        for (var i = 0, n = this.children.length; n > i; i++) {
            var r = this.children[i]
              , o = r.getObjectByName(e, t);
            if (void 0 !== o)
                return o
        }
        return void 0
    },
    getWorldPosition: function(e) {
        var t = e || new THREE.Vector3;
        return this.updateMatrixWorld(!0),
        t.setFromMatrixPosition(this.matrixWorld)
    },
    getWorldQuaternion: function() {
        var e = new THREE.Vector3
          , t = new THREE.Vector3;
        return function(i) {
            var n = i || new THREE.Quaternion;
            return this.updateMatrixWorld(!0),
            this.matrixWorld.decompose(e, n, t),
            n
        }
    }(),
    getWorldRotation: function() {
        var e = new THREE.Quaternion;
        return function(t) {
            var i = t || new THREE.Euler;
            return this.getWorldQuaternion(e),
            i.setFromQuaternion(e, this.rotation.order, !1)
        }
    }(),
    getWorldScale: function() {
        var e = new THREE.Vector3
          , t = new THREE.Quaternion;
        return function(i) {
            var n = i || new THREE.Vector3;
            return this.updateMatrixWorld(!0),
            this.matrixWorld.decompose(e, t, n),
            n
        }
    }(),
    getWorldDirection: function() {
        var e = new THREE.Quaternion;
        return function(t) {
            var i = t || new THREE.Vector3;
            return this.getWorldQuaternion(e),
            i.set(0, 0, 1).applyQuaternion(e)
        }
    }(),
    raycast: function() {},
    traverse: function(e) {
        e(this);
        for (var t = 0, i = this.children.length; i > t; t++)
            this.children[t].traverse(e)
    },
    traverseVisible: function(e) {
        if (this.visible !== !1) {
            e(this);
            for (var t = 0, i = this.children.length; i > t; t++)
                this.children[t].traverseVisible(e)
        }
    },
    updateMatrix: function() {
        this.matrix.compose(this.position, this.quaternion, this.scale),
        this.matrixWorldNeedsUpdate = !0
    },
    updateMatrixWorld: function(e) {
        this.matrixAutoUpdate === !0 && this.updateMatrix(),
        (this.matrixWorldNeedsUpdate === !0 || e === !0) && (void 0 === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
        this.matrixWorldNeedsUpdate = !1,
        e = !0);
        for (var t = 0, i = this.children.length; i > t; t++)
            this.children[t].updateMatrixWorld(e)
    },
    toJSON: function() {
        var e = {
            metadata: {
                version: 4.3,
                type: "Object",
                generator: "ObjectExporter"
            }
        }
          , t = {}
          , i = function(i) {
            if (void 0 === e.geometries && (e.geometries = []),
            void 0 === t[i.uuid]) {
                var n = i.toJSON();
                delete n.metadata,
                t[i.uuid] = n,
                e.geometries.push(n)
            }
            return i.uuid
        }
          , n = {}
          , r = function(t) {
            if (void 0 === e.materials && (e.materials = []),
            void 0 === n[t.uuid]) {
                var i = t.toJSON();
                delete i.metadata,
                n[t.uuid] = i,
                e.materials.push(i)
            }
            return t.uuid
        }
          , o = function(e) {
            var t = {};
            if (t.uuid = e.uuid,
            t.type = e.type,
            "" !== e.name && (t.name = e.name),
            "{}" !== JSON.stringify(e.userData) && (t.userData = e.userData),
            e.visible !== !0 && (t.visible = e.visible),
            e instanceof THREE.PerspectiveCamera ? (t.fov = e.fov,
            t.aspect = e.aspect,
            t.near = e.near,
            t.far = e.far) : e instanceof THREE.OrthographicCamera ? (t.left = e.left,
            t.right = e.right,
            t.top = e.top,
            t.bottom = e.bottom,
            t.near = e.near,
            t.far = e.far) : e instanceof THREE.AmbientLight ? t.color = e.color.getHex() : e instanceof THREE.DirectionalLight ? (t.color = e.color.getHex(),
            t.intensity = e.intensity) : e instanceof THREE.PointLight ? (t.color = e.color.getHex(),
            t.intensity = e.intensity,
            t.distance = e.distance) : e instanceof THREE.SpotLight ? (t.color = e.color.getHex(),
            t.intensity = e.intensity,
            t.distance = e.distance,
            t.angle = e.angle,
            t.exponent = e.exponent) : e instanceof THREE.HemisphereLight ? (t.color = e.color.getHex(),
            t.groundColor = e.groundColor.getHex()) : e instanceof THREE.Mesh ? (t.geometry = i(e.geometry),
            t.material = r(e.material)) : e instanceof THREE.Line ? (t.geometry = i(e.geometry),
            t.material = r(e.material)) : e instanceof THREE.Sprite && (t.material = r(e.material)),
            t.matrix = e.matrix.toArray(),
            e.children.length > 0) {
                t.children = [];
                for (var n = 0; n < e.children.length; n++)
                    t.children.push(o(e.children[n]))
            }
            return t
        }
        ;
        return e.object = o(this),
        e
    },
    clone: function(e, t) {
        if (void 0 === e && (e = new THREE.Object3D),
        void 0 === t && (t = !0),
        e.name = this.name,
        e.up.copy(this.up),
        e.position.copy(this.position),
        e.quaternion.copy(this.quaternion),
        e.scale.copy(this.scale),
        e.renderDepth = this.renderDepth,
        e.rotationAutoUpdate = this.rotationAutoUpdate,
        e.matrix.copy(this.matrix),
        e.matrixWorld.copy(this.matrixWorld),
        e.matrixAutoUpdate = this.matrixAutoUpdate,
        e.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate,
        e.visible = this.visible,
        e.castShadow = this.castShadow,
        e.receiveShadow = this.receiveShadow,
        e.frustumCulled = this.frustumCulled,
        e.userData = JSON.parse(JSON.stringify(this.userData)),
        t === !0)
            for (var i = 0; i < this.children.length; i++) {
                var n = this.children[i];
                e.add(n.clone())
            }
        return e
    }
},
THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),
THREE.Object3DIdCount = 0,
THREE.Projector = function() {
    console.warn("THREE.Projector has been moved to /examples/renderers/Projector.js."),
    this.projectVector = function(e, t) {
        console.warn("THREE.Projector: .projectVector() is now vector.project()."),
        e.project(t)
    }
    ,
    this.unprojectVector = function(e, t) {
        console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),
        e.unproject(t)
    }
    ,
    this.pickingRay = function() {
        console.error("THREE.Projector: .pickingRay() has been removed.")
    }
}
,
THREE.Face3 = function(e, t, i, n, r, o) {
    this.a = e,
    this.b = t,
    this.c = i,
    this.normal = n instanceof THREE.Vector3 ? n : new THREE.Vector3,
    this.vertexNormals = n instanceof Array ? n : [],
    this.color = r instanceof THREE.Color ? r : new THREE.Color,
    this.vertexColors = r instanceof Array ? r : [],
    this.vertexTangents = [],
    this.materialIndex = void 0 !== o ? o : 0
}
,
THREE.Face3.prototype = {
    constructor: THREE.Face3,
    clone: function() {
        var e = new THREE.Face3(this.a,this.b,this.c);
        e.normal.copy(this.normal),
        e.color.copy(this.color),
        e.materialIndex = this.materialIndex;
        for (var t = 0, i = this.vertexNormals.length; i > t; t++)
            e.vertexNormals[t] = this.vertexNormals[t].clone();
        for (var t = 0, i = this.vertexColors.length; i > t; t++)
            e.vertexColors[t] = this.vertexColors[t].clone();
        for (var t = 0, i = this.vertexTangents.length; i > t; t++)
            e.vertexTangents[t] = this.vertexTangents[t].clone();
        return e
    }
},
THREE.Face4 = function(e, t, i, n, r, o, a) {
    return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),
    new THREE.Face3(e,t,i,r,o,a)
}
,
THREE.BufferAttribute = function(e, t) {
    this.array = e,
    this.itemSize = t,
    this.needsUpdate = !1
}
,
THREE.BufferAttribute.prototype = {
    constructor: THREE.BufferAttribute,
    get length() {
        return this.array.length
    },
    copyAt: function(e, t, i) {
        e *= this.itemSize,
        i *= t.itemSize;
        for (var n = 0, r = this.itemSize; r > n; n++)
            this.array[e + n] = t.array[i + n]
    },
    set: function(e) {
        return this.array.set(e),
        this
    },
    setX: function(e, t) {
        return this.array[e * this.itemSize] = t,
        this
    },
    setY: function(e, t) {
        return this.array[e * this.itemSize + 1] = t,
        this
    },
    setZ: function(e, t) {
        return this.array[e * this.itemSize + 2] = t,
        this
    },
    setXY: function(e, t, i) {
        return e *= this.itemSize,
        this.array[e] = t,
        this.array[e + 1] = i,
        this
    },
    setXYZ: function(e, t, i, n) {
        return e *= this.itemSize,
        this.array[e] = t,
        this.array[e + 1] = i,
        this.array[e + 2] = n,
        this
    },
    setXYZW: function(e, t, i, n, r) {
        return e *= this.itemSize,
        this.array[e] = t,
        this.array[e + 1] = i,
        this.array[e + 2] = n,
        this.array[e + 3] = r,
        this
    },
    clone: function() {
        return new THREE.BufferAttribute(new this.array.constructor(this.array),this.itemSize)
    }
},
THREE.Int8Attribute = function(e, t) {
    return console.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),
    new THREE.BufferAttribute(e,t)
}
,
THREE.Uint8Attribute = function(e, t) {
    return console.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),
    new THREE.BufferAttribute(e,t)
}
,
THREE.Uint8ClampedAttribute = function(e, t) {
    return console.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),
    new THREE.BufferAttribute(e,t)
}
,
THREE.Int16Attribute = function(e, t) {
    return console.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),
    new THREE.BufferAttribute(e,t)
}
,
THREE.Uint16Attribute = function(e, t) {
    return console.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),
    new THREE.BufferAttribute(e,t)
}
,
THREE.Int32Attribute = function(e, t) {
    return console.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),
    new THREE.BufferAttribute(e,t)
}
,
THREE.Uint32Attribute = function(e, t) {
    return console.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),
    new THREE.BufferAttribute(e,t)
}
,
THREE.Float32Attribute = function(e, t) {
    return console.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),
    new THREE.BufferAttribute(e,t)
}
,
THREE.Float64Attribute = function(e, t) {
    return console.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),
    new THREE.BufferAttribute(e,t)
}
,
THREE.BufferGeometry = function() {
    Object.defineProperty(this, "id", {
        value: THREE.GeometryIdCount++
    }),
    this.uuid = THREE.Math.generateUUID(),
    this.name = "",
    this.type = "BufferGeometry",
    this.attributes = {},
    this.attributesKeys = [],
    this.drawcalls = [],
    this.offsets = this.drawcalls,
    this.boundingBox = null ,
    this.boundingSphere = null
}
,
THREE.BufferGeometry.prototype = {
    constructor: THREE.BufferGeometry,
    addAttribute: function(e, t) {
        return t instanceof THREE.BufferAttribute == !1 ? (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),
        void (this.attributes[e] = {
            array: arguments[1],
            itemSize: arguments[2]
        })) : (this.attributes[e] = t,
        void (this.attributesKeys = Object.keys(this.attributes)))
    },
    getAttribute: function(e) {
        return this.attributes[e]
    },
    addDrawCall: function(e, t, i) {
        this.drawcalls.push({
            start: e,
            count: t,
            index: void 0 !== i ? i : 0
        })
    },
    applyMatrix: function(e) {
        var t = this.attributes.position;
        void 0 !== t && (e.applyToVector3Array(t.array),
        t.needsUpdate = !0);
        var i = this.attributes.normal;
        if (void 0 !== i) {
            var n = (new THREE.Matrix3).getNormalMatrix(e);
            n.applyToVector3Array(i.array),
            i.needsUpdate = !0
        }
    },
    center: function() {},
    fromGeometry: function(e, t) {
        t = t || {
            vertexColors: THREE.NoColors
        };
        var i = e.vertices
          , n = e.faces
          , r = e.faceVertexUvs
          , o = t.vertexColors
          , a = r[0].length > 0
          , s = 3 == n[0].vertexNormals.length
          , l = new Float32Array(3 * n.length * 3);
        this.addAttribute("position", new THREE.BufferAttribute(l,3));
        var c = new Float32Array(3 * n.length * 3);
        if (this.addAttribute("normal", new THREE.BufferAttribute(c,3)),
        o !== THREE.NoColors) {
            var d = new Float32Array(3 * n.length * 3);
            this.addAttribute("color", new THREE.BufferAttribute(d,3))
        }
        if (a === !0) {
            var h = new Float32Array(3 * n.length * 2);
            this.addAttribute("uv", new THREE.BufferAttribute(h,2))
        }
        for (var u = 0, p = 0, f = 0; u < n.length; u++,
        p += 6,
        f += 9) {
            var g = n[u]
              , m = i[g.a]
              , v = i[g.b]
              , y = i[g.c];
            if (l[f] = m.x,
            l[f + 1] = m.y,
            l[f + 2] = m.z,
            l[f + 3] = v.x,
            l[f + 4] = v.y,
            l[f + 5] = v.z,
            l[f + 6] = y.x,
            l[f + 7] = y.y,
            l[f + 8] = y.z,
            s === !0) {
                var b = g.vertexNormals[0]
                  , w = g.vertexNormals[1]
                  , x = g.vertexNormals[2];
                c[f] = b.x,
                c[f + 1] = b.y,
                c[f + 2] = b.z,
                c[f + 3] = w.x,
                c[f + 4] = w.y,
                c[f + 5] = w.z,
                c[f + 6] = x.x,
                c[f + 7] = x.y,
                c[f + 8] = x.z
            } else {
                var E = g.normal;
                c[f] = E.x,
                c[f + 1] = E.y,
                c[f + 2] = E.z,
                c[f + 3] = E.x,
                c[f + 4] = E.y,
                c[f + 5] = E.z,
                c[f + 6] = E.x,
                c[f + 7] = E.y,
                c[f + 8] = E.z
            }
            if (o === THREE.FaceColors) {
                var _ = g.color;
                d[f] = _.r,
                d[f + 1] = _.g,
                d[f + 2] = _.b,
                d[f + 3] = _.r,
                d[f + 4] = _.g,
                d[f + 5] = _.b,
                d[f + 6] = _.r,
                d[f + 7] = _.g,
                d[f + 8] = _.b
            } else if (o === THREE.VertexColors) {
                var T = g.vertexColors[0]
                  , C = g.vertexColors[1]
                  , R = g.vertexColors[2];
                d[f] = T.r,
                d[f + 1] = T.g,
                d[f + 2] = T.b,
                d[f + 3] = C.r,
                d[f + 4] = C.g,
                d[f + 5] = C.b,
                d[f + 6] = R.r,
                d[f + 7] = R.g,
                d[f + 8] = R.b
            }
            if (a === !0) {
                var S = r[0][u][0]
                  , k = r[0][u][1]
                  , M = r[0][u][2];
                h[p] = S.x,
                h[p + 1] = S.y,
                h[p + 2] = k.x,
                h[p + 3] = k.y,
                h[p + 4] = M.x,
                h[p + 5] = M.y
            }
        }
        return this.computeBoundingSphere(),
        this
    },
    computeBoundingBox: function() {
        var e = new THREE.Vector3;
        return function() {
            null === this.boundingBox && (this.boundingBox = new THREE.Box3);
            var t = this.attributes.position.array;
            if (t) {
                var i = this.boundingBox;
                i.makeEmpty();
                for (var n = 0, r = t.length; r > n; n += 3)
                    e.set(t[n], t[n + 1], t[n + 2]),
                    i.expandByPoint(e)
            }
            (void 0 === t || 0 === t.length) && (this.boundingBox.min.set(0, 0, 0),
            this.boundingBox.max.set(0, 0, 0)),
            (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')
        }
    }(),
    computeBoundingSphere: function() {
        var e = new THREE.Box3
          , t = new THREE.Vector3;
        return function() {
            null === this.boundingSphere && (this.boundingSphere = new THREE.Sphere);
            var i = this.attributes.position.array;
            if (i) {
                e.makeEmpty();
                for (var n = this.boundingSphere.center, r = 0, o = i.length; o > r; r += 3)
                    t.set(i[r], i[r + 1], i[r + 2]),
                    e.expandByPoint(t);
                e.center(n);
                for (var a = 0, r = 0, o = i.length; o > r; r += 3)
                    t.set(i[r], i[r + 1], i[r + 2]),
                    a = Math.max(a, n.distanceToSquared(t));
                this.boundingSphere.radius = Math.sqrt(a),
                isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')
            }
        }
    }(),
    computeFaceNormals: function() {},
    computeVertexNormals: function() {
        var e = this.attributes;
        if (e.position) {
            var t = e.position.array;
            if (void 0 === e.normal)
                this.addAttribute("normal", new THREE.BufferAttribute(new Float32Array(t.length),3));
            else
                for (var i = e.normal.array, n = 0, r = i.length; r > n; n++)
                    i[n] = 0;
            var o, a, s, i = e.normal.array, l = new THREE.Vector3, c = new THREE.Vector3, d = new THREE.Vector3, h = new THREE.Vector3, u = new THREE.Vector3;
            if (e.index)
                for (var p = e.index.array, f = this.offsets.length > 0 ? this.offsets : [{
                    start: 0,
                    count: p.length,
                    index: 0
                }], g = 0, m = f.length; m > g; ++g)
                    for (var v = f[g].start, y = f[g].count, b = f[g].index, n = v, r = v + y; r > n; n += 3)
                        o = 3 * (b + p[n]),
                        a = 3 * (b + p[n + 1]),
                        s = 3 * (b + p[n + 2]),
                        l.fromArray(t, o),
                        c.fromArray(t, a),
                        d.fromArray(t, s),
                        h.subVectors(d, c),
                        u.subVectors(l, c),
                        h.cross(u),
                        i[o] += h.x,
                        i[o + 1] += h.y,
                        i[o + 2] += h.z,
                        i[a] += h.x,
                        i[a + 1] += h.y,
                        i[a + 2] += h.z,
                        i[s] += h.x,
                        i[s + 1] += h.y,
                        i[s + 2] += h.z;
            else
                for (var n = 0, r = t.length; r > n; n += 9)
                    l.fromArray(t, n),
                    c.fromArray(t, n + 3),
                    d.fromArray(t, n + 6),
                    h.subVectors(d, c),
                    u.subVectors(l, c),
                    h.cross(u),
                    i[n] = h.x,
                    i[n + 1] = h.y,
                    i[n + 2] = h.z,
                    i[n + 3] = h.x,
                    i[n + 4] = h.y,
                    i[n + 5] = h.z,
                    i[n + 6] = h.x,
                    i[n + 7] = h.y,
                    i[n + 8] = h.z;
            this.normalizeNormals(),
            e.normal.needsUpdate = !0
        }
    },
    computeTangents: function() {
        function e(e, t, i) {
            M.fromArray(n, 3 * e),
            A.fromArray(n, 3 * t),
            H.fromArray(n, 3 * i),
            P.fromArray(o, 2 * e),
            O.fromArray(o, 2 * t),
            D.fromArray(o, 2 * i),
            h = A.x - M.x,
            u = H.x - M.x,
            p = A.y - M.y,
            f = H.y - M.y,
            g = A.z - M.z,
            m = H.z - M.z,
            v = O.x - P.x,
            y = D.x - P.x,
            b = O.y - P.y,
            w = D.y - P.y,
            x = 1 / (v * w - y * b),
            $.set((w * h - b * u) * x, (w * p - b * f) * x, (w * g - b * m) * x),
            L.set((v * u - y * h) * x, (v * f - y * p) * x, (v * m - y * g) * x),
            l[e].add($),
            l[t].add($),
            l[i].add($),
            c[e].add(L),
            c[t].add(L),
            c[i].add(L)
        }
        function t(e) {
            G.fromArray(r, 3 * e),
            q.copy(G),
            z = l[e],
            V.copy(z),
            V.sub(G.multiplyScalar(G.dot(z))).normalize(),
            W.crossVectors(q, z),
            U = W.dot(c[e]),
            N = 0 > U ? -1 : 1,
            s[4 * e] = V.x,
            s[4 * e + 1] = V.y,
            s[4 * e + 2] = V.z,
            s[4 * e + 3] = N
        }
        if (void 0 === this.attributes.index || void 0 === this.attributes.position || void 0 === this.attributes.normal || void 0 === this.attributes.uv)
            return void console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");
        var i = this.attributes.index.array
          , n = this.attributes.position.array
          , r = this.attributes.normal.array
          , o = this.attributes.uv.array
          , a = n.length / 3;
        void 0 === this.attributes.tangent && this.addAttribute("tangent", new THREE.BufferAttribute(new Float32Array(4 * a),4));
        for (var s = this.attributes.tangent.array, l = [], c = [], d = 0; a > d; d++)
            l[d] = new THREE.Vector3,
            c[d] = new THREE.Vector3;
        var h, u, p, f, g, m, v, y, b, w, x, E, _, T, C, R, S, k, M = new THREE.Vector3, A = new THREE.Vector3, H = new THREE.Vector3, P = new THREE.Vector2, O = new THREE.Vector2, D = new THREE.Vector2, $ = new THREE.Vector3, L = new THREE.Vector3;
        0 === this.drawcalls.length && this.addDrawCall(0, i.length, 0);
        var I = this.drawcalls;
        for (T = 0,
        C = I.length; C > T; ++T) {
            var F = I[T].start
              , B = I[T].count
              , j = I[T].index;
            for (E = F,
            _ = F + B; _ > E; E += 3)
                R = j + i[E],
                S = j + i[E + 1],
                k = j + i[E + 2],
                e(R, S, k)
        }
        var N, z, U, V = new THREE.Vector3, W = new THREE.Vector3, G = new THREE.Vector3, q = new THREE.Vector3;
        for (T = 0,
        C = I.length; C > T; ++T) {
            var F = I[T].start
              , B = I[T].count
              , j = I[T].index;
            for (E = F,
            _ = F + B; _ > E; E += 3)
                R = j + i[E],
                S = j + i[E + 1],
                k = j + i[E + 2],
                t(R),
                t(S),
                t(k)
        }
    },
    computeOffsets: function(e) {
        var t = e;
        void 0 === e && (t = 65535);
        for (var i = (Date.now(),
        this.attributes.index.array), n = this.attributes.position.array, r = (n.length / 3,
        i.length / 3), o = new Uint16Array(i.length), a = 0, s = 0, l = [{
            start: 0,
            count: 0,
            index: 0
        }], c = l[0], d = 0, h = 0, u = new Int32Array(6), p = new Int32Array(n.length), f = new Int32Array(n.length), g = 0; g < n.length; g++)
            p[g] = -1,
            f[g] = -1;
        for (var m = 0; r > m; m++) {
            h = 0;
            for (var v = 0; 3 > v; v++) {
                var y = i[3 * m + v];
                -1 == p[y] ? (u[2 * v] = y,
                u[2 * v + 1] = -1,
                h++) : p[y] < c.index ? (u[2 * v] = y,
                u[2 * v + 1] = -1,
                d++) : (u[2 * v] = y,
                u[2 * v + 1] = p[y])
            }
            var b = s + h;
            if (b > c.index + t) {
                var w = {
                    start: a,
                    count: 0,
                    index: s
                };
                l.push(w),
                c = w;
                for (var x = 0; 6 > x; x += 2) {
                    var E = u[x + 1];
                    E > -1 && E < c.index && (u[x + 1] = -1)
                }
            }
            for (var x = 0; 6 > x; x += 2) {
                var y = u[x]
                  , E = u[x + 1];
                -1 === E && (E = s++),
                p[y] = E,
                f[E] = y,
                o[a++] = E - c.index,
                c.count++
            }
        }
        return this.reorderBuffers(o, f, s),
        this.offsets = l,
        l
    },
    merge: function() {
        console.log("BufferGeometry.merge(): TODO")
    },
    normalizeNormals: function() {
        for (var e, t, i, n, r = this.attributes.normal.array, o = 0, a = r.length; a > o; o += 3)
            e = r[o],
            t = r[o + 1],
            i = r[o + 2],
            n = 1 / Math.sqrt(e * e + t * t + i * i),
            r[o] *= n,
            r[o + 1] *= n,
            r[o + 2] *= n
    },
    reorderBuffers: function(e, t, i) {
        var n = {};
        for (var r in this.attributes)
            if ("index" != r) {
                var o = this.attributes[r].array;
                n[r] = new o.constructor(this.attributes[r].itemSize * i)
            }
        for (var a = 0; i > a; a++) {
            var s = t[a];
            for (var r in this.attributes)
                if ("index" != r)
                    for (var l = this.attributes[r].array, c = this.attributes[r].itemSize, d = n[r], h = 0; c > h; h++)
                        d[a * c + h] = l[s * c + h]
        }
        this.attributes.index.array = e;
        for (var r in this.attributes)
            "index" != r && (this.attributes[r].array = n[r],
            this.attributes[r].numItems = this.attributes[r].itemSize * i)
    },
    toJSON: function() {
        var e = {
            metadata: {
                version: 4,
                type: "BufferGeometry",
                generator: "BufferGeometryExporter"
            },
            uuid: this.uuid,
            type: this.type,
            data: {
                attributes: {}
            }
        }
          , t = this.attributes
          , i = this.offsets
          , n = this.boundingSphere;
        for (var r in t) {
            for (var o = t[r], a = [], s = o.array, l = 0, c = s.length; c > l; l++)
                a[l] = s[l];
            e.data.attributes[r] = {
                itemSize: o.itemSize,
                type: o.array.constructor.name,
                array: a
            }
        }
        return i.length > 0 && (e.data.offsets = JSON.parse(JSON.stringify(i))),
        null !== n && (e.data.boundingSphere = {
            center: n.center.toArray(),
            radius: n.radius
        }),
        e
    },
    clone: function() {
        var e = new THREE.BufferGeometry;
        for (var t in this.attributes) {
            var i = this.attributes[t];
            e.addAttribute(t, i.clone())
        }
        for (var n = 0, r = this.offsets.length; r > n; n++) {
            var o = this.offsets[n];
            e.offsets.push({
                start: o.start,
                index: o.index,
                count: o.count
            })
        }
        return e
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
},
THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),
THREE.Geometry = function() {
    Object.defineProperty(this, "id", {
        value: THREE.GeometryIdCount++
    }),
    this.uuid = THREE.Math.generateUUID(),
    this.name = "",
    this.type = "Geometry",
    this.vertices = [],
    this.colors = [],
    this.faces = [],
    this.faceVertexUvs = [[]],
    this.morphTargets = [],
    this.morphColors = [],
    this.morphNormals = [],
    this.skinWeights = [],
    this.skinIndices = [],
    this.lineDistances = [],
    this.boundingBox = null ,
    this.boundingSphere = null ,
    this.hasTangents = !1,
    this.dynamic = !0,
    this.verticesNeedUpdate = !1,
    this.elementsNeedUpdate = !1,
    this.uvsNeedUpdate = !1,
    this.normalsNeedUpdate = !1,
    this.tangentsNeedUpdate = !1,
    this.colorsNeedUpdate = !1,
    this.lineDistancesNeedUpdate = !1,
    this.groupsNeedUpdate = !1
}
,
THREE.Geometry.prototype = {
    constructor: THREE.Geometry,
    applyMatrix: function(e) {
        for (var t = (new THREE.Matrix3).getNormalMatrix(e), i = 0, n = this.vertices.length; n > i; i++) {
            var r = this.vertices[i];
            r.applyMatrix4(e)
        }
        for (var i = 0, n = this.faces.length; n > i; i++) {
            var o = this.faces[i];
            o.normal.applyMatrix3(t).normalize();
            for (var a = 0, s = o.vertexNormals.length; s > a; a++)
                o.vertexNormals[a].applyMatrix3(t).normalize()
        }
        this.boundingBox instanceof THREE.Box3 && this.computeBoundingBox(),
        this.boundingSphere instanceof THREE.Sphere && this.computeBoundingSphere()
    },
    fromBufferGeometry: function(e) {
        for (var t = this, i = e.attributes, n = i.position.array, r = void 0 !== i.index ? i.index.array : void 0, o = void 0 !== i.normal ? i.normal.array : void 0, a = void 0 !== i.color ? i.color.array : void 0, s = void 0 !== i.uv ? i.uv.array : void 0, l = [], c = [], d = 0, h = 0; d < n.length; d += 3,
        h += 2)
            t.vertices.push(new THREE.Vector3(n[d],n[d + 1],n[d + 2])),
            void 0 !== o && l.push(new THREE.Vector3(o[d],o[d + 1],o[d + 2])),
            void 0 !== a && t.colors.push(new THREE.Color(a[d],a[d + 1],a[d + 2])),
            void 0 !== s && c.push(new THREE.Vector2(s[h],s[h + 1]));
        var u = function(e, i, n) {
            var r = void 0 !== o ? [l[e].clone(), l[i].clone(), l[n].clone()] : []
              , s = void 0 !== a ? [t.colors[e].clone(), t.colors[i].clone(), t.colors[n].clone()] : [];
            t.faces.push(new THREE.Face3(e,i,n,r,s)),
            t.faceVertexUvs[0].push([c[e], c[i], c[n]])
        }
        ;
        if (void 0 !== r)
            for (var d = 0; d < r.length; d += 3)
                u(r[d], r[d + 1], r[d + 2]);
        else
            for (var d = 0; d < n.length / 3; d += 3)
                u(d, d + 1, d + 2);
        return this.computeFaceNormals(),
        null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()),
        null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
        this
    },
    center: function() {
        this.computeBoundingBox();
        var e = new THREE.Vector3;
        return e.addVectors(this.boundingBox.min, this.boundingBox.max),
        e.multiplyScalar(-.5),
        this.applyMatrix((new THREE.Matrix4).makeTranslation(e.x, e.y, e.z)),
        this.computeBoundingBox(),
        e
    },
    computeFaceNormals: function() {
        for (var e = new THREE.Vector3, t = new THREE.Vector3, i = 0, n = this.faces.length; n > i; i++) {
            var r = this.faces[i]
              , o = this.vertices[r.a]
              , a = this.vertices[r.b]
              , s = this.vertices[r.c];
            e.subVectors(s, a),
            t.subVectors(o, a),
            e.cross(t),
            e.normalize(),
            r.normal.copy(e)
        }
    },
    computeVertexNormals: function(e) {
        var t, i, n, r, o, a;
        for (a = new Array(this.vertices.length),
        t = 0,
        i = this.vertices.length; i > t; t++)
            a[t] = new THREE.Vector3;
        if (e) {
            {
                var s, l, c, d = new THREE.Vector3, h = new THREE.Vector3;
                new THREE.Vector3,
                new THREE.Vector3,
                new THREE.Vector3
            }
            for (n = 0,
            r = this.faces.length; r > n; n++)
                o = this.faces[n],
                s = this.vertices[o.a],
                l = this.vertices[o.b],
                c = this.vertices[o.c],
                d.subVectors(c, l),
                h.subVectors(s, l),
                d.cross(h),
                a[o.a].add(d),
                a[o.b].add(d),
                a[o.c].add(d)
        } else
            for (n = 0,
            r = this.faces.length; r > n; n++)
                o = this.faces[n],
                a[o.a].add(o.normal),
                a[o.b].add(o.normal),
                a[o.c].add(o.normal);
        for (t = 0,
        i = this.vertices.length; i > t; t++)
            a[t].normalize();
        for (n = 0,
        r = this.faces.length; r > n; n++)
            o = this.faces[n],
            o.vertexNormals[0] = a[o.a].clone(),
            o.vertexNormals[1] = a[o.b].clone(),
            o.vertexNormals[2] = a[o.c].clone()
    },
    computeMorphNormals: function() {
        var e, t, i, n, r;
        for (i = 0,
        n = this.faces.length; n > i; i++)
            for (r = this.faces[i],
            r.__originalFaceNormal ? r.__originalFaceNormal.copy(r.normal) : r.__originalFaceNormal = r.normal.clone(),
            r.__originalVertexNormals || (r.__originalVertexNormals = []),
            e = 0,
            t = r.vertexNormals.length; t > e; e++)
                r.__originalVertexNormals[e] ? r.__originalVertexNormals[e].copy(r.vertexNormals[e]) : r.__originalVertexNormals[e] = r.vertexNormals[e].clone();
        var o = new THREE.Geometry;
        for (o.faces = this.faces,
        e = 0,
        t = this.morphTargets.length; t > e; e++) {
            if (!this.morphNormals[e]) {
                this.morphNormals[e] = {},
                this.morphNormals[e].faceNormals = [],
                this.morphNormals[e].vertexNormals = [];
                var a, s, l = this.morphNormals[e].faceNormals, c = this.morphNormals[e].vertexNormals;
                for (i = 0,
                n = this.faces.length; n > i; i++)
                    a = new THREE.Vector3,
                    s = {
                        a: new THREE.Vector3,
                        b: new THREE.Vector3,
                        c: new THREE.Vector3
                    },
                    l.push(a),
                    c.push(s)
            }
            var d = this.morphNormals[e];
            o.vertices = this.morphTargets[e].vertices,
            o.computeFaceNormals(),
            o.computeVertexNormals();
            var a, s;
            for (i = 0,
            n = this.faces.length; n > i; i++)
                r = this.faces[i],
                a = d.faceNormals[i],
                s = d.vertexNormals[i],
                a.copy(r.normal),
                s.a.copy(r.vertexNormals[0]),
                s.b.copy(r.vertexNormals[1]),
                s.c.copy(r.vertexNormals[2])
        }
        for (i = 0,
        n = this.faces.length; n > i; i++)
            r = this.faces[i],
            r.normal = r.__originalFaceNormal,
            r.vertexNormals = r.__originalVertexNormals
    },
    computeTangents: function() {
        function e(e, t, i, n, r, o, a) {
            c = e.vertices[t],
            d = e.vertices[i],
            h = e.vertices[n],
            u = l[r],
            p = l[o],
            f = l[a],
            g = d.x - c.x,
            m = h.x - c.x,
            v = d.y - c.y,
            y = h.y - c.y,
            b = d.z - c.z,
            w = h.z - c.z,
            x = p.x - u.x,
            E = f.x - u.x,
            _ = p.y - u.y,
            T = f.y - u.y,
            C = 1 / (x * T - E * _),
            H.set((T * g - _ * m) * C, (T * v - _ * y) * C, (T * b - _ * w) * C),
            P.set((x * m - E * g) * C, (x * y - E * v) * C, (x * w - E * b) * C),
            M[t].add(H),
            M[i].add(H),
            M[n].add(H),
            A[t].add(P),
            A[i].add(P),
            A[n].add(P)
        }
        var t, i, n, r, o, a, s, l, c, d, h, u, p, f, g, m, v, y, b, w, x, E, _, T, C, R, S, k, M = [], A = [], H = new THREE.Vector3, P = new THREE.Vector3, O = new THREE.Vector3, D = new THREE.Vector3, $ = new THREE.Vector3;
        for (n = 0,
        r = this.vertices.length; r > n; n++)
            M[n] = new THREE.Vector3,
            A[n] = new THREE.Vector3;
        for (t = 0,
        i = this.faces.length; i > t; t++)
            s = this.faces[t],
            l = this.faceVertexUvs[0][t],
            e(this, s.a, s.b, s.c, 0, 1, 2);
        var L = ["a", "b", "c", "d"];
        for (t = 0,
        i = this.faces.length; i > t; t++)
            for (s = this.faces[t],
            o = 0; o < Math.min(s.vertexNormals.length, 3); o++)
                $.copy(s.vertexNormals[o]),
                a = s[L[o]],
                R = M[a],
                O.copy(R),
                O.sub($.multiplyScalar($.dot(R))).normalize(),
                D.crossVectors(s.vertexNormals[o], R),
                S = D.dot(A[a]),
                k = 0 > S ? -1 : 1,
                s.vertexTangents[o] = new THREE.Vector4(O.x,O.y,O.z,k);
        this.hasTangents = !0
    },
    computeLineDistances: function() {
        for (var e = 0, t = this.vertices, i = 0, n = t.length; n > i; i++)
            i > 0 && (e += t[i].distanceTo(t[i - 1])),
            this.lineDistances[i] = e
    },
    computeBoundingBox: function() {
        null === this.boundingBox && (this.boundingBox = new THREE.Box3),
        this.boundingBox.setFromPoints(this.vertices)
    },
    computeBoundingSphere: function() {
        null === this.boundingSphere && (this.boundingSphere = new THREE.Sphere),
        this.boundingSphere.setFromPoints(this.vertices)
    },
    merge: function(e, t, i) {
        if (e instanceof THREE.Geometry == !1)
            return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", e);
        var n, r = this.vertices.length, o = this.vertices, a = e.vertices, s = this.faces, l = e.faces, c = this.faceVertexUvs[0], d = e.faceVertexUvs[0];
        void 0 === i && (i = 0),
        void 0 !== t && (n = (new THREE.Matrix3).getNormalMatrix(t));
        for (var h = 0, u = a.length; u > h; h++) {
            var p = a[h]
              , f = p.clone();
            void 0 !== t && f.applyMatrix4(t),
            o.push(f)
        }
        for (h = 0,
        u = l.length; u > h; h++) {
            var g, m, v, y = l[h], b = y.vertexNormals, w = y.vertexColors;
            g = new THREE.Face3(y.a + r,y.b + r,y.c + r),
            g.normal.copy(y.normal),
            void 0 !== n && g.normal.applyMatrix3(n).normalize();
            for (var x = 0, E = b.length; E > x; x++)
                m = b[x].clone(),
                void 0 !== n && m.applyMatrix3(n).normalize(),
                g.vertexNormals.push(m);
            g.color.copy(y.color);
            for (var x = 0, E = w.length; E > x; x++)
                v = w[x],
                g.vertexColors.push(v.clone());
            g.materialIndex = y.materialIndex + i,
            s.push(g)
        }
        for (h = 0,
        u = d.length; u > h; h++) {
            var _ = d[h]
              , T = [];
            if (void 0 !== _) {
                for (var x = 0, E = _.length; E > x; x++)
                    T.push(new THREE.Vector2(_[x].x,_[x].y));
                c.push(T)
            }
        }
    },
    mergeVertices: function() {
        var e, t, i, n, r, o, a, s, l = {}, c = [], d = [], h = 4, u = Math.pow(10, h);
        for (i = 0,
        n = this.vertices.length; n > i; i++)
            e = this.vertices[i],
            t = Math.round(e.x * u) + "_" + Math.round(e.y * u) + "_" + Math.round(e.z * u),
            void 0 === l[t] ? (l[t] = i,
            c.push(this.vertices[i]),
            d[i] = c.length - 1) : d[i] = d[l[t]];
        var p = [];
        for (i = 0,
        n = this.faces.length; n > i; i++) {
            r = this.faces[i],
            r.a = d[r.a],
            r.b = d[r.b],
            r.c = d[r.c],
            o = [r.a, r.b, r.c];
            for (var f = -1, g = 0; 3 > g; g++)
                if (o[g] == o[(g + 1) % 3]) {
                    f = g,
                    p.push(i);
                    break
                }
        }
        for (i = p.length - 1; i >= 0; i--) {
            var m = p[i];
            for (this.faces.splice(m, 1),
            a = 0,
            s = this.faceVertexUvs.length; s > a; a++)
                this.faceVertexUvs[a].splice(m, 1)
        }
        var v = this.vertices.length - c.length;
        return this.vertices = c,
        v
    },
    toJSON: function() {
        function e(e, t, i) {
            return i ? e | 1 << t : e & ~(1 << t)
        }
        function t(e) {
            var t = e.x.toString() + e.y.toString() + e.z.toString();
            return void 0 !== u[t] ? u[t] : (u[t] = h.length / 3,
            h.push(e.x, e.y, e.z),
            u[t])
        }
        function i(e) {
            var t = e.r.toString() + e.g.toString() + e.b.toString();
            return void 0 !== f[t] ? f[t] : (f[t] = p.length,
            p.push(e.getHex()),
            f[t])
        }
        function n(e) {
            var t = e.x.toString() + e.y.toString();
            return void 0 !== m[t] ? m[t] : (m[t] = g.length / 2,
            g.push(e.x, e.y),
            m[t])
        }
        var r = {
            metadata: {
                version: 4,
                type: "BufferGeometry",
                generator: "BufferGeometryExporter"
            },
            uuid: this.uuid,
            type: this.type
        };
        if ("" !== this.name && (r.name = this.name),
        void 0 !== this.parameters) {
            var o = this.parameters;
            for (var a in o)
                void 0 !== o[a] && (r[a] = o[a]);
            return r
        }
        for (var s = [], l = 0; l < this.vertices.length; l++) {
            var c = this.vertices[l];
            s.push(c.x, c.y, c.z)
        }
        for (var d = [], h = [], u = {}, p = [], f = {}, g = [], m = {}, l = 0; l < this.faces.length; l++) {
            var v = this.faces[l]
              , y = !1
              , b = !1
              , w = void 0 !== this.faceVertexUvs[0][l]
              , x = v.normal.length() > 0
              , E = v.vertexNormals.length > 0
              , _ = 1 !== v.color.r || 1 !== v.color.g || 1 !== v.color.b
              , T = v.vertexColors.length > 0
              , C = 0;
            if (C = e(C, 0, 0),
            C = e(C, 1, y),
            C = e(C, 2, b),
            C = e(C, 3, w),
            C = e(C, 4, x),
            C = e(C, 5, E),
            C = e(C, 6, _),
            C = e(C, 7, T),
            d.push(C),
            d.push(v.a, v.b, v.c),
            w) {
                var R = this.faceVertexUvs[0][l];
                d.push(n(R[0]), n(R[1]), n(R[2]))
            }
            if (x && d.push(t(v.normal)),
            E) {
                var S = v.vertexNormals;
                d.push(t(S[0]), t(S[1]), t(S[2]))
            }
            if (_ && d.push(i(v.color)),
            T) {
                var k = v.vertexColors;
                d.push(i(k[0]), i(k[1]), i(k[2]))
            }
        }
        return r.data = {},
        r.data.vertices = s,
        r.data.normals = h,
        p.length > 0 && (r.data.colors = p),
        g.length > 0 && (r.data.uvs = [g]),
        r.data.faces = d,
        r
    },
    clone: function() {
        for (var e = new THREE.Geometry, t = this.vertices, i = 0, n = t.length; n > i; i++)
            e.vertices.push(t[i].clone());
        for (var r = this.faces, i = 0, n = r.length; n > i; i++)
            e.faces.push(r[i].clone());
        for (var o = this.faceVertexUvs[0], i = 0, n = o.length; n > i; i++) {
            for (var a = o[i], s = [], l = 0, c = a.length; c > l; l++)
                s.push(new THREE.Vector2(a[l].x,a[l].y));
            e.faceVertexUvs[0].push(s)
        }
        return e
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
},
THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),
THREE.GeometryIdCount = 0,
THREE.Camera = function() {
    THREE.Object3D.call(this),
    this.type = "Camera",
    this.matrixWorldInverse = new THREE.Matrix4,
    this.projectionMatrix = new THREE.Matrix4
}
,
THREE.Camera.prototype = Object.create(THREE.Object3D.prototype),
THREE.Camera.prototype.getWorldDirection = function() {
    var e = new THREE.Quaternion;
    return function(t) {
        var i = t || new THREE.Vector3;
        return this.getWorldQuaternion(e),
        i.set(0, 0, -1).applyQuaternion(e)
    }
}(),
THREE.Camera.prototype.lookAt = function() {
    var e = new THREE.Matrix4;
    return function(t) {
        e.lookAt(this.position, t, this.up),
        this.quaternion.setFromRotationMatrix(e)
    }
}(),
THREE.Camera.prototype.clone = function(e) {
    return void 0 === e && (e = new THREE.Camera),
    THREE.Object3D.prototype.clone.call(this, e),
    e.matrixWorldInverse.copy(this.matrixWorldInverse),
    e.projectionMatrix.copy(this.projectionMatrix),
    e
}
,
THREE.CubeCamera = function(e, t, i) {
    THREE.Object3D.call(this),
    this.type = "CubeCamera";
    var n = 90
      , r = 1
      , o = new THREE.PerspectiveCamera(n,r,e,t);
    o.up.set(0, -1, 0),
    o.lookAt(new THREE.Vector3(1,0,0)),
    this.add(o);
    var a = new THREE.PerspectiveCamera(n,r,e,t);
    a.up.set(0, -1, 0),
    a.lookAt(new THREE.Vector3(-1,0,0)),
    this.add(a);
    var s = new THREE.PerspectiveCamera(n,r,e,t);
    s.up.set(0, 0, 1),
    s.lookAt(new THREE.Vector3(0,1,0)),
    this.add(s);
    var l = new THREE.PerspectiveCamera(n,r,e,t);
    l.up.set(0, 0, -1),
    l.lookAt(new THREE.Vector3(0,-1,0)),
    this.add(l);
    var c = new THREE.PerspectiveCamera(n,r,e,t);
    c.up.set(0, -1, 0),
    c.lookAt(new THREE.Vector3(0,0,1)),
    this.add(c);
    var d = new THREE.PerspectiveCamera(n,r,e,t);
    d.up.set(0, -1, 0),
    d.lookAt(new THREE.Vector3(0,0,-1)),
    this.add(d),
    this.renderTarget = new THREE.WebGLRenderTargetCube(i,i,{
        format: THREE.RGBFormat,
        magFilter: THREE.LinearFilter,
        minFilter: THREE.LinearFilter
    }),
    this.updateCubeMap = function(e, t) {
        var i = this.renderTarget
          , n = i.generateMipmaps;
        i.generateMipmaps = !1,
        i.activeCubeFace = 0,
        e.render(t, o, i),
        i.activeCubeFace = 1,
        e.render(t, a, i),
        i.activeCubeFace = 2,
        e.render(t, s, i),
        i.activeCubeFace = 3,
        e.render(t, l, i),
        i.activeCubeFace = 4,
        e.render(t, c, i),
        i.generateMipmaps = n,
        i.activeCubeFace = 5,
        e.render(t, d, i)
    }
}
,
THREE.CubeCamera.prototype = Object.create(THREE.Object3D.prototype),
THREE.OrthographicCamera = function(e, t, i, n, r, o) {
    THREE.Camera.call(this),
    this.type = "OrthographicCamera",
    this.zoom = 1,
    this.left = e,
    this.right = t,
    this.top = i,
    this.bottom = n,
    this.near = void 0 !== r ? r : .1,
    this.far = void 0 !== o ? o : 2e3,
    this.updateProjectionMatrix()
}
,
THREE.OrthographicCamera.prototype = Object.create(THREE.Camera.prototype),
THREE.OrthographicCamera.prototype.updateProjectionMatrix = function() {
    var e = (this.right - this.left) / (2 * this.zoom)
      , t = (this.top - this.bottom) / (2 * this.zoom)
      , i = (this.right + this.left) / 2
      , n = (this.top + this.bottom) / 2;
    this.projectionMatrix.makeOrthographic(i - e, i + e, n + t, n - t, this.near, this.far)
}
,
THREE.OrthographicCamera.prototype.clone = function() {
    var e = new THREE.OrthographicCamera;
    return THREE.Camera.prototype.clone.call(this, e),
    e.zoom = this.zoom,
    e.left = this.left,
    e.right = this.right,
    e.top = this.top,
    e.bottom = this.bottom,
    e.near = this.near,
    e.far = this.far,
    e.projectionMatrix.copy(this.projectionMatrix),
    e
}
,
THREE.PerspectiveCamera = function(e, t, i, n) {
    THREE.Camera.call(this),
    this.type = "PerspectiveCamera",
    this.zoom = 1,
    this.fov = void 0 !== e ? e : 50,
    this.aspect = void 0 !== t ? t : 1,
    this.near = void 0 !== i ? i : .1,
    this.far = void 0 !== n ? n : 2e3,
    this.updateProjectionMatrix()
}
,
THREE.PerspectiveCamera.prototype = Object.create(THREE.Camera.prototype),
THREE.PerspectiveCamera.prototype.setLens = function(e, t) {
    void 0 === t && (t = 24),
    this.fov = 2 * THREE.Math.radToDeg(Math.atan(t / (2 * e))),
    this.updateProjectionMatrix()
}
,
THREE.PerspectiveCamera.prototype.setViewOffset = function(e, t, i, n, r, o) {
    this.fullWidth = e,
    this.fullHeight = t,
    this.x = i,
    this.y = n,
    this.width = r,
    this.height = o,
    this.updateProjectionMatrix()
}
,
THREE.PerspectiveCamera.prototype.updateProjectionMatrix = function() {
    var e = THREE.Math.radToDeg(2 * Math.atan(Math.tan(.5 * THREE.Math.degToRad(this.fov)) / this.zoom));
    if (this.fullWidth) {
        var t = this.fullWidth / this.fullHeight
          , i = Math.tan(THREE.Math.degToRad(.5 * e)) * this.near
          , n = -i
          , r = t * n
          , o = t * i
          , a = Math.abs(o - r)
          , s = Math.abs(i - n);
        this.projectionMatrix.makeFrustum(r + this.x * a / this.fullWidth, r + (this.x + this.width) * a / this.fullWidth, i - (this.y + this.height) * s / this.fullHeight, i - this.y * s / this.fullHeight, this.near, this.far)
    } else
        this.projectionMatrix.makePerspective(e, this.aspect, this.near, this.far)
}
,
THREE.PerspectiveCamera.prototype.clone = function() {
    var e = new THREE.PerspectiveCamera;
    return THREE.Camera.prototype.clone.call(this, e),
    e.zoom = this.zoom,
    e.fov = this.fov,
    e.aspect = this.aspect,
    e.near = this.near,
    e.far = this.far,
    e.projectionMatrix.copy(this.projectionMatrix),
    e
}
,
THREE.Light = function(e) {
    THREE.Object3D.call(this),
    this.type = "Light",
    this.color = new THREE.Color(e)
}
,
THREE.Light.prototype = Object.create(THREE.Object3D.prototype),
THREE.Light.prototype.clone = function(e) {
    return void 0 === e && (e = new THREE.Light),
    THREE.Object3D.prototype.clone.call(this, e),
    e.color.copy(this.color),
    e
}
,
THREE.AmbientLight = function(e) {
    THREE.Light.call(this, e),
    this.type = "AmbientLight"
}
,
THREE.AmbientLight.prototype = Object.create(THREE.Light.prototype),
THREE.AmbientLight.prototype.clone = function() {
    var e = new THREE.AmbientLight;
    return THREE.Light.prototype.clone.call(this, e),
    e
}
,
THREE.AreaLight = function(e, t) {
    THREE.Light.call(this, e),
    this.type = "AreaLight",
    this.normal = new THREE.Vector3(0,-1,0),
    this.right = new THREE.Vector3(1,0,0),
    this.intensity = void 0 !== t ? t : 1,
    this.width = 1,
    this.height = 1,
    this.constantAttenuation = 1.5,
    this.linearAttenuation = .5,
    this.quadraticAttenuation = .1
}
,
THREE.AreaLight.prototype = Object.create(THREE.Light.prototype),
THREE.DirectionalLight = function(e, t) {
    THREE.Light.call(this, e),
    this.type = "DirectionalLight",
    this.position.set(0, 1, 0),
    this.target = new THREE.Object3D,
    this.intensity = void 0 !== t ? t : 1,
    this.castShadow = !1,
    this.onlyShadow = !1,
    this.shadowCameraNear = 50,
    this.shadowCameraFar = 5e3,
    this.shadowCameraLeft = -500,
    this.shadowCameraRight = 500,
    this.shadowCameraTop = 500,
    this.shadowCameraBottom = -500,
    this.shadowCameraVisible = !1,
    this.shadowBias = 0,
    this.shadowDarkness = .5,
    this.shadowMapWidth = 512,
    this.shadowMapHeight = 512,
    this.shadowCascade = !1,
    this.shadowCascadeOffset = new THREE.Vector3(0,0,-1e3),
    this.shadowCascadeCount = 2,
    this.shadowCascadeBias = [0, 0, 0],
    this.shadowCascadeWidth = [512, 512, 512],
    this.shadowCascadeHeight = [512, 512, 512],
    this.shadowCascadeNearZ = [-1, .99, .998],
    this.shadowCascadeFarZ = [.99, .998, 1],
    this.shadowCascadeArray = [],
    this.shadowMap = null ,
    this.shadowMapSize = null ,
    this.shadowCamera = null ,
    this.shadowMatrix = null
}
,
THREE.DirectionalLight.prototype = Object.create(THREE.Light.prototype),
THREE.DirectionalLight.prototype.clone = function() {
    var e = new THREE.DirectionalLight;
    return THREE.Light.prototype.clone.call(this, e),
    e.target = this.target.clone(),
    e.intensity = this.intensity,
    e.castShadow = this.castShadow,
    e.onlyShadow = this.onlyShadow,
    e.shadowCameraNear = this.shadowCameraNear,
    e.shadowCameraFar = this.shadowCameraFar,
    e.shadowCameraLeft = this.shadowCameraLeft,
    e.shadowCameraRight = this.shadowCameraRight,
    e.shadowCameraTop = this.shadowCameraTop,
    e.shadowCameraBottom = this.shadowCameraBottom,
    e.shadowCameraVisible = this.shadowCameraVisible,
    e.shadowBias = this.shadowBias,
    e.shadowDarkness = this.shadowDarkness,
    e.shadowMapWidth = this.shadowMapWidth,
    e.shadowMapHeight = this.shadowMapHeight,
    e.shadowCascade = this.shadowCascade,
    e.shadowCascadeOffset.copy(this.shadowCascadeOffset),
    e.shadowCascadeCount = this.shadowCascadeCount,
    e.shadowCascadeBias = this.shadowCascadeBias.slice(0),
    e.shadowCascadeWidth = this.shadowCascadeWidth.slice(0),
    e.shadowCascadeHeight = this.shadowCascadeHeight.slice(0),
    e.shadowCascadeNearZ = this.shadowCascadeNearZ.slice(0),
    e.shadowCascadeFarZ = this.shadowCascadeFarZ.slice(0),
    e
}
,
THREE.HemisphereLight = function(e, t, i) {
    THREE.Light.call(this, e),
    this.type = "HemisphereLight",
    this.position.set(0, 100, 0),
    this.groundColor = new THREE.Color(t),
    this.intensity = void 0 !== i ? i : 1
}
,
THREE.HemisphereLight.prototype = Object.create(THREE.Light.prototype),
THREE.HemisphereLight.prototype.clone = function() {
    var e = new THREE.HemisphereLight;
    return THREE.Light.prototype.clone.call(this, e),
    e.groundColor.copy(this.groundColor),
    e.intensity = this.intensity,
    e
}
,
THREE.PointLight = function(e, t, i) {
    THREE.Light.call(this, e),
    this.type = "PointLight",
    this.intensity = void 0 !== t ? t : 1,
    this.distance = void 0 !== i ? i : 0
}
,
THREE.PointLight.prototype = Object.create(THREE.Light.prototype),
THREE.PointLight.prototype.clone = function() {
    var e = new THREE.PointLight;
    return THREE.Light.prototype.clone.call(this, e),
    e.intensity = this.intensity,
    e.distance = this.distance,
    e
}
,
THREE.SpotLight = function(e, t, i, n, r) {
    THREE.Light.call(this, e),
    this.type = "SpotLight",
    this.position.set(0, 1, 0),
    this.target = new THREE.Object3D,
    this.intensity = void 0 !== t ? t : 1,
    this.distance = void 0 !== i ? i : 0,
    this.angle = void 0 !== n ? n : Math.PI / 3,
    this.exponent = void 0 !== r ? r : 10,
    this.castShadow = !1,
    this.onlyShadow = !1,
    this.shadowCameraNear = 50,
    this.shadowCameraFar = 5e3,
    this.shadowCameraFov = 50,
    this.shadowCameraVisible = !1,
    this.shadowBias = 0,
    this.shadowDarkness = .5,
    this.shadowMapWidth = 512,
    this.shadowMapHeight = 512,
    this.shadowMap = null ,
    this.shadowMapSize = null ,
    this.shadowCamera = null ,
    this.shadowMatrix = null
}
,
THREE.SpotLight.prototype = Object.create(THREE.Light.prototype),
THREE.SpotLight.prototype.clone = function() {
    var e = new THREE.SpotLight;
    return THREE.Light.prototype.clone.call(this, e),
    e.target = this.target.clone(),
    e.intensity = this.intensity,
    e.distance = this.distance,
    e.angle = this.angle,
    e.exponent = this.exponent,
    e.castShadow = this.castShadow,
    e.onlyShadow = this.onlyShadow,
    e.shadowCameraNear = this.shadowCameraNear,
    e.shadowCameraFar = this.shadowCameraFar,
    e.shadowCameraFov = this.shadowCameraFov,
    e.shadowCameraVisible = this.shadowCameraVisible,
    e.shadowBias = this.shadowBias,
    e.shadowDarkness = this.shadowDarkness,
    e.shadowMapWidth = this.shadowMapWidth,
    e.shadowMapHeight = this.shadowMapHeight,
    e
}
,
THREE.Cache = function() {
    this.files = {}
}
,
THREE.Cache.prototype = {
    constructor: THREE.Cache,
    add: function(e, t) {
        this.files[e] = t
    },
    get: function(e) {
        return this.files[e]
    },
    remove: function(e) {
        delete this.files[e]
    },
    clear: function() {
        this.files = {}
    }
},
THREE.Loader = function(e) {
    this.showStatus = e,
    this.statusDomElement = e ? THREE.Loader.prototype.addStatusElement() : null ,
    this.imageLoader = new THREE.ImageLoader,
    this.onLoadStart = function() {}
    ,
    this.onLoadProgress = function() {}
    ,
    this.onLoadComplete = function() {}
}
,
THREE.Loader.prototype = {
    constructor: THREE.Loader,
    crossOrigin: void 0,
    addStatusElement: function() {
        var e = document.createElement("div");
        return e.style.position = "absolute",
        e.style.right = "0px",
        e.style.top = "0px",
        e.style.fontSize = "0.8em",
        e.style.textAlign = "left",
        e.style.background = "rgba(0,0,0,0.25)",
        e.style.color = "#fff",
        e.style.width = "120px",
        e.style.padding = "0.5em 0.5em 0.5em 0.5em",
        e.style.zIndex = 1e3,
        e.innerHTML = "Loading ...",
        e
    },
    updateProgress: function(e) {
        var t = "Loaded ";
        t += e.total ? (100 * e.loaded / e.total).toFixed(0) + "%" : (e.loaded / 1024).toFixed(2) + " KB",
        this.statusDomElement.innerHTML = t
    },
    extractUrlBase: function(e) {
        var t = e.split("/");
        return 1 === t.length ? "./" : (t.pop(),
        t.join("/") + "/")
    },
    initMaterials: function(e, t) {
        for (var i = [], n = 0; n < e.length; ++n)
            i[n] = this.createMaterial(e[n], t);
        return i
    },
    needsTangents: function(e) {
        for (var t = 0, i = e.length; i > t; t++) {
            var n = e[t];
            if (n instanceof THREE.ShaderMaterial)
                return !0
        }
        return !1
    },
    createMaterial: function(e, t) {
        function i(e) {
            var t = Math.log(e) / Math.LN2;
            return Math.pow(2, Math.round(t))
        }
        function n(e, n, r, a, s, l, c) {
            var d, h = t + r, u = THREE.Loader.Handlers.get(h);
            if (null !== u ? d = u.load(h) : (d = new THREE.Texture,
            u = o.imageLoader,
            u.crossOrigin = o.crossOrigin,
            u.load(h, function(e) {
                if (THREE.Math.isPowerOfTwo(e.width) === !1 || THREE.Math.isPowerOfTwo(e.height) === !1) {
                    var t = i(e.width)
                      , n = i(e.height)
                      , r = document.createElement("canvas");
                    r.width = t,
                    r.height = n;
                    var o = r.getContext("2d");
                    o.drawImage(e, 0, 0, t, n),
                    d.image = r
                } else
                    d.image = e;
                d.needsUpdate = !0
            })),
            d.sourceFile = r,
            a && (d.repeat.set(a[0], a[1]),
            1 !== a[0] && (d.wrapS = THREE.RepeatWrapping),
            1 !== a[1] && (d.wrapT = THREE.RepeatWrapping)),
            s && d.offset.set(s[0], s[1]),
            l) {
                var p = {
                    repeat: THREE.RepeatWrapping,
                    mirror: THREE.MirroredRepeatWrapping
                };
                void 0 !== p[l[0]] && (d.wrapS = p[l[0]]),
                void 0 !== p[l[1]] && (d.wrapT = p[l[1]])
            }
            c && (d.anisotropy = c),
            e[n] = d
        }
        function r(e) {
            return (255 * e[0] << 16) + (255 * e[1] << 8) + 255 * e[2]
        }
        var o = this
          , a = "MeshLambertMaterial"
          , s = {
            color: 15658734,
            opacity: 1,
            map: null ,
            lightMap: null ,
            normalMap: null ,
            bumpMap: null ,
            wireframe: !1
        };
        if (e.shading) {
            var l = e.shading.toLowerCase();
            "phong" === l ? a = "MeshPhongMaterial" : "basic" === l && (a = "MeshBasicMaterial")
        }
        if (void 0 !== e.blending && void 0 !== THREE[e.blending] && (s.blending = THREE[e.blending]),
        (void 0 !== e.transparent || e.opacity < 1) && (s.transparent = e.transparent),
        void 0 !== e.depthTest && (s.depthTest = e.depthTest),
        void 0 !== e.depthWrite && (s.depthWrite = e.depthWrite),
        void 0 !== e.visible && (s.visible = e.visible),
        void 0 !== e.flipSided && (s.side = THREE.BackSide),
        void 0 !== e.doubleSided && (s.side = THREE.DoubleSide),
        void 0 !== e.wireframe && (s.wireframe = e.wireframe),
        void 0 !== e.vertexColors && ("face" === e.vertexColors ? s.vertexColors = THREE.FaceColors : e.vertexColors && (s.vertexColors = THREE.VertexColors)),
        e.colorDiffuse ? s.color = r(e.colorDiffuse) : e.DbgColor && (s.color = e.DbgColor),
        e.colorSpecular && (s.specular = r(e.colorSpecular)),
        e.colorAmbient && (s.ambient = r(e.colorAmbient)),
        e.colorEmissive && (s.emissive = r(e.colorEmissive)),
        e.transparency && (s.opacity = e.transparency),
        e.specularCoef && (s.shininess = e.specularCoef),
        e.mapDiffuse && t && n(s, "map", e.mapDiffuse, e.mapDiffuseRepeat, e.mapDiffuseOffset, e.mapDiffuseWrap, e.mapDiffuseAnisotropy),
        e.mapLight && t && n(s, "lightMap", e.mapLight, e.mapLightRepeat, e.mapLightOffset, e.mapLightWrap, e.mapLightAnisotropy),
        e.mapBump && t && n(s, "bumpMap", e.mapBump, e.mapBumpRepeat, e.mapBumpOffset, e.mapBumpWrap, e.mapBumpAnisotropy),
        e.mapNormal && t && n(s, "normalMap", e.mapNormal, e.mapNormalRepeat, e.mapNormalOffset, e.mapNormalWrap, e.mapNormalAnisotropy),
        e.mapSpecular && t && n(s, "specularMap", e.mapSpecular, e.mapSpecularRepeat, e.mapSpecularOffset, e.mapSpecularWrap, e.mapSpecularAnisotropy),
        e.mapAlpha && t && n(s, "alphaMap", e.mapAlpha, e.mapAlphaRepeat, e.mapAlphaOffset, e.mapAlphaWrap, e.mapAlphaAnisotropy),
        e.mapBumpScale && (s.bumpScale = e.mapBumpScale),
        e.mapNormal) {
            var c = THREE.ShaderLib.normalmap
              , d = THREE.UniformsUtils.clone(c.uniforms);
            d.tNormal.value = s.normalMap,
            e.mapNormalFactor && d.uNormalScale.value.set(e.mapNormalFactor, e.mapNormalFactor),
            s.map && (d.tDiffuse.value = s.map,
            d.enableDiffuse.value = !0),
            s.specularMap && (d.tSpecular.value = s.specularMap,
            d.enableSpecular.value = !0),
            s.lightMap && (d.tAO.value = s.lightMap,
            d.enableAO.value = !0),
            d.diffuse.value.setHex(s.color),
            d.specular.value.setHex(s.specular),
            d.ambient.value.setHex(s.ambient),
            d.shininess.value = s.shininess,
            void 0 !== s.opacity && (d.opacity.value = s.opacity);
            var h = {
                fragmentShader: c.fragmentShader,
                vertexShader: c.vertexShader,
                uniforms: d,
                lights: !0,
                fog: !0
            }
              , u = new THREE.ShaderMaterial(h);
            s.transparent && (u.transparent = !0)
        } else
            var u = new THREE[a](s);
        return void 0 !== e.DbgName && (u.name = e.DbgName),
        u
    }
},
THREE.Loader.Handlers = {
    handlers: [],
    add: function(e, t) {
        this.handlers.push(e, t)
    },
    get: function(e) {
        for (var t = 0, i = this.handlers.length; i > t; t += 2) {
            var n = this.handlers[t]
              , r = this.handlers[t + 1];
            if (n.test(e))
                return r
        }
        return null
    }
},
THREE.XHRLoader = function(e) {
    this.cache = new THREE.Cache,
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager
}
,
THREE.XHRLoader.prototype = {
    constructor: THREE.XHRLoader,
    load: function(e, t, i, n) {
        var r = this
          , o = r.cache.get(e);
        if (void 0 !== o)
            return void (t && t(o));
        var a = new XMLHttpRequest;
        a.open("GET", e, !0),
        a.addEventListener("load", function() {
            r.cache.add(e, this.response),
            t && t(this.response),
            r.manager.itemEnd(e)
        }, !1),
        void 0 !== i && a.addEventListener("progress", function(e) {
            i(e)
        }, !1),
        void 0 !== n && a.addEventListener("error", function(e) {
            n(e)
        }, !1),
        void 0 !== this.crossOrigin && (a.crossOrigin = this.crossOrigin),
        void 0 !== this.responseType && (a.responseType = this.responseType),
        a.send(null ),
        r.manager.itemStart(e)
    },
    setResponseType: function(e) {
        this.responseType = e
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e
    }
},
THREE.ImageLoader = function(e) {
    this.cache = new THREE.Cache,
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager
}
,
THREE.ImageLoader.prototype = {
    constructor: THREE.ImageLoader,
    load: function(e, t, i, n) {
        var r = this
          , o = r.cache.get(e);
        if (void 0 !== o)
            return void t(o);
        var a = document.createElement("img");
        return void 0 !== t && a.addEventListener("load", function() {
            r.cache.add(e, this),
            t(this),
            r.manager.itemEnd(e)
        }, !1),
        void 0 !== i && a.addEventListener("progress", function(e) {
            i(e)
        }, !1),
        void 0 !== n && a.addEventListener("error", function(e) {
            n(e)
        }, !1),
        void 0 !== this.crossOrigin && (a.crossOrigin = this.crossOrigin),
        a.src = e,
        r.manager.itemStart(e),
        a
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e
    }
},
THREE.JSONLoader = function(e) {
    THREE.Loader.call(this, e),
    this.withCredentials = !1
}
,
THREE.JSONLoader.prototype = Object.create(THREE.Loader.prototype),
THREE.JSONLoader.prototype.load = function(e, t, i) {
    i = i && "string" == typeof i ? i : this.extractUrlBase(e),
    this.onLoadStart(),
    this.loadAjaxJSON(this, e, t, i)
}
,
THREE.JSONLoader.prototype.loadAjaxJSON = function(e, t, i, n, r) {
    var o = new XMLHttpRequest
      , a = 0;
    o.onreadystatechange = function() {
        if (o.readyState === o.DONE)
            if (200 === o.status || 0 === o.status) {
                if (o.responseText) {
                    var s = JSON.parse(o.responseText);
                    if (void 0 !== s.metadata && "scene" === s.metadata.type)
                        return void console.error('THREE.JSONLoader: "' + t + '" seems to be a Scene. Use THREE.SceneLoader instead.');
                    var l = e.parse(s, n);
                    i(l.geometry, l.materials)
                } else
                    console.error('THREE.JSONLoader: "' + t + '" seems to be unreachable or the file is empty.');
                e.onLoadComplete()
            } else
                console.error("THREE.JSONLoader: Couldn't load \"" + t + '" (' + o.status + ")");
        else
            o.readyState === o.LOADING ? r && (0 === a && (a = o.getResponseHeader("Content-Length")),
            r({
                total: a,
                loaded: o.responseText.length
            })) : o.readyState === o.HEADERS_RECEIVED && void 0 !== r && (a = o.getResponseHeader("Content-Length"))
    }
    ,
    o.open("GET", t, !0),
    o.withCredentials = this.withCredentials,
    o.send(null )
}
,
THREE.JSONLoader.prototype.parse = function(e, t) {
    function i(t) {
        function i(e, t) {
            return e & 1 << t
        }
        var n, r, a, s, l, c, d, h, u, p, f, g, m, v, y, b, w, x, E, _, T, C, R, S, k, M, A, H = e.faces, P = e.vertices, O = e.normals, D = e.colors, $ = 0;
        if (void 0 !== e.uvs) {
            for (n = 0; n < e.uvs.length; n++)
                e.uvs[n].length && $++;
            for (n = 0; $ > n; n++)
                o.faceVertexUvs[n] = []
        }
        for (s = 0,
        l = P.length; l > s; )
            x = new THREE.Vector3,
            x.x = P[s++] * t,
            x.y = P[s++] * t,
            x.z = P[s++] * t,
            o.vertices.push(x);
        for (s = 0,
        l = H.length; l > s; )
            if (p = H[s++],
            f = i(p, 0),
            g = i(p, 1),
            m = i(p, 3),
            v = i(p, 4),
            y = i(p, 5),
            b = i(p, 6),
            w = i(p, 7),
            f) {
                if (_ = new THREE.Face3,
                _.a = H[s],
                _.b = H[s + 1],
                _.c = H[s + 3],
                T = new THREE.Face3,
                T.a = H[s + 1],
                T.b = H[s + 2],
                T.c = H[s + 3],
                s += 4,
                g && (u = H[s++],
                _.materialIndex = u,
                T.materialIndex = u),
                a = o.faces.length,
                m)
                    for (n = 0; $ > n; n++)
                        for (S = e.uvs[n],
                        o.faceVertexUvs[n][a] = [],
                        o.faceVertexUvs[n][a + 1] = [],
                        r = 0; 4 > r; r++)
                            h = H[s++],
                            M = S[2 * h],
                            A = S[2 * h + 1],
                            k = new THREE.Vector2(M,A),
                            2 !== r && o.faceVertexUvs[n][a].push(k),
                            0 !== r && o.faceVertexUvs[n][a + 1].push(k);
                if (v && (d = 3 * H[s++],
                _.normal.set(O[d++], O[d++], O[d]),
                T.normal.copy(_.normal)),
                y)
                    for (n = 0; 4 > n; n++)
                        d = 3 * H[s++],
                        R = new THREE.Vector3(O[d++],O[d++],O[d]),
                        2 !== n && _.vertexNormals.push(R),
                        0 !== n && T.vertexNormals.push(R);
                if (b && (c = H[s++],
                C = D[c],
                _.color.setHex(C),
                T.color.setHex(C)),
                w)
                    for (n = 0; 4 > n; n++)
                        c = H[s++],
                        C = D[c],
                        2 !== n && _.vertexColors.push(new THREE.Color(C)),
                        0 !== n && T.vertexColors.push(new THREE.Color(C));
                o.faces.push(_),
                o.faces.push(T)
            } else {
                if (E = new THREE.Face3,
                E.a = H[s++],
                E.b = H[s++],
                E.c = H[s++],
                g && (u = H[s++],
                E.materialIndex = u),
                a = o.faces.length,
                m)
                    for (n = 0; $ > n; n++)
                        for (S = e.uvs[n],
                        o.faceVertexUvs[n][a] = [],
                        r = 0; 3 > r; r++)
                            h = H[s++],
                            M = S[2 * h],
                            A = S[2 * h + 1],
                            k = new THREE.Vector2(M,A),
                            o.faceVertexUvs[n][a].push(k);
                if (v && (d = 3 * H[s++],
                E.normal.set(O[d++], O[d++], O[d])),
                y)
                    for (n = 0; 3 > n; n++)
                        d = 3 * H[s++],
                        R = new THREE.Vector3(O[d++],O[d++],O[d]),
                        E.vertexNormals.push(R);
                if (b && (c = H[s++],
                E.color.setHex(D[c])),
                w)
                    for (n = 0; 3 > n; n++)
                        c = H[s++],
                        E.vertexColors.push(new THREE.Color(D[c]));
                o.faces.push(E)
            }
    }
    function n() {
        var t = void 0 !== e.influencesPerVertex ? e.influencesPerVertex : 2;
        if (e.skinWeights)
            for (var i = 0, n = e.skinWeights.length; n > i; i += t) {
                var r = e.skinWeights[i]
                  , a = t > 1 ? e.skinWeights[i + 1] : 0
                  , s = t > 2 ? e.skinWeights[i + 2] : 0
                  , l = t > 3 ? e.skinWeights[i + 3] : 0;
                o.skinWeights.push(new THREE.Vector4(r,a,s,l))
            }
        if (e.skinIndices)
            for (var i = 0, n = e.skinIndices.length; n > i; i += t) {
                var c = e.skinIndices[i]
                  , d = t > 1 ? e.skinIndices[i + 1] : 0
                  , h = t > 2 ? e.skinIndices[i + 2] : 0
                  , u = t > 3 ? e.skinIndices[i + 3] : 0;
                o.skinIndices.push(new THREE.Vector4(c,d,h,u))
            }
        o.bones = e.bones,
        o.bones && o.bones.length > 0 && (o.skinWeights.length !== o.skinIndices.length || o.skinIndices.length !== o.vertices.length) && console.warn("When skinning, number of vertices (" + o.vertices.length + "), skinIndices (" + o.skinIndices.length + "), and skinWeights (" + o.skinWeights.length + ") should match."),
        o.animation = e.animation,
        o.animations = e.animations
    }
    function r(t) {
        if (void 0 !== e.morphTargets) {
            var i, n, r, a, s, l;
            for (i = 0,
            n = e.morphTargets.length; n > i; i++)
                for (o.morphTargets[i] = {},
                o.morphTargets[i].name = e.morphTargets[i].name,
                o.morphTargets[i].vertices = [],
                s = o.morphTargets[i].vertices,
                l = e.morphTargets[i].vertices,
                r = 0,
                a = l.length; a > r; r += 3) {
                    var c = new THREE.Vector3;
                    c.x = l[r] * t,
                    c.y = l[r + 1] * t,
                    c.z = l[r + 2] * t,
                    s.push(c)
                }
        }
        if (void 0 !== e.morphColors) {
            var i, n, d, h, u, p, f;
            for (i = 0,
            n = e.morphColors.length; n > i; i++)
                for (o.morphColors[i] = {},
                o.morphColors[i].name = e.morphColors[i].name,
                o.morphColors[i].colors = [],
                u = o.morphColors[i].colors,
                p = e.morphColors[i].colors,
                d = 0,
                h = p.length; h > d; d += 3)
                    f = new THREE.Color(16755200),
                    f.setRGB(p[d], p[d + 1], p[d + 2]),
                    u.push(f)
        }
    }
    var o = new THREE.Geometry
      , a = void 0 !== e.scale ? 1 / e.scale : 1;
    if (i(a),
    n(),
    r(a),
    o.computeFaceNormals(),
    o.computeBoundingSphere(),
    void 0 === e.materials || 0 === e.materials.length)
        return {
            geometry: o
        };
    var s = this.initMaterials(e.materials, t);
    return this.needsTangents(s) && o.computeTangents(),
    {
        geometry: o,
        materials: s
    }
}
,
THREE.LoadingManager = function(e, t, i) {
    var n = this
      , r = 0
      , o = 0;
    this.onLoad = e,
    this.onProgress = t,
    this.onError = i,
    this.itemStart = function() {
        o++
    }
    ,
    this.itemEnd = function(e) {
        r++,
        void 0 !== n.onProgress && n.onProgress(e, r, o),
        r === o && void 0 !== n.onLoad && n.onLoad()
    }
}
,
THREE.DefaultLoadingManager = new THREE.LoadingManager,
THREE.BufferGeometryLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager
}
,
THREE.BufferGeometryLoader.prototype = {
    constructor: THREE.BufferGeometryLoader,
    load: function(e, t, i, n) {
        var r = this
          , o = new THREE.XHRLoader;
        o.setCrossOrigin(this.crossOrigin),
        o.load(e, function(e) {
            t(r.parse(JSON.parse(e)))
        }, i, n)
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e
    },
    parse: function(e) {
        var t = new THREE.BufferGeometry
          , i = e.attributes;
        for (var n in i) {
            var r = i[n]
              , o = new self[r.type](r.array);
            t.addAttribute(n, new THREE.BufferAttribute(o,r.itemSize))
        }
        var a = e.offsets;
        void 0 !== a && (t.offsets = JSON.parse(JSON.stringify(a)));
        var s = e.boundingSphere;
        if (void 0 !== s) {
            var l = new THREE.Vector3;
            void 0 !== s.center && l.fromArray(s.center),
            t.boundingSphere = new THREE.Sphere(l,s.radius)
        }
        return t
    }
},
THREE.MaterialLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager
}
,
THREE.MaterialLoader.prototype = {
    constructor: THREE.MaterialLoader,
    load: function(e, t, i, n) {
        var r = this
          , o = new THREE.XHRLoader;
        o.setCrossOrigin(this.crossOrigin),
        o.load(e, function(e) {
            t(r.parse(JSON.parse(e)))
        }, i, n)
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e
    },
    parse: function(e) {
        var t = new THREE[e.type];
        if (void 0 !== e.color && t.color.setHex(e.color),
        void 0 !== e.ambient && t.ambient.setHex(e.ambient),
        void 0 !== e.emissive && t.emissive.setHex(e.emissive),
        void 0 !== e.specular && t.specular.setHex(e.specular),
        void 0 !== e.shininess && (t.shininess = e.shininess),
        void 0 !== e.uniforms && (t.uniforms = e.uniforms),
        void 0 !== e.vertexShader && (t.vertexShader = e.vertexShader),
        void 0 !== e.fragmentShader && (t.fragmentShader = e.fragmentShader),
        void 0 !== e.vertexColors && (t.vertexColors = e.vertexColors),
        void 0 !== e.shading && (t.shading = e.shading),
        void 0 !== e.blending && (t.blending = e.blending),
        void 0 !== e.side && (t.side = e.side),
        void 0 !== e.opacity && (t.opacity = e.opacity),
        void 0 !== e.transparent && (t.transparent = e.transparent),
        void 0 !== e.wireframe && (t.wireframe = e.wireframe),
        void 0 !== e.materials)
            for (var i = 0, n = e.materials.length; n > i; i++)
                t.materials.push(this.parse(e.materials[i]));
        return t
    }
},
THREE.ObjectLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager
}
,
THREE.ObjectLoader.prototype = {
    constructor: THREE.ObjectLoader,
    load: function(e, t, i, n) {
        var r = this
          , o = new THREE.XHRLoader(r.manager);
        o.setCrossOrigin(this.crossOrigin),
        o.load(e, function(e) {
            t(r.parse(JSON.parse(e)))
        }, i, n)
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e
    },
    parse: function(e) {
        var t = this.parseGeometries(e.geometries)
          , i = this.parseMaterials(e.materials)
          , n = this.parseObject(e.object, t, i);
        return n
    },
    parseGeometries: function(e) {
        var t = {};
        if (void 0 !== e)
            for (var i = new THREE.JSONLoader, n = new THREE.BufferGeometryLoader, r = 0, o = e.length; o > r; r++) {
                var a, s = e[r];
                switch (s.type) {
                case "PlaneGeometry":
                    a = new THREE.PlaneGeometry(s.width,s.height,s.widthSegments,s.heightSegments);
                    break;
                case "BoxGeometry":
                case "CubeGeometry":
                    a = new THREE.BoxGeometry(s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);
                    break;
                case "CircleGeometry":
                    a = new THREE.CircleGeometry(s.radius,s.segments);
                    break;
                case "CylinderGeometry":
                    a = new THREE.CylinderGeometry(s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded);
                    break;
                case "SphereGeometry":
                    a = new THREE.SphereGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);
                    break;
                case "IcosahedronGeometry":
                    a = new THREE.IcosahedronGeometry(s.radius,s.detail);
                    break;
                case "TorusGeometry":
                    a = new THREE.TorusGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);
                    break;
                case "TorusKnotGeometry":
                    a = new THREE.TorusKnotGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.p,s.q,s.heightScale);
                    break;
                case "BufferGeometry":
                    a = n.parse(s.data);
                    break;
                case "Geometry":
                    a = i.parse(s.data).geometry
                }
                a.uuid = s.uuid,
                void 0 !== s.name && (a.name = s.name),
                t[s.uuid] = a
            }
        return t
    },
    parseMaterials: function(e) {
        var t = {};
        if (void 0 !== e)
            for (var i = new THREE.MaterialLoader, n = 0, r = e.length; r > n; n++) {
                var o = e[n]
                  , a = i.parse(o);
                a.uuid = o.uuid,
                void 0 !== o.name && (a.name = o.name),
                t[o.uuid] = a
            }
        return t
    },
    parseObject: function() {
        var e = new THREE.Matrix4;
        return function(t, i, n) {
            var r;
            switch (t.type) {
            case "Scene":
                r = new THREE.Scene;
                break;
            case "PerspectiveCamera":
                r = new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);
                break;
            case "OrthographicCamera":
                r = new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);
                break;
            case "AmbientLight":
                r = new THREE.AmbientLight(t.color);
                break;
            case "DirectionalLight":
                r = new THREE.DirectionalLight(t.color,t.intensity);
                break;
            case "PointLight":
                r = new THREE.PointLight(t.color,t.intensity,t.distance);
                break;
            case "SpotLight":
                r = new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.exponent);
                break;
            case "HemisphereLight":
                r = new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);
                break;
            case "Mesh":
                var o = i[t.geometry]
                  , a = n[t.material];
                void 0 === o && console.warn("THREE.ObjectLoader: Undefined geometry", t.geometry),
                void 0 === a && console.warn("THREE.ObjectLoader: Undefined material", t.material),
                r = new THREE.Mesh(o,a);
                break;
            case "Line":
                var o = i[t.geometry]
                  , a = n[t.material];
                void 0 === o && console.warn("THREE.ObjectLoader: Undefined geometry", t.geometry),
                void 0 === a && console.warn("THREE.ObjectLoader: Undefined material", t.material),
                r = new THREE.Line(o,a);
                break;
            case "Sprite":
                var a = n[t.material];
                void 0 === a && console.warn("THREE.ObjectLoader: Undefined material", t.material),
                r = new THREE.Sprite(a);
                break;
            case "Group":
                r = new THREE.Group;
                break;
            default:
                r = new THREE.Object3D
            }
            if (r.uuid = t.uuid,
            void 0 !== t.name && (r.name = t.name),
            void 0 !== t.matrix ? (e.fromArray(t.matrix),
            e.decompose(r.position, r.quaternion, r.scale)) : (void 0 !== t.position && r.position.fromArray(t.position),
            void 0 !== t.rotation && r.rotation.fromArray(t.rotation),
            void 0 !== t.scale && r.scale.fromArray(t.scale)),
            void 0 !== t.visible && (r.visible = t.visible),
            void 0 !== t.userData && (r.userData = t.userData),
            void 0 !== t.children)
                for (var s in t.children)
                    r.add(this.parseObject(t.children[s], i, n));
            return r
        }
    }()
},
THREE.TextureLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager
}
,
THREE.TextureLoader.prototype = {
    constructor: THREE.TextureLoader,
    load: function(e, t, i, n) {
        var r = this
          , o = new THREE.ImageLoader(r.manager);
        o.setCrossOrigin(this.crossOrigin),
        o.load(e, function(e) {
            var i = new THREE.Texture(e);
            i.needsUpdate = !0,
            void 0 !== t && t(i)
        }, i, n)
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e
    }
},
THREE.CompressedTextureLoader = function() {
    this._parser = null
}
,
THREE.CompressedTextureLoader.prototype = {
    constructor: THREE.CompressedTextureLoader,
    load: function(e, t) {
        var i = this
          , n = []
          , r = new THREE.CompressedTexture;
        r.image = n;
        var o = new THREE.XHRLoader;
        if (o.setResponseType("arraybuffer"),
        e instanceof Array)
            for (var a = 0, s = function(s) {
                o.load(e[s], function(e) {
                    var o = i._parser(e, !0);
                    n[s] = {
                        width: o.width,
                        height: o.height,
                        format: o.format,
                        mipmaps: o.mipmaps
                    },
                    a += 1,
                    6 === a && (1 == o.mipmapCount && (r.minFilter = THREE.LinearFilter),
                    r.format = o.format,
                    r.needsUpdate = !0,
                    t && t(r))
                })
            }
            , l = 0, c = e.length; c > l; ++l)
                s(l);
        else
            o.load(e, function(e) {
                var o = i._parser(e, !0);
                if (o.isCubemap)
                    for (var a = o.mipmaps.length / o.mipmapCount, s = 0; a > s; s++) {
                        n[s] = {
                            mipmaps: []
                        };
                        for (var l = 0; l < o.mipmapCount; l++)
                            n[s].mipmaps.push(o.mipmaps[s * o.mipmapCount + l]),
                            n[s].format = o.format,
                            n[s].width = o.width,
                            n[s].height = o.height
                    }
                else
                    r.image.width = o.width,
                    r.image.height = o.height,
                    r.mipmaps = o.mipmaps;
                1 === o.mipmapCount && (r.minFilter = THREE.LinearFilter),
                r.format = o.format,
                r.needsUpdate = !0,
                t && t(r)
            });
        return r
    }
},
THREE.Material = function() {
    Object.defineProperty(this, "id", {
        value: THREE.MaterialIdCount++
    }),
    this.uuid = THREE.Math.generateUUID(),
    this.name = "",
    this.type = "Material",
    this.side = THREE.FrontSide,
    this.opacity = 1,
    this.transparent = !1,
    this.blending = THREE.NormalBlending,
    this.blendSrc = THREE.SrcAlphaFactor,
    this.blendDst = THREE.OneMinusSrcAlphaFactor,
    this.blendEquation = THREE.AddEquation,
    this.depthTest = !0,
    this.depthWrite = !0,
    this.polygonOffset = !1,
    this.polygonOffsetFactor = 0,
    this.polygonOffsetUnits = 0,
    this.alphaTest = 0,
    this.overdraw = 0,
    this.visible = !0,
    this.needsUpdate = !0
}
,
THREE.Material.prototype = {
    constructor: THREE.Material,
    setValues: function(e) {
        if (void 0 !== e)
            for (var t in e) {
                var i = e[t];
                if (void 0 !== i) {
                    if (t in this) {
                        var n = this[t];
                        n instanceof THREE.Color ? n.set(i) : n instanceof THREE.Vector3 && i instanceof THREE.Vector3 ? n.copy(i) : this[t] = "overdraw" == t ? Number(i) : i
                    }
                } else
                    console.warn("THREE.Material: '" + t + "' parameter is undefined.")
            }
    },
    toJSON: function() {
        var e = {
            metadata: {
                version: 4.2,
                type: "material",
                generator: "MaterialExporter"
            },
            uuid: this.uuid,
            type: this.type
        };
        return "" !== this.name && (e.name = this.name),
        this instanceof THREE.MeshBasicMaterial ? (e.color = this.color.getHex(),
        this.vertexColors !== THREE.NoColors && (e.vertexColors = this.vertexColors),
        this.blending !== THREE.NormalBlending && (e.blending = this.blending),
        this.side !== THREE.FrontSide && (e.side = this.side)) : this instanceof THREE.MeshLambertMaterial ? (e.color = this.color.getHex(),
        e.ambient = this.ambient.getHex(),
        e.emissive = this.emissive.getHex(),
        this.vertexColors !== THREE.NoColors && (e.vertexColors = this.vertexColors),
        this.blending !== THREE.NormalBlending && (e.blending = this.blending),
        this.side !== THREE.FrontSide && (e.side = this.side)) : this instanceof THREE.MeshPhongMaterial ? (e.color = this.color.getHex(),
        e.ambient = this.ambient.getHex(),
        e.emissive = this.emissive.getHex(),
        e.specular = this.specular.getHex(),
        e.shininess = this.shininess,
        this.vertexColors !== THREE.NoColors && (e.vertexColors = this.vertexColors),
        this.blending !== THREE.NormalBlending && (e.blending = this.blending),
        this.side !== THREE.FrontSide && (e.side = this.side)) : this instanceof THREE.MeshNormalMaterial ? (this.shading !== THREE.FlatShading && (e.shading = this.shading),
        this.blending !== THREE.NormalBlending && (e.blending = this.blending),
        this.side !== THREE.FrontSide && (e.side = this.side)) : this instanceof THREE.MeshDepthMaterial ? (this.blending !== THREE.NormalBlending && (e.blending = this.blending),
        this.side !== THREE.FrontSide && (e.side = this.side)) : this instanceof THREE.ShaderMaterial ? (e.uniforms = this.uniforms,
        e.vertexShader = this.vertexShader,
        e.fragmentShader = this.fragmentShader) : this instanceof THREE.SpriteMaterial && (e.color = this.color.getHex()),
        this.opacity < 1 && (e.opacity = this.opacity),
        this.transparent !== !1 && (e.transparent = this.transparent),
        this.wireframe !== !1 && (e.wireframe = this.wireframe),
        e
    },
    clone: function(e) {
        return void 0 === e && (e = new THREE.Material),
        e.name = this.name,
        e.side = this.side,
        e.opacity = this.opacity,
        e.transparent = this.transparent,
        e.blending = this.blending,
        e.blendSrc = this.blendSrc,
        e.blendDst = this.blendDst,
        e.blendEquation = this.blendEquation,
        e.depthTest = this.depthTest,
        e.depthWrite = this.depthWrite,
        e.polygonOffset = this.polygonOffset,
        e.polygonOffsetFactor = this.polygonOffsetFactor,
        e.polygonOffsetUnits = this.polygonOffsetUnits,
        e.alphaTest = this.alphaTest,
        e.overdraw = this.overdraw,
        e.visible = this.visible,
        e
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
},
THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),
THREE.MaterialIdCount = 0,
THREE.LineBasicMaterial = function(e) {
    THREE.Material.call(this),
    this.type = "LineBasicMaterial",
    this.color = new THREE.Color(16777215),
    this.linewidth = 1,
    this.linecap = "round",
    this.linejoin = "round",
    this.vertexColors = THREE.NoColors,
    this.fog = !0,
    this.setValues(e)
}
,
THREE.LineBasicMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.LineBasicMaterial.prototype.clone = function() {
    var e = new THREE.LineBasicMaterial;
    return THREE.Material.prototype.clone.call(this, e),
    e.color.copy(this.color),
    e.linewidth = this.linewidth,
    e.linecap = this.linecap,
    e.linejoin = this.linejoin,
    e.vertexColors = this.vertexColors,
    e.fog = this.fog,
    e
}
,
THREE.LineDashedMaterial = function(e) {
    THREE.Material.call(this),
    this.type = "LineDashedMaterial",
    this.color = new THREE.Color(16777215),
    this.linewidth = 1,
    this.scale = 1,
    this.dashSize = 3,
    this.gapSize = 1,
    this.vertexColors = !1,
    this.fog = !0,
    this.setValues(e)
}
,
THREE.LineDashedMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.LineDashedMaterial.prototype.clone = function() {
    var e = new THREE.LineDashedMaterial;
    return THREE.Material.prototype.clone.call(this, e),
    e.color.copy(this.color),
    e.linewidth = this.linewidth,
    e.scale = this.scale,
    e.dashSize = this.dashSize,
    e.gapSize = this.gapSize,
    e.vertexColors = this.vertexColors,
    e.fog = this.fog,
    e
}
,
THREE.MeshBasicMaterial = function(e) {
    THREE.Material.call(this),
    this.type = "MeshBasicMaterial",
    this.color = new THREE.Color(16777215),
    this.map = null ,
    this.lightMap = null ,
    this.specularMap = null ,
    this.alphaMap = null ,
    this.envMap = null ,
    this.combine = THREE.MultiplyOperation,
    this.reflectivity = 1,
    this.refractionRatio = .98,
    this.fog = !0,
    this.shading = THREE.SmoothShading,
    this.wireframe = !1,
    this.wireframeLinewidth = 1,
    this.wireframeLinecap = "round",
    this.wireframeLinejoin = "round",
    this.vertexColors = THREE.NoColors,
    this.skinning = !1,
    this.morphTargets = !1,
    this.setValues(e)
}
,
THREE.MeshBasicMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.MeshBasicMaterial.prototype.clone = function() {
    var e = new THREE.MeshBasicMaterial;
    return THREE.Material.prototype.clone.call(this, e),
    e.color.copy(this.color),
    e.map = this.map,
    e.lightMap = this.lightMap,
    e.specularMap = this.specularMap,
    e.alphaMap = this.alphaMap,
    e.envMap = this.envMap,
    e.combine = this.combine,
    e.reflectivity = this.reflectivity,
    e.refractionRatio = this.refractionRatio,
    e.fog = this.fog,
    e.shading = this.shading,
    e.wireframe = this.wireframe,
    e.wireframeLinewidth = this.wireframeLinewidth,
    e.wireframeLinecap = this.wireframeLinecap,
    e.wireframeLinejoin = this.wireframeLinejoin,
    e.vertexColors = this.vertexColors,
    e.skinning = this.skinning,
    e.morphTargets = this.morphTargets,
    e
}
,
THREE.MeshLambertMaterial = function(e) {
    THREE.Material.call(this),
    this.type = "MeshLambertMaterial",
    this.color = new THREE.Color(16777215),
    this.ambient = new THREE.Color(16777215),
    this.emissive = new THREE.Color(0),
    this.wrapAround = !1,
    this.wrapRGB = new THREE.Vector3(1,1,1),
    this.map = null ,
    this.lightMap = null ,
    this.specularMap = null ,
    this.alphaMap = null ,
    this.envMap = null ,
    this.combine = THREE.MultiplyOperation,
    this.reflectivity = 1,
    this.refractionRatio = .98,
    this.fog = !0,
    this.shading = THREE.SmoothShading,
    this.wireframe = !1,
    this.wireframeLinewidth = 1,
    this.wireframeLinecap = "round",
    this.wireframeLinejoin = "round",
    this.vertexColors = THREE.NoColors,
    this.skinning = !1,
    this.morphTargets = !1,
    this.morphNormals = !1,
    this.setValues(e)
}
,
THREE.MeshLambertMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.MeshLambertMaterial.prototype.clone = function() {
    var e = new THREE.MeshLambertMaterial;
    return THREE.Material.prototype.clone.call(this, e),
    e.color.copy(this.color),
    e.ambient.copy(this.ambient),
    e.emissive.copy(this.emissive),
    e.wrapAround = this.wrapAround,
    e.wrapRGB.copy(this.wrapRGB),
    e.map = this.map,
    e.lightMap = this.lightMap,
    e.specularMap = this.specularMap,
    e.alphaMap = this.alphaMap,
    e.envMap = this.envMap,
    e.combine = this.combine,
    e.reflectivity = this.reflectivity,
    e.refractionRatio = this.refractionRatio,
    e.fog = this.fog,
    e.shading = this.shading,
    e.wireframe = this.wireframe,
    e.wireframeLinewidth = this.wireframeLinewidth,
    e.wireframeLinecap = this.wireframeLinecap,
    e.wireframeLinejoin = this.wireframeLinejoin,
    e.vertexColors = this.vertexColors,
    e.skinning = this.skinning,
    e.morphTargets = this.morphTargets,
    e.morphNormals = this.morphNormals,
    e
}
,
THREE.MeshPhongMaterial = function(e) {
    THREE.Material.call(this),
    this.type = "MeshPhongMaterial",
    this.color = new THREE.Color(16777215),
    this.ambient = new THREE.Color(16777215),
    this.emissive = new THREE.Color(0),
    this.specular = new THREE.Color(1118481),
    this.shininess = 30,
    this.metal = !1,
    this.wrapAround = !1,
    this.wrapRGB = new THREE.Vector3(1,1,1),
    this.map = null ,
    this.lightMap = null ,
    this.bumpMap = null ,
    this.bumpScale = 1,
    this.normalMap = null ,
    this.normalScale = new THREE.Vector2(1,1),
    this.specularMap = null ,
    this.alphaMap = null ,
    this.envMap = null ,
    this.combine = THREE.MultiplyOperation,
    this.reflectivity = 1,
    this.refractionRatio = .98,
    this.fog = !0,
    this.shading = THREE.SmoothShading,
    this.wireframe = !1,
    this.wireframeLinewidth = 1,
    this.wireframeLinecap = "round",
    this.wireframeLinejoin = "round",
    this.vertexColors = THREE.NoColors,
    this.skinning = !1,
    this.morphTargets = !1,
    this.morphNormals = !1,
    this.setValues(e)
}
,
THREE.MeshPhongMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.MeshPhongMaterial.prototype.clone = function() {
    var e = new THREE.MeshPhongMaterial;
    return THREE.Material.prototype.clone.call(this, e),
    e.color.copy(this.color),
    e.ambient.copy(this.ambient),
    e.emissive.copy(this.emissive),
    e.specular.copy(this.specular),
    e.shininess = this.shininess,
    e.metal = this.metal,
    e.wrapAround = this.wrapAround,
    e.wrapRGB.copy(this.wrapRGB),
    e.map = this.map,
    e.lightMap = this.lightMap,
    e.bumpMap = this.bumpMap,
    e.bumpScale = this.bumpScale,
    e.normalMap = this.normalMap,
    e.normalScale.copy(this.normalScale),
    e.specularMap = this.specularMap,
    e.alphaMap = this.alphaMap,
    e.envMap = this.envMap,
    e.combine = this.combine,
    e.reflectivity = this.reflectivity,
    e.refractionRatio = this.refractionRatio,
    e.fog = this.fog,
    e.shading = this.shading,
    e.wireframe = this.wireframe,
    e.wireframeLinewidth = this.wireframeLinewidth,
    e.wireframeLinecap = this.wireframeLinecap,
    e.wireframeLinejoin = this.wireframeLinejoin,
    e.vertexColors = this.vertexColors,
    e.skinning = this.skinning,
    e.morphTargets = this.morphTargets,
    e.morphNormals = this.morphNormals,
    e
}
,
THREE.MeshDepthMaterial = function(e) {
    THREE.Material.call(this),
    this.type = "MeshDepthMaterial",
    this.morphTargets = !1,
    this.wireframe = !1,
    this.wireframeLinewidth = 1,
    this.setValues(e)
}
,
THREE.MeshDepthMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.MeshDepthMaterial.prototype.clone = function() {
    var e = new THREE.MeshDepthMaterial;
    return THREE.Material.prototype.clone.call(this, e),
    e.wireframe = this.wireframe,
    e.wireframeLinewidth = this.wireframeLinewidth,
    e
}
,
THREE.MeshNormalMaterial = function(e) {
    THREE.Material.call(this, e),
    this.type = "MeshNormalMaterial",
    this.shading = THREE.FlatShading,
    this.wireframe = !1,
    this.wireframeLinewidth = 1,
    this.morphTargets = !1,
    this.setValues(e)
}
,
THREE.MeshNormalMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.MeshNormalMaterial.prototype.clone = function() {
    var e = new THREE.MeshNormalMaterial;
    return THREE.Material.prototype.clone.call(this, e),
    e.shading = this.shading,
    e.wireframe = this.wireframe,
    e.wireframeLinewidth = this.wireframeLinewidth,
    e
}
,
THREE.MeshFaceMaterial = function(e) {
    this.uuid = THREE.Math.generateUUID(),
    this.type = "MeshFaceMaterial",
    this.materials = e instanceof Array ? e : []
}
,
THREE.MeshFaceMaterial.prototype = {
    constructor: THREE.MeshFaceMaterial,
    toJSON: function() {
        for (var e = {
            metadata: {
                version: 4.2,
                type: "material",
                generator: "MaterialExporter"
            },
            uuid: this.uuid,
            type: this.type,
            materials: []
        }, t = 0, i = this.materials.length; i > t; t++)
            e.materials.push(this.materials[t].toJSON());
        return e
    },
    clone: function() {
        for (var e = new THREE.MeshFaceMaterial, t = 0; t < this.materials.length; t++)
            e.materials.push(this.materials[t].clone());
        return e
    }
},
THREE.PointCloudMaterial = function(e) {
    THREE.Material.call(this),
    this.type = "PointCloudMaterial",
    this.color = new THREE.Color(16777215),
    this.map = null ,
    this.size = 1,
    this.sizeAttenuation = !0,
    this.vertexColors = THREE.NoColors,
    this.fog = !0,
    this.setValues(e)
}
,
THREE.PointCloudMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.PointCloudMaterial.prototype.clone = function() {
    var e = new THREE.PointCloudMaterial;
    return THREE.Material.prototype.clone.call(this, e),
    e.color.copy(this.color),
    e.map = this.map,
    e.size = this.size,
    e.sizeAttenuation = this.sizeAttenuation,
    e.vertexColors = this.vertexColors,
    e.fog = this.fog,
    e
}
,
THREE.ParticleBasicMaterial = function(e) {
    return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial."),
    new THREE.PointCloudMaterial(e)
}
,
THREE.ParticleSystemMaterial = function(e) {
    return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial."),
    new THREE.PointCloudMaterial(e)
}
,
THREE.ShaderMaterial = function(e) {
    THREE.Material.call(this),
    this.type = "ShaderMaterial",
    this.defines = {},
    this.uniforms = {},
    this.attributes = null ,
    this.vertexShader = "void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
    this.fragmentShader = "void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",
    this.shading = THREE.SmoothShading,
    this.linewidth = 1,
    this.wireframe = !1,
    this.wireframeLinewidth = 1,
    this.fog = !1,
    this.lights = !1,
    this.vertexColors = THREE.NoColors,
    this.skinning = !1,
    this.morphTargets = !1,
    this.morphNormals = !1,
    this.defaultAttributeValues = {
        color: [1, 1, 1],
        uv: [0, 0],
        uv2: [0, 0]
    },
    this.index0AttributeName = void 0,
    this.setValues(e)
}
,
THREE.ShaderMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.ShaderMaterial.prototype.clone = function() {
    var e = new THREE.ShaderMaterial;
    return THREE.Material.prototype.clone.call(this, e),
    e.fragmentShader = this.fragmentShader,
    e.vertexShader = this.vertexShader,
    e.uniforms = THREE.UniformsUtils.clone(this.uniforms),
    e.attributes = this.attributes,
    e.defines = this.defines,
    e.shading = this.shading,
    e.wireframe = this.wireframe,
    e.wireframeLinewidth = this.wireframeLinewidth,
    e.fog = this.fog,
    e.lights = this.lights,
    e.vertexColors = this.vertexColors,
    e.skinning = this.skinning,
    e.morphTargets = this.morphTargets,
    e.morphNormals = this.morphNormals,
    e
}
,
THREE.RawShaderMaterial = function(e) {
    THREE.ShaderMaterial.call(this, e),
    this.type = "RawShaderMaterial"
}
,
THREE.RawShaderMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype),
THREE.RawShaderMaterial.prototype.clone = function() {
    var e = new THREE.RawShaderMaterial;
    return THREE.ShaderMaterial.prototype.clone.call(this, e),
    e
}
,
THREE.SpriteMaterial = function(e) {
    THREE.Material.call(this),
    this.type = "SpriteMaterial",
    this.color = new THREE.Color(16777215),
    this.map = null ,
    this.rotation = 0,
    this.fog = !1,
    this.setValues(e)
}
,
THREE.SpriteMaterial.prototype = Object.create(THREE.Material.prototype),
THREE.SpriteMaterial.prototype.clone = function() {
    var e = new THREE.SpriteMaterial;
    return THREE.Material.prototype.clone.call(this, e),
    e.color.copy(this.color),
    e.map = this.map,
    e.rotation = this.rotation,
    e.fog = this.fog,
    e
}
,
THREE.Texture = function(e, t, i, n, r, o, a, s, l) {
    Object.defineProperty(this, "id", {
        value: THREE.TextureIdCount++
    }),
    this.uuid = THREE.Math.generateUUID(),
    this.name = "",
    this.image = void 0 !== e ? e : THREE.Texture.DEFAULT_IMAGE,
    this.mipmaps = [],
    this.mapping = void 0 !== t ? t : THREE.Texture.DEFAULT_MAPPING,
    this.wrapS = void 0 !== i ? i : THREE.ClampToEdgeWrapping,
    this.wrapT = void 0 !== n ? n : THREE.ClampToEdgeWrapping,
    this.magFilter = void 0 !== r ? r : THREE.LinearFilter,
    this.minFilter = void 0 !== o ? o : THREE.LinearMipMapLinearFilter,
    this.anisotropy = void 0 !== l ? l : 1,
    this.format = void 0 !== a ? a : THREE.RGBAFormat,
    this.type = void 0 !== s ? s : THREE.UnsignedByteType,
    this.offset = new THREE.Vector2(0,0),
    this.repeat = new THREE.Vector2(1,1),
    this.generateMipmaps = !0,
    this.premultiplyAlpha = !1,
    this.flipY = !0,
    this.unpackAlignment = 4,
    this._needsUpdate = !1,
    this.onUpdate = null
}
,
THREE.Texture.DEFAULT_IMAGE = void 0,
THREE.Texture.DEFAULT_MAPPING = new THREE.UVMapping,
THREE.Texture.prototype = {
    constructor: THREE.Texture,
    get needsUpdate() {
        return this._needsUpdate
    },
    set needsUpdate(e) {
        e === !0 && this.update(),
        this._needsUpdate = e
    },
    clone: function(e) {
        return void 0 === e && (e = new THREE.Texture),
        e.image = this.image,
        e.mipmaps = this.mipmaps.slice(0),
        e.mapping = this.mapping,
        e.wrapS = this.wrapS,
        e.wrapT = this.wrapT,
        e.magFilter = this.magFilter,
        e.minFilter = this.minFilter,
        e.anisotropy = this.anisotropy,
        e.format = this.format,
        e.type = this.type,
        e.offset.copy(this.offset),
        e.repeat.copy(this.repeat),
        e.generateMipmaps = this.generateMipmaps,
        e.premultiplyAlpha = this.premultiplyAlpha,
        e.flipY = this.flipY,
        e.unpackAlignment = this.unpackAlignment,
        e
    },
    update: function() {
        this.dispatchEvent({
            type: "update"
        })
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
},
THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),
THREE.TextureIdCount = 0,
THREE.CubeTexture = function(e, t, i, n, r, o, a, s, l) {
    THREE.Texture.call(this, e, t, i, n, r, o, a, s, l),
    this.images = e
}
,
THREE.CubeTexture.prototype = Object.create(THREE.Texture.prototype),
THREE.CubeTexture.clone = function(e) {
    return void 0 === e && (e = new THREE.CubeTexture),
    THREE.Texture.prototype.clone.call(this, e),
    e.images = this.images,
    e
}
,
THREE.CompressedTexture = function(e, t, i, n, r, o, a, s, l, c, d) {
    THREE.Texture.call(this, null , o, a, s, l, c, n, r, d),
    this.image = {
        width: t,
        height: i
    },
    this.mipmaps = e,
    this.flipY = !1,
    this.generateMipmaps = !1
}
,
THREE.CompressedTexture.prototype = Object.create(THREE.Texture.prototype),
THREE.CompressedTexture.prototype.clone = function() {
    var e = new THREE.CompressedTexture;
    return THREE.Texture.prototype.clone.call(this, e),
    e
}
,
THREE.DataTexture = function(e, t, i, n, r, o, a, s, l, c, d) {
    THREE.Texture.call(this, null , o, a, s, l, c, n, r, d),
    this.image = {
        data: e,
        width: t,
        height: i
    }
}
,
THREE.DataTexture.prototype = Object.create(THREE.Texture.prototype),
THREE.DataTexture.prototype.clone = function() {
    var e = new THREE.DataTexture;
    return THREE.Texture.prototype.clone.call(this, e),
    e
}
,
THREE.VideoTexture = function(e, t, i, n, r, o, a, s, l) {
    THREE.Texture.call(this, e, t, i, n, r, o, a, s, l),
    this.generateMipmaps = !1;
    var c = this
      , d = function() {
        requestAnimationFrame(d),
        e.readyState === e.HAVE_ENOUGH_DATA && (c.needsUpdate = !0)
    }
    ;
    d()
}
,
THREE.VideoTexture.prototype = Object.create(THREE.Texture.prototype),
THREE.Group = function() {
    THREE.Object3D.call(this),
    this.type = "Group"
}
,
THREE.Group.prototype = Object.create(THREE.Object3D.prototype),
THREE.PointCloud = function(e, t) {
    THREE.Object3D.call(this),
    this.type = "PointCloud",
    this.geometry = void 0 !== e ? e : new THREE.Geometry,
    this.material = void 0 !== t ? t : new THREE.PointCloudMaterial({
        color: 16777215 * Math.random()
    }),
    this.sortParticles = !1
}
,
THREE.PointCloud.prototype = Object.create(THREE.Object3D.prototype),
THREE.PointCloud.prototype.raycast = function() {
    var e = new THREE.Matrix4
      , t = new THREE.Ray;
    return function(i, n) {
        var r = this
          , o = r.geometry
          , a = i.params.PointCloud.threshold;
        if (e.getInverse(this.matrixWorld),
        t.copy(i.ray).applyMatrix4(e),
        null === o.boundingBox || t.isIntersectionBox(o.boundingBox) !== !1) {
            var s = a / ((this.scale.x + this.scale.y + this.scale.z) / 3)
              , l = new THREE.Vector3
              , c = function(e, o) {
                var a = t.distanceToPoint(e);
                if (s > a) {
                    var l = t.closestPointToPoint(e);
                    l.applyMatrix4(r.matrixWorld);
                    var c = i.ray.origin.distanceTo(l);
                    n.push({
                        distance: c,
                        distanceToRay: a,
                        point: l.clone(),
                        index: o,
                        face: null ,
                        object: r
                    })
                }
            }
            ;
            if (o instanceof THREE.BufferGeometry) {
                var d = o.attributes
                  , h = d.position.array;
                if (void 0 !== d.index) {
                    var u = d.index.array
                      , p = o.offsets;
                    if (0 === p.length) {
                        var f = {
                            start: 0,
                            count: u.length,
                            index: 0
                        };
                        p = [f]
                    }
                    for (var g = 0, m = p.length; m > g; ++g)
                        for (var v = p[g].start, y = p[g].count, b = p[g].index, w = v, x = v + y; x > w; w++) {
                            var E = b + u[w];
                            l.fromArray(h, 3 * E),
                            c(l, E)
                        }
                } else
                    for (var _ = h.length / 3, w = 0; _ > w; w++)
                        l.set(h[3 * w], h[3 * w + 1], h[3 * w + 2]),
                        c(l, w)
            } else
                for (var T = this.geometry.vertices, w = 0; w < T.length; w++)
                    c(T[w], w)
        }
    }
}(),
THREE.PointCloud.prototype.clone = function(e) {
    return void 0 === e && (e = new THREE.PointCloud(this.geometry,this.material)),
    e.sortParticles = this.sortParticles,
    THREE.Object3D.prototype.clone.call(this, e),
    e
}
,
THREE.ParticleSystem = function(e, t) {
    return console.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud."),
    new THREE.PointCloud(e,t)
}
,
THREE.Line = function(e, t, i) {
    THREE.Object3D.call(this),
    this.type = "Line",
    this.geometry = void 0 !== e ? e : new THREE.Geometry,
    this.material = void 0 !== t ? t : new THREE.LineBasicMaterial({
        color: 16777215 * Math.random()
    }),
    this.mode = void 0 !== i ? i : THREE.LineStrip
}
,
THREE.LineStrip = 0,
THREE.LinePieces = 1,
THREE.Line.prototype = Object.create(THREE.Object3D.prototype),
THREE.Line.prototype.raycast = function() {
    var e = new THREE.Matrix4
      , t = new THREE.Ray
      , i = new THREE.Sphere;
    return function(n, r) {
        var o = n.linePrecision
          , a = o * o
          , s = this.geometry;
        if (null === s.boundingSphere && s.computeBoundingSphere(),
        i.copy(s.boundingSphere),
        i.applyMatrix4(this.matrixWorld),
        n.ray.isIntersectionSphere(i) !== !1 && (e.getInverse(this.matrixWorld),
        t.copy(n.ray).applyMatrix4(e),
        s instanceof THREE.Geometry))
            for (var l = s.vertices, c = l.length, d = new THREE.Vector3, h = new THREE.Vector3, u = this.mode === THREE.LineStrip ? 1 : 2, p = 0; c - 1 > p; p += u) {
                var f = t.distanceSqToSegment(l[p], l[p + 1], h, d);
                if (!(f > a)) {
                    var g = t.origin.distanceTo(h);
                    g < n.near || g > n.far || r.push({
                        distance: g,
                        point: d.clone().applyMatrix4(this.matrixWorld),
                        face: null ,
                        faceIndex: null ,
                        object: this
                    })
                }
            }
    }
}(),
THREE.Line.prototype.clone = function(e) {
    return void 0 === e && (e = new THREE.Line(this.geometry,this.material,this.mode)),
    THREE.Object3D.prototype.clone.call(this, e),
    e
}
,
THREE.Mesh = function(e, t) {
    THREE.Object3D.call(this),
    this.type = "Mesh",
    this.geometry = void 0 !== e ? e : new THREE.Geometry,
    this.material = void 0 !== t ? t : new THREE.MeshBasicMaterial({
        color: 16777215 * Math.random()
    }),
    this.updateMorphTargets()
}
,
THREE.Mesh.prototype = Object.create(THREE.Object3D.prototype),
THREE.Mesh.prototype.updateMorphTargets = function() {
    if (void 0 !== this.geometry.morphTargets && this.geometry.morphTargets.length > 0) {
        this.morphTargetBase = -1,
        this.morphTargetForcedOrder = [],
        this.morphTargetInfluences = [],
        this.morphTargetDictionary = {};
        for (var e = 0, t = this.geometry.morphTargets.length; t > e; e++)
            this.morphTargetInfluences.push(0),
            this.morphTargetDictionary[this.geometry.morphTargets[e].name] = e
    }
}
,
THREE.Mesh.prototype.getMorphTargetIndexByName = function(e) {
    return void 0 !== this.morphTargetDictionary[e] ? this.morphTargetDictionary[e] : (console.log("THREE.Mesh.getMorphTargetIndexByName: morph target " + e + " does not exist. Returning 0."),
    0)
}
,
THREE.Mesh.prototype.raycast = function() {
    var e = new THREE.Matrix4
      , t = new THREE.Ray
      , i = new THREE.Sphere
      , n = new THREE.Vector3
      , r = new THREE.Vector3
      , o = new THREE.Vector3;
    return function(a, s) {
        var l = this.geometry;
        if (null === l.boundingSphere && l.computeBoundingSphere(),
        i.copy(l.boundingSphere),
        i.applyMatrix4(this.matrixWorld),
        a.ray.isIntersectionSphere(i) !== !1 && (e.getInverse(this.matrixWorld),
        t.copy(a.ray).applyMatrix4(e),
        null === l.boundingBox || t.isIntersectionBox(l.boundingBox) !== !1))
            if (l instanceof THREE.BufferGeometry) {
                var c = this.material;
                if (void 0 === c)
                    return;
                var d, h, u, p = l.attributes, f = a.precision;
                if (void 0 !== p.index) {
                    var g = p.index.array
                      , m = p.position.array
                      , v = l.offsets;
                    0 === v.length && (v = [{
                        start: 0,
                        count: g.length,
                        index: 0
                    }]);
                    for (var y = 0, b = v.length; b > y; ++y)
                        for (var w = v[y].start, x = v[y].count, E = v[y].index, _ = w, T = w + x; T > _; _ += 3) {
                            if (d = E + g[_],
                            h = E + g[_ + 1],
                            u = E + g[_ + 2],
                            n.fromArray(m, 3 * d),
                            r.fromArray(m, 3 * h),
                            o.fromArray(m, 3 * u),
                            c.side === THREE.BackSide)
                                var C = t.intersectTriangle(o, r, n, !0);
                            else
                                var C = t.intersectTriangle(n, r, o, c.side !== THREE.DoubleSide);
                            if (null !== C) {
                                C.applyMatrix4(this.matrixWorld);
                                var R = a.ray.origin.distanceTo(C);
                                f > R || R < a.near || R > a.far || s.push({
                                    distance: R,
                                    point: C,
                                    face: new THREE.Face3(d,h,u,THREE.Triangle.normal(n, r, o)),
                                    faceIndex: null ,
                                    object: this
                                })
                            }
                        }
                } else
                    for (var m = p.position.array, _ = 0, S = 0, T = m.length; T > _; _ += 3,
                    S += 9) {
                        if (d = _,
                        h = _ + 1,
                        u = _ + 2,
                        n.fromArray(m, S),
                        r.fromArray(m, S + 3),
                        o.fromArray(m, S + 6),
                        c.side === THREE.BackSide)
                            var C = t.intersectTriangle(o, r, n, !0);
                        else
                            var C = t.intersectTriangle(n, r, o, c.side !== THREE.DoubleSide);
                        if (null !== C) {
                            C.applyMatrix4(this.matrixWorld);
                            var R = a.ray.origin.distanceTo(C);
                            f > R || R < a.near || R > a.far || s.push({
                                distance: R,
                                point: C,
                                face: new THREE.Face3(d,h,u,THREE.Triangle.normal(n, r, o)),
                                faceIndex: null ,
                                object: this
                            })
                        }
                    }
            } else if (l instanceof THREE.Geometry)
                for (var d, h, u, k = this.material instanceof THREE.MeshFaceMaterial, M = k === !0 ? this.material.materials : null , f = a.precision, A = l.vertices, H = 0, P = l.faces.length; P > H; H++) {
                    var O = l.faces[H]
                      , c = k === !0 ? M[O.materialIndex] : this.material;
                    if (void 0 !== c) {
                        if (d = A[O.a],
                        h = A[O.b],
                        u = A[O.c],
                        c.morphTargets === !0) {
                            var D = l.morphTargets
                              , $ = this.morphTargetInfluences;
                            n.set(0, 0, 0),
                            r.set(0, 0, 0),
                            o.set(0, 0, 0);
                            for (var L = 0, I = D.length; I > L; L++) {
                                var F = $[L];
                                if (0 !== F) {
                                    var B = D[L].vertices;
                                    n.x += (B[O.a].x - d.x) * F,
                                    n.y += (B[O.a].y - d.y) * F,
                                    n.z += (B[O.a].z - d.z) * F,
                                    r.x += (B[O.b].x - h.x) * F,
                                    r.y += (B[O.b].y - h.y) * F,
                                    r.z += (B[O.b].z - h.z) * F,
                                    o.x += (B[O.c].x - u.x) * F,
                                    o.y += (B[O.c].y - u.y) * F,
                                    o.z += (B[O.c].z - u.z) * F
                                }
                            }
                            n.add(d),
                            r.add(h),
                            o.add(u),
                            d = n,
                            h = r,
                            u = o
                        }
                        if (c.side === THREE.BackSide)
                            var C = t.intersectTriangle(u, h, d, !0);
                        else
                            var C = t.intersectTriangle(d, h, u, c.side !== THREE.DoubleSide);
                        if (null !== C) {
                            C.applyMatrix4(this.matrixWorld);
                            var R = a.ray.origin.distanceTo(C);
                            f > R || R < a.near || R > a.far || s.push({
                                distance: R,
                                point: C,
                                face: O,
                                faceIndex: H,
                                object: this
                            })
                        }
                    }
                }
    }
}(),
THREE.Mesh.prototype.clone = function(e, t) {
    return void 0 === e && (e = new THREE.Mesh(this.geometry,this.material)),
    THREE.Object3D.prototype.clone.call(this, e, t),
    e
}
,
THREE.Bone = function(e) {
    THREE.Object3D.call(this),
    this.skin = e
}
,
THREE.Bone.prototype = Object.create(THREE.Object3D.prototype),
THREE.Skeleton = function(e, t, i) {
    if (this.useVertexTexture = void 0 !== i ? i : !0,
    this.identityMatrix = new THREE.Matrix4,
    e = e || [],
    this.bones = e.slice(0),
    this.useVertexTexture) {
        var n;
        n = this.bones.length > 256 ? 64 : this.bones.length > 64 ? 32 : this.bones.length > 16 ? 16 : 8,
        this.boneTextureWidth = n,
        this.boneTextureHeight = n,
        this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4),
        this.boneTexture = new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),
        this.boneTexture.minFilter = THREE.NearestFilter,
        this.boneTexture.magFilter = THREE.NearestFilter,
        this.boneTexture.generateMipmaps = !1,
        this.boneTexture.flipY = !1
    } else
        this.boneMatrices = new Float32Array(16 * this.bones.length);
    if (void 0 === t)
        this.calculateInverses();
    else if (this.bones.length === t.length)
        this.boneInverses = t.slice(0);
    else {
        console.warn("THREE.Skeleton bonInverses is the wrong length."),
        this.boneInverses = [];
        for (var r = 0, o = this.bones.length; o > r; r++)
            this.boneInverses.push(new THREE.Matrix4)
    }
}
,
THREE.Skeleton.prototype.calculateInverses = function() {
    this.boneInverses = [];
    for (var e = 0, t = this.bones.length; t > e; e++) {
        var i = new THREE.Matrix4;
        this.bones[e] && i.getInverse(this.bones[e].matrixWorld),
        this.boneInverses.push(i)
    }
}
,
THREE.Skeleton.prototype.pose = function() {
    for (var e, t = 0, i = this.bones.length; i > t; t++)
        e = this.bones[t],
        e && e.matrixWorld.getInverse(this.boneInverses[t]);
    for (var t = 0, i = this.bones.length; i > t; t++)
        e = this.bones[t],
        e && (e.parent ? (e.matrix.getInverse(e.parent.matrixWorld),
        e.matrix.multiply(e.matrixWorld)) : e.matrix.copy(e.matrixWorld),
        e.matrix.decompose(e.position, e.quaternion, e.scale))
}
,
THREE.Skeleton.prototype.update = function() {
    var e = new THREE.Matrix4;
    return function() {
        for (var t = 0, i = this.bones.length; i > t; t++) {
            var n = this.bones[t] ? this.bones[t].matrixWorld : this.identityMatrix;
            e.multiplyMatrices(n, this.boneInverses[t]),
            e.flattenToArrayOffset(this.boneMatrices, 16 * t)
        }
        this.useVertexTexture && (this.boneTexture.needsUpdate = !0)
    }
}(),
THREE.SkinnedMesh = function(e, t, i) {
    THREE.Mesh.call(this, e, t),
    this.type = "SkinnedMesh",
    this.bindMode = "attached",
    this.bindMatrix = new THREE.Matrix4,
    this.bindMatrixInverse = new THREE.Matrix4;
    var n = [];
    if (this.geometry && void 0 !== this.geometry.bones) {
        for (var r, o, a, s, l, c = 0, d = this.geometry.bones.length; d > c; ++c)
            o = this.geometry.bones[c],
            a = o.pos,
            s = o.rotq,
            l = o.scl,
            r = new THREE.Bone(this),
            n.push(r),
            r.name = o.name,
            r.position.set(a[0], a[1], a[2]),
            r.quaternion.set(s[0], s[1], s[2], s[3]),
            void 0 !== l ? r.scale.set(l[0], l[1], l[2]) : r.scale.set(1, 1, 1);
        for (var c = 0, d = this.geometry.bones.length; d > c; ++c)
            o = this.geometry.bones[c],
            -1 !== o.parent ? n[o.parent].add(n[c]) : this.add(n[c])
    }
    this.normalizeSkinWeights(),
    this.updateMatrixWorld(!0),
    this.bind(new THREE.Skeleton(n,void 0,i))
}
,
THREE.SkinnedMesh.prototype = Object.create(THREE.Mesh.prototype),
THREE.SkinnedMesh.prototype.bind = function(e, t) {
    this.skeleton = e,
    void 0 === t && (this.updateMatrixWorld(!0),
    t = this.matrixWorld),
    this.bindMatrix.copy(t),
    this.bindMatrixInverse.getInverse(t)
}
,
THREE.SkinnedMesh.prototype.pose = function() {
    this.skeleton.pose()
}
,
THREE.SkinnedMesh.prototype.normalizeSkinWeights = function() {
    if (this.geometry instanceof THREE.Geometry)
        for (var e = 0; e < this.geometry.skinIndices.length; e++) {
            var t = this.geometry.skinWeights[e]
              , i = 1 / t.lengthManhattan();
            1 / 0 !== i ? t.multiplyScalar(i) : t.set(1)
        }
}
,
THREE.SkinnedMesh.prototype.updateMatrixWorld = function() {
    THREE.Mesh.prototype.updateMatrixWorld.call(this, !0),
    "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh unreckognized bindMode: " + this.bindMode)
}
,
THREE.SkinnedMesh.prototype.clone = function(e) {
    return void 0 === e && (e = new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),
    THREE.Mesh.prototype.clone.call(this, e),
    e
}
,
THREE.MorphAnimMesh = function(e, t) {
    THREE.Mesh.call(this, e, t),
    this.type = "MorphAnimMesh",
    this.duration = 1e3,
    this.mirroredLoop = !1,
    this.time = 0,
    this.lastKeyframe = 0,
    this.currentKeyframe = 0,
    this.direction = 1,
    this.directionBackwards = !1,
    this.setFrameRange(0, this.geometry.morphTargets.length - 1)
}
,
THREE.MorphAnimMesh.prototype = Object.create(THREE.Mesh.prototype),
THREE.MorphAnimMesh.prototype.setFrameRange = function(e, t) {
    this.startKeyframe = e,
    this.endKeyframe = t,
    this.length = this.endKeyframe - this.startKeyframe + 1
}
,
THREE.MorphAnimMesh.prototype.setDirectionForward = function() {
    this.direction = 1,
    this.directionBackwards = !1
}
,
THREE.MorphAnimMesh.prototype.setDirectionBackward = function() {
    this.direction = -1,
    this.directionBackwards = !0
}
,
THREE.MorphAnimMesh.prototype.parseAnimations = function() {
    var e = this.geometry;
    e.animations || (e.animations = {});
    for (var t, i = e.animations, n = /([a-z]+)_?(\d+)/, r = 0, o = e.morphTargets.length; o > r; r++) {
        var a = e.morphTargets[r]
          , s = a.name.match(n);
        if (s && s.length > 1) {
            {
                var l = s[1];
                s[2]
            }
            i[l] || (i[l] = {
                start: 1 / 0,
                end: -1 / 0
            });
            var c = i[l];
            r < c.start && (c.start = r),
            r > c.end && (c.end = r),
            t || (t = l)
        }
    }
    e.firstAnimation = t
}
,
THREE.MorphAnimMesh.prototype.setAnimationLabel = function(e, t, i) {
    this.geometry.animations || (this.geometry.animations = {}),
    this.geometry.animations[e] = {
        start: t,
        end: i
    }
}
,
THREE.MorphAnimMesh.prototype.playAnimation = function(e, t) {
    var i = this.geometry.animations[e];
    i ? (this.setFrameRange(i.start, i.end),
    this.duration = 1e3 * ((i.end - i.start) / t),
    this.time = 0) : console.warn("animation[" + e + "] undefined")
}
,
THREE.MorphAnimMesh.prototype.updateAnimation = function(e) {
    var t = this.duration / this.length;
    this.time += this.direction * e,
    this.mirroredLoop ? (this.time > this.duration || this.time < 0) && (this.direction *= -1,
    this.time > this.duration && (this.time = this.duration,
    this.directionBackwards = !0),
    this.time < 0 && (this.time = 0,
    this.directionBackwards = !1)) : (this.time = this.time % this.duration,
    this.time < 0 && (this.time += this.duration));
    var i = this.startKeyframe + THREE.Math.clamp(Math.floor(this.time / t), 0, this.length - 1);
    i !== this.currentKeyframe && (this.morphTargetInfluences[this.lastKeyframe] = 0,
    this.morphTargetInfluences[this.currentKeyframe] = 1,
    this.morphTargetInfluences[i] = 0,
    this.lastKeyframe = this.currentKeyframe,
    this.currentKeyframe = i);
    var n = this.time % t / t;
    this.directionBackwards && (n = 1 - n),
    this.morphTargetInfluences[this.currentKeyframe] = n,
    this.morphTargetInfluences[this.lastKeyframe] = 1 - n
}
,
THREE.MorphAnimMesh.prototype.interpolateTargets = function(e, t, i) {
    for (var n = this.morphTargetInfluences, r = 0, o = n.length; o > r; r++)
        n[r] = 0;
    e > -1 && (n[e] = 1 - i),
    t > -1 && (n[t] = i)
}
,
THREE.MorphAnimMesh.prototype.clone = function(e) {
    return void 0 === e && (e = new THREE.MorphAnimMesh(this.geometry,this.material)),
    e.duration = this.duration,
    e.mirroredLoop = this.mirroredLoop,
    e.time = this.time,
    e.lastKeyframe = this.lastKeyframe,
    e.currentKeyframe = this.currentKeyframe,
    e.direction = this.direction,
    e.directionBackwards = this.directionBackwards,
    THREE.Mesh.prototype.clone.call(this, e),
    e
}
,
THREE.LOD = function() {
    THREE.Object3D.call(this),
    this.objects = []
}
,
THREE.LOD.prototype = Object.create(THREE.Object3D.prototype),
THREE.LOD.prototype.addLevel = function(e, t) {
    void 0 === t && (t = 0),
    t = Math.abs(t);
    for (var i = 0; i < this.objects.length && !(t < this.objects[i].distance); i++)
        ;
    this.objects.splice(i, 0, {
        distance: t,
        object: e
    }),
    this.add(e)
}
,
THREE.LOD.prototype.getObjectForDistance = function(e) {
    for (var t = 1, i = this.objects.length; i > t && !(e < this.objects[t].distance); t++)
        ;
    return this.objects[t - 1].object
}
,
THREE.LOD.prototype.raycast = function() {
    var e = new THREE.Vector3;
    return function(t, i) {
        e.setFromMatrixPosition(this.matrixWorld);
        var n = t.ray.origin.distanceTo(e);
        this.getObjectForDistance(n).raycast(t, i)
    }
}(),
THREE.LOD.prototype.update = function() {
    var e = new THREE.Vector3
      , t = new THREE.Vector3;
    return function(i) {
        if (this.objects.length > 1) {
            e.setFromMatrixPosition(i.matrixWorld),
            t.setFromMatrixPosition(this.matrixWorld);
            var n = e.distanceTo(t);
            this.objects[0].object.visible = !0;
            for (var r = 1, o = this.objects.length; o > r && n >= this.objects[r].distance; r++)
                this.objects[r - 1].object.visible = !1,
                this.objects[r].object.visible = !0;
            for (; o > r; r++)
                this.objects[r].object.visible = !1
        }
    }
}(),
THREE.LOD.prototype.clone = function(e) {
    void 0 === e && (e = new THREE.LOD),
    THREE.Object3D.prototype.clone.call(this, e);
    for (var t = 0, i = this.objects.length; i > t; t++) {
        var n = this.objects[t].object.clone();
        n.visible = 0 === t,
        e.addLevel(n, this.objects[t].distance)
    }
    return e
}
,
THREE.Sprite = function() {
    var e = new Uint16Array([0, 1, 2, 0, 2, 3])
      , t = new Float32Array([-.5, -.5, 0, .5, -.5, 0, .5, .5, 0, -.5, .5, 0])
      , i = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1])
      , n = new THREE.BufferGeometry;
    return n.addAttribute("index", new THREE.BufferAttribute(e,1)),
    n.addAttribute("position", new THREE.BufferAttribute(t,3)),
    n.addAttribute("uv", new THREE.BufferAttribute(i,2)),
    function(e) {
        THREE.Object3D.call(this),
        this.type = "Sprite",
        this.geometry = n,
        this.material = void 0 !== e ? e : new THREE.SpriteMaterial
    }
}(),
THREE.Sprite.prototype = Object.create(THREE.Object3D.prototype),
THREE.Sprite.prototype.raycast = function() {
    var e = new THREE.Vector3;
    return function(t, i) {
        e.setFromMatrixPosition(this.matrixWorld);
        var n = t.ray.distanceToPoint(e);
        n > this.scale.x || i.push({
            distance: n,
            point: this.position,
            face: null ,
            object: this
        })
    }
}(),
THREE.Sprite.prototype.clone = function(e) {
    return void 0 === e && (e = new THREE.Sprite(this.material)),
    THREE.Object3D.prototype.clone.call(this, e),
    e
}
,
THREE.Particle = THREE.Sprite,
THREE.LensFlare = function(e, t, i, n, r) {
    THREE.Object3D.call(this),
    this.lensFlares = [],
    this.positionScreen = new THREE.Vector3,
    this.customUpdateCallback = void 0,
    void 0 !== e && this.add(e, t, i, n, r)
}
,
THREE.LensFlare.prototype = Object.create(THREE.Object3D.prototype),
THREE.LensFlare.prototype.add = function(e, t, i, n, r, o) {
    void 0 === t && (t = -1),
    void 0 === i && (i = 0),
    void 0 === o && (o = 1),
    void 0 === r && (r = new THREE.Color(16777215)),
    void 0 === n && (n = THREE.NormalBlending),
    i = Math.min(i, Math.max(0, i)),
    this.lensFlares.push({
        texture: e,
        size: t,
        distance: i,
        x: 0,
        y: 0,
        z: 0,
        scale: 1,
        rotation: 1,
        opacity: o,
        color: r,
        blending: n
    })
}
,
THREE.LensFlare.prototype.updateLensFlares = function() {
    var e, t, i = this.lensFlares.length, n = 2 * -this.positionScreen.x, r = 2 * -this.positionScreen.y;
    for (e = 0; i > e; e++)
        t = this.lensFlares[e],
        t.x = this.positionScreen.x + n * t.distance,
        t.y = this.positionScreen.y + r * t.distance,
        t.wantedRotation = t.x * Math.PI * .25,
        t.rotation += .25 * (t.wantedRotation - t.rotation)
}
,
THREE.Scene = function() {
    THREE.Object3D.call(this),
    this.type = "Scene",
    this.fog = null ,
    this.overrideMaterial = null ,
    this.autoUpdate = !0
}
,
THREE.Scene.prototype = Object.create(THREE.Object3D.prototype),
THREE.Scene.prototype.clone = function(e) {
    return void 0 === e && (e = new THREE.Scene),
    THREE.Object3D.prototype.clone.call(this, e),
    null !== this.fog && (e.fog = this.fog.clone()),
    null !== this.overrideMaterial && (e.overrideMaterial = this.overrideMaterial.clone()),
    e.autoUpdate = this.autoUpdate,
    e.matrixAutoUpdate = this.matrixAutoUpdate,
    e
}
,
THREE.Fog = function(e, t, i) {
    this.name = "",
    this.color = new THREE.Color(e),
    this.near = void 0 !== t ? t : 1,
    this.far = void 0 !== i ? i : 1e3
}
,
THREE.Fog.prototype.clone = function() {
    return new THREE.Fog(this.color.getHex(),this.near,this.far)
}
,
THREE.FogExp2 = function(e, t) {
    this.name = "",
    this.color = new THREE.Color(e),
    this.density = void 0 !== t ? t : 25e-5
}
,
THREE.FogExp2.prototype.clone = function() {
    return new THREE.FogExp2(this.color.getHex(),this.density)
}
,
THREE.ShaderChunk = {},
THREE.ShaderChunk.alphatest_fragment = "#ifdef ALPHATEST\n\n	if ( gl_FragColor.a < ALPHATEST ) discard;\n\n#endif\n",
THREE.ShaderChunk.lights_lambert_vertex = "vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n	vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n	vec3 dirVector = normalize( lDirection.xyz );\n\n	float dotProduct = dot( transformedNormal, dirVector );\n	vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n	#ifdef DOUBLE_SIDED\n\n		vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n		#ifdef WRAP_AROUND\n\n			vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n		#endif\n\n	#endif\n\n	#ifdef WRAP_AROUND\n\n		vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n		directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n		#ifdef DOUBLE_SIDED\n\n			directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n		#endif\n\n	#endif\n\n	vLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n	#ifdef DOUBLE_SIDED\n\n		vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n	#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n		float dotProduct = dot( transformedNormal, lVector );\n\n		vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n		#ifdef DOUBLE_SIDED\n\n			vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n			#ifdef WRAP_AROUND\n\n				vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n			#endif\n\n		#endif\n\n		#ifdef WRAP_AROUND\n\n			vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n			pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n			#ifdef DOUBLE_SIDED\n\n				pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n			#endif\n\n		#endif\n\n		vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\n		#endif\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n			float lDistance = 1.0;\n			if ( spotLightDistance[ i ] > 0.0 )\n				lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n			lVector = normalize( lVector );\n\n			float dotProduct = dot( transformedNormal, lVector );\n			vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n			#ifdef DOUBLE_SIDED\n\n				vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n				#ifdef WRAP_AROUND\n\n					vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n				#endif\n\n			#endif\n\n			#ifdef WRAP_AROUND\n\n				vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n				spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n				#ifdef DOUBLE_SIDED\n\n					spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n				#endif\n\n			#endif\n\n			vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\n			#ifdef DOUBLE_SIDED\n\n				vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\n			#endif\n\n		}\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n\n		float dotProduct = dot( transformedNormal, lVector );\n\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n		float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n		vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n		#endif\n\n	}\n\n#endif\n\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n\n#endif",
THREE.ShaderChunk.map_particle_pars_fragment = "#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif",
THREE.ShaderChunk.default_vertex = "vec4 mvPosition;\n\n#ifdef USE_SKINNING\n\n	mvPosition = modelViewMatrix * skinned;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\n\n	mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\n\n	mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.map_pars_fragment = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif",
THREE.ShaderChunk.skinnormal_vertex = "#ifdef USE_SKINNING\n\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n	#ifdef USE_MORPHNORMALS\n\n	vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n	#else\n\n	vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n	#endif\n\n#endif\n",
THREE.ShaderChunk.logdepthbuf_pars_vertex = "#ifdef USE_LOGDEPTHBUF\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		varying float vFragDepth;\n\n	#endif\n\n	uniform float logDepthBufFC;\n\n#endif",
THREE.ShaderChunk.lightmap_pars_vertex = "#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n\n#endif",
THREE.ShaderChunk.lights_phong_fragment = "vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef DOUBLE_SIDED\n\n	normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	vec3 pointDiffuse = vec3( 0.0 );\n	vec3 pointSpecular = vec3( 0.0 );\n\n	for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n\n				// diffuse\n\n		float dotProduct = dot( normal, lVector );\n\n		#ifdef WRAP_AROUND\n\n			float pointDiffuseWeightFull = max( dotProduct, 0.0 );\n			float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float pointDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		pointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\n				// specular\n\n		vec3 pointHalfVector = normalize( lVector + viewPosition );\n		float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n		float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n		pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	vec3 spotDiffuse = vec3( 0.0 );\n	vec3 spotSpecular = vec3( 0.0 );\n\n	for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( spotLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n					// diffuse\n\n			float dotProduct = dot( normal, lVector );\n\n			#ifdef WRAP_AROUND\n\n				float spotDiffuseWeightFull = max( dotProduct, 0.0 );\n				float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n				vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n			#else\n\n				float spotDiffuseWeight = max( dotProduct, 0.0 );\n\n			#endif\n\n			spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\n					// specular\n\n			vec3 spotHalfVector = normalize( lVector + viewPosition );\n			float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n			float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n			float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n			spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\n		}\n\n	}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n	vec3 dirDiffuse = vec3( 0.0 );\n	vec3 dirSpecular = vec3( 0.0 );\n\n	for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n		vec3 dirVector = normalize( lDirection.xyz );\n\n				// diffuse\n\n		float dotProduct = dot( normal, dirVector );\n\n		#ifdef WRAP_AROUND\n\n			float dirDiffuseWeightFull = max( dotProduct, 0.0 );\n			float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float dirDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		dirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\n		// specular\n\n		vec3 dirHalfVector = normalize( dirVector + viewPosition );\n		float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n		float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n		/*\n		// fresnel term from skin shader\n		const float F0 = 0.128;\n\n		float base = 1.0 - dot( viewPosition, dirHalfVector );\n		float exponential = pow( base, 5.0 );\n\n		float fresnel = exponential + F0 * ( 1.0 - exponential );\n		*/\n\n		/*\n		// fresnel term from fresnel shader\n		const float mFresnelBias = 0.08;\n		const float mFresnelScale = 0.3;\n		const float mFresnelPower = 5.0;\n\n		float fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n		*/\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		// 		dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n		dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	vec3 hemiDiffuse = vec3( 0.0 );\n	vec3 hemiSpecular = vec3( 0.0 );\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n\n		// diffuse\n\n		float dotProduct = dot( normal, lVector );\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n		vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		hemiDiffuse += diffuse * hemiColor;\n\n		// specular (sky light)\n\n		vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n		float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n		float hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n		// specular (ground light)\n\n		vec3 lVectorGround = -lVector;\n\n		vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n		float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n		float hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n		float dotProductGround = dot( normal, lVectorGround );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n		vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n		hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n	}\n\n#endif\n\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n\n#if MAX_DIR_LIGHTS > 0\n\n	totalDiffuse += dirDiffuse;\n	totalSpecular += dirSpecular;\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	totalDiffuse += hemiDiffuse;\n	totalSpecular += hemiSpecular;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	totalDiffuse += pointDiffuse;\n	totalSpecular += pointSpecular;\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	totalDiffuse += spotDiffuse;\n	totalSpecular += spotSpecular;\n\n#endif\n\n#ifdef METAL\n\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\n#else\n\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\n#endif",
THREE.ShaderChunk.fog_pars_fragment = "#ifdef USE_FOG\n\n	uniform vec3 fogColor;\n\n	#ifdef FOG_EXP2\n\n		uniform float fogDensity;\n\n	#else\n\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n\n#endif",
THREE.ShaderChunk.morphnormal_vertex = "#ifdef USE_MORPHNORMALS\n\n	vec3 morphedNormal = vec3( 0.0 );\n\n	morphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	morphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	morphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	morphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n	morphedNormal += normal;\n\n#endif",
THREE.ShaderChunk.envmap_pars_fragment = "#ifdef USE_ENVMAP\n\n	uniform float reflectivity;\n	uniform samplerCube envMap;\n	uniform float flipEnvMap;\n	uniform int combine;\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n		uniform bool useRefract;\n		uniform float refractionRatio;\n\n	#else\n\n		varying vec3 vReflect;\n\n	#endif\n\n#endif",
THREE.ShaderChunk.logdepthbuf_fragment = "#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif",
THREE.ShaderChunk.normalmap_pars_fragment = "#ifdef USE_NORMALMAP\n\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n\n			// Per-Pixel Tangent Space Normal Mapping\n			// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n\n		vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n\n	}\n\n#endif\n",
THREE.ShaderChunk.lights_phong_pars_vertex = "#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n",
THREE.ShaderChunk.lightmap_pars_fragment = "#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n	uniform sampler2D lightMap;\n\n#endif",
THREE.ShaderChunk.shadowmap_vertex = "#ifdef USE_SHADOWMAP\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n	}\n\n#endif",
THREE.ShaderChunk.lights_phong_vertex = "#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	vWorldPosition = worldPosition.xyz;\n\n#endif",
THREE.ShaderChunk.map_fragment = "#ifdef USE_MAP\n\n	vec4 texelColor = texture2D( map, vUv );\n\n	#ifdef GAMMA_INPUT\n\n		texelColor.xyz *= texelColor.xyz;\n\n	#endif\n\n	gl_FragColor = gl_FragColor * texelColor;\n\n#endif",
THREE.ShaderChunk.lightmap_vertex = "#ifdef USE_LIGHTMAP\n\n	vUv2 = uv2;\n\n#endif",
THREE.ShaderChunk.map_particle_fragment = "#ifdef USE_MAP\n\n	gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n\n#endif",
THREE.ShaderChunk.color_pars_fragment = "#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif\n",
THREE.ShaderChunk.color_vertex = "#ifdef USE_COLOR\n\n	#ifdef GAMMA_INPUT\n\n		vColor = color * color;\n\n	#else\n\n		vColor = color;\n\n	#endif\n\n#endif",
THREE.ShaderChunk.skinning_vertex = "#ifdef USE_SKINNING\n\n	#ifdef USE_MORPHTARGETS\n\n	vec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n	#else\n\n	vec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n	#endif\n\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	skinned  = bindMatrixInverse * skinned;\n\n#endif\n",
THREE.ShaderChunk.envmap_pars_vertex = "#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n	varying vec3 vReflect;\n\n	uniform float refractionRatio;\n	uniform bool useRefract;\n\n#endif\n",
THREE.ShaderChunk.linear_to_gamma_fragment = "#ifdef GAMMA_OUTPUT\n\n	gl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n\n#endif",
THREE.ShaderChunk.color_pars_vertex = "#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif",
THREE.ShaderChunk.lights_lambert_pars_vertex = "uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n",
THREE.ShaderChunk.map_pars_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n\n#endif\n",
THREE.ShaderChunk.envmap_fragment = "#ifdef USE_ENVMAP\n\n	vec3 reflectVec;\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n		// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\n		// Transforming Normal Vectors with the Inverse Transformation\n\n		vec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\n		if ( useRefract ) {\n\n			reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n		} else { \n\n			reflectVec = reflect( cameraToVertex, worldNormal );\n\n		}\n\n	#else\n\n		reflectVec = vReflect;\n\n	#endif\n\n	#ifdef DOUBLE_SIDED\n\n		float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n		vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n	#else\n\n		vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n	#endif\n\n	#ifdef GAMMA_INPUT\n\n		cubeColor.xyz *= cubeColor.xyz;\n\n	#endif\n\n	if ( combine == 1 ) {\n\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n\n	} else if ( combine == 2 ) {\n\n		gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n\n	} else {\n\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n\n	}\n\n#endif",
THREE.ShaderChunk.specularmap_pars_fragment = "#ifdef USE_SPECULARMAP\n\n	uniform sampler2D specularMap;\n\n#endif",
THREE.ShaderChunk.logdepthbuf_vertex = "#ifdef USE_LOGDEPTHBUF\n\n	gl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		vFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n	#endif\n\n#endif",
THREE.ShaderChunk.morphtarget_pars_vertex = "#ifdef USE_MORPHTARGETS\n\n	#ifndef USE_MORPHNORMALS\n\n	uniform float morphTargetInfluences[ 8 ];\n\n	#else\n\n	uniform float morphTargetInfluences[ 4 ];\n\n	#endif\n\n#endif",
THREE.ShaderChunk.specularmap_fragment = "float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n\n#else\n\n	specularStrength = 1.0;\n\n#endif",
THREE.ShaderChunk.fog_fragment = "#ifdef USE_FOG\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n	#else\n\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n\n	#endif\n\n	#ifdef FOG_EXP2\n\n		const float LOG2 = 1.442695;\n		float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n		fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n	#else\n\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n\n	#endif\n	\n	gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n#endif",
THREE.ShaderChunk.bumpmap_pars_fragment = "#ifdef USE_BUMPMAP\n\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n\n			// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n			//	http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n			// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n	vec2 dHdxy_fwd() {\n\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n		return vec2( dBx, dBy );\n\n	}\n\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;		// normalized\n\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n\n		float fDet = dot( vSigmaX, R1 );\n\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n\n	}\n\n#endif",
THREE.ShaderChunk.defaultnormal_vertex = "vec3 objectNormal;\n\n#ifdef USE_SKINNING\n\n	objectNormal = skinnedNormal.xyz;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\n\n	objectNormal = morphedNormal;\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\n\n	objectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n	objectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;",
THREE.ShaderChunk.lights_phong_pars_fragment = "uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
THREE.ShaderChunk.skinbase_vertex = "#ifdef USE_SKINNING\n\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif",
THREE.ShaderChunk.map_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif",
THREE.ShaderChunk.lightmap_fragment = "#ifdef USE_LIGHTMAP\n\n	gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n\n#endif",
THREE.ShaderChunk.shadowmap_pars_vertex = "#ifdef USE_SHADOWMAP\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n	uniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif",
THREE.ShaderChunk.color_fragment = "#ifdef USE_COLOR\n\n	gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n\n#endif",
THREE.ShaderChunk.morphtarget_vertex = "#ifdef USE_MORPHTARGETS\n\n	vec3 morphed = vec3( 0.0 );\n	morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n	#ifndef USE_MORPHNORMALS\n\n	morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n	#endif\n\n	morphed += position;\n\n#endif",
THREE.ShaderChunk.envmap_vertex = "#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n	vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n	worldNormal = normalize( worldNormal );\n\n	vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n	if ( useRefract ) {\n\n		vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n	} else {\n\n		vReflect = reflect( cameraToVertex, worldNormal );\n\n	}\n\n#endif",
THREE.ShaderChunk.shadowmap_fragment = "#ifdef USE_SHADOWMAP\n\n	#ifdef SHADOWMAP_DEBUG\n\n		vec3 frustumColors[3];\n		frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n		frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n		frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n	#endif\n\n	#ifdef SHADOWMAP_CASCADE\n\n		int inFrustumCount = 0;\n\n	#endif\n\n	float fDepth;\n	vec3 shadowColor = vec3( 1.0 );\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n				// if ( something && something ) breaks ATI OpenGL shader compiler\n				// if ( all( something, something ) ) using this instead\n\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n\n				// don't shadow pixels outside of light frustum\n				// use just first frustum (for cascades)\n				// don't shadow pixels behind far plane of light frustum\n\n		#ifdef SHADOWMAP_CASCADE\n\n			inFrustumCount += int( inFrustum );\n			bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n		#else\n\n			bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n		#endif\n\n		bool frustumTest = all( frustumTestVec );\n\n		if ( frustumTest ) {\n\n			shadowCoord.z += shadowBias[ i ];\n\n			#if defined( SHADOWMAP_TYPE_PCF )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n		/*\n						// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n						// must enroll loop manually\n\n				for ( float y = -1.25; y <= 1.25; y += 1.25 )\n					for ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n						vec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n								// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n								//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n						float fDepth = unpackDepth( rgbaDepth );\n\n						if ( fDepth < shadowCoord.z )\n							shadow += 1.0;\n\n				}\n\n				shadow /= 9.0;\n\n		*/\n\n				const float shadowDelta = 1.0 / 9.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.25 * xPixelOffset;\n				float dy0 = -1.25 * yPixelOffset;\n				float dx1 = 1.25 * xPixelOffset;\n				float dy1 = 1.25 * yPixelOffset;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.0 * xPixelOffset;\n				float dy0 = -1.0 * yPixelOffset;\n				float dx1 = 1.0 * xPixelOffset;\n				float dy1 = 1.0 * yPixelOffset;\n\n				mat3 shadowKernel;\n				mat3 depthKernel;\n\n				depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n				vec3 shadowZ = vec3( shadowCoord.z );\n				shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n				shadowKernel[0] *= vec3(0.25);\n\n				shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n				shadowKernel[1] *= vec3(0.25);\n\n				shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n				shadowKernel[2] *= vec3(0.25);\n\n				vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n				shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n				shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n				vec4 shadowValues;\n				shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n				shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n				shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n				shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n				shadow = dot( shadowValues, vec4( 1.0 ) );\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#else\n\n				vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n				float fDepth = unpackDepth( rgbaDepth );\n\n				if ( fDepth < shadowCoord.z )\n\n		// spot with multiple shadows is darker\n\n					shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n		// spot with multiple shadows has the same color as single shadow spot\n\n		// 					shadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n			#endif\n\n		}\n\n\n		#ifdef SHADOWMAP_DEBUG\n\n			#ifdef SHADOWMAP_CASCADE\n\n				if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\n			#else\n\n				if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\n			#endif\n\n		#endif\n\n	}\n\n	#ifdef GAMMA_OUTPUT\n\n		shadowColor *= shadowColor;\n\n	#endif\n\n	gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n\n#endif\n",
THREE.ShaderChunk.worldpos_vertex = "#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n	#ifdef USE_SKINNING\n\n		vec4 worldPosition = modelMatrix * skinned;\n\n	#endif\n\n	#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n		vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n	#endif\n\n	#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n		vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n	#endif\n\n#endif",
THREE.ShaderChunk.shadowmap_pars_fragment = "#ifdef USE_SHADOWMAP\n\n	uniform sampler2D shadowMap[ MAX_SHADOWS ];\n	uniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n	uniform float shadowDarkness[ MAX_SHADOWS ];\n	uniform float shadowBias[ MAX_SHADOWS ];\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n	float unpackDepth( const in vec4 rgba_depth ) {\n\n		const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n		float depth = dot( rgba_depth, bit_shift );\n		return depth;\n\n	}\n\n#endif",
THREE.ShaderChunk.skinning_pars_vertex = "#ifdef USE_SKINNING\n\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n\n	#ifdef BONE_TEXTURE\n\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n\n			y = dy * ( y + 0.5 );\n\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n			mat4 bone = mat4( v1, v2, v3, v4 );\n\n			return bone;\n\n		}\n\n	#else\n\n		uniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			mat4 bone = boneGlobalMatrices[ int(i) ];\n			return bone;\n\n		}\n\n	#endif\n\n#endif\n",
THREE.ShaderChunk.logdepthbuf_pars_fragment = "#ifdef USE_LOGDEPTHBUF\n\n	uniform float logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		#extension GL_EXT_frag_depth : enable\n		varying float vFragDepth;\n\n	#endif\n\n#endif",
THREE.ShaderChunk.alphamap_fragment = "#ifdef USE_ALPHAMAP\n\n	gl_FragColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",
THREE.ShaderChunk.alphamap_pars_fragment = "#ifdef USE_ALPHAMAP\n\n	uniform sampler2D alphaMap;\n\n#endif\n",
THREE.UniformsUtils = {
    merge: function(e) {
        for (var t = {}, i = 0; i < e.length; i++) {
            var n = this.clone(e[i]);
            for (var r in n)
                t[r] = n[r]
        }
        return t
    },
    clone: function(e) {
        var t = {};
        for (var i in e) {
            t[i] = {};
            for (var n in e[i]) {
                var r = e[i][n];
                t[i][n] = r instanceof THREE.Color || r instanceof THREE.Vector2 || r instanceof THREE.Vector3 || r instanceof THREE.Vector4 || r instanceof THREE.Matrix4 || r instanceof THREE.Texture ? r.clone() : r instanceof Array ? r.slice() : r
            }
        }
        return t
    }
},
THREE.UniformsLib = {
    common: {
        diffuse: {
            type: "c",
            value: new THREE.Color(15658734)
        },
        opacity: {
            type: "f",
            value: 1
        },
        map: {
            type: "t",
            value: null
        },
        offsetRepeat: {
            type: "v4",
            value: new THREE.Vector4(0,0,1,1)
        },
        lightMap: {
            type: "t",
            value: null
        },
        specularMap: {
            type: "t",
            value: null
        },
        alphaMap: {
            type: "t",
            value: null
        },
        envMap: {
            type: "t",
            value: null
        },
        flipEnvMap: {
            type: "f",
            value: -1
        },
        useRefract: {
            type: "i",
            value: 0
        },
        reflectivity: {
            type: "f",
            value: 1
        },
        refractionRatio: {
            type: "f",
            value: .98
        },
        combine: {
            type: "i",
            value: 0
        },
        morphTargetInfluences: {
            type: "f",
            value: 0
        }
    },
    bump: {
        bumpMap: {
            type: "t",
            value: null
        },
        bumpScale: {
            type: "f",
            value: 1
        }
    },
    normalmap: {
        normalMap: {
            type: "t",
            value: null
        },
        normalScale: {
            type: "v2",
            value: new THREE.Vector2(1,1)
        }
    },
    fog: {
        fogDensity: {
            type: "f",
            value: 25e-5
        },
        fogNear: {
            type: "f",
            value: 1
        },
        fogFar: {
            type: "f",
            value: 2e3
        },
        fogColor: {
            type: "c",
            value: new THREE.Color(16777215)
        }
    },
    lights: {
        ambientLightColor: {
            type: "fv",
            value: []
        },
        directionalLightDirection: {
            type: "fv",
            value: []
        },
        directionalLightColor: {
            type: "fv",
            value: []
        },
        hemisphereLightDirection: {
            type: "fv",
            value: []
        },
        hemisphereLightSkyColor: {
            type: "fv",
            value: []
        },
        hemisphereLightGroundColor: {
            type: "fv",
            value: []
        },
        pointLightColor: {
            type: "fv",
            value: []
        },
        pointLightPosition: {
            type: "fv",
            value: []
        },
        pointLightDistance: {
            type: "fv1",
            value: []
        },
        spotLightColor: {
            type: "fv",
            value: []
        },
        spotLightPosition: {
            type: "fv",
            value: []
        },
        spotLightDirection: {
            type: "fv",
            value: []
        },
        spotLightDistance: {
            type: "fv1",
            value: []
        },
        spotLightAngleCos: {
            type: "fv1",
            value: []
        },
        spotLightExponent: {
            type: "fv1",
            value: []
        }
    },
    particle: {
        psColor: {
            type: "c",
            value: new THREE.Color(15658734)
        },
        opacity: {
            type: "f",
            value: 1
        },
        size: {
            type: "f",
            value: 1
        },
        scale: {
            type: "f",
            value: 1
        },
        map: {
            type: "t",
            value: null
        },
        fogDensity: {
            type: "f",
            value: 25e-5
        },
        fogNear: {
            type: "f",
            value: 1
        },
        fogFar: {
            type: "f",
            value: 2e3
        },
        fogColor: {
            type: "c",
            value: new THREE.Color(16777215)
        }
    },
    shadowmap: {
        shadowMap: {
            type: "tv",
            value: []
        },
        shadowMapSize: {
            type: "v2v",
            value: []
        },
        shadowBias: {
            type: "fv1",
            value: []
        },
        shadowDarkness: {
            type: "fv1",
            value: []
        },
        shadowMatrix: {
            type: "m4v",
            value: []
        }
    }
},
THREE.ShaderLib = {
    basic: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.fog, THREE.UniformsLib.shadowmap]),
        vertexShader: [THREE.ShaderChunk.map_pars_vertex, THREE.ShaderChunk.lightmap_pars_vertex, THREE.ShaderChunk.envmap_pars_vertex, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.map_vertex, THREE.ShaderChunk.lightmap_vertex, THREE.ShaderChunk.color_vertex, THREE.ShaderChunk.skinbase_vertex, "	#ifdef USE_ENVMAP", THREE.ShaderChunk.morphnormal_vertex, THREE.ShaderChunk.skinnormal_vertex, THREE.ShaderChunk.defaultnormal_vertex, "	#endif", THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.envmap_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
        fragmentShader: ["uniform vec3 diffuse;", "uniform float opacity;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.alphamap_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	gl_FragColor = vec4( diffuse, opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.alphamap_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
    },
    lambert: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.fog, THREE.UniformsLib.lights, THREE.UniformsLib.shadowmap, {
            ambient: {
                type: "c",
                value: new THREE.Color(16777215)
            },
            emissive: {
                type: "c",
                value: new THREE.Color(0)
            },
            wrapRGB: {
                type: "v3",
                value: new THREE.Vector3(1,1,1)
            }
        }]),
        vertexShader: ["#define LAMBERT", "varying vec3 vLightFront;", "#ifdef DOUBLE_SIDED", "	varying vec3 vLightBack;", "#endif", THREE.ShaderChunk.map_pars_vertex, THREE.ShaderChunk.lightmap_pars_vertex, THREE.ShaderChunk.envmap_pars_vertex, THREE.ShaderChunk.lights_lambert_pars_vertex, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.map_vertex, THREE.ShaderChunk.lightmap_vertex, THREE.ShaderChunk.color_vertex, THREE.ShaderChunk.morphnormal_vertex, THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.skinnormal_vertex, THREE.ShaderChunk.defaultnormal_vertex, THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.envmap_vertex, THREE.ShaderChunk.lights_lambert_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
        fragmentShader: ["uniform float opacity;", "varying vec3 vLightFront;", "#ifdef DOUBLE_SIDED", "	varying vec3 vLightBack;", "#endif", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.alphamap_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	gl_FragColor = vec4( vec3( 1.0 ), opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.alphamap_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, "	#ifdef DOUBLE_SIDED", "		if ( gl_FrontFacing )", "			gl_FragColor.xyz *= vLightFront;", "		else", "			gl_FragColor.xyz *= vLightBack;", "	#else", "		gl_FragColor.xyz *= vLightFront;", "	#endif", THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
    },
    phong: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.bump, THREE.UniformsLib.normalmap, THREE.UniformsLib.fog, THREE.UniformsLib.lights, THREE.UniformsLib.shadowmap, {
            ambient: {
                type: "c",
                value: new THREE.Color(16777215)
            },
            emissive: {
                type: "c",
                value: new THREE.Color(0)
            },
            specular: {
                type: "c",
                value: new THREE.Color(1118481)
            },
            shininess: {
                type: "f",
                value: 30
            },
            wrapRGB: {
                type: "v3",
                value: new THREE.Vector3(1,1,1)
            }
        }]),
        vertexShader: ["#define PHONG", "varying vec3 vViewPosition;", "varying vec3 vNormal;", THREE.ShaderChunk.map_pars_vertex, THREE.ShaderChunk.lightmap_pars_vertex, THREE.ShaderChunk.envmap_pars_vertex, THREE.ShaderChunk.lights_phong_pars_vertex, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.map_vertex, THREE.ShaderChunk.lightmap_vertex, THREE.ShaderChunk.color_vertex, THREE.ShaderChunk.morphnormal_vertex, THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.skinnormal_vertex, THREE.ShaderChunk.defaultnormal_vertex, "	vNormal = normalize( transformedNormal );", THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "	vViewPosition = -mvPosition.xyz;", THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.envmap_vertex, THREE.ShaderChunk.lights_phong_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
        fragmentShader: ["#define PHONG", "uniform vec3 diffuse;", "uniform float opacity;", "uniform vec3 ambient;", "uniform vec3 emissive;", "uniform vec3 specular;", "uniform float shininess;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.alphamap_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.lights_phong_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.bumpmap_pars_fragment, THREE.ShaderChunk.normalmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	gl_FragColor = vec4( vec3( 1.0 ), opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.alphamap_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, THREE.ShaderChunk.lights_phong_fragment, THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
    },
    particle_basic: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.particle, THREE.UniformsLib.shadowmap]),
        vertexShader: ["uniform float size;", "uniform float scale;", THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.color_vertex, "	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );", "	#ifdef USE_SIZEATTENUATION", "		gl_PointSize = size * ( scale / length( mvPosition.xyz ) );", "	#else", "		gl_PointSize = size;", "	#endif", "	gl_Position = projectionMatrix * mvPosition;", THREE.ShaderChunk.logdepthbuf_vertex, THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
        fragmentShader: ["uniform vec3 psColor;", "uniform float opacity;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_particle_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	gl_FragColor = vec4( psColor, opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_particle_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
    },
    dashed: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.fog, {
            scale: {
                type: "f",
                value: 1
            },
            dashSize: {
                type: "f",
                value: 1
            },
            totalSize: {
                type: "f",
                value: 2
            }
        }]),
        vertexShader: ["uniform float scale;", "attribute float lineDistance;", "varying float vLineDistance;", THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.color_vertex, "	vLineDistance = scale * lineDistance;", "	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );", "	gl_Position = projectionMatrix * mvPosition;", THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
        fragmentShader: ["uniform vec3 diffuse;", "uniform float opacity;", "uniform float dashSize;", "uniform float totalSize;", "varying float vLineDistance;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	if ( mod( vLineDistance, totalSize ) > dashSize ) {", "		discard;", "	}", "	gl_FragColor = vec4( diffuse, opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
    },
    depth: {
        uniforms: {
            mNear: {
                type: "f",
                value: 1
            },
            mFar: {
                type: "f",
                value: 2e3
            },
            opacity: {
                type: "f",
                value: 1
            }
        },
        vertexShader: [THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
        fragmentShader: ["uniform float mNear;", "uniform float mFar;", "uniform float opacity;", THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", THREE.ShaderChunk.logdepthbuf_fragment, "	#ifdef USE_LOGDEPTHBUF_EXT", "		float depth = gl_FragDepthEXT / gl_FragCoord.w;", "	#else", "		float depth = gl_FragCoord.z / gl_FragCoord.w;", "	#endif", "	float color = 1.0 - smoothstep( mNear, mFar, depth );", "	gl_FragColor = vec4( vec3( color ), opacity );", "}"].join("\n")
    },
    normal: {
        uniforms: {
            opacity: {
                type: "f",
                value: 1
            }
        },
        vertexShader: ["varying vec3 vNormal;", THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", "	vNormal = normalize( normalMatrix * normal );", THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
        fragmentShader: ["uniform float opacity;", "varying vec3 vNormal;", THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );", THREE.ShaderChunk.logdepthbuf_fragment, "}"].join("\n")
    },
    normalmap: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.fog, THREE.UniformsLib.lights, THREE.UniformsLib.shadowmap, {
            enableAO: {
                type: "i",
                value: 0
            },
            enableDiffuse: {
                type: "i",
                value: 0
            },
            enableSpecular: {
                type: "i",
                value: 0
            },
            enableReflection: {
                type: "i",
                value: 0
            },
            enableDisplacement: {
                type: "i",
                value: 0
            },
            tDisplacement: {
                type: "t",
                value: null
            },
            tDiffuse: {
                type: "t",
                value: null
            },
            tCube: {
                type: "t",
                value: null
            },
            tNormal: {
                type: "t",
                value: null
            },
            tSpecular: {
                type: "t",
                value: null
            },
            tAO: {
                type: "t",
                value: null
            },
            uNormalScale: {
                type: "v2",
                value: new THREE.Vector2(1,1)
            },
            uDisplacementBias: {
                type: "f",
                value: 0
            },
            uDisplacementScale: {
                type: "f",
                value: 1
            },
            diffuse: {
                type: "c",
                value: new THREE.Color(16777215)
            },
            specular: {
                type: "c",
                value: new THREE.Color(1118481)
            },
            ambient: {
                type: "c",
                value: new THREE.Color(16777215)
            },
            shininess: {
                type: "f",
                value: 30
            },
            opacity: {
                type: "f",
                value: 1
            },
            useRefract: {
                type: "i",
                value: 0
            },
            refractionRatio: {
                type: "f",
                value: .98
            },
            reflectivity: {
                type: "f",
                value: .5
            },
            uOffset: {
                type: "v2",
                value: new THREE.Vector2(0,0)
            },
            uRepeat: {
                type: "v2",
                value: new THREE.Vector2(1,1)
            },
            wrapRGB: {
                type: "v3",
                value: new THREE.Vector3(1,1,1)
            }
        }]),
        fragmentShader: ["uniform vec3 ambient;", "uniform vec3 diffuse;", "uniform vec3 specular;", "uniform float shininess;", "uniform float opacity;", "uniform bool enableDiffuse;", "uniform bool enableSpecular;", "uniform bool enableAO;", "uniform bool enableReflection;", "uniform sampler2D tDiffuse;", "uniform sampler2D tNormal;", "uniform sampler2D tSpecular;", "uniform sampler2D tAO;", "uniform samplerCube tCube;", "uniform vec2 uNormalScale;", "uniform bool useRefract;", "uniform float refractionRatio;", "uniform float reflectivity;", "varying vec3 vTangent;", "varying vec3 vBinormal;", "varying vec3 vNormal;", "varying vec2 vUv;", "uniform vec3 ambientLightColor;", "#if MAX_DIR_LIGHTS > 0", "	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];", "	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];", "#endif", "#if MAX_HEMI_LIGHTS > 0", "	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];", "	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];", "	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];", "#endif", "#if MAX_POINT_LIGHTS > 0", "	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];", "	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];", "	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];", "#endif", "#if MAX_SPOT_LIGHTS > 0", "	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];", "	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];", "	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];", "	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];", "	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];", "	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];", "#endif", "#ifdef WRAP_AROUND", "	uniform vec3 wrapRGB;", "#endif", "varying vec3 vWorldPosition;", "varying vec3 vViewPosition;", THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", THREE.ShaderChunk.logdepthbuf_fragment, "	gl_FragColor = vec4( vec3( 1.0 ), opacity );", "	vec3 specularTex = vec3( 1.0 );", "	vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;", "	normalTex.xy *= uNormalScale;", "	normalTex = normalize( normalTex );", "	if( enableDiffuse ) {", "		#ifdef GAMMA_INPUT", "			vec4 texelColor = texture2D( tDiffuse, vUv );", "			texelColor.xyz *= texelColor.xyz;", "			gl_FragColor = gl_FragColor * texelColor;", "		#else", "			gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );", "		#endif", "	}", "	if( enableAO ) {", "		#ifdef GAMMA_INPUT", "			vec4 aoColor = texture2D( tAO, vUv );", "			aoColor.xyz *= aoColor.xyz;", "			gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;", "		#else", "			gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;", "		#endif", "	}", THREE.ShaderChunk.alphatest_fragment, "	if( enableSpecular )", "		specularTex = texture2D( tSpecular, vUv ).xyz;", "	mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );", "	vec3 finalNormal = tsb * normalTex;", "	#ifdef FLIP_SIDED", "		finalNormal = -finalNormal;", "	#endif", "	vec3 normal = normalize( finalNormal );", "	vec3 viewPosition = normalize( vViewPosition );", "	#if MAX_POINT_LIGHTS > 0", "		vec3 pointDiffuse = vec3( 0.0 );", "		vec3 pointSpecular = vec3( 0.0 );", "		for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {", "			vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );", "			vec3 pointVector = lPosition.xyz + vViewPosition.xyz;", "			float pointDistance = 1.0;", "			if ( pointLightDistance[ i ] > 0.0 )", "				pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );", "			pointVector = normalize( pointVector );", "			#ifdef WRAP_AROUND", "				float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );", "				float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );", "				vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );", "			#else", "				float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );", "			#endif", "			pointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;", "			vec3 pointHalfVector = normalize( pointVector + viewPosition );", "			float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );", "			float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );", "			float specularNormalization = ( shininess + 2.0 ) / 8.0;", "			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( pointVector, pointHalfVector ), 0.0 ), 5.0 );", "			pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;", "		}", "	#endif", "	#if MAX_SPOT_LIGHTS > 0", "		vec3 spotDiffuse = vec3( 0.0 );", "		vec3 spotSpecular = vec3( 0.0 );", "		for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {", "			vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );", "			vec3 spotVector = lPosition.xyz + vViewPosition.xyz;", "			float spotDistance = 1.0;", "			if ( spotLightDistance[ i ] > 0.0 )", "				spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );", "			spotVector = normalize( spotVector );", "			float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );", "			if ( spotEffect > spotLightAngleCos[ i ] ) {", "				spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );", "				#ifdef WRAP_AROUND", "					float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );", "					float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );", "					vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );", "				#else", "					float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );", "				#endif", "				spotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;", "				vec3 spotHalfVector = normalize( spotVector + viewPosition );", "				float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );", "				float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );", "				float specularNormalization = ( shininess + 2.0 ) / 8.0;", "				vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( spotVector, spotHalfVector ), 0.0 ), 5.0 );", "				spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;", "			}", "		}", "	#endif", "	#if MAX_DIR_LIGHTS > 0", "		vec3 dirDiffuse = vec3( 0.0 );", "		vec3 dirSpecular = vec3( 0.0 );", "		for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {", "			vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );", "			vec3 dirVector = normalize( lDirection.xyz );", "			#ifdef WRAP_AROUND", "				float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );", "				float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );", "				vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );", "			#else", "				float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );", "			#endif", "			dirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;", "			vec3 dirHalfVector = normalize( dirVector + viewPosition );", "			float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );", "			float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );", "			float specularNormalization = ( shininess + 2.0 ) / 8.0;", "			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );", "			dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;", "		}", "	#endif", "	#if MAX_HEMI_LIGHTS > 0", "		vec3 hemiDiffuse = vec3( 0.0 );", "		vec3 hemiSpecular = vec3( 0.0 );", "		for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {", "			vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );", "			vec3 lVector = normalize( lDirection.xyz );", "			float dotProduct = dot( normal, lVector );", "			float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;", "			vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );", "			hemiDiffuse += diffuse * hemiColor;", "			vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );", "			float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;", "			float hemiSpecularWeightSky = specularTex.r * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );", "			vec3 lVectorGround = -lVector;", "			vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );", "			float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;", "			float hemiSpecularWeightGround = specularTex.r * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );", "			float dotProductGround = dot( normal, lVectorGround );", "			float specularNormalization = ( shininess + 2.0 ) / 8.0;", "			vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );", "			vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );", "			hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );", "		}", "	#endif", "	vec3 totalDiffuse = vec3( 0.0 );", "	vec3 totalSpecular = vec3( 0.0 );", "	#if MAX_DIR_LIGHTS > 0", "		totalDiffuse += dirDiffuse;", "		totalSpecular += dirSpecular;", "	#endif", "	#if MAX_HEMI_LIGHTS > 0", "		totalDiffuse += hemiDiffuse;", "		totalSpecular += hemiSpecular;", "	#endif", "	#if MAX_POINT_LIGHTS > 0", "		totalDiffuse += pointDiffuse;", "		totalSpecular += pointSpecular;", "	#endif", "	#if MAX_SPOT_LIGHTS > 0", "		totalDiffuse += spotDiffuse;", "		totalSpecular += spotSpecular;", "	#endif", "	#ifdef METAL", "		gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );", "	#else", "		gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;", "	#endif", "	if ( enableReflection ) {", "		vec3 vReflect;", "		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );", "		if ( useRefract ) {", "			vReflect = refract( cameraToVertex, normal, refractionRatio );", "		} else {", "			vReflect = reflect( cameraToVertex, normal );", "		}", "		vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );", "		#ifdef GAMMA_INPUT", "			cubeColor.xyz *= cubeColor.xyz;", "		#endif", "		gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );", "	}", THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n"),
        vertexShader: ["attribute vec4 tangent;", "uniform vec2 uOffset;", "uniform vec2 uRepeat;", "uniform bool enableDisplacement;", "#ifdef VERTEX_TEXTURES", "	uniform sampler2D tDisplacement;", "	uniform float uDisplacementScale;", "	uniform float uDisplacementBias;", "#endif", "varying vec3 vTangent;", "varying vec3 vBinormal;", "varying vec3 vNormal;", "varying vec2 vUv;", "varying vec3 vWorldPosition;", "varying vec3 vViewPosition;", THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.skinnormal_vertex, "	#ifdef USE_SKINNING", "		vNormal = normalize( normalMatrix * skinnedNormal.xyz );", "		vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );", "		vTangent = normalize( normalMatrix * skinnedTangent.xyz );", "	#else", "		vNormal = normalize( normalMatrix * normal );", "		vTangent = normalize( normalMatrix * tangent.xyz );", "	#endif", "	vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );", "	vUv = uv * uRepeat + uOffset;", "	vec3 displacedPosition;", "	#ifdef VERTEX_TEXTURES", "		if ( enableDisplacement ) {", "			vec3 dv = texture2D( tDisplacement, uv ).xyz;", "			float df = uDisplacementScale * dv.x + uDisplacementBias;", "			displacedPosition = position + normalize( normal ) * df;", "		} else {", "			#ifdef USE_SKINNING", "				vec4 skinVertex = bindMatrix * vec4( position, 1.0 );", "				vec4 skinned = vec4( 0.0 );", "				skinned += boneMatX * skinVertex * skinWeight.x;", "				skinned += boneMatY * skinVertex * skinWeight.y;", "				skinned += boneMatZ * skinVertex * skinWeight.z;", "				skinned += boneMatW * skinVertex * skinWeight.w;", "				skinned  = bindMatrixInverse * skinned;", "				displacedPosition = skinned.xyz;", "			#else", "				displacedPosition = position;", "			#endif", "		}", "	#else", "		#ifdef USE_SKINNING", "			vec4 skinVertex = bindMatrix * vec4( position, 1.0 );", "			vec4 skinned = vec4( 0.0 );", "			skinned += boneMatX * skinVertex * skinWeight.x;", "			skinned += boneMatY * skinVertex * skinWeight.y;", "			skinned += boneMatZ * skinVertex * skinWeight.z;", "			skinned += boneMatW * skinVertex * skinWeight.w;", "			skinned  = bindMatrixInverse * skinned;", "			displacedPosition = skinned.xyz;", "		#else", "			displacedPosition = position;", "		#endif", "	#endif", "	vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );", "	vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );", "	gl_Position = projectionMatrix * mvPosition;", THREE.ShaderChunk.logdepthbuf_vertex, "	vWorldPosition = worldPosition.xyz;", "	vViewPosition = -mvPosition.xyz;", "	#ifdef USE_SHADOWMAP", "		for( int i = 0; i < MAX_SHADOWS; i ++ ) {", "			vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;", "		}", "	#endif", "}"].join("\n")
    },
    cube: {
        uniforms: {
            tCube: {
                type: "t",
                value: null
            },
            tFlip: {
                type: "f",
                value: -1
            }
        },
        vertexShader: ["varying vec3 vWorldPosition;", THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", "	vec4 worldPosition = modelMatrix * vec4( position, 1.0 );", "	vWorldPosition = worldPosition.xyz;", "	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
        fragmentShader: ["uniform samplerCube tCube;", "uniform float tFlip;", "varying vec3 vWorldPosition;", THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );", THREE.ShaderChunk.logdepthbuf_fragment, "}"].join("\n")
    },
    depthRGBA: {
        uniforms: {},
        vertexShader: [THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
        fragmentShader: [THREE.ShaderChunk.logdepthbuf_pars_fragment, "vec4 pack_depth( const in float depth ) {", "	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );", "	const vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );", "	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );", "	res -= res.xxyz * bit_mask;", "	return res;", "}", "void main() {", THREE.ShaderChunk.logdepthbuf_fragment, "	#ifdef USE_LOGDEPTHBUF_EXT", "		gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );", "	#else", "		gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );", "	#endif", "}"].join("\n")
    }
},
THREE.WebGLRenderer = function(e) {
    function t() {
        Lt.clearColor(0, 0, 0, 1),
        Lt.clearDepth(1),
        Lt.clearStencil(0),
        Lt.enable(Lt.DEPTH_TEST),
        Lt.depthFunc(Lt.LEQUAL),
        Lt.frontFace(Lt.CCW),
        Lt.cullFace(Lt.BACK),
        Lt.enable(Lt.CULL_FACE),
        Lt.enable(Lt.BLEND),
        Lt.blendEquation(Lt.FUNC_ADD),
        Lt.blendFunc(Lt.SRC_ALPHA, Lt.ONE_MINUS_SRC_ALPHA),
        Lt.viewport(ni, ri, oi, ai),
        Lt.clearColor(St.r, St.g, St.b, kt)
    }
    function i(e) {
        e.__webglVertexBuffer = Lt.createBuffer(),
        e.__webglColorBuffer = Lt.createBuffer(),
        It.info.memory.geometries++
    }
    function n(e) {
        e.__webglVertexBuffer = Lt.createBuffer(),
        e.__webglColorBuffer = Lt.createBuffer(),
        e.__webglLineDistanceBuffer = Lt.createBuffer(),
        It.info.memory.geometries++
    }
    function r(e) {
        e.__webglVertexBuffer = Lt.createBuffer(),
        e.__webglNormalBuffer = Lt.createBuffer(),
        e.__webglTangentBuffer = Lt.createBuffer(),
        e.__webglColorBuffer = Lt.createBuffer(),
        e.__webglUVBuffer = Lt.createBuffer(),
        e.__webglUV2Buffer = Lt.createBuffer(),
        e.__webglSkinIndicesBuffer = Lt.createBuffer(),
        e.__webglSkinWeightsBuffer = Lt.createBuffer(),
        e.__webglFaceBuffer = Lt.createBuffer(),
        e.__webglLineBuffer = Lt.createBuffer();
        var t, i;
        if (e.numMorphTargets)
            for (e.__webglMorphTargetsBuffers = [],
            t = 0,
            i = e.numMorphTargets; i > t; t++)
                e.__webglMorphTargetsBuffers.push(Lt.createBuffer());
        if (e.numMorphNormals)
            for (e.__webglMorphNormalsBuffers = [],
            t = 0,
            i = e.numMorphNormals; i > t; t++)
                e.__webglMorphNormalsBuffers.push(Lt.createBuffer());
        It.info.memory.geometries++
    }
    function o(e) {
        var t = e.geometry
          , i = e.material
          , n = t.vertices.length;
        if (i.attributes) {
            void 0 === t.__webglCustomAttributesList && (t.__webglCustomAttributesList = []);
            for (var r in i.attributes) {
                var o = i.attributes[r];
                if (!o.__webglInitialized || o.createUniqueBuffers) {
                    o.__webglInitialized = !0;
                    var a = 1;
                    "v2" === o.type ? a = 2 : "v3" === o.type ? a = 3 : "v4" === o.type ? a = 4 : "c" === o.type && (a = 3),
                    o.size = a,
                    o.array = new Float32Array(n * a),
                    o.buffer = Lt.createBuffer(),
                    o.buffer.belongsToAttribute = r,
                    o.needsUpdate = !0
                }
                t.__webglCustomAttributesList.push(o)
            }
        }
    }
    function a(e, t) {
        var i = e.vertices.length;
        e.__vertexArray = new Float32Array(3 * i),
        e.__colorArray = new Float32Array(3 * i),
        e.__sortArray = [],
        e.__webglParticleCount = i,
        o(t)
    }
    function s(e, t) {
        var i = e.vertices.length;
        e.__vertexArray = new Float32Array(3 * i),
        e.__colorArray = new Float32Array(3 * i),
        e.__lineDistanceArray = new Float32Array(1 * i),
        e.__webglLineCount = i,
        o(t)
    }
    function l(e, t) {
        var i = t.geometry
          , n = e.faces3
          , r = 3 * n.length
          , o = 1 * n.length
          , a = 3 * n.length
          , s = c(t, e);
        e.__vertexArray = new Float32Array(3 * r),
        e.__normalArray = new Float32Array(3 * r),
        e.__colorArray = new Float32Array(3 * r),
        e.__uvArray = new Float32Array(2 * r),
        i.faceVertexUvs.length > 1 && (e.__uv2Array = new Float32Array(2 * r)),
        i.hasTangents && (e.__tangentArray = new Float32Array(4 * r)),
        t.geometry.skinWeights.length && t.geometry.skinIndices.length && (e.__skinIndexArray = new Float32Array(4 * r),
        e.__skinWeightArray = new Float32Array(4 * r));
        var l = null !== wi.get("OES_element_index_uint") && o > 21845 ? Uint32Array : Uint16Array;
        e.__typeArray = l,
        e.__faceArray = new l(3 * o),
        e.__lineArray = new l(2 * a);
        var d, h;
        if (e.numMorphTargets)
            for (e.__morphTargetsArrays = [],
            d = 0,
            h = e.numMorphTargets; h > d; d++)
                e.__morphTargetsArrays.push(new Float32Array(3 * r));
        if (e.numMorphNormals)
            for (e.__morphNormalsArrays = [],
            d = 0,
            h = e.numMorphNormals; h > d; d++)
                e.__morphNormalsArrays.push(new Float32Array(3 * r));
        if (e.__webglFaceCount = 3 * o,
        e.__webglLineCount = 2 * a,
        s.attributes) {
            void 0 === e.__webglCustomAttributesList && (e.__webglCustomAttributesList = []);
            for (var u in s.attributes) {
                var p = s.attributes[u]
                  , f = {};
                for (var g in p)
                    f[g] = p[g];
                if (!f.__webglInitialized || f.createUniqueBuffers) {
                    f.__webglInitialized = !0;
                    var m = 1;
                    "v2" === f.type ? m = 2 : "v3" === f.type ? m = 3 : "v4" === f.type ? m = 4 : "c" === f.type && (m = 3),
                    f.size = m,
                    f.array = new Float32Array(r * m),
                    f.buffer = Lt.createBuffer(),
                    f.buffer.belongsToAttribute = u,
                    p.needsUpdate = !0,
                    f.__original = p
                }
                e.__webglCustomAttributesList.push(f)
            }
        }
        e.__inittedArrays = !0
    }
    function c(e, t) {
        return e.material instanceof THREE.MeshFaceMaterial ? e.material.materials[t.materialIndex] : e.material
    }
    function d(e) {
        return e && void 0 !== e.shading && e.shading === THREE.SmoothShading
    }
    function h(e, t, i) {
        var n, r, o, a, s, l, c, d, h, u, p, f, g = e.vertices, m = g.length, v = e.colors, y = v.length, b = e.__vertexArray, w = e.__colorArray, x = e.__sortArray, _ = e.verticesNeedUpdate, T = (e.elementsNeedUpdate,
        e.colorsNeedUpdate), C = e.__webglCustomAttributesList;
        if (i.sortParticles) {
            for (pi.copy(ui),
            pi.multiply(i.matrixWorld),
            n = 0; m > n; n++)
                o = g[n],
                fi.copy(o),
                fi.applyProjection(pi),
                x[n] = [fi.z, n];
            for (x.sort(E),
            n = 0; m > n; n++)
                o = g[x[n][1]],
                a = 3 * n,
                b[a] = o.x,
                b[a + 1] = o.y,
                b[a + 2] = o.z;
            for (r = 0; y > r; r++)
                a = 3 * r,
                l = v[x[r][1]],
                w[a] = l.r,
                w[a + 1] = l.g,
                w[a + 2] = l.b;
            if (C)
                for (c = 0,
                d = C.length; d > c; c++)
                    if (f = C[c],
                    void 0 === f.boundTo || "vertices" === f.boundTo)
                        if (a = 0,
                        u = f.value.length,
                        1 === f.size)
                            for (h = 0; u > h; h++)
                                s = x[h][1],
                                f.array[h] = f.value[s];
                        else if (2 === f.size)
                            for (h = 0; u > h; h++)
                                s = x[h][1],
                                p = f.value[s],
                                f.array[a] = p.x,
                                f.array[a + 1] = p.y,
                                a += 2;
                        else if (3 === f.size)
                            if ("c" === f.type)
                                for (h = 0; u > h; h++)
                                    s = x[h][1],
                                    p = f.value[s],
                                    f.array[a] = p.r,
                                    f.array[a + 1] = p.g,
                                    f.array[a + 2] = p.b,
                                    a += 3;
                            else
                                for (h = 0; u > h; h++)
                                    s = x[h][1],
                                    p = f.value[s],
                                    f.array[a] = p.x,
                                    f.array[a + 1] = p.y,
                                    f.array[a + 2] = p.z,
                                    a += 3;
                        else if (4 === f.size)
                            for (h = 0; u > h; h++)
                                s = x[h][1],
                                p = f.value[s],
                                f.array[a] = p.x,
                                f.array[a + 1] = p.y,
                                f.array[a + 2] = p.z,
                                f.array[a + 3] = p.w,
                                a += 4
        } else {
            if (_)
                for (n = 0; m > n; n++)
                    o = g[n],
                    a = 3 * n,
                    b[a] = o.x,
                    b[a + 1] = o.y,
                    b[a + 2] = o.z;
            if (T)
                for (r = 0; y > r; r++)
                    l = v[r],
                    a = 3 * r,
                    w[a] = l.r,
                    w[a + 1] = l.g,
                    w[a + 2] = l.b;
            if (C)
                for (c = 0,
                d = C.length; d > c; c++)
                    if (f = C[c],
                    f.needsUpdate && (void 0 === f.boundTo || "vertices" === f.boundTo))
                        if (u = f.value.length,
                        a = 0,
                        1 === f.size)
                            for (h = 0; u > h; h++)
                                f.array[h] = f.value[h];
                        else if (2 === f.size)
                            for (h = 0; u > h; h++)
                                p = f.value[h],
                                f.array[a] = p.x,
                                f.array[a + 1] = p.y,
                                a += 2;
                        else if (3 === f.size)
                            if ("c" === f.type)
                                for (h = 0; u > h; h++)
                                    p = f.value[h],
                                    f.array[a] = p.r,
                                    f.array[a + 1] = p.g,
                                    f.array[a + 2] = p.b,
                                    a += 3;
                            else
                                for (h = 0; u > h; h++)
                                    p = f.value[h],
                                    f.array[a] = p.x,
                                    f.array[a + 1] = p.y,
                                    f.array[a + 2] = p.z,
                                    a += 3;
                        else if (4 === f.size)
                            for (h = 0; u > h; h++)
                                p = f.value[h],
                                f.array[a] = p.x,
                                f.array[a + 1] = p.y,
                                f.array[a + 2] = p.z,
                                f.array[a + 3] = p.w,
                                a += 4
        }
        if ((_ || i.sortParticles) && (Lt.bindBuffer(Lt.ARRAY_BUFFER, e.__webglVertexBuffer),
        Lt.bufferData(Lt.ARRAY_BUFFER, b, t)),
        (T || i.sortParticles) && (Lt.bindBuffer(Lt.ARRAY_BUFFER, e.__webglColorBuffer),
        Lt.bufferData(Lt.ARRAY_BUFFER, w, t)),
        C)
            for (c = 0,
            d = C.length; d > c; c++)
                f = C[c],
                (f.needsUpdate || i.sortParticles) && (Lt.bindBuffer(Lt.ARRAY_BUFFER, f.buffer),
                Lt.bufferData(Lt.ARRAY_BUFFER, f.array, t))
    }
    function u(e, t) {
        var i, n, r, o, a, s, l, c, d, h, u, p, f = e.vertices, g = e.colors, m = e.lineDistances, v = f.length, y = g.length, b = m.length, w = e.__vertexArray, x = e.__colorArray, E = e.__lineDistanceArray, _ = e.verticesNeedUpdate, T = e.colorsNeedUpdate, C = e.lineDistancesNeedUpdate, R = e.__webglCustomAttributesList;
        if (_) {
            for (i = 0; v > i; i++)
                o = f[i],
                a = 3 * i,
                w[a] = o.x,
                w[a + 1] = o.y,
                w[a + 2] = o.z;
            Lt.bindBuffer(Lt.ARRAY_BUFFER, e.__webglVertexBuffer),
            Lt.bufferData(Lt.ARRAY_BUFFER, w, t)
        }
        if (T) {
            for (n = 0; y > n; n++)
                s = g[n],
                a = 3 * n,
                x[a] = s.r,
                x[a + 1] = s.g,
                x[a + 2] = s.b;
            Lt.bindBuffer(Lt.ARRAY_BUFFER, e.__webglColorBuffer),
            Lt.bufferData(Lt.ARRAY_BUFFER, x, t)
        }
        if (C) {
            for (r = 0; b > r; r++)
                E[r] = m[r];
            Lt.bindBuffer(Lt.ARRAY_BUFFER, e.__webglLineDistanceBuffer),
            Lt.bufferData(Lt.ARRAY_BUFFER, E, t)
        }
        if (R)
            for (l = 0,
            c = R.length; c > l; l++)
                if (p = R[l],
                p.needsUpdate && (void 0 === p.boundTo || "vertices" === p.boundTo)) {
                    if (a = 0,
                    h = p.value.length,
                    1 === p.size)
                        for (d = 0; h > d; d++)
                            p.array[d] = p.value[d];
                    else if (2 === p.size)
                        for (d = 0; h > d; d++)
                            u = p.value[d],
                            p.array[a] = u.x,
                            p.array[a + 1] = u.y,
                            a += 2;
                    else if (3 === p.size)
                        if ("c" === p.type)
                            for (d = 0; h > d; d++)
                                u = p.value[d],
                                p.array[a] = u.r,
                                p.array[a + 1] = u.g,
                                p.array[a + 2] = u.b,
                                a += 3;
                        else
                            for (d = 0; h > d; d++)
                                u = p.value[d],
                                p.array[a] = u.x,
                                p.array[a + 1] = u.y,
                                p.array[a + 2] = u.z,
                                a += 3;
                    else if (4 === p.size)
                        for (d = 0; h > d; d++)
                            u = p.value[d],
                            p.array[a] = u.x,
                            p.array[a + 1] = u.y,
                            p.array[a + 2] = u.z,
                            p.array[a + 3] = u.w,
                            a += 4;
                    Lt.bindBuffer(Lt.ARRAY_BUFFER, p.buffer),
                    Lt.bufferData(Lt.ARRAY_BUFFER, p.array, t)
                }
    }
    function p(e, t, i, n, r) {
        if (e.__inittedArrays) {
            var o, a, s, l, c, h, u, p, f, g, m, v, y, b, w, x, E, _, T, C, R, S, k, M, A, H, P, O, D, $, L, I, F, B, j, N, z, U, V, W, G, q, X = d(r), Y = 0, J = 0, K = 0, Z = 0, Q = 0, et = 0, tt = 0, it = 0, nt = 0, rt = 0, ot = 0, at = 0, st = 0, lt = e.__vertexArray, ct = e.__uvArray, dt = e.__uv2Array, ht = e.__normalArray, ut = e.__tangentArray, pt = e.__colorArray, ft = e.__skinIndexArray, gt = e.__skinWeightArray, mt = e.__morphTargetsArrays, vt = e.__morphNormalsArrays, yt = e.__webglCustomAttributesList, bt = e.__faceArray, wt = e.__lineArray, xt = t.geometry, Et = xt.verticesNeedUpdate, _t = xt.elementsNeedUpdate, Tt = xt.uvsNeedUpdate, Ct = xt.normalsNeedUpdate, Rt = xt.tangentsNeedUpdate, St = xt.colorsNeedUpdate, kt = xt.morphTargetsNeedUpdate, Mt = xt.vertices, At = e.faces3, Ht = xt.faces, Pt = xt.faceVertexUvs[0], Ot = xt.faceVertexUvs[1], Dt = (xt.colors,
            xt.skinIndices), $t = xt.skinWeights, It = xt.morphTargets, Ft = xt.morphNormals;
            if (Et) {
                for (o = 0,
                a = At.length; a > o; o++)
                    l = Ht[At[o]],
                    v = Mt[l.a],
                    y = Mt[l.b],
                    b = Mt[l.c],
                    lt[J] = v.x,
                    lt[J + 1] = v.y,
                    lt[J + 2] = v.z,
                    lt[J + 3] = y.x,
                    lt[J + 4] = y.y,
                    lt[J + 5] = y.z,
                    lt[J + 6] = b.x,
                    lt[J + 7] = b.y,
                    lt[J + 8] = b.z,
                    J += 9;
                Lt.bindBuffer(Lt.ARRAY_BUFFER, e.__webglVertexBuffer),
                Lt.bufferData(Lt.ARRAY_BUFFER, lt, i)
            }
            if (kt)
                for (j = 0,
                N = It.length; N > j; j++) {
                    for (ot = 0,
                    o = 0,
                    a = At.length; a > o; o++)
                        V = At[o],
                        l = Ht[V],
                        v = It[j].vertices[l.a],
                        y = It[j].vertices[l.b],
                        b = It[j].vertices[l.c],
                        z = mt[j],
                        z[ot] = v.x,
                        z[ot + 1] = v.y,
                        z[ot + 2] = v.z,
                        z[ot + 3] = y.x,
                        z[ot + 4] = y.y,
                        z[ot + 5] = y.z,
                        z[ot + 6] = b.x,
                        z[ot + 7] = b.y,
                        z[ot + 8] = b.z,
                        r.morphNormals && (X ? (W = Ft[j].vertexNormals[V],
                        _ = W.a,
                        T = W.b,
                        C = W.c) : (_ = Ft[j].faceNormals[V],
                        T = _,
                        C = _),
                        U = vt[j],
                        U[ot] = _.x,
                        U[ot + 1] = _.y,
                        U[ot + 2] = _.z,
                        U[ot + 3] = T.x,
                        U[ot + 4] = T.y,
                        U[ot + 5] = T.z,
                        U[ot + 6] = C.x,
                        U[ot + 7] = C.y,
                        U[ot + 8] = C.z),
                        ot += 9;
                    Lt.bindBuffer(Lt.ARRAY_BUFFER, e.__webglMorphTargetsBuffers[j]),
                    Lt.bufferData(Lt.ARRAY_BUFFER, mt[j], i),
                    r.morphNormals && (Lt.bindBuffer(Lt.ARRAY_BUFFER, e.__webglMorphNormalsBuffers[j]),
                    Lt.bufferData(Lt.ARRAY_BUFFER, vt[j], i))
                }
            if ($t.length) {
                for (o = 0,
                a = At.length; a > o; o++)
                    l = Ht[At[o]],
                    M = $t[l.a],
                    A = $t[l.b],
                    H = $t[l.c],
                    gt[rt] = M.x,
                    gt[rt + 1] = M.y,
                    gt[rt + 2] = M.z,
                    gt[rt + 3] = M.w,
                    gt[rt + 4] = A.x,
                    gt[rt + 5] = A.y,
                    gt[rt + 6] = A.z,
                    gt[rt + 7] = A.w,
                    gt[rt + 8] = H.x,
                    gt[rt + 9] = H.y,
                    gt[rt + 10] = H.z,
                    gt[rt + 11] = H.w,
                    P = Dt[l.a],
                    O = Dt[l.b],
                    D = Dt[l.c],
                    ft[rt] = P.x,
                    ft[rt + 1] = P.y,
                    ft[rt + 2] = P.z,
                    ft[rt + 3] = P.w,
                    ft[rt + 4] = O.x,
                    ft[rt + 5] = O.y,
                    ft[rt + 6] = O.z,
                    ft[rt + 7] = O.w,
                    ft[rt + 8] = D.x,
                    ft[rt + 9] = D.y,
                    ft[rt + 10] = D.z,
                    ft[rt + 11] = D.w,
                    rt += 12;
                rt > 0 && (Lt.bindBuffer(Lt.ARRAY_BUFFER, e.__webglSkinIndicesBuffer),
                Lt.bufferData(Lt.ARRAY_BUFFER, ft, i),
                Lt.bindBuffer(Lt.ARRAY_BUFFER, e.__webglSkinWeightsBuffer),
                Lt.bufferData(Lt.ARRAY_BUFFER, gt, i))
            }
            if (St) {
                for (o = 0,
                a = At.length; a > o; o++)
                    l = Ht[At[o]],
                    u = l.vertexColors,
                    p = l.color,
                    3 === u.length && r.vertexColors === THREE.VertexColors ? (R = u[0],
                    S = u[1],
                    k = u[2]) : (R = p,
                    S = p,
                    k = p),
                    pt[nt] = R.r,
                    pt[nt + 1] = R.g,
                    pt[nt + 2] = R.b,
                    pt[nt + 3] = S.r,
                    pt[nt + 4] = S.g,
                    pt[nt + 5] = S.b,
                    pt[nt + 6] = k.r,
                    pt[nt + 7] = k.g,
                    pt[nt + 8] = k.b,
                    nt += 9;
                nt > 0 && (Lt.bindBuffer(Lt.ARRAY_BUFFER, e.__webglColorBuffer),
                Lt.bufferData(Lt.ARRAY_BUFFER, pt, i))
            }
            if (Rt && xt.hasTangents) {
                for (o = 0,
                a = At.length; a > o; o++)
                    l = Ht[At[o]],
                    f = l.vertexTangents,
                    w = f[0],
                    x = f[1],
                    E = f[2],
                    ut[tt] = w.x,
                    ut[tt + 1] = w.y,
                    ut[tt + 2] = w.z,
                    ut[tt + 3] = w.w,
                    ut[tt + 4] = x.x,
                    ut[tt + 5] = x.y,
                    ut[tt + 6] = x.z,
                    ut[tt + 7] = x.w,
                    ut[tt + 8] = E.x,
                    ut[tt + 9] = E.y,
                    ut[tt + 10] = E.z,
                    ut[tt + 11] = E.w,
                    tt += 12;
                Lt.bindBuffer(Lt.ARRAY_BUFFER, e.__webglTangentBuffer),
                Lt.bufferData(Lt.ARRAY_BUFFER, ut, i)
            }
            if (Ct) {
                for (o = 0,
                a = At.length; a > o; o++)
                    if (l = Ht[At[o]],
                    c = l.vertexNormals,
                    h = l.normal,
                    3 === c.length && X)
                        for ($ = 0; 3 > $; $++)
                            I = c[$],
                            ht[et] = I.x,
                            ht[et + 1] = I.y,
                            ht[et + 2] = I.z,
                            et += 3;
                    else
                        for ($ = 0; 3 > $; $++)
                            ht[et] = h.x,
                            ht[et + 1] = h.y,
                            ht[et + 2] = h.z,
                            et += 3;
                Lt.bindBuffer(Lt.ARRAY_BUFFER, e.__webglNormalBuffer),
                Lt.bufferData(Lt.ARRAY_BUFFER, ht, i)
            }
            if (Tt && Pt) {
                for (o = 0,
                a = At.length; a > o; o++)
                    if (s = At[o],
                    g = Pt[s],
                    void 0 !== g)
                        for ($ = 0; 3 > $; $++)
                            F = g[$],
                            ct[K] = F.x,
                            ct[K + 1] = F.y,
                            K += 2;
                K > 0 && (Lt.bindBuffer(Lt.ARRAY_BUFFER, e.__webglUVBuffer),
                Lt.bufferData(Lt.ARRAY_BUFFER, ct, i))
            }
            if (Tt && Ot) {
                for (o = 0,
                a = At.length; a > o; o++)
                    if (s = At[o],
                    m = Ot[s],
                    void 0 !== m)
                        for ($ = 0; 3 > $; $++)
                            B = m[$],
                            dt[Z] = B.x,
                            dt[Z + 1] = B.y,
                            Z += 2;
                Z > 0 && (Lt.bindBuffer(Lt.ARRAY_BUFFER, e.__webglUV2Buffer),
                Lt.bufferData(Lt.ARRAY_BUFFER, dt, i))
            }
            if (_t) {
                for (o = 0,
                a = At.length; a > o; o++)
                    bt[Q] = Y,
                    bt[Q + 1] = Y + 1,
                    bt[Q + 2] = Y + 2,
                    Q += 3,
                    wt[it] = Y,
                    wt[it + 1] = Y + 1,
                    wt[it + 2] = Y,
                    wt[it + 3] = Y + 2,
                    wt[it + 4] = Y + 1,
                    wt[it + 5] = Y + 2,
                    it += 6,
                    Y += 3;
                Lt.bindBuffer(Lt.ELEMENT_ARRAY_BUFFER, e.__webglFaceBuffer),
                Lt.bufferData(Lt.ELEMENT_ARRAY_BUFFER, bt, i),
                Lt.bindBuffer(Lt.ELEMENT_ARRAY_BUFFER, e.__webglLineBuffer),
                Lt.bufferData(Lt.ELEMENT_ARRAY_BUFFER, wt, i)
            }
            if (yt)
                for ($ = 0,
                L = yt.length; L > $; $++)
                    if (q = yt[$],
                    q.__original.needsUpdate) {
                        if (at = 0,
                        st = 0,
                        1 === q.size) {
                            if (void 0 === q.boundTo || "vertices" === q.boundTo)
                                for (o = 0,
                                a = At.length; a > o; o++)
                                    l = Ht[At[o]],
                                    q.array[at] = q.value[l.a],
                                    q.array[at + 1] = q.value[l.b],
                                    q.array[at + 2] = q.value[l.c],
                                    at += 3;
                            else if ("faces" === q.boundTo)
                                for (o = 0,
                                a = At.length; a > o; o++)
                                    G = q.value[At[o]],
                                    q.array[at] = G,
                                    q.array[at + 1] = G,
                                    q.array[at + 2] = G,
                                    at += 3
                        } else if (2 === q.size) {
                            if (void 0 === q.boundTo || "vertices" === q.boundTo)
                                for (o = 0,
                                a = At.length; a > o; o++)
                                    l = Ht[At[o]],
                                    v = q.value[l.a],
                                    y = q.value[l.b],
                                    b = q.value[l.c],
                                    q.array[at] = v.x,
                                    q.array[at + 1] = v.y,
                                    q.array[at + 2] = y.x,
                                    q.array[at + 3] = y.y,
                                    q.array[at + 4] = b.x,
                                    q.array[at + 5] = b.y,
                                    at += 6;
                            else if ("faces" === q.boundTo)
                                for (o = 0,
                                a = At.length; a > o; o++)
                                    G = q.value[At[o]],
                                    v = G,
                                    y = G,
                                    b = G,
                                    q.array[at] = v.x,
                                    q.array[at + 1] = v.y,
                                    q.array[at + 2] = y.x,
                                    q.array[at + 3] = y.y,
                                    q.array[at + 4] = b.x,
                                    q.array[at + 5] = b.y,
                                    at += 6
                        } else if (3 === q.size) {
                            var Bt;
                            if (Bt = "c" === q.type ? ["r", "g", "b"] : ["x", "y", "z"],
                            void 0 === q.boundTo || "vertices" === q.boundTo)
                                for (o = 0,
                                a = At.length; a > o; o++)
                                    l = Ht[At[o]],
                                    v = q.value[l.a],
                                    y = q.value[l.b],
                                    b = q.value[l.c],
                                    q.array[at] = v[Bt[0]],
                                    q.array[at + 1] = v[Bt[1]],
                                    q.array[at + 2] = v[Bt[2]],
                                    q.array[at + 3] = y[Bt[0]],
                                    q.array[at + 4] = y[Bt[1]],
                                    q.array[at + 5] = y[Bt[2]],
                                    q.array[at + 6] = b[Bt[0]],
                                    q.array[at + 7] = b[Bt[1]],
                                    q.array[at + 8] = b[Bt[2]],
                                    at += 9;
                            else if ("faces" === q.boundTo)
                                for (o = 0,
                                a = At.length; a > o; o++)
                                    G = q.value[At[o]],
                                    v = G,
                                    y = G,
                                    b = G,
                                    q.array[at] = v[Bt[0]],
                                    q.array[at + 1] = v[Bt[1]],
                                    q.array[at + 2] = v[Bt[2]],
                                    q.array[at + 3] = y[Bt[0]],
                                    q.array[at + 4] = y[Bt[1]],
                                    q.array[at + 5] = y[Bt[2]],
                                    q.array[at + 6] = b[Bt[0]],
                                    q.array[at + 7] = b[Bt[1]],
                                    q.array[at + 8] = b[Bt[2]],
                                    at += 9;
                            else if ("faceVertices" === q.boundTo)
                                for (o = 0,
                                a = At.length; a > o; o++)
                                    G = q.value[At[o]],
                                    v = G[0],
                                    y = G[1],
                                    b = G[2],
                                    q.array[at] = v[Bt[0]],
                                    q.array[at + 1] = v[Bt[1]],
                                    q.array[at + 2] = v[Bt[2]],
                                    q.array[at + 3] = y[Bt[0]],
                                    q.array[at + 4] = y[Bt[1]],
                                    q.array[at + 5] = y[Bt[2]],
                                    q.array[at + 6] = b[Bt[0]],
                                    q.array[at + 7] = b[Bt[1]],
                                    q.array[at + 8] = b[Bt[2]],
                                    at += 9
                        } else if (4 === q.size)
                            if (void 0 === q.boundTo || "vertices" === q.boundTo)
                                for (o = 0,
                                a = At.length; a > o; o++)
                                    l = Ht[At[o]],
                                    v = q.value[l.a],
                                    y = q.value[l.b],
                                    b = q.value[l.c],
                                    q.array[at] = v.x,
                                    q.array[at + 1] = v.y,
                                    q.array[at + 2] = v.z,
                                    q.array[at + 3] = v.w,
                                    q.array[at + 4] = y.x,
                                    q.array[at + 5] = y.y,
                                    q.array[at + 6] = y.z,
                                    q.array[at + 7] = y.w,
                                    q.array[at + 8] = b.x,
                                    q.array[at + 9] = b.y,
                                    q.array[at + 10] = b.z,
                                    q.array[at + 11] = b.w,
                                    at += 12;
                            else if ("faces" === q.boundTo)
                                for (o = 0,
                                a = At.length; a > o; o++)
                                    G = q.value[At[o]],
                                    v = G,
                                    y = G,
                                    b = G,
                                    q.array[at] = v.x,
                                    q.array[at + 1] = v.y,
                                    q.array[at + 2] = v.z,
                                    q.array[at + 3] = v.w,
                                    q.array[at + 4] = y.x,
                                    q.array[at + 5] = y.y,
                                    q.array[at + 6] = y.z,
                                    q.array[at + 7] = y.w,
                                    q.array[at + 8] = b.x,
                                    q.array[at + 9] = b.y,
                                    q.array[at + 10] = b.z,
                                    q.array[at + 11] = b.w,
                                    at += 12;
                            else if ("faceVertices" === q.boundTo)
                                for (o = 0,
                                a = At.length; a > o; o++)
                                    G = q.value[At[o]],
                                    v = G[0],
                                    y = G[1],
                                    b = G[2],
                                    q.array[at] = v.x,
                                    q.array[at + 1] = v.y,
                                    q.array[at + 2] = v.z,
                                    q.array[at + 3] = v.w,
                                    q.array[at + 4] = y.x,
                                    q.array[at + 5] = y.y,
                                    q.array[at + 6] = y.z,
                                    q.array[at + 7] = y.w,
                                    q.array[at + 8] = b.x,
                                    q.array[at + 9] = b.y,
                                    q.array[at + 10] = b.z,
                                    q.array[at + 11] = b.w,
                                    at += 12;
                        Lt.bindBuffer(Lt.ARRAY_BUFFER, q.buffer),
                        Lt.bufferData(Lt.ARRAY_BUFFER, q.array, i)
                    }
            n && (delete e.__inittedArrays,
            delete e.__colorArray,
            delete e.__normalArray,
            delete e.__tangentArray,
            delete e.__uvArray,
            delete e.__uv2Array,
            delete e.__faceArray,
            delete e.__vertexArray,
            delete e.__lineArray,
            delete e.__skinIndexArray,
            delete e.__skinWeightArray)
        }
    }
    function f(e) {
        for (var t = e.attributes, i = e.attributesKeys, n = 0, r = i.length; r > n; n++) {
            var o = i[n]
              , a = t[o];
            if (void 0 === a.buffer && (a.buffer = Lt.createBuffer(),
            a.needsUpdate = !0),
            a.needsUpdate === !0) {
                var s = "index" === o ? Lt.ELEMENT_ARRAY_BUFFER : Lt.ARRAY_BUFFER;
                Lt.bindBuffer(s, a.buffer),
                Lt.bufferData(s, a.array, Lt.STATIC_DRAW),
                a.needsUpdate = !1
            }
        }
    }
    function g(e, t, i, n) {
        for (var r = i.attributes, o = t.attributes, a = t.attributesKeys, s = 0, l = a.length; l > s; s++) {
            var c = a[s]
              , d = o[c];
            if (d >= 0) {
                var h = r[c];
                if (void 0 !== h) {
                    var u = h.itemSize;
                    Lt.bindBuffer(Lt.ARRAY_BUFFER, h.buffer),
                    v(d),
                    Lt.vertexAttribPointer(d, u, Lt.FLOAT, !1, 0, n * u * 4)
                } else
                    void 0 !== e.defaultAttributeValues && (2 === e.defaultAttributeValues[c].length ? Lt.vertexAttrib2fv(d, e.defaultAttributeValues[c]) : 3 === e.defaultAttributeValues[c].length && Lt.vertexAttrib3fv(d, e.defaultAttributeValues[c]))
            }
        }
        y()
    }
    function m() {
        for (var e = 0, t = ci.length; t > e; e++)
            ci[e] = 0
    }
    function v(e) {
        ci[e] = 1,
        0 === di[e] && (Lt.enableVertexAttribArray(e),
        di[e] = 1)
    }
    function y() {
        for (var e = 0, t = di.length; t > e; e++)
            di[e] !== ci[e] && (Lt.disableVertexAttribArray(e),
            di[e] = 0)
    }
    function b(e, t, i) {
        var n = e.program.attributes;
        if (-1 !== i.morphTargetBase && n.position >= 0 ? (Lt.bindBuffer(Lt.ARRAY_BUFFER, t.__webglMorphTargetsBuffers[i.morphTargetBase]),
        v(n.position),
        Lt.vertexAttribPointer(n.position, 3, Lt.FLOAT, !1, 0, 0)) : n.position >= 0 && (Lt.bindBuffer(Lt.ARRAY_BUFFER, t.__webglVertexBuffer),
        v(n.position),
        Lt.vertexAttribPointer(n.position, 3, Lt.FLOAT, !1, 0, 0)),
        i.morphTargetForcedOrder.length)
            for (var r = 0, o = i.morphTargetForcedOrder, a = i.morphTargetInfluences; r < e.numSupportedMorphTargets && r < o.length; )
                n["morphTarget" + r] >= 0 && (Lt.bindBuffer(Lt.ARRAY_BUFFER, t.__webglMorphTargetsBuffers[o[r]]),
                v(n["morphTarget" + r]),
                Lt.vertexAttribPointer(n["morphTarget" + r], 3, Lt.FLOAT, !1, 0, 0)),
                n["morphNormal" + r] >= 0 && e.morphNormals && (Lt.bindBuffer(Lt.ARRAY_BUFFER, t.__webglMorphNormalsBuffers[o[r]]),
                v(n["morphNormal" + r]),
                Lt.vertexAttribPointer(n["morphNormal" + r], 3, Lt.FLOAT, !1, 0, 0)),
                i.__webglMorphTargetInfluences[r] = a[o[r]],
                r++;
        else {
            var s, l, c = [], a = i.morphTargetInfluences, d = a.length;
            for (l = 0; d > l; l++)
                s = a[l],
                s > 0 && c.push([s, l]);
            c.length > e.numSupportedMorphTargets ? (c.sort(E),
            c.length = e.numSupportedMorphTargets) : c.length > e.numSupportedMorphNormals ? c.sort(E) : 0 === c.length && c.push([0, 0]);
            for (var h, r = 0; r < e.numSupportedMorphTargets; )
                c[r] ? (h = c[r][1],
                n["morphTarget" + r] >= 0 && (Lt.bindBuffer(Lt.ARRAY_BUFFER, t.__webglMorphTargetsBuffers[h]),
                v(n["morphTarget" + r]),
                Lt.vertexAttribPointer(n["morphTarget" + r], 3, Lt.FLOAT, !1, 0, 0)),
                n["morphNormal" + r] >= 0 && e.morphNormals && (Lt.bindBuffer(Lt.ARRAY_BUFFER, t.__webglMorphNormalsBuffers[h]),
                v(n["morphNormal" + r]),
                Lt.vertexAttribPointer(n["morphNormal" + r], 3, Lt.FLOAT, !1, 0, 0)),
                i.__webglMorphTargetInfluences[r] = a[h]) : i.__webglMorphTargetInfluences[r] = 0,
                r++
        }
        null !== e.program.uniforms.morphTargetInfluences && Lt.uniform1fv(e.program.uniforms.morphTargetInfluences, i.__webglMorphTargetInfluences)
    }
    function w(e, t) {
        return e.material.id !== t.material.id ? t.material.id - e.material.id : e.z !== t.z ? t.z - e.z : e.id - t.id
    }
    function x(e, t) {
        return e.z !== t.z ? e.z - t.z : e.id - t.id
    }
    function E(e, t) {
        return t[0] - e[0]
    }
    function _(e, t) {
        if (t.visible !== !1) {
            if (t instanceof THREE.Scene || t instanceof THREE.Group)
                ;
            else if (k(t, e),
            t instanceof THREE.Light)
                Mt.push(t);
            else if (t instanceof THREE.Sprite)
                Dt.push(t);
            else if (t instanceof THREE.LensFlare)
                $t.push(t);
            else {
                var i = At[t.id];
                if (i && (t.frustumCulled === !1 || hi.intersectsObject(t) === !0)) {
                    O(t, e);
                    for (var n = 0, r = i.length; r > n; n++) {
                        var o = i[n];
                        S(o),
                        o.render = !0,
                        It.sortObjects === !0 && (null !== t.renderDepth ? o.z = t.renderDepth : (fi.setFromMatrixPosition(t.matrixWorld),
                        fi.applyProjection(ui),
                        o.z = fi.z))
                    }
                }
            }
            for (var n = 0, r = t.children.length; r > n; n++)
                _(e, t.children[n])
        }
    }
    function T(e, t, i, n, r, o) {
        for (var a, s = e.length - 1; -1 !== s; s--) {
            var l = e[s]
              , c = l.object
              , d = l.buffer;
            if (Q(c, t),
            o)
                a = o;
            else {
                if (a = l.material,
                !a)
                    continue;r && It.setBlending(a.blending, a.blendEquation, a.blendSrc, a.blendDst),
                It.setDepthTest(a.depthTest),
                It.setDepthWrite(a.depthWrite),
                rt(a.polygonOffset, a.polygonOffsetFactor, a.polygonOffsetUnits)
            }
            It.setMaterialFaces(a),
            d instanceof THREE.BufferGeometry ? It.renderBufferDirect(t, i, n, a, d, c) : It.renderBuffer(t, i, n, a, d, c)
        }
    }
    function C(e, t, i, n, r, o, a) {
        for (var s, l = 0, c = e.length; c > l; l++) {
            var d = e[l]
              , h = d.object;
            if (h.visible) {
                if (a)
                    s = a;
                else {
                    if (s = d[t],
                    !s)
                        continue;o && It.setBlending(s.blending, s.blendEquation, s.blendSrc, s.blendDst),
                    It.setDepthTest(s.depthTest),
                    It.setDepthWrite(s.depthWrite),
                    rt(s.polygonOffset, s.polygonOffsetFactor, s.polygonOffsetUnits)
                }
                It.renderImmediateObject(i, n, r, s, h)
            }
        }
    }
    function R(e) {
        var t = e.object
          , i = t.material;
        i.transparent ? (e.transparent = i,
        e.opaque = null ) : (e.opaque = i,
        e.transparent = null )
    }
    function S(e) {
        var t = e.object
          , i = e.buffer
          , n = t.geometry
          , r = t.material;
        if (r instanceof THREE.MeshFaceMaterial) {
            var o = n instanceof THREE.BufferGeometry ? 0 : i.materialIndex;
            r = r.materials[o],
            e.material = r,
            r.transparent ? Ot.push(e) : Pt.push(e)
        } else
            r && (e.material = r,
            r.transparent ? Ot.push(e) : Pt.push(e))
    }
    function k(e, t) {
        void 0 === e.__webglInit && (e.__webglInit = !0,
        e._modelViewMatrix = new THREE.Matrix4,
        e._normalMatrix = new THREE.Matrix3,
        e.addEventListener("removed", Ii));
        var r = e.geometry;
        if (void 0 === r || void 0 === r.__webglInit && (r.__webglInit = !0,
        r.addEventListener("dispose", Fi),
        r instanceof THREE.BufferGeometry || (e instanceof THREE.Mesh ? A(t, e, r) : e instanceof THREE.Line ? void 0 === r.__webglVertexBuffer && (n(r),
        s(r, e),
        r.verticesNeedUpdate = !0,
        r.colorsNeedUpdate = !0,
        r.lineDistancesNeedUpdate = !0) : e instanceof THREE.PointCloud && void 0 === r.__webglVertexBuffer && (i(r),
        a(r, e),
        r.verticesNeedUpdate = !0,
        r.colorsNeedUpdate = !0))),
        void 0 === e.__webglActive)
            if (e.__webglActive = !0,
            e instanceof THREE.Mesh) {
                if (r instanceof THREE.BufferGeometry)
                    H(At, r, e);
                else if (r instanceof THREE.Geometry)
                    for (var o = qi[r.id], l = 0, c = o.length; c > l; l++)
                        H(At, o[l], e)
            } else
                e instanceof THREE.Line || e instanceof THREE.PointCloud ? H(At, r, e) : (e instanceof THREE.ImmediateRenderObject || e.immediateRenderCallback) && P(Ht, e)
    }
    function M(e, t) {
        for (var i, n, r = wi.get("OES_element_index_uint") ? 4294967296 : 65535, o = {}, a = e.morphTargets.length, s = e.morphNormals.length, l = {}, c = [], d = 0, h = e.faces.length; h > d; d++) {
            var u = e.faces[d]
              , p = t ? u.materialIndex : 0;
            p in o || (o[p] = {
                hash: p,
                counter: 0
            }),
            i = o[p].hash + "_" + o[p].counter,
            i in l || (n = {
                id: Xi++,
                faces3: [],
                materialIndex: p,
                vertices: 0,
                numMorphTargets: a,
                numMorphNormals: s
            },
            l[i] = n,
            c.push(n)),
            l[i].vertices + 3 > r && (o[p].counter += 1,
            i = o[p].hash + "_" + o[p].counter,
            i in l || (n = {
                id: Xi++,
                faces3: [],
                materialIndex: p,
                vertices: 0,
                numMorphTargets: a,
                numMorphNormals: s
            },
            l[i] = n,
            c.push(n))),
            l[i].faces3.push(d),
            l[i].vertices += 3
        }
        return c
    }
    function A(e, t, i) {
        var n = t.material
          , o = !1;
        (void 0 === qi[i.id] || i.groupsNeedUpdate === !0) && (delete At[t.id],
        qi[i.id] = M(i, n instanceof THREE.MeshFaceMaterial),
        i.groupsNeedUpdate = !1);
        for (var a = qi[i.id], s = 0, c = a.length; c > s; s++) {
            var d = a[s];
            void 0 === d.__webglVertexBuffer ? (r(d),
            l(d, t),
            i.verticesNeedUpdate = !0,
            i.morphTargetsNeedUpdate = !0,
            i.elementsNeedUpdate = !0,
            i.uvsNeedUpdate = !0,
            i.normalsNeedUpdate = !0,
            i.tangentsNeedUpdate = !0,
            i.colorsNeedUpdate = !0,
            o = !0) : o = !1,
            (o || void 0 === t.__webglActive) && H(At, d, t)
        }
        t.__webglActive = !0
    }
    function H(e, t, i) {
        var n = i.id;
        e[n] = e[n] || [],
        e[n].push({
            id: n,
            buffer: t,
            object: i,
            material: null ,
            z: 0
        })
    }
    function P(e, t) {
        e.push({
            id: null ,
            object: t,
            opaque: null ,
            transparent: null ,
            z: 0
        })
    }
    function O(e, t) {
        var i, n, r = e.geometry;
        if (r instanceof THREE.BufferGeometry)
            f(r);
        else if (e instanceof THREE.Mesh) {
            r.groupsNeedUpdate === !0 && A(t, e, r);
            for (var o = qi[r.id], a = 0, s = o.length; s > a; a++) {
                var d = o[a];
                n = c(e, d),
                r.groupsNeedUpdate === !0 && l(d, e),
                i = n.attributes && D(n),
                (r.verticesNeedUpdate || r.morphTargetsNeedUpdate || r.elementsNeedUpdate || r.uvsNeedUpdate || r.normalsNeedUpdate || r.colorsNeedUpdate || r.tangentsNeedUpdate || i) && p(d, e, Lt.DYNAMIC_DRAW, !r.dynamic, n)
            }
            r.verticesNeedUpdate = !1,
            r.morphTargetsNeedUpdate = !1,
            r.elementsNeedUpdate = !1,
            r.uvsNeedUpdate = !1,
            r.normalsNeedUpdate = !1,
            r.colorsNeedUpdate = !1,
            r.tangentsNeedUpdate = !1,
            n.attributes && $(n)
        } else
            e instanceof THREE.Line ? (n = c(e, r),
            i = n.attributes && D(n),
            (r.verticesNeedUpdate || r.colorsNeedUpdate || r.lineDistancesNeedUpdate || i) && u(r, Lt.DYNAMIC_DRAW),
            r.verticesNeedUpdate = !1,
            r.colorsNeedUpdate = !1,
            r.lineDistancesNeedUpdate = !1,
            n.attributes && $(n)) : e instanceof THREE.PointCloud && (n = c(e, r),
            i = n.attributes && D(n),
            (r.verticesNeedUpdate || r.colorsNeedUpdate || e.sortParticles || i) && h(r, Lt.DYNAMIC_DRAW, e),
            r.verticesNeedUpdate = !1,
            r.colorsNeedUpdate = !1,
            n.attributes && $(n))
    }
    function D(e) {
        for (var t in e.attributes)
            if (e.attributes[t].needsUpdate)
                return !0;
        return !1
    }
    function $(e) {
        for (var t in e.attributes)
            e.attributes[t].needsUpdate = !1
    }
    function L(e) {
        e instanceof THREE.Mesh || e instanceof THREE.PointCloud || e instanceof THREE.Line ? delete At[e.id] : (e instanceof THREE.ImmediateRenderObject || e.immediateRenderCallback) && I(Ht, e),
        delete e.__webglInit,
        delete e._modelViewMatrix,
        delete e._normalMatrix,
        delete e.__webglActive
    }
    function I(e, t) {
        for (var i = e.length - 1; i >= 0; i--)
            e[i].object === t && e.splice(i, 1)
    }
    function F(e, t, i, n) {
        e.addEventListener("dispose", Ni);
        var r;
        if (e instanceof THREE.MeshDepthMaterial ? r = "depth" : e instanceof THREE.MeshNormalMaterial ? r = "normal" : e instanceof THREE.MeshBasicMaterial ? r = "basic" : e instanceof THREE.MeshLambertMaterial ? r = "lambert" : e instanceof THREE.MeshPhongMaterial ? r = "phong" : e instanceof THREE.LineBasicMaterial ? r = "basic" : e instanceof THREE.LineDashedMaterial ? r = "dashed" : e instanceof THREE.PointCloudMaterial && (r = "particle_basic"),
        r) {
            var o = THREE.ShaderLib[r];
            e.__webglShader = {
                uniforms: THREE.UniformsUtils.clone(o.uniforms),
                vertexShader: o.vertexShader,
                fragmentShader: o.fragmentShader
            }
        } else
            e.__webglShader = {
                uniforms: e.uniforms,
                vertexShader: e.vertexShader,
                fragmentShader: e.fragmentShader
            };
        var a = gt(t)
          , s = mt(t)
          , l = ft(n)
          , c = {
            precision: bt,
            supportsVertexTextures: Ci,
            map: !!e.map,
            envMap: !!e.envMap,
            lightMap: !!e.lightMap,
            bumpMap: !!e.bumpMap,
            normalMap: !!e.normalMap,
            specularMap: !!e.specularMap,
            alphaMap: !!e.alphaMap,
            vertexColors: e.vertexColors,
            fog: i,
            useFog: e.fog,
            fogExp: i instanceof THREE.FogExp2,
            sizeAttenuation: e.sizeAttenuation,
            logarithmicDepthBuffer: Rt,
            skinning: e.skinning,
            maxBones: l,
            useVertexTexture: Ri && n && n.skeleton && n.skeleton.useVertexTexture,
            morphTargets: e.morphTargets,
            morphNormals: e.morphNormals,
            maxMorphTargets: It.maxMorphTargets,
            maxMorphNormals: It.maxMorphNormals,
            maxDirLights: a.directional,
            maxPointLights: a.point,
            maxSpotLights: a.spot,
            maxHemiLights: a.hemi,
            maxShadows: s,
            shadowMapEnabled: It.shadowMapEnabled && n.receiveShadow && s > 0,
            shadowMapType: It.shadowMapType,
            shadowMapDebug: It.shadowMapDebug,
            shadowMapCascade: It.shadowMapCascade,
            alphaTest: e.alphaTest,
            metal: e.metal,
            wrapAround: e.wrapAround,
            doubleSided: e.side === THREE.DoubleSide,
            flipSided: e.side === THREE.BackSide
        }
          , d = [];
        if (r ? d.push(r) : (d.push(e.fragmentShader),
        d.push(e.vertexShader)),
        void 0 !== e.defines)
            for (var h in e.defines)
                d.push(h),
                d.push(e.defines[h]);
        for (var h in c)
            d.push(h),
            d.push(c[h]);
        for (var u, p = d.join(), f = 0, g = Ft.length; g > f; f++) {
            var m = Ft[f];
            if (m.code === p) {
                u = m,
                u.usedTimes++;
                break
            }
        }
        void 0 === u && (u = new THREE.WebGLProgram(It,p,e,c),
        Ft.push(u),
        It.info.memory.programs = Ft.length),
        e.program = u;
        var v = u.attributes;
        if (e.morphTargets) {
            e.numSupportedMorphTargets = 0;
            for (var y, b = "morphTarget", w = 0; w < It.maxMorphTargets; w++)
                y = b + w,
                v[y] >= 0 && e.numSupportedMorphTargets++
        }
        if (e.morphNormals) {
            e.numSupportedMorphNormals = 0;
            var y, b = "morphNormal";
            for (w = 0; w < It.maxMorphNormals; w++)
                y = b + w,
                v[y] >= 0 && e.numSupportedMorphNormals++
        }
        e.uniformsList = [];
        for (var x in e.__webglShader.uniforms) {
            var E = e.program.uniforms[x];
            E && e.uniformsList.push([e.__webglShader.uniforms[x], E])
        }
    }
    function B(e, t, i, n, r) {
        Vt = 0,
        n.needsUpdate && (n.program && Gi(n),
        F(n, t, i, r),
        n.needsUpdate = !1),
        n.morphTargets && (r.__webglMorphTargetInfluences || (r.__webglMorphTargetInfluences = new Float32Array(It.maxMorphTargets)));
        var o = !1
          , a = !1
          , s = !1
          , l = n.program
          , c = l.uniforms
          , d = n.__webglShader.uniforms;
        if (l.id !== Bt && (Lt.useProgram(l.program),
        Bt = l.id,
        o = !0,
        a = !0,
        s = !0),
        n.id !== Nt && (-1 === Nt && (s = !0),
        Nt = n.id,
        a = !0),
        (o || e !== Ut) && (Lt.uniformMatrix4fv(c.projectionMatrix, !1, e.projectionMatrix.elements),
        Rt && Lt.uniform1f(c.logDepthBufFC, 2 / (Math.log(e.far + 1) / Math.LN2)),
        e !== Ut && (Ut = e),
        (n instanceof THREE.ShaderMaterial || n instanceof THREE.MeshPhongMaterial || n.envMap) && null !== c.cameraPosition && (fi.setFromMatrixPosition(e.matrixWorld),
        Lt.uniform3f(c.cameraPosition, fi.x, fi.y, fi.z)),
        (n instanceof THREE.MeshPhongMaterial || n instanceof THREE.MeshLambertMaterial || n instanceof THREE.ShaderMaterial || n.skinning) && null !== c.viewMatrix && Lt.uniformMatrix4fv(c.viewMatrix, !1, e.matrixWorldInverse.elements)),
        n.skinning)
            if (r.bindMatrix && null !== c.bindMatrix && Lt.uniformMatrix4fv(c.bindMatrix, !1, r.bindMatrix.elements),
            r.bindMatrixInverse && null !== c.bindMatrixInverse && Lt.uniformMatrix4fv(c.bindMatrixInverse, !1, r.bindMatrixInverse.elements),
            Ri && r.skeleton && r.skeleton.useVertexTexture) {
                if (null !== c.boneTexture) {
                    var h = K();
                    Lt.uniform1i(c.boneTexture, h),
                    It.setTexture(r.skeleton.boneTexture, h)
                }
                null !== c.boneTextureWidth && Lt.uniform1i(c.boneTextureWidth, r.skeleton.boneTextureWidth),
                null !== c.boneTextureHeight && Lt.uniform1i(c.boneTextureHeight, r.skeleton.boneTextureHeight)
            } else
                r.skeleton && r.skeleton.boneMatrices && null !== c.boneGlobalMatrices && Lt.uniformMatrix4fv(c.boneGlobalMatrices, !1, r.skeleton.boneMatrices);
        return a && (i && n.fog && V(d, i),
        (n instanceof THREE.MeshPhongMaterial || n instanceof THREE.MeshLambertMaterial || n.lights) && (mi && (s = !0,
        it(t),
        mi = !1),
        s ? (q(d, vi),
        X(d, !0)) : X(d, !1)),
        (n instanceof THREE.MeshBasicMaterial || n instanceof THREE.MeshLambertMaterial || n instanceof THREE.MeshPhongMaterial) && j(d, n),
        n instanceof THREE.LineBasicMaterial ? N(d, n) : n instanceof THREE.LineDashedMaterial ? (N(d, n),
        z(d, n)) : n instanceof THREE.PointCloudMaterial ? U(d, n) : n instanceof THREE.MeshPhongMaterial ? W(d, n) : n instanceof THREE.MeshLambertMaterial ? G(d, n) : n instanceof THREE.MeshDepthMaterial ? (d.mNear.value = e.near,
        d.mFar.value = e.far,
        d.opacity.value = n.opacity) : n instanceof THREE.MeshNormalMaterial && (d.opacity.value = n.opacity),
        r.receiveShadow && !n._shadowPass && Y(d, t),
        Z(n.uniformsList)),
        J(c, r),
        null !== c.modelMatrix && Lt.uniformMatrix4fv(c.modelMatrix, !1, r.matrixWorld.elements),
        l
    }
    function j(e, t) {
        e.opacity.value = t.opacity,
        It.gammaInput ? e.diffuse.value.copyGammaToLinear(t.color) : e.diffuse.value = t.color,
        e.map.value = t.map,
        e.lightMap.value = t.lightMap,
        e.specularMap.value = t.specularMap,
        e.alphaMap.value = t.alphaMap,
        t.bumpMap && (e.bumpMap.value = t.bumpMap,
        e.bumpScale.value = t.bumpScale),
        t.normalMap && (e.normalMap.value = t.normalMap,
        e.normalScale.value.copy(t.normalScale));
        var i;
        if (t.map ? i = t.map : t.specularMap ? i = t.specularMap : t.normalMap ? i = t.normalMap : t.bumpMap ? i = t.bumpMap : t.alphaMap && (i = t.alphaMap),
        void 0 !== i) {
            var n = i.offset
              , r = i.repeat;
            e.offsetRepeat.value.set(n.x, n.y, r.x, r.y)
        }
        e.envMap.value = t.envMap,
        e.flipEnvMap.value = t.envMap instanceof THREE.WebGLRenderTargetCube ? 1 : -1,
        e.reflectivity.value = It.gammaInput ? t.reflectivity : t.reflectivity,
        e.refractionRatio.value = t.refractionRatio,
        e.combine.value = t.combine,
        e.useRefract.value = t.envMap && t.envMap.mapping instanceof THREE.CubeRefractionMapping
    }
    function N(e, t) {
        e.diffuse.value = t.color,
        e.opacity.value = t.opacity
    }
    function z(e, t) {
        e.dashSize.value = t.dashSize,
        e.totalSize.value = t.dashSize + t.gapSize,
        e.scale.value = t.scale
    }
    function U(e, t) {
        e.psColor.value = t.color,
        e.opacity.value = t.opacity,
        e.size.value = t.size,
        e.scale.value = vt.height / 2,
        e.map.value = t.map
    }
    function V(e, t) {
        e.fogColor.value = t.color,
        t instanceof THREE.Fog ? (e.fogNear.value = t.near,
        e.fogFar.value = t.far) : t instanceof THREE.FogExp2 && (e.fogDensity.value = t.density)
    }
    function W(e, t) {
        e.shininess.value = t.shininess,
        It.gammaInput ? (e.ambient.value.copyGammaToLinear(t.ambient),
        e.emissive.value.copyGammaToLinear(t.emissive),
        e.specular.value.copyGammaToLinear(t.specular)) : (e.ambient.value = t.ambient,
        e.emissive.value = t.emissive,
        e.specular.value = t.specular),
        t.wrapAround && e.wrapRGB.value.copy(t.wrapRGB)
    }
    function G(e, t) {
        It.gammaInput ? (e.ambient.value.copyGammaToLinear(t.ambient),
        e.emissive.value.copyGammaToLinear(t.emissive)) : (e.ambient.value = t.ambient,
        e.emissive.value = t.emissive),
        t.wrapAround && e.wrapRGB.value.copy(t.wrapRGB)
    }
    function q(e, t) {
        e.ambientLightColor.value = t.ambient,
        e.directionalLightColor.value = t.directional.colors,
        e.directionalLightDirection.value = t.directional.positions,
        e.pointLightColor.value = t.point.colors,
        e.pointLightPosition.value = t.point.positions,
        e.pointLightDistance.value = t.point.distances,
        e.spotLightColor.value = t.spot.colors,
        e.spotLightPosition.value = t.spot.positions,
        e.spotLightDistance.value = t.spot.distances,
        e.spotLightDirection.value = t.spot.directions,
        e.spotLightAngleCos.value = t.spot.anglesCos,
        e.spotLightExponent.value = t.spot.exponents,
        e.hemisphereLightSkyColor.value = t.hemi.skyColors,
        e.hemisphereLightGroundColor.value = t.hemi.groundColors,
        e.hemisphereLightDirection.value = t.hemi.positions
    }
    function X(e, t) {
        e.ambientLightColor.needsUpdate = t,
        e.directionalLightColor.needsUpdate = t,
        e.directionalLightDirection.needsUpdate = t,
        e.pointLightColor.needsUpdate = t,
        e.pointLightPosition.needsUpdate = t,
        e.pointLightDistance.needsUpdate = t,
        e.spotLightColor.needsUpdate = t,
        e.spotLightPosition.needsUpdate = t,
        e.spotLightDistance.needsUpdate = t,
        e.spotLightDirection.needsUpdate = t,
        e.spotLightAngleCos.needsUpdate = t,
        e.spotLightExponent.needsUpdate = t,
        e.hemisphereLightSkyColor.needsUpdate = t,
        e.hemisphereLightGroundColor.needsUpdate = t,
        e.hemisphereLightDirection.needsUpdate = t
    }
    function Y(e, t) {
        if (e.shadowMatrix)
            for (var i = 0, n = 0, r = t.length; r > n; n++) {
                var o = t[n];
                o.castShadow && (o instanceof THREE.SpotLight || o instanceof THREE.DirectionalLight && !o.shadowCascade) && (e.shadowMap.value[i] = o.shadowMap,
                e.shadowMapSize.value[i] = o.shadowMapSize,
                e.shadowMatrix.value[i] = o.shadowMatrix,
                e.shadowDarkness.value[i] = o.shadowDarkness,
                e.shadowBias.value[i] = o.shadowBias,
                i++)
            }
    }
    function J(e, t) {
        Lt.uniformMatrix4fv(e.modelViewMatrix, !1, t._modelViewMatrix.elements),
        e.normalMatrix && Lt.uniformMatrix3fv(e.normalMatrix, !1, t._normalMatrix.elements)
    }
    function K() {
        var e = Vt;
        return e >= xi && console.warn("WebGLRenderer: trying to use " + e + " texture units while this GPU supports only " + xi),
        Vt += 1,
        e
    }
    function Z(e) {
        for (var t, i, n, r = 0, o = e.length; o > r; r++) {
            var a = e[r][0];
            if (a.needsUpdate !== !1) {
                var s = a.type
                  , l = a.value
                  , c = e[r][1];
                switch (s) {
                case "1i":
                    Lt.uniform1i(c, l);
                    break;
                case "1f":
                    Lt.uniform1f(c, l);
                    break;
                case "2f":
                    Lt.uniform2f(c, l[0], l[1]);
                    break;
                case "3f":
                    Lt.uniform3f(c, l[0], l[1], l[2]);
                    break;
                case "4f":
                    Lt.uniform4f(c, l[0], l[1], l[2], l[3]);
                    break;
                case "1iv":
                    Lt.uniform1iv(c, l);
                    break;
                case "3iv":
                    Lt.uniform3iv(c, l);
                    break;
                case "1fv":
                    Lt.uniform1fv(c, l);
                    break;
                case "2fv":
                    Lt.uniform2fv(c, l);
                    break;
                case "3fv":
                    Lt.uniform3fv(c, l);
                    break;
                case "4fv":
                    Lt.uniform4fv(c, l);
                    break;
                case "Matrix3fv":
                    Lt.uniformMatrix3fv(c, !1, l);
                    break;
                case "Matrix4fv":
                    Lt.uniformMatrix4fv(c, !1, l);
                    break;
                case "i":
                    Lt.uniform1i(c, l);
                    break;
                case "f":
                    Lt.uniform1f(c, l);
                    break;
                case "v2":
                    Lt.uniform2f(c, l.x, l.y);
                    break;
                case "v3":
                    Lt.uniform3f(c, l.x, l.y, l.z);
                    break;
                case "v4":
                    Lt.uniform4f(c, l.x, l.y, l.z, l.w);
                    break;
                case "c":
                    Lt.uniform3f(c, l.r, l.g, l.b);
                    break;
                case "iv1":
                    Lt.uniform1iv(c, l);
                    break;
                case "iv":
                    Lt.uniform3iv(c, l);
                    break;
                case "fv1":
                    Lt.uniform1fv(c, l);
                    break;
                case "fv":
                    Lt.uniform3fv(c, l);
                    break;
                case "v2v":
                    void 0 === a._array && (a._array = new Float32Array(2 * l.length));
                    for (var d = 0, h = l.length; h > d; d++)
                        n = 2 * d,
                        a._array[n] = l[d].x,
                        a._array[n + 1] = l[d].y;
                    Lt.uniform2fv(c, a._array);
                    break;
                case "v3v":
                    void 0 === a._array && (a._array = new Float32Array(3 * l.length));
                    for (var d = 0, h = l.length; h > d; d++)
                        n = 3 * d,
                        a._array[n] = l[d].x,
                        a._array[n + 1] = l[d].y,
                        a._array[n + 2] = l[d].z;
                    Lt.uniform3fv(c, a._array);
                    break;
                case "v4v":
                    void 0 === a._array && (a._array = new Float32Array(4 * l.length));
                    for (var d = 0, h = l.length; h > d; d++)
                        n = 4 * d,
                        a._array[n] = l[d].x,
                        a._array[n + 1] = l[d].y,
                        a._array[n + 2] = l[d].z,
                        a._array[n + 3] = l[d].w;
                    Lt.uniform4fv(c, a._array);
                    break;
                case "m3":
                    Lt.uniformMatrix3fv(c, !1, l.elements);
                    break;
                case "m3v":
                    void 0 === a._array && (a._array = new Float32Array(9 * l.length));
                    for (var d = 0, h = l.length; h > d; d++)
                        l[d].flattenToArrayOffset(a._array, 9 * d);
                    Lt.uniformMatrix3fv(c, !1, a._array);
                    break;
                case "m4":
                    Lt.uniformMatrix4fv(c, !1, l.elements);
                    break;
                case "m4v":
                    void 0 === a._array && (a._array = new Float32Array(16 * l.length));
                    for (var d = 0, h = l.length; h > d; d++)
                        l[d].flattenToArrayOffset(a._array, 16 * d);
                    Lt.uniformMatrix4fv(c, !1, a._array);
                    break;
                case "t":
                    if (t = l,
                    i = K(),
                    Lt.uniform1i(c, i),
                    !t)
                        continue;t instanceof THREE.CubeTexture || t.image instanceof Array && 6 === t.image.length ? st(t, i) : t instanceof THREE.WebGLRenderTargetCube ? lt(t, i) : It.setTexture(t, i);
                    break;
                case "tv":
                    void 0 === a._array && (a._array = []);
                    for (var d = 0, h = a.value.length; h > d; d++)
                        a._array[d] = K();
                    Lt.uniform1iv(c, a._array);
                    for (var d = 0, h = a.value.length; h > d; d++)
                        t = a.value[d],
                        i = a._array[d],
                        t && It.setTexture(t, i);
                    break;
                default:
                    console.warn("THREE.WebGLRenderer: Unknown uniform type: " + s)
                }
            }
        }
    }
    function Q(e, t) {
        e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse, e.matrixWorld),
        e._normalMatrix.getNormalMatrix(e._modelViewMatrix)
    }
    function et(e, t, i, n) {
        e[t] = i.r * i.r * n,
        e[t + 1] = i.g * i.g * n,
        e[t + 2] = i.b * i.b * n
    }
    function tt(e, t, i, n) {
        e[t] = i.r * n,
        e[t + 1] = i.g * n,
        e[t + 2] = i.b * n
    }
    function it(e) {
        var t, i, n, r, o, a, s, l, c, d = 0, h = 0, u = 0, p = vi, f = p.directional.colors, g = p.directional.positions, m = p.point.colors, v = p.point.positions, y = p.point.distances, b = p.spot.colors, w = p.spot.positions, x = p.spot.distances, E = p.spot.directions, _ = p.spot.anglesCos, T = p.spot.exponents, C = p.hemi.skyColors, R = p.hemi.groundColors, S = p.hemi.positions, k = 0, M = 0, A = 0, H = 0, P = 0, O = 0, D = 0, $ = 0, L = 0, I = 0, F = 0, B = 0;
        for (t = 0,
        i = e.length; i > t; t++)
            if (n = e[t],
            !n.onlyShadow)
                if (r = n.color,
                s = n.intensity,
                c = n.distance,
                n instanceof THREE.AmbientLight) {
                    if (!n.visible)
                        continue;It.gammaInput ? (d += r.r * r.r,
                    h += r.g * r.g,
                    u += r.b * r.b) : (d += r.r,
                    h += r.g,
                    u += r.b)
                } else if (n instanceof THREE.DirectionalLight) {
                    if (P += 1,
                    !n.visible)
                        continue;gi.setFromMatrixPosition(n.matrixWorld),
                    fi.setFromMatrixPosition(n.target.matrixWorld),
                    gi.sub(fi),
                    gi.normalize(),
                    L = 3 * k,
                    g[L] = gi.x,
                    g[L + 1] = gi.y,
                    g[L + 2] = gi.z,
                    It.gammaInput ? et(f, L, r, s * s) : tt(f, L, r, s),
                    k += 1
                } else if (n instanceof THREE.PointLight) {
                    if (O += 1,
                    !n.visible)
                        continue;I = 3 * M,
                    It.gammaInput ? et(m, I, r, s * s) : tt(m, I, r, s),
                    fi.setFromMatrixPosition(n.matrixWorld),
                    v[I] = fi.x,
                    v[I + 1] = fi.y,
                    v[I + 2] = fi.z,
                    y[M] = c,
                    M += 1
                } else if (n instanceof THREE.SpotLight) {
                    if (D += 1,
                    !n.visible)
                        continue;F = 3 * A,
                    It.gammaInput ? et(b, F, r, s * s) : tt(b, F, r, s),
                    gi.setFromMatrixPosition(n.matrixWorld),
                    w[F] = gi.x,
                    w[F + 1] = gi.y,
                    w[F + 2] = gi.z,
                    x[A] = c,
                    fi.setFromMatrixPosition(n.target.matrixWorld),
                    gi.sub(fi),
                    gi.normalize(),
                    E[F] = gi.x,
                    E[F + 1] = gi.y,
                    E[F + 2] = gi.z,
                    _[A] = Math.cos(n.angle),
                    T[A] = n.exponent,
                    A += 1
                } else if (n instanceof THREE.HemisphereLight) {
                    if ($ += 1,
                    !n.visible)
                        continue;gi.setFromMatrixPosition(n.matrixWorld),
                    gi.normalize(),
                    B = 3 * H,
                    S[B] = gi.x,
                    S[B + 1] = gi.y,
                    S[B + 2] = gi.z,
                    o = n.color,
                    a = n.groundColor,
                    It.gammaInput ? (l = s * s,
                    et(C, B, o, l),
                    et(R, B, a, l)) : (tt(C, B, o, s),
                    tt(R, B, a, s)),
                    H += 1
                }
        for (t = 3 * k,
        i = Math.max(f.length, 3 * P); i > t; t++)
            f[t] = 0;
        for (t = 3 * M,
        i = Math.max(m.length, 3 * O); i > t; t++)
            m[t] = 0;
        for (t = 3 * A,
        i = Math.max(b.length, 3 * D); i > t; t++)
            b[t] = 0;
        for (t = 3 * H,
        i = Math.max(C.length, 3 * $); i > t; t++)
            C[t] = 0;
        for (t = 3 * H,
        i = Math.max(R.length, 3 * $); i > t; t++)
            R[t] = 0;
        p.directional.length = k,
        p.point.length = M,
        p.spot.length = A,
        p.hemi.length = H,
        p.ambient[0] = d,
        p.ambient[1] = h,
        p.ambient[2] = u
    }
    function nt(e) {
        e !== ii && (Lt.lineWidth(e),
        ii = e)
    }
    function rt(e, t, i) {
        Qt !== e && (e ? Lt.enable(Lt.POLYGON_OFFSET_FILL) : Lt.disable(Lt.POLYGON_OFFSET_FILL),
        Qt = e),
        !e || ei === t && ti === i || (Lt.polygonOffset(t, i),
        ei = t,
        ti = i)
    }
    function ot(e, t, i) {
        var n;
        i ? (Lt.texParameteri(e, Lt.TEXTURE_WRAP_S, pt(t.wrapS)),
        Lt.texParameteri(e, Lt.TEXTURE_WRAP_T, pt(t.wrapT)),
        Lt.texParameteri(e, Lt.TEXTURE_MAG_FILTER, pt(t.magFilter)),
        Lt.texParameteri(e, Lt.TEXTURE_MIN_FILTER, pt(t.minFilter))) : (Lt.texParameteri(e, Lt.TEXTURE_WRAP_S, Lt.CLAMP_TO_EDGE),
        Lt.texParameteri(e, Lt.TEXTURE_WRAP_T, Lt.CLAMP_TO_EDGE),
        Lt.texParameteri(e, Lt.TEXTURE_MAG_FILTER, ut(t.magFilter)),
        Lt.texParameteri(e, Lt.TEXTURE_MIN_FILTER, ut(t.minFilter))),
        n = wi.get("EXT_texture_filter_anisotropic"),
        n && t.type !== THREE.FloatType && (t.anisotropy > 1 || t.__oldAnisotropy) && (Lt.texParameterf(e, n.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(t.anisotropy, It.getMaxAnisotropy())),
        t.__oldAnisotropy = t.anisotropy)
    }
    function at(e, t) {
        if (e.width > t || e.height > t) {
            var i = t / Math.max(e.width, e.height)
              , n = document.createElement("canvas");
            n.width = Math.floor(e.width * i),
            n.height = Math.floor(e.height * i);
            var r = n.getContext("2d");
            return r.drawImage(e, 0, 0, e.width, e.height, 0, 0, n.width, n.height),
            console.log("THREE.WebGLRenderer:", e, "is too big (" + e.width + "x" + e.height + "). Resized to " + n.width + "x" + n.height + "."),
            n
        }
        return e
    }
    function st(e, t) {
        if (6 === e.image.length)
            if (e.needsUpdate) {
                e.image.__webglTextureCube || (e.addEventListener("dispose", Bi),
                e.image.__webglTextureCube = Lt.createTexture(),
                It.info.memory.textures++),
                Lt.activeTexture(Lt.TEXTURE0 + t),
                Lt.bindTexture(Lt.TEXTURE_CUBE_MAP, e.image.__webglTextureCube),
                Lt.pixelStorei(Lt.UNPACK_FLIP_Y_WEBGL, e.flipY);
                for (var i = e instanceof THREE.CompressedTexture, n = e.image[0]instanceof THREE.DataTexture, r = [], o = 0; 6 > o; o++)
                    r[o] = !It.autoScaleCubemaps || i || n ? n ? e.image[o].image : e.image[o] : at(e.image[o], Ti);
                var a = r[0]
                  , s = THREE.Math.isPowerOfTwo(a.width) && THREE.Math.isPowerOfTwo(a.height)
                  , l = pt(e.format)
                  , c = pt(e.type);
                ot(Lt.TEXTURE_CUBE_MAP, e, s);
                for (var o = 0; 6 > o; o++)
                    if (i)
                        for (var d, h = r[o].mipmaps, u = 0, p = h.length; p > u; u++)
                            d = h[u],
                            e.format !== THREE.RGBAFormat && e.format !== THREE.RGBFormat ? Hi().indexOf(l) > -1 ? Lt.compressedTexImage2D(Lt.TEXTURE_CUBE_MAP_POSITIVE_X + o, u, l, d.width, d.height, 0, d.data) : console.warn("Attempt to load unsupported compressed texture format") : Lt.texImage2D(Lt.TEXTURE_CUBE_MAP_POSITIVE_X + o, u, l, d.width, d.height, 0, l, c, d.data);
                    else
                        n ? Lt.texImage2D(Lt.TEXTURE_CUBE_MAP_POSITIVE_X + o, 0, l, r[o].width, r[o].height, 0, l, c, r[o].data) : Lt.texImage2D(Lt.TEXTURE_CUBE_MAP_POSITIVE_X + o, 0, l, l, c, r[o]);
                e.generateMipmaps && s && Lt.generateMipmap(Lt.TEXTURE_CUBE_MAP),
                e.needsUpdate = !1,
                e.onUpdate && e.onUpdate()
            } else
                Lt.activeTexture(Lt.TEXTURE0 + t),
                Lt.bindTexture(Lt.TEXTURE_CUBE_MAP, e.image.__webglTextureCube)
    }
    function lt(e, t) {
        Lt.activeTexture(Lt.TEXTURE0 + t),
        Lt.bindTexture(Lt.TEXTURE_CUBE_MAP, e.__webglTexture)
    }
    function ct(e, t, i) {
        Lt.bindFramebuffer(Lt.FRAMEBUFFER, e),
        Lt.framebufferTexture2D(Lt.FRAMEBUFFER, Lt.COLOR_ATTACHMENT0, i, t.__webglTexture, 0)
    }
    function dt(e, t) {
        Lt.bindRenderbuffer(Lt.RENDERBUFFER, e),
        t.depthBuffer && !t.stencilBuffer ? (Lt.renderbufferStorage(Lt.RENDERBUFFER, Lt.DEPTH_COMPONENT16, t.width, t.height),
        Lt.framebufferRenderbuffer(Lt.FRAMEBUFFER, Lt.DEPTH_ATTACHMENT, Lt.RENDERBUFFER, e)) : t.depthBuffer && t.stencilBuffer ? (Lt.renderbufferStorage(Lt.RENDERBUFFER, Lt.DEPTH_STENCIL, t.width, t.height),
        Lt.framebufferRenderbuffer(Lt.FRAMEBUFFER, Lt.DEPTH_STENCIL_ATTACHMENT, Lt.RENDERBUFFER, e)) : Lt.renderbufferStorage(Lt.RENDERBUFFER, Lt.RGBA4, t.width, t.height)
    }
    function ht(e) {
        e instanceof THREE.WebGLRenderTargetCube ? (Lt.bindTexture(Lt.TEXTURE_CUBE_MAP, e.__webglTexture),
        Lt.generateMipmap(Lt.TEXTURE_CUBE_MAP),
        Lt.bindTexture(Lt.TEXTURE_CUBE_MAP, null )) : (Lt.bindTexture(Lt.TEXTURE_2D, e.__webglTexture),
        Lt.generateMipmap(Lt.TEXTURE_2D),
        Lt.bindTexture(Lt.TEXTURE_2D, null ))
    }
    function ut(e) {
        return e === THREE.NearestFilter || e === THREE.NearestMipMapNearestFilter || e === THREE.NearestMipMapLinearFilter ? Lt.NEAREST : Lt.LINEAR
    }
    function pt(e) {
        var t;
        if (e === THREE.RepeatWrapping)
            return Lt.REPEAT;
        if (e === THREE.ClampToEdgeWrapping)
            return Lt.CLAMP_TO_EDGE;
        if (e === THREE.MirroredRepeatWrapping)
            return Lt.MIRRORED_REPEAT;
        if (e === THREE.NearestFilter)
            return Lt.NEAREST;
        if (e === THREE.NearestMipMapNearestFilter)
            return Lt.NEAREST_MIPMAP_NEAREST;
        if (e === THREE.NearestMipMapLinearFilter)
            return Lt.NEAREST_MIPMAP_LINEAR;
        if (e === THREE.LinearFilter)
            return Lt.LINEAR;
        if (e === THREE.LinearMipMapNearestFilter)
            return Lt.LINEAR_MIPMAP_NEAREST;
        if (e === THREE.LinearMipMapLinearFilter)
            return Lt.LINEAR_MIPMAP_LINEAR;
        if (e === THREE.UnsignedByteType)
            return Lt.UNSIGNED_BYTE;
        if (e === THREE.UnsignedShort4444Type)
            return Lt.UNSIGNED_SHORT_4_4_4_4;
        if (e === THREE.UnsignedShort5551Type)
            return Lt.UNSIGNED_SHORT_5_5_5_1;
        if (e === THREE.UnsignedShort565Type)
            return Lt.UNSIGNED_SHORT_5_6_5;
        if (e === THREE.ByteType)
            return Lt.BYTE;
        if (e === THREE.ShortType)
            return Lt.SHORT;
        if (e === THREE.UnsignedShortType)
            return Lt.UNSIGNED_SHORT;
        if (e === THREE.IntType)
            return Lt.INT;
        if (e === THREE.UnsignedIntType)
            return Lt.UNSIGNED_INT;
        if (e === THREE.FloatType)
            return Lt.FLOAT;
        if (e === THREE.AlphaFormat)
            return Lt.ALPHA;
        if (e === THREE.RGBFormat)
            return Lt.RGB;
        if (e === THREE.RGBAFormat)
            return Lt.RGBA;
        if (e === THREE.LuminanceFormat)
            return Lt.LUMINANCE;
        if (e === THREE.LuminanceAlphaFormat)
            return Lt.LUMINANCE_ALPHA;
        if (e === THREE.AddEquation)
            return Lt.FUNC_ADD;
        if (e === THREE.SubtractEquation)
            return Lt.FUNC_SUBTRACT;
        if (e === THREE.ReverseSubtractEquation)
            return Lt.FUNC_REVERSE_SUBTRACT;
        if (e === THREE.ZeroFactor)
            return Lt.ZERO;
        if (e === THREE.OneFactor)
            return Lt.ONE;
        if (e === THREE.SrcColorFactor)
            return Lt.SRC_COLOR;
        if (e === THREE.OneMinusSrcColorFactor)
            return Lt.ONE_MINUS_SRC_COLOR;
        if (e === THREE.SrcAlphaFactor)
            return Lt.SRC_ALPHA;
        if (e === THREE.OneMinusSrcAlphaFactor)
            return Lt.ONE_MINUS_SRC_ALPHA;
        if (e === THREE.DstAlphaFactor)
            return Lt.DST_ALPHA;
        if (e === THREE.OneMinusDstAlphaFactor)
            return Lt.ONE_MINUS_DST_ALPHA;
        if (e === THREE.DstColorFactor)
            return Lt.DST_COLOR;
        if (e === THREE.OneMinusDstColorFactor)
            return Lt.ONE_MINUS_DST_COLOR;
        if (e === THREE.SrcAlphaSaturateFactor)
            return Lt.SRC_ALPHA_SATURATE;
        if (t = wi.get("WEBGL_compressed_texture_s3tc"),
        null !== t) {
            if (e === THREE.RGB_S3TC_DXT1_Format)
                return t.COMPRESSED_RGB_S3TC_DXT1_EXT;
            if (e === THREE.RGBA_S3TC_DXT1_Format)
                return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            if (e === THREE.RGBA_S3TC_DXT3_Format)
                return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;
            if (e === THREE.RGBA_S3TC_DXT5_Format)
                return t.COMPRESSED_RGBA_S3TC_DXT5_EXT
        }
        if (t = wi.get("WEBGL_compressed_texture_pvrtc"),
        null !== t) {
            if (e === THREE.RGB_PVRTC_4BPPV1_Format)
                return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
            if (e === THREE.RGB_PVRTC_2BPPV1_Format)
                return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
            if (e === THREE.RGBA_PVRTC_4BPPV1_Format)
                return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
            if (e === THREE.RGBA_PVRTC_2BPPV1_Format)
                return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
        }
        if (t = wi.get("EXT_blend_minmax"),
        null !== t) {
            if (e === THREE.MinEquation)
                return t.MIN_EXT;
            if (e === THREE.MaxEquation)
                return t.MAX_EXT
        }
        return 0
    }
    function ft(e) {
        if (Ri && e && e.skeleton && e.skeleton.useVertexTexture)
            return 1024;
        var t = Lt.getParameter(Lt.MAX_VERTEX_UNIFORM_VECTORS)
          , i = Math.floor((t - 20) / 4)
          , n = i;
        return void 0 !== e && e instanceof THREE.SkinnedMesh && (n = Math.min(e.skeleton.bones.length, n),
        n < e.skeleton.bones.length && console.warn("WebGLRenderer: too many bones - " + e.skeleton.bones.length + ", this GPU supports just " + n + " (try OpenGL instead of ANGLE)")),
        n
    }
    function gt(e) {
        for (var t = 0, i = 0, n = 0, r = 0, o = 0, a = e.length; a > o; o++) {
            var s = e[o];
            s.onlyShadow || s.visible === !1 || (s instanceof THREE.DirectionalLight && t++,
            s instanceof THREE.PointLight && i++,
            s instanceof THREE.SpotLight && n++,
            s instanceof THREE.HemisphereLight && r++)
        }
        return {
            directional: t,
            point: i,
            spot: n,
            hemi: r
        }
    }
    function mt(e) {
        for (var t = 0, i = 0, n = e.length; n > i; i++) {
            var r = e[i];
            r.castShadow && (r instanceof THREE.SpotLight && t++,
            r instanceof THREE.DirectionalLight && !r.shadowCascade && t++)
        }
        return t
    }
    console.log("THREE.WebGLRenderer", THREE.REVISION),
    e = e || {};
    var vt = void 0 !== e.canvas ? e.canvas : document.createElement("canvas")
      , yt = void 0 !== e.context ? e.context : null
      , bt = void 0 !== e.precision ? e.precision : "highp"
      , wt = void 0 !== e.alpha ? e.alpha : !1
      , xt = void 0 !== e.depth ? e.depth : !0
      , Et = void 0 !== e.stencil ? e.stencil : !0
      , _t = void 0 !== e.antialias ? e.antialias : !1
      , Tt = void 0 !== e.premultipliedAlpha ? e.premultipliedAlpha : !0
      , Ct = void 0 !== e.preserveDrawingBuffer ? e.preserveDrawingBuffer : !1
      , Rt = void 0 !== e.logarithmicDepthBuffer ? e.logarithmicDepthBuffer : !1
      , St = new THREE.Color(0)
      , kt = 0
      , Mt = []
      , At = {}
      , Ht = []
      , Pt = []
      , Ot = []
      , Dt = []
      , $t = [];
    this.domElement = vt,
    this.context = null ,
    this.devicePixelRatio = void 0 !== e.devicePixelRatio ? e.devicePixelRatio : void 0 !== self.devicePixelRatio ? self.devicePixelRatio : 1,
    this.autoClear = !0,
    this.autoClearColor = !0,
    this.autoClearDepth = !0,
    this.autoClearStencil = !0,
    this.sortObjects = !0,
    this.gammaInput = !1,
    this.gammaOutput = !1,
    this.shadowMapEnabled = !1,
    this.shadowMapType = THREE.PCFShadowMap,
    this.shadowMapCullFace = THREE.CullFaceFront,
    this.shadowMapDebug = !1,
    this.shadowMapCascade = !1,
    this.maxMorphTargets = 8,
    this.maxMorphNormals = 4,
    this.autoScaleCubemaps = !0,
    this.info = {
        memory: {
            programs: 0,
            geometries: 0,
            textures: 0
        },
        render: {
            calls: 0,
            vertices: 0,
            faces: 0,
            points: 0
        }
    };
    var Lt, It = this, Ft = [], Bt = null , jt = null , Nt = -1, zt = -1, Ut = null , Vt = 0, Wt = -1, Gt = -1, qt = -1, Xt = -1, Yt = -1, Jt = -1, Kt = -1, Zt = -1, Qt = null , ei = null , ti = null , ii = null , ni = 0, ri = 0, oi = vt.width, ai = vt.height, si = 0, li = 0, ci = new Uint8Array(16), di = new Uint8Array(16), hi = new THREE.Frustum, ui = new THREE.Matrix4, pi = new THREE.Matrix4, fi = new THREE.Vector3, gi = new THREE.Vector3, mi = !0, vi = {
        ambient: [0, 0, 0],
        directional: {
            length: 0,
            colors: [],
            positions: []
        },
        point: {
            length: 0,
            colors: [],
            positions: [],
            distances: []
        },
        spot: {
            length: 0,
            colors: [],
            positions: [],
            distances: [],
            directions: [],
            anglesCos: [],
            exponents: []
        },
        hemi: {
            length: 0,
            skyColors: [],
            groundColors: [],
            positions: []
        }
    };
    try {
        var yi = {
            alpha: wt,
            depth: xt,
            stencil: Et,
            antialias: _t,
            premultipliedAlpha: Tt,
            preserveDrawingBuffer: Ct
        };
        if (Lt = yt || vt.getContext("webgl", yi) || vt.getContext("experimental-webgl", yi),
        null === Lt)
            throw null !== vt.getContext("webgl") ? "Error creating WebGL context with your selected attributes." : "Error creating WebGL context."
    } catch (bi) {
        console.error(bi)
    }
    void 0 === Lt.getShaderPrecisionFormat && (Lt.getShaderPrecisionFormat = function() {
        return {
            rangeMin: 1,
            rangeMax: 1,
            precision: 1
        }
    }
    );
    var wi = new THREE.WebGLExtensions(Lt);
    wi.get("OES_texture_float"),
    wi.get("OES_texture_float_linear"),
    wi.get("OES_standard_derivatives"),
    Rt && wi.get("EXT_frag_depth"),
    t(),
    this.context = Lt;
    var xi = Lt.getParameter(Lt.MAX_TEXTURE_IMAGE_UNITS)
      , Ei = Lt.getParameter(Lt.MAX_VERTEX_TEXTURE_IMAGE_UNITS)
      , _i = Lt.getParameter(Lt.MAX_TEXTURE_SIZE)
      , Ti = Lt.getParameter(Lt.MAX_CUBE_MAP_TEXTURE_SIZE)
      , Ci = Ei > 0
      , Ri = Ci && wi.get("OES_texture_float")
      , Si = Lt.getShaderPrecisionFormat(Lt.VERTEX_SHADER, Lt.HIGH_FLOAT)
      , ki = Lt.getShaderPrecisionFormat(Lt.VERTEX_SHADER, Lt.MEDIUM_FLOAT)
      , Mi = (Lt.getShaderPrecisionFormat(Lt.VERTEX_SHADER, Lt.LOW_FLOAT),
    Lt.getShaderPrecisionFormat(Lt.FRAGMENT_SHADER, Lt.HIGH_FLOAT))
      , Ai = Lt.getShaderPrecisionFormat(Lt.FRAGMENT_SHADER, Lt.MEDIUM_FLOAT)
      , Hi = (Lt.getShaderPrecisionFormat(Lt.FRAGMENT_SHADER, Lt.LOW_FLOAT),
    function() {
        var e;
        return function() {
            if (void 0 !== e)
                return e;
            if (e = [],
            wi.get("WEBGL_compressed_texture_pvrtc") || wi.get("WEBGL_compressed_texture_s3tc"))
                for (var t = Lt.getParameter(Lt.COMPRESSED_TEXTURE_FORMATS), i = 0; i < t.length; i++)
                    e.push(t[i]);
            return e
        }
    }())
      , Pi = Si.precision > 0 && Mi.precision > 0
      , Oi = ki.precision > 0 && Ai.precision > 0;
    "highp" !== bt || Pi || (Oi ? (bt = "mediump",
    console.warn("THREE.WebGLRenderer: highp not supported, using mediump.")) : (bt = "lowp",
    console.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp."))),
    "mediump" !== bt || Oi || (bt = "lowp",
    console.warn("THREE.WebGLRenderer: mediump not supported, using lowp."));
    var Di = new THREE.ShadowMapPlugin(this,Mt,At,Ht)
      , $i = new THREE.SpritePlugin(this,Dt)
      , Li = new THREE.LensFlarePlugin(this,$t);
    this.getContext = function() {
        return Lt
    }
    ,
    this.supportsVertexTextures = function() {
        return Ci
    }
    ,
    this.supportsFloatTextures = function() {
        return wi.get("OES_texture_float")
    }
    ,
    this.supportsStandardDerivatives = function() {
        return wi.get("OES_standard_derivatives")
    }
    ,
    this.supportsCompressedTextureS3TC = function() {
        return wi.get("WEBGL_compressed_texture_s3tc")
    }
    ,
    this.supportsCompressedTexturePVRTC = function() {
        return wi.get("WEBGL_compressed_texture_pvrtc")
    }
    ,
    this.supportsBlendMinMax = function() {
        return wi.get("EXT_blend_minmax")
    }
    ,
    this.getMaxAnisotropy = function() {
        var e;
        return function() {
            if (void 0 !== e)
                return e;
            var t = wi.get("EXT_texture_filter_anisotropic");
            return e = null !== t ? Lt.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
        }
    }(),
    this.getPrecision = function() {
        return bt
    }
    ,
    this.setSize = function(e, t, i) {
        vt.width = e * this.devicePixelRatio,
        vt.height = t * this.devicePixelRatio,
        i !== !1 && (vt.style.width = e + "px",
        vt.style.height = t + "px"),
        this.setViewport(0, 0, e, t)
    }
    ,
    this.setViewport = function(e, t, i, n) {
        ni = e * this.devicePixelRatio,
        ri = t * this.devicePixelRatio,
        oi = i * this.devicePixelRatio,
        ai = n * this.devicePixelRatio,
        Lt.viewport(ni, ri, oi, ai)
    }
    ,
    this.setScissor = function(e, t, i, n) {
        Lt.scissor(e * this.devicePixelRatio, t * this.devicePixelRatio, i * this.devicePixelRatio, n * this.devicePixelRatio)
    }
    ,
    this.enableScissorTest = function(e) {
        e ? Lt.enable(Lt.SCISSOR_TEST) : Lt.disable(Lt.SCISSOR_TEST)
    }
    ,
    this.setClearColor = function(e, t) {
        St.set(e),
        kt = void 0 !== t ? t : 1,
        Lt.clearColor(St.r, St.g, St.b, kt)
    }
    ,
    this.setClearColorHex = function(e, t) {
        console.warn("THREE.WebGLRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead."),
        this.setClearColor(e, t)
    }
    ,
    this.getClearColor = function() {
        return St
    }
    ,
    this.getClearAlpha = function() {
        return kt
    }
    ,
    this.clear = function(e, t, i) {
        var n = 0;
        (void 0 === e || e) && (n |= Lt.COLOR_BUFFER_BIT),
        (void 0 === t || t) && (n |= Lt.DEPTH_BUFFER_BIT),
        (void 0 === i || i) && (n |= Lt.STENCIL_BUFFER_BIT),
        Lt.clear(n)
    }
    ,
    this.clearColor = function() {
        Lt.clear(Lt.COLOR_BUFFER_BIT)
    }
    ,
    this.clearDepth = function() {
        Lt.clear(Lt.DEPTH_BUFFER_BIT)
    }
    ,
    this.clearStencil = function() {
        Lt.clear(Lt.STENCIL_BUFFER_BIT)
    }
    ,
    this.clearTarget = function(e, t, i, n) {
        this.setRenderTarget(e),
        this.clear(t, i, n)
    }
    ,
    this.resetGLState = function() {
        Bt = null ,
        Ut = null ,
        qt = -1,
        Kt = -1,
        Zt = -1,
        Wt = -1,
        Gt = -1,
        zt = -1,
        Nt = -1,
        mi = !0
    }
    ;
    var Ii = function(e) {
        var t = e.target;
        t.traverse(function(e) {
            e.removeEventListener("remove", Ii),
            L(e)
        })
    }
      , Fi = function(e) {
        var t = e.target;
        t.removeEventListener("dispose", Fi),
        Ui(t)
    }
      , Bi = function(e) {
        var t = e.target;
        t.removeEventListener("dispose", Bi),
        Vi(t),
        It.info.memory.textures--
    }
      , ji = function(e) {
        var t = e.target;
        t.removeEventListener("dispose", ji),
        Wi(t),
        It.info.memory.textures--
    }
      , Ni = function(e) {
        var t = e.target;
        t.removeEventListener("dispose", Ni),
        Gi(t)
    }
      , zi = function(e) {
        for (var t = ["__webglVertexBuffer", "__webglNormalBuffer", "__webglTangentBuffer", "__webglColorBuffer", "__webglUVBuffer", "__webglUV2Buffer", "__webglSkinIndicesBuffer", "__webglSkinWeightsBuffer", "__webglFaceBuffer", "__webglLineBuffer", "__webglLineDistanceBuffer"], i = 0, n = t.length; n > i; i++) {
            var r = t[i];
            void 0 !== e[r] && (Lt.deleteBuffer(e[r]),
            delete e[r])
        }
        if (void 0 !== e.__webglCustomAttributesList) {
            for (var r in e.__webglCustomAttributesList)
                Lt.deleteBuffer(e.__webglCustomAttributesList[r].buffer);
            delete e.__webglCustomAttributesList
        }
        It.info.memory.geometries--
    }
      , Ui = function(e) {
        if (delete e.__webglInit,
        e instanceof THREE.BufferGeometry) {
            for (var t in e.attributes) {
                var i = e.attributes[t];
                void 0 !== i.buffer && (Lt.deleteBuffer(i.buffer),
                delete i.buffer)
            }
            It.info.memory.geometries--
        } else {
            var n = qi[e.id];
            if (void 0 !== n) {
                for (var r = 0, o = n.length; o > r; r++) {
                    var a = n[r];
                    if (void 0 !== a.numMorphTargets) {
                        for (var s = 0, l = a.numMorphTargets; l > s; s++)
                            Lt.deleteBuffer(a.__webglMorphTargetsBuffers[s]);
                        delete a.__webglMorphTargetsBuffers
                    }
                    if (void 0 !== a.numMorphNormals) {
                        for (var s = 0, l = a.numMorphNormals; l > s; s++)
                            Lt.deleteBuffer(a.__webglMorphNormalsBuffers[s]);
                        delete a.__webglMorphNormalsBuffers
                    }
                    zi(a)
                }
                delete qi[e.id]
            } else
                zi(e)
        }
        zt = -1
    }
      , Vi = function(e) {
        if (e.image && e.image.__webglTextureCube)
            Lt.deleteTexture(e.image.__webglTextureCube),
            delete e.image.__webglTextureCube;
        else {
            if (void 0 === e.__webglInit)
                return;
            Lt.deleteTexture(e.__webglTexture),
            delete e.__webglTexture,
            delete e.__webglInit
        }
    }
      , Wi = function(e) {
        if (e && void 0 !== e.__webglTexture) {
            if (Lt.deleteTexture(e.__webglTexture),
            delete e.__webglTexture,
            e instanceof THREE.WebGLRenderTargetCube)
                for (var t = 0; 6 > t; t++)
                    Lt.deleteFramebuffer(e.__webglFramebuffer[t]),
                    Lt.deleteRenderbuffer(e.__webglRenderbuffer[t]);
            else
                Lt.deleteFramebuffer(e.__webglFramebuffer),
                Lt.deleteRenderbuffer(e.__webglRenderbuffer);
            delete e.__webglFramebuffer,
            delete e.__webglRenderbuffer
        }
    }
      , Gi = function(e) {
        var t = e.program.program;
        if (void 0 !== t) {
            e.program = void 0;
            var i, n, r, o = !1;
            for (i = 0,
            n = Ft.length; n > i; i++)
                if (r = Ft[i],
                r.program === t) {
                    r.usedTimes--,
                    0 === r.usedTimes && (o = !0);
                    break
                }
            if (o === !0) {
                var a = [];
                for (i = 0,
                n = Ft.length; n > i; i++)
                    r = Ft[i],
                    r.program !== t && a.push(r);
                Ft = a,
                Lt.deleteProgram(t),
                It.info.memory.programs--
            }
        }
    }
    ;
    this.renderBufferImmediate = function(e, t, i) {
        if (m(),
        e.hasPositions && !e.__webglVertexBuffer && (e.__webglVertexBuffer = Lt.createBuffer()),
        e.hasNormals && !e.__webglNormalBuffer && (e.__webglNormalBuffer = Lt.createBuffer()),
        e.hasUvs && !e.__webglUvBuffer && (e.__webglUvBuffer = Lt.createBuffer()),
        e.hasColors && !e.__webglColorBuffer && (e.__webglColorBuffer = Lt.createBuffer()),
        e.hasPositions && (Lt.bindBuffer(Lt.ARRAY_BUFFER, e.__webglVertexBuffer),
        Lt.bufferData(Lt.ARRAY_BUFFER, e.positionArray, Lt.DYNAMIC_DRAW),
        v(t.attributes.position),
        Lt.vertexAttribPointer(t.attributes.position, 3, Lt.FLOAT, !1, 0, 0)),
        e.hasNormals) {
            if (Lt.bindBuffer(Lt.ARRAY_BUFFER, e.__webglNormalBuffer),
            i.shading === THREE.FlatShading) {
                var n, r, o, a, s, l, c, d, h, u, p, f, g, b, w = 3 * e.count;
                for (b = 0; w > b; b += 9)
                    g = e.normalArray,
                    a = g[b],
                    c = g[b + 1],
                    u = g[b + 2],
                    s = g[b + 3],
                    d = g[b + 4],
                    p = g[b + 5],
                    l = g[b + 6],
                    h = g[b + 7],
                    f = g[b + 8],
                    n = (a + s + l) / 3,
                    r = (c + d + h) / 3,
                    o = (u + p + f) / 3,
                    g[b] = n,
                    g[b + 1] = r,
                    g[b + 2] = o,
                    g[b + 3] = n,
                    g[b + 4] = r,
                    g[b + 5] = o,
                    g[b + 6] = n,
                    g[b + 7] = r,
                    g[b + 8] = o
            }
            Lt.bufferData(Lt.ARRAY_BUFFER, e.normalArray, Lt.DYNAMIC_DRAW),
            v(t.attributes.normal),
            Lt.vertexAttribPointer(t.attributes.normal, 3, Lt.FLOAT, !1, 0, 0)
        }
        e.hasUvs && i.map && (Lt.bindBuffer(Lt.ARRAY_BUFFER, e.__webglUvBuffer),
        Lt.bufferData(Lt.ARRAY_BUFFER, e.uvArray, Lt.DYNAMIC_DRAW),
        v(t.attributes.uv),
        Lt.vertexAttribPointer(t.attributes.uv, 2, Lt.FLOAT, !1, 0, 0)),
        e.hasColors && i.vertexColors !== THREE.NoColors && (Lt.bindBuffer(Lt.ARRAY_BUFFER, e.__webglColorBuffer),
        Lt.bufferData(Lt.ARRAY_BUFFER, e.colorArray, Lt.DYNAMIC_DRAW),
        v(t.attributes.color),
        Lt.vertexAttribPointer(t.attributes.color, 3, Lt.FLOAT, !1, 0, 0)),
        y(),
        Lt.drawArrays(Lt.TRIANGLES, 0, e.count),
        e.count = 0
    }
    ,
    this.renderBufferDirect = function(e, t, i, n, r, o) {
        if (n.visible !== !1) {
            var a = B(e, t, i, n, o)
              , s = !1
              , l = n.wireframe ? 1 : 0
              , c = 16777215 * r.id + 2 * a.id + l;
            if (c !== zt && (zt = c,
            s = !0),
            s && m(),
            o instanceof THREE.Mesh) {
                var d = n.wireframe === !0 ? Lt.LINES : Lt.TRIANGLES
                  , h = r.attributes.index;
                if (h) {
                    var u, p;
                    h.array instanceof Uint32Array && wi.get("OES_element_index_uint") ? (u = Lt.UNSIGNED_INT,
                    p = 4) : (u = Lt.UNSIGNED_SHORT,
                    p = 2);
                    var f = r.offsets;
                    if (0 === f.length)
                        s && (g(n, a, r, 0),
                        Lt.bindBuffer(Lt.ELEMENT_ARRAY_BUFFER, h.buffer)),
                        Lt.drawElements(d, h.array.length, u, 0),
                        It.info.render.calls++,
                        It.info.render.vertices += h.array.length,
                        It.info.render.faces += h.array.length / 3;
                    else {
                        s = !0;
                        for (var v = 0, y = f.length; y > v; v++) {
                            var b = f[v].index;
                            s && (g(n, a, r, b),
                            Lt.bindBuffer(Lt.ELEMENT_ARRAY_BUFFER, h.buffer)),
                            Lt.drawElements(d, f[v].count, u, f[v].start * p),
                            It.info.render.calls++,
                            It.info.render.vertices += f[v].count,
                            It.info.render.faces += f[v].count / 3
                        }
                    }
                } else {
                    s && g(n, a, r, 0);
                    var w = r.attributes.position;
                    Lt.drawArrays(d, 0, w.array.length / 3),
                    It.info.render.calls++,
                    It.info.render.vertices += w.array.length / 3,
                    It.info.render.faces += w.array.length / 9
                }
            } else if (o instanceof THREE.PointCloud) {
                s && g(n, a, r, 0);
                var w = r.attributes.position;
                Lt.drawArrays(Lt.POINTS, 0, w.array.length / 3),
                It.info.render.calls++,
                It.info.render.points += w.array.length / 3
            } else if (o instanceof THREE.Line) {
                var d = o.mode === THREE.LineStrip ? Lt.LINE_STRIP : Lt.LINES;
                nt(n.linewidth);
                var h = r.attributes.index;
                if (h) {
                    var u, p;
                    h.array instanceof Uint32Array ? (u = Lt.UNSIGNED_INT,
                    p = 4) : (u = Lt.UNSIGNED_SHORT,
                    p = 2);
                    var f = r.offsets;
                    if (0 === f.length)
                        s && (g(n, a, r, 0),
                        Lt.bindBuffer(Lt.ELEMENT_ARRAY_BUFFER, h.buffer)),
                        Lt.drawElements(d, h.array.length, u, 0),
                        It.info.render.calls++,
                        It.info.render.vertices += h.array.length;
                    else {
                        f.length > 1 && (s = !0);
                        for (var v = 0, y = f.length; y > v; v++) {
                            var b = f[v].index;
                            s && (g(n, a, r, b),
                            Lt.bindBuffer(Lt.ELEMENT_ARRAY_BUFFER, h.buffer)),
                            Lt.drawElements(d, f[v].count, u, f[v].start * p),
                            It.info.render.calls++,
                            It.info.render.vertices += f[v].count
                        }
                    }
                } else {
                    s && g(n, a, r, 0);
                    var w = r.attributes.position;
                    Lt.drawArrays(d, 0, w.array.length / 3),
                    It.info.render.calls++,
                    It.info.render.points += w.array.length / 3
                }
            }
        }
    }
    ,
    this.renderBuffer = function(e, t, i, n, r, o) {
        if (n.visible !== !1) {
            var a = B(e, t, i, n, o)
              , s = a.attributes
              , l = !1
              , c = n.wireframe ? 1 : 0
              , d = 16777215 * r.id + 2 * a.id + c;
            if (d !== zt && (zt = d,
            l = !0),
            l && m(),
            !n.morphTargets && s.position >= 0 ? l && (Lt.bindBuffer(Lt.ARRAY_BUFFER, r.__webglVertexBuffer),
            v(s.position),
            Lt.vertexAttribPointer(s.position, 3, Lt.FLOAT, !1, 0, 0)) : o.morphTargetBase && b(n, r, o),
            l) {
                if (r.__webglCustomAttributesList)
                    for (var h = 0, u = r.__webglCustomAttributesList.length; u > h; h++) {
                        var p = r.__webglCustomAttributesList[h];
                        s[p.buffer.belongsToAttribute] >= 0 && (Lt.bindBuffer(Lt.ARRAY_BUFFER, p.buffer),
                        v(s[p.buffer.belongsToAttribute]),
                        Lt.vertexAttribPointer(s[p.buffer.belongsToAttribute], p.size, Lt.FLOAT, !1, 0, 0))
                    }
                s.color >= 0 && (o.geometry.colors.length > 0 || o.geometry.faces.length > 0 ? (Lt.bindBuffer(Lt.ARRAY_BUFFER, r.__webglColorBuffer),
                v(s.color),
                Lt.vertexAttribPointer(s.color, 3, Lt.FLOAT, !1, 0, 0)) : void 0 !== n.defaultAttributeValues && Lt.vertexAttrib3fv(s.color, n.defaultAttributeValues.color)),
                s.normal >= 0 && (Lt.bindBuffer(Lt.ARRAY_BUFFER, r.__webglNormalBuffer),
                v(s.normal),
                Lt.vertexAttribPointer(s.normal, 3, Lt.FLOAT, !1, 0, 0)),
                s.tangent >= 0 && (Lt.bindBuffer(Lt.ARRAY_BUFFER, r.__webglTangentBuffer),
                v(s.tangent),
                Lt.vertexAttribPointer(s.tangent, 4, Lt.FLOAT, !1, 0, 0)),
                s.uv >= 0 && (o.geometry.faceVertexUvs[0] ? (Lt.bindBuffer(Lt.ARRAY_BUFFER, r.__webglUVBuffer),
                v(s.uv),
                Lt.vertexAttribPointer(s.uv, 2, Lt.FLOAT, !1, 0, 0)) : void 0 !== n.defaultAttributeValues && Lt.vertexAttrib2fv(s.uv, n.defaultAttributeValues.uv)),
                s.uv2 >= 0 && (o.geometry.faceVertexUvs[1] ? (Lt.bindBuffer(Lt.ARRAY_BUFFER, r.__webglUV2Buffer),
                v(s.uv2),
                Lt.vertexAttribPointer(s.uv2, 2, Lt.FLOAT, !1, 0, 0)) : void 0 !== n.defaultAttributeValues && Lt.vertexAttrib2fv(s.uv2, n.defaultAttributeValues.uv2)),
                n.skinning && s.skinIndex >= 0 && s.skinWeight >= 0 && (Lt.bindBuffer(Lt.ARRAY_BUFFER, r.__webglSkinIndicesBuffer),
                v(s.skinIndex),
                Lt.vertexAttribPointer(s.skinIndex, 4, Lt.FLOAT, !1, 0, 0),
                Lt.bindBuffer(Lt.ARRAY_BUFFER, r.__webglSkinWeightsBuffer),
                v(s.skinWeight),
                Lt.vertexAttribPointer(s.skinWeight, 4, Lt.FLOAT, !1, 0, 0)),
                s.lineDistance >= 0 && (Lt.bindBuffer(Lt.ARRAY_BUFFER, r.__webglLineDistanceBuffer),
                v(s.lineDistance),
                Lt.vertexAttribPointer(s.lineDistance, 1, Lt.FLOAT, !1, 0, 0))
            }
            if (y(),
            o instanceof THREE.Mesh) {
                var f = r.__typeArray === Uint32Array ? Lt.UNSIGNED_INT : Lt.UNSIGNED_SHORT;
                n.wireframe ? (nt(n.wireframeLinewidth),
                l && Lt.bindBuffer(Lt.ELEMENT_ARRAY_BUFFER, r.__webglLineBuffer),
                Lt.drawElements(Lt.LINES, r.__webglLineCount, f, 0)) : (l && Lt.bindBuffer(Lt.ELEMENT_ARRAY_BUFFER, r.__webglFaceBuffer),
                Lt.drawElements(Lt.TRIANGLES, r.__webglFaceCount, f, 0)),
                It.info.render.calls++,
                It.info.render.vertices += r.__webglFaceCount,
                It.info.render.faces += r.__webglFaceCount / 3
            } else if (o instanceof THREE.Line) {
                var g = o.mode === THREE.LineStrip ? Lt.LINE_STRIP : Lt.LINES;
                nt(n.linewidth),
                Lt.drawArrays(g, 0, r.__webglLineCount),
                It.info.render.calls++
            } else
                o instanceof THREE.PointCloud && (Lt.drawArrays(Lt.POINTS, 0, r.__webglParticleCount),
                It.info.render.calls++,
                It.info.render.points += r.__webglParticleCount)
        }
    }
    ,
    this.render = function(e, t, i, n) {
        if (t instanceof THREE.Camera == !1)
            return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
        var r = e.fog;
        zt = -1,
        Nt = -1,
        Ut = null ,
        mi = !0,
        e.autoUpdate === !0 && e.updateMatrixWorld(),
        void 0 === t.parent && t.updateMatrixWorld(),
        e.traverse(function(e) {
            e instanceof THREE.SkinnedMesh && e.skeleton.update()
        }),
        t.matrixWorldInverse.getInverse(t.matrixWorld),
        ui.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
        hi.setFromMatrix(ui),
        Mt.length = 0,
        Pt.length = 0,
        Ot.length = 0,
        Dt.length = 0,
        $t.length = 0,
        _(e, e),
        It.sortObjects === !0 && (Pt.sort(w),
        Ot.sort(x)),
        Di.render(e, t),
        It.info.render.calls = 0,
        It.info.render.vertices = 0,
        It.info.render.faces = 0,
        It.info.render.points = 0,
        this.setRenderTarget(i),
        (this.autoClear || n) && this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil);
        for (var o = 0, a = Ht.length; a > o; o++) {
            var s = Ht[o]
              , l = s.object;
            l.visible && (Q(l, t),
            R(s))
        }
        if (e.overrideMaterial) {
            var c = e.overrideMaterial;
            this.setBlending(c.blending, c.blendEquation, c.blendSrc, c.blendDst),
            this.setDepthTest(c.depthTest),
            this.setDepthWrite(c.depthWrite),
            rt(c.polygonOffset, c.polygonOffsetFactor, c.polygonOffsetUnits),
            T(Pt, t, Mt, r, !0, c),
            T(Ot, t, Mt, r, !0, c),
            C(Ht, "", t, Mt, r, !1, c)
        } else {
            var c = null ;
            this.setBlending(THREE.NoBlending),
            T(Pt, t, Mt, r, !1, c),
            C(Ht, "opaque", t, Mt, r, !1, c),
            T(Ot, t, Mt, r, !0, c),
            C(Ht, "transparent", t, Mt, r, !0, c)
        }
        $i.render(e, t),
        Li.render(e, t, si, li),
        i && i.generateMipmaps && i.minFilter !== THREE.NearestFilter && i.minFilter !== THREE.LinearFilter && ht(i),
        this.setDepthTest(!0),
        this.setDepthWrite(!0)
    }
    ,
    this.renderImmediateObject = function(e, t, i, n, r) {
        var o = B(e, t, i, n, r);
        zt = -1,
        It.setMaterialFaces(n),
        r.immediateRenderCallback ? r.immediateRenderCallback(o, Lt, hi) : r.render(function(e) {
            It.renderBufferImmediate(e, o, n)
        })
    }
    ;
    var qi = {}
      , Xi = 0;
    this.setFaceCulling = function(e, t) {
        e === THREE.CullFaceNone ? Lt.disable(Lt.CULL_FACE) : (Lt.frontFace(t === THREE.FrontFaceDirectionCW ? Lt.CW : Lt.CCW),
        Lt.cullFace(e === THREE.CullFaceBack ? Lt.BACK : e === THREE.CullFaceFront ? Lt.FRONT : Lt.FRONT_AND_BACK),
        Lt.enable(Lt.CULL_FACE))
    }
    ,
    this.setMaterialFaces = function(e) {
        var t = e.side === THREE.DoubleSide
          , i = e.side === THREE.BackSide;
        Wt !== t && (t ? Lt.disable(Lt.CULL_FACE) : Lt.enable(Lt.CULL_FACE),
        Wt = t),
        Gt !== i && (Lt.frontFace(i ? Lt.CW : Lt.CCW),
        Gt = i)
    }
    ,
    this.setDepthTest = function(e) {
        Kt !== e && (e ? Lt.enable(Lt.DEPTH_TEST) : Lt.disable(Lt.DEPTH_TEST),
        Kt = e)
    }
    ,
    this.setDepthWrite = function(e) {
        Zt !== e && (Lt.depthMask(e),
        Zt = e)
    }
    ,
    this.setBlending = function(e, t, i, n) {
        e !== qt && (e === THREE.NoBlending ? Lt.disable(Lt.BLEND) : e === THREE.AdditiveBlending ? (Lt.enable(Lt.BLEND),
        Lt.blendEquation(Lt.FUNC_ADD),
        Lt.blendFunc(Lt.SRC_ALPHA, Lt.ONE)) : e === THREE.SubtractiveBlending ? (Lt.enable(Lt.BLEND),
        Lt.blendEquation(Lt.FUNC_ADD),
        Lt.blendFunc(Lt.ZERO, Lt.ONE_MINUS_SRC_COLOR)) : e === THREE.MultiplyBlending ? (Lt.enable(Lt.BLEND),
        Lt.blendEquation(Lt.FUNC_ADD),
        Lt.blendFunc(Lt.ZERO, Lt.SRC_COLOR)) : e === THREE.CustomBlending ? Lt.enable(Lt.BLEND) : (Lt.enable(Lt.BLEND),
        Lt.blendEquationSeparate(Lt.FUNC_ADD, Lt.FUNC_ADD),
        Lt.blendFuncSeparate(Lt.SRC_ALPHA, Lt.ONE_MINUS_SRC_ALPHA, Lt.ONE, Lt.ONE_MINUS_SRC_ALPHA)),
        qt = e),
        e === THREE.CustomBlending ? (t !== Xt && (Lt.blendEquation(pt(t)),
        Xt = t),
        (i !== Yt || n !== Jt) && (Lt.blendFunc(pt(i), pt(n)),
        Yt = i,
        Jt = n)) : (Xt = null ,
        Yt = null ,
        Jt = null )
    }
    ,
    this.uploadTexture = function(e) {
        void 0 === e.__webglInit && (e.__webglInit = !0,
        e.addEventListener("dispose", Bi),
        e.__webglTexture = Lt.createTexture(),
        It.info.memory.textures++),
        Lt.bindTexture(Lt.TEXTURE_2D, e.__webglTexture),
        Lt.pixelStorei(Lt.UNPACK_FLIP_Y_WEBGL, e.flipY),
        Lt.pixelStorei(Lt.UNPACK_PREMULTIPLY_ALPHA_WEBGL, e.premultiplyAlpha),
        Lt.pixelStorei(Lt.UNPACK_ALIGNMENT, e.unpackAlignment),
        e.image = at(e.image, _i);
        var t = e.image
          , i = THREE.Math.isPowerOfTwo(t.width) && THREE.Math.isPowerOfTwo(t.height)
          , n = pt(e.format)
          , r = pt(e.type);
        ot(Lt.TEXTURE_2D, e, i);
        var o, a = e.mipmaps;
        if (e instanceof THREE.DataTexture)
            if (a.length > 0 && i) {
                for (var s = 0, l = a.length; l > s; s++)
                    o = a[s],
                    Lt.texImage2D(Lt.TEXTURE_2D, s, n, o.width, o.height, 0, n, r, o.data);
                e.generateMipmaps = !1
            } else
                Lt.texImage2D(Lt.TEXTURE_2D, 0, n, t.width, t.height, 0, n, r, t.data);
        else if (e instanceof THREE.CompressedTexture)
            for (var s = 0, l = a.length; l > s; s++)
                o = a[s],
                e.format !== THREE.RGBAFormat && e.format !== THREE.RGBFormat ? Hi().indexOf(n) > -1 ? Lt.compressedTexImage2D(Lt.TEXTURE_2D, s, n, o.width, o.height, 0, o.data) : console.warn("Attempt to load unsupported compressed texture format") : Lt.texImage2D(Lt.TEXTURE_2D, s, n, o.width, o.height, 0, n, r, o.data);
        else if (a.length > 0 && i) {
            for (var s = 0, l = a.length; l > s; s++)
                o = a[s],
                Lt.texImage2D(Lt.TEXTURE_2D, s, n, n, r, o);
            e.generateMipmaps = !1
        } else
            Lt.texImage2D(Lt.TEXTURE_2D, 0, n, n, r, e.image);
        e.generateMipmaps && i && Lt.generateMipmap(Lt.TEXTURE_2D),
        e.needsUpdate = !1,
        e.onUpdate && e.onUpdate()
    }
    ,
    this.setTexture = function(e, t) {
        Lt.activeTexture(Lt.TEXTURE0 + t),
        e.needsUpdate ? It.uploadTexture(e) : Lt.bindTexture(Lt.TEXTURE_2D, e.__webglTexture)
    }
    ,
    this.setRenderTarget = function(e) {
        var t = e instanceof THREE.WebGLRenderTargetCube;
        if (e && void 0 === e.__webglFramebuffer) {
            void 0 === e.depthBuffer && (e.depthBuffer = !0),
            void 0 === e.stencilBuffer && (e.stencilBuffer = !0),
            e.addEventListener("dispose", ji),
            e.__webglTexture = Lt.createTexture(),
            It.info.memory.textures++;
            var i = THREE.Math.isPowerOfTwo(e.width) && THREE.Math.isPowerOfTwo(e.height)
              , n = pt(e.format)
              , r = pt(e.type);
            if (t) {
                e.__webglFramebuffer = [],
                e.__webglRenderbuffer = [],
                Lt.bindTexture(Lt.TEXTURE_CUBE_MAP, e.__webglTexture),
                ot(Lt.TEXTURE_CUBE_MAP, e, i);
                for (var o = 0; 6 > o; o++)
                    e.__webglFramebuffer[o] = Lt.createFramebuffer(),
                    e.__webglRenderbuffer[o] = Lt.createRenderbuffer(),
                    Lt.texImage2D(Lt.TEXTURE_CUBE_MAP_POSITIVE_X + o, 0, n, e.width, e.height, 0, n, r, null ),
                    ct(e.__webglFramebuffer[o], e, Lt.TEXTURE_CUBE_MAP_POSITIVE_X + o),
                    dt(e.__webglRenderbuffer[o], e);
                i && Lt.generateMipmap(Lt.TEXTURE_CUBE_MAP)
            } else
                e.__webglFramebuffer = Lt.createFramebuffer(),
                e.__webglRenderbuffer = e.shareDepthFrom ? e.shareDepthFrom.__webglRenderbuffer : Lt.createRenderbuffer(),
                Lt.bindTexture(Lt.TEXTURE_2D, e.__webglTexture),
                ot(Lt.TEXTURE_2D, e, i),
                Lt.texImage2D(Lt.TEXTURE_2D, 0, n, e.width, e.height, 0, n, r, null ),
                ct(e.__webglFramebuffer, e, Lt.TEXTURE_2D),
                e.shareDepthFrom ? e.depthBuffer && !e.stencilBuffer ? Lt.framebufferRenderbuffer(Lt.FRAMEBUFFER, Lt.DEPTH_ATTACHMENT, Lt.RENDERBUFFER, e.__webglRenderbuffer) : e.depthBuffer && e.stencilBuffer && Lt.framebufferRenderbuffer(Lt.FRAMEBUFFER, Lt.DEPTH_STENCIL_ATTACHMENT, Lt.RENDERBUFFER, e.__webglRenderbuffer) : dt(e.__webglRenderbuffer, e),
                i && Lt.generateMipmap(Lt.TEXTURE_2D);
            t ? Lt.bindTexture(Lt.TEXTURE_CUBE_MAP, null ) : Lt.bindTexture(Lt.TEXTURE_2D, null ),
            Lt.bindRenderbuffer(Lt.RENDERBUFFER, null ),
            Lt.bindFramebuffer(Lt.FRAMEBUFFER, null )
        }
        var a, s, l, c, d;
        e ? (a = t ? e.__webglFramebuffer[e.activeCubeFace] : e.__webglFramebuffer,
        s = e.width,
        l = e.height,
        c = 0,
        d = 0) : (a = null ,
        s = oi,
        l = ai,
        c = ni,
        d = ri),
        a !== jt && (Lt.bindFramebuffer(Lt.FRAMEBUFFER, a),
        Lt.viewport(c, d, s, l),
        jt = a),
        si = s,
        li = l
    }
    ,
    this.initMaterial = function() {
        console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
    }
    ,
    this.addPrePlugin = function() {
        console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
    }
    ,
    this.addPostPlugin = function() {
        console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
    }
    ,
    this.updateShadowMap = function() {
        console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
    }
}
,
THREE.WebGLRenderTarget = function(e, t, i) {
    this.width = e,
    this.height = t,
    i = i || {},
    this.wrapS = void 0 !== i.wrapS ? i.wrapS : THREE.ClampToEdgeWrapping,
    this.wrapT = void 0 !== i.wrapT ? i.wrapT : THREE.ClampToEdgeWrapping,
    this.magFilter = void 0 !== i.magFilter ? i.magFilter : THREE.LinearFilter,
    this.minFilter = void 0 !== i.minFilter ? i.minFilter : THREE.LinearMipMapLinearFilter,
    this.anisotropy = void 0 !== i.anisotropy ? i.anisotropy : 1,
    this.offset = new THREE.Vector2(0,0),
    this.repeat = new THREE.Vector2(1,1),
    this.format = void 0 !== i.format ? i.format : THREE.RGBAFormat,
    this.type = void 0 !== i.type ? i.type : THREE.UnsignedByteType,
    this.depthBuffer = void 0 !== i.depthBuffer ? i.depthBuffer : !0,
    this.stencilBuffer = void 0 !== i.stencilBuffer ? i.stencilBuffer : !0,
    this.generateMipmaps = !0,
    this.shareDepthFrom = null
}
,
THREE.WebGLRenderTarget.prototype = {
    constructor: THREE.WebGLRenderTarget,
    setSize: function(e, t) {
        this.width = e,
        this.height = t
    },
    clone: function() {
        var e = new THREE.WebGLRenderTarget(this.width,this.height);
        return e.wrapS = this.wrapS,
        e.wrapT = this.wrapT,
        e.magFilter = this.magFilter,
        e.minFilter = this.minFilter,
        e.anisotropy = this.anisotropy,
        e.offset.copy(this.offset),
        e.repeat.copy(this.repeat),
        e.format = this.format,
        e.type = this.type,
        e.depthBuffer = this.depthBuffer,
        e.stencilBuffer = this.stencilBuffer,
        e.generateMipmaps = this.generateMipmaps,
        e.shareDepthFrom = this.shareDepthFrom,
        e
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
},
THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),
THREE.WebGLRenderTargetCube = function(e, t, i) {
    THREE.WebGLRenderTarget.call(this, e, t, i),
    this.activeCubeFace = 0
}
,
THREE.WebGLRenderTargetCube.prototype = Object.create(THREE.WebGLRenderTarget.prototype),
THREE.WebGLExtensions = function(e) {
    var t = {};
    this.get = function(i) {
        if (void 0 !== t[i])
            return t[i];
        var n;
        switch (i) {
        case "OES_texture_float":
            n = e.getExtension("OES_texture_float");
            break;
        case "OES_texture_float_linear":
            n = e.getExtension("OES_texture_float_linear");
            break;
        case "OES_standard_derivatives":
            n = e.getExtension("OES_standard_derivatives");
            break;
        case "EXT_texture_filter_anisotropic":
            n = e.getExtension("EXT_texture_filter_anisotropic") || e.getExtension("MOZ_EXT_texture_filter_anisotropic") || e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
            break;
        case "WEBGL_compressed_texture_s3tc":
            n = e.getExtension("WEBGL_compressed_texture_s3tc") || e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
            break;
        case "WEBGL_compressed_texture_pvrtc":
            n = e.getExtension("WEBGL_compressed_texture_pvrtc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
            break;
        case "OES_element_index_uint":
            n = e.getExtension("OES_element_index_uint");
            break;
        case "EXT_blend_minmax":
            n = e.getExtension("EXT_blend_minmax");
            break;
        case "EXT_frag_depth":
            n = e.getExtension("EXT_frag_depth")
        }
        return null === n && console.log("THREE.WebGLRenderer: " + i + " extension not supported."),
        t[i] = n,
        n
    }
}
,
THREE.WebGLProgram = function() {
    var e = 0
      , t = function(e) {
        var t, i, n = [];
        for (var r in e)
            t = e[r],
            t !== !1 && (i = "#define " + r + " " + t,
            n.push(i));
        return n.join("\n")
    }
      , i = function(e, t, i) {
        for (var n = {}, r = 0, o = i.length; o > r; r++) {
            var a = i[r];
            n[a] = e.getUniformLocation(t, a)
        }
        return n
    }
      , n = function(e, t, i) {
        for (var n = {}, r = 0, o = i.length; o > r; r++) {
            var a = i[r];
            n[a] = e.getAttribLocation(t, a)
        }
        return n
    }
    ;
    return function(r, o, a, s) {
        var l = r
          , c = l.context
          , d = a.defines
          , h = a.__webglShader.uniforms
          , u = a.attributes
          , p = a.__webglShader.vertexShader
          , f = a.__webglShader.fragmentShader
          , g = a.index0AttributeName;
        void 0 === g && s.morphTargets === !0 && (g = "position");
        var m = "SHADOWMAP_TYPE_BASIC";
        s.shadowMapType === THREE.PCFShadowMap ? m = "SHADOWMAP_TYPE_PCF" : s.shadowMapType === THREE.PCFSoftShadowMap && (m = "SHADOWMAP_TYPE_PCF_SOFT");
        var v, y, b = t(d), w = c.createProgram();
        a instanceof THREE.RawShaderMaterial ? (v = "",
        y = "") : (v = ["precision " + s.precision + " float;", "precision " + s.precision + " int;", b, s.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", l.gammaInput ? "#define GAMMA_INPUT" : "", l.gammaOutput ? "#define GAMMA_OUTPUT" : "", "#define MAX_DIR_LIGHTS " + s.maxDirLights, "#define MAX_POINT_LIGHTS " + s.maxPointLights, "#define MAX_SPOT_LIGHTS " + s.maxSpotLights, "#define MAX_HEMI_LIGHTS " + s.maxHemiLights, "#define MAX_SHADOWS " + s.maxShadows, "#define MAX_BONES " + s.maxBones, s.map ? "#define USE_MAP" : "", s.envMap ? "#define USE_ENVMAP" : "", s.lightMap ? "#define USE_LIGHTMAP" : "", s.bumpMap ? "#define USE_BUMPMAP" : "", s.normalMap ? "#define USE_NORMALMAP" : "", s.specularMap ? "#define USE_SPECULARMAP" : "", s.alphaMap ? "#define USE_ALPHAMAP" : "", s.vertexColors ? "#define USE_COLOR" : "", s.skinning ? "#define USE_SKINNING" : "", s.useVertexTexture ? "#define BONE_TEXTURE" : "", s.morphTargets ? "#define USE_MORPHTARGETS" : "", s.morphNormals ? "#define USE_MORPHNORMALS" : "", s.wrapAround ? "#define WRAP_AROUND" : "", s.doubleSided ? "#define DOUBLE_SIDED" : "", s.flipSided ? "#define FLIP_SIDED" : "", s.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", s.shadowMapEnabled ? "#define " + m : "", s.shadowMapDebug ? "#define SHADOWMAP_DEBUG" : "", s.shadowMapCascade ? "#define SHADOWMAP_CASCADE" : "", s.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", s.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "attribute vec2 uv2;", "#ifdef USE_COLOR", "	attribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "	attribute vec3 morphTarget0;", "	attribute vec3 morphTarget1;", "	attribute vec3 morphTarget2;", "	attribute vec3 morphTarget3;", "	#ifdef USE_MORPHNORMALS", "		attribute vec3 morphNormal0;", "		attribute vec3 morphNormal1;", "		attribute vec3 morphNormal2;", "		attribute vec3 morphNormal3;", "	#else", "		attribute vec3 morphTarget4;", "		attribute vec3 morphTarget5;", "		attribute vec3 morphTarget6;", "		attribute vec3 morphTarget7;", "	#endif", "#endif", "#ifdef USE_SKINNING", "	attribute vec4 skinIndex;", "	attribute vec4 skinWeight;", "#endif", ""].join("\n"),
        y = ["precision " + s.precision + " float;", "precision " + s.precision + " int;", s.bumpMap || s.normalMap ? "#extension GL_OES_standard_derivatives : enable" : "", b, "#define MAX_DIR_LIGHTS " + s.maxDirLights, "#define MAX_POINT_LIGHTS " + s.maxPointLights, "#define MAX_SPOT_LIGHTS " + s.maxSpotLights, "#define MAX_HEMI_LIGHTS " + s.maxHemiLights, "#define MAX_SHADOWS " + s.maxShadows, s.alphaTest ? "#define ALPHATEST " + s.alphaTest : "", l.gammaInput ? "#define GAMMA_INPUT" : "", l.gammaOutput ? "#define GAMMA_OUTPUT" : "", s.useFog && s.fog ? "#define USE_FOG" : "", s.useFog && s.fogExp ? "#define FOG_EXP2" : "", s.map ? "#define USE_MAP" : "", s.envMap ? "#define USE_ENVMAP" : "", s.lightMap ? "#define USE_LIGHTMAP" : "", s.bumpMap ? "#define USE_BUMPMAP" : "", s.normalMap ? "#define USE_NORMALMAP" : "", s.specularMap ? "#define USE_SPECULARMAP" : "", s.alphaMap ? "#define USE_ALPHAMAP" : "", s.vertexColors ? "#define USE_COLOR" : "", s.metal ? "#define METAL" : "", s.wrapAround ? "#define WRAP_AROUND" : "", s.doubleSided ? "#define DOUBLE_SIDED" : "", s.flipSided ? "#define FLIP_SIDED" : "", s.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", s.shadowMapEnabled ? "#define " + m : "", s.shadowMapDebug ? "#define SHADOWMAP_DEBUG" : "", s.shadowMapCascade ? "#define SHADOWMAP_CASCADE" : "", s.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", ""].join("\n"));
        var x = new THREE.WebGLShader(c,c.VERTEX_SHADER,v + p)
          , E = new THREE.WebGLShader(c,c.FRAGMENT_SHADER,y + f);
        c.attachShader(w, x),
        c.attachShader(w, E),
        void 0 !== g && c.bindAttribLocation(w, 0, g),
        c.linkProgram(w),
        c.getProgramParameter(w, c.LINK_STATUS) === !1 && (console.error("THREE.WebGLProgram: Could not initialise shader."),
        console.error("gl.VALIDATE_STATUS", c.getProgramParameter(w, c.VALIDATE_STATUS)),
        console.error("gl.getError()", c.getError())),
        "" !== c.getProgramInfoLog(w) && console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", c.getProgramInfoLog(w)),
        c.deleteShader(x),
        c.deleteShader(E);
        var _ = ["viewMatrix", "modelViewMatrix", "projectionMatrix", "normalMatrix", "modelMatrix", "cameraPosition", "morphTargetInfluences", "bindMatrix", "bindMatrixInverse"];
        s.useVertexTexture ? (_.push("boneTexture"),
        _.push("boneTextureWidth"),
        _.push("boneTextureHeight")) : _.push("boneGlobalMatrices"),
        s.logarithmicDepthBuffer && _.push("logDepthBufFC");
        for (var T in h)
            _.push(T);
        this.uniforms = i(c, w, _),
        _ = ["position", "normal", "uv", "uv2", "tangent", "color", "skinIndex", "skinWeight", "lineDistance"];
        for (var C = 0; C < s.maxMorphTargets; C++)
            _.push("morphTarget" + C);
        for (var C = 0; C < s.maxMorphNormals; C++)
            _.push("morphNormal" + C);
        for (var R in u)
            _.push(R);
        return this.attributes = n(c, w, _),
        this.attributesKeys = Object.keys(this.attributes),
        this.id = e++,
        this.code = o,
        this.usedTimes = 1,
        this.program = w,
        this.vertexShader = x,
        this.fragmentShader = E,
        this
    }
}(),
THREE.WebGLShader = function() {
    var e = function(e) {
        for (var t = e.split("\n"), i = 0; i < t.length; i++)
            t[i] = i + 1 + ": " + t[i];
        return t.join("\n")
    }
    ;
    return function(t, i, n) {
        var r = t.createShader(i);
        return t.shaderSource(r, n),
        t.compileShader(r),
        t.getShaderParameter(r, t.COMPILE_STATUS) === !1 && console.error("THREE.WebGLShader: Shader couldn't compile."),
        "" !== t.getShaderInfoLog(r) && (console.warn("THREE.WebGLShader: gl.getShaderInfoLog()", t.getShaderInfoLog(r)),
        console.warn(e(n))),
        r
    }
}(),
THREE.LensFlarePlugin = function(e, t) {
    function i(t) {
        var i = h.createProgram()
          , n = h.createShader(h.FRAGMENT_SHADER)
          , r = h.createShader(h.VERTEX_SHADER)
          , o = "precision " + e.getPrecision() + " float;\n";
        return h.shaderSource(n, o + t.fragmentShader),
        h.shaderSource(r, o + t.vertexShader),
        h.compileShader(n),
        h.compileShader(r),
        h.attachShader(i, n),
        h.attachShader(i, r),
        h.linkProgram(i),
        i
    }
    var n, r, o, a, s, l, c, d, h = e.context, u = function() {
        var e = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1])
          , t = new Uint16Array([0, 1, 2, 0, 2, 3]);
        n = h.createBuffer(),
        r = h.createBuffer(),
        h.bindBuffer(h.ARRAY_BUFFER, n),
        h.bufferData(h.ARRAY_BUFFER, e, h.STATIC_DRAW),
        h.bindBuffer(h.ELEMENT_ARRAY_BUFFER, r),
        h.bufferData(h.ELEMENT_ARRAY_BUFFER, t, h.STATIC_DRAW),
        c = h.createTexture(),
        d = h.createTexture(),
        h.bindTexture(h.TEXTURE_2D, c),
        h.texImage2D(h.TEXTURE_2D, 0, h.RGB, 16, 16, 0, h.RGB, h.UNSIGNED_BYTE, null ),
        h.texParameteri(h.TEXTURE_2D, h.TEXTURE_WRAP_S, h.CLAMP_TO_EDGE),
        h.texParameteri(h.TEXTURE_2D, h.TEXTURE_WRAP_T, h.CLAMP_TO_EDGE),
        h.texParameteri(h.TEXTURE_2D, h.TEXTURE_MAG_FILTER, h.NEAREST),
        h.texParameteri(h.TEXTURE_2D, h.TEXTURE_MIN_FILTER, h.NEAREST),
        h.bindTexture(h.TEXTURE_2D, d),
        h.texImage2D(h.TEXTURE_2D, 0, h.RGBA, 16, 16, 0, h.RGBA, h.UNSIGNED_BYTE, null ),
        h.texParameteri(h.TEXTURE_2D, h.TEXTURE_WRAP_S, h.CLAMP_TO_EDGE),
        h.texParameteri(h.TEXTURE_2D, h.TEXTURE_WRAP_T, h.CLAMP_TO_EDGE),
        h.texParameteri(h.TEXTURE_2D, h.TEXTURE_MAG_FILTER, h.NEAREST),
        h.texParameteri(h.TEXTURE_2D, h.TEXTURE_MIN_FILTER, h.NEAREST),
        l = h.getParameter(h.MAX_VERTEX_TEXTURE_IMAGE_UNITS) > 0;
        var u;
        u = l ? {
            vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "uniform sampler2D occlusionMap;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if( renderType == 2 ) {", "vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );", "vVisibility =        visibility.r / 9.0;", "vVisibility *= 1.0 - visibility.g / 9.0;", "vVisibility *=       visibility.b / 9.0;", "vVisibility *= 1.0 - visibility.a / 9.0;", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
            fragmentShader: ["uniform lowp int renderType;", "uniform sampler2D map;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "if( renderType == 0 ) {", "gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );", "} else if( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * vVisibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
        } : {
            vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if( renderType == 2 ) {", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
            fragmentShader: ["precision mediump float;", "uniform lowp int renderType;", "uniform sampler2D map;", "uniform sampler2D occlusionMap;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "void main() {", "if( renderType == 0 ) {", "gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );", "} else if( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;", "visibility = ( 1.0 - visibility / 4.0 );", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * visibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
        },
        o = i(u),
        a = {
            vertex: h.getAttribLocation(o, "position"),
            uv: h.getAttribLocation(o, "uv")
        },
        s = {
            renderType: h.getUniformLocation(o, "renderType"),
            map: h.getUniformLocation(o, "map"),
            occlusionMap: h.getUniformLocation(o, "occlusionMap"),
            opacity: h.getUniformLocation(o, "opacity"),
            color: h.getUniformLocation(o, "color"),
            scale: h.getUniformLocation(o, "scale"),
            rotation: h.getUniformLocation(o, "rotation"),
            screenPosition: h.getUniformLocation(o, "screenPosition")
        }
    }
    ;
    this.render = function(i, p, f, g) {
        if (0 !== t.length) {
            var m = new THREE.Vector3
              , v = g / f
              , y = .5 * f
              , b = .5 * g
              , w = 16 / g
              , x = new THREE.Vector2(w * v,w)
              , E = new THREE.Vector3(1,1,0)
              , _ = new THREE.Vector2(1,1);
            void 0 === o && u(),
            h.useProgram(o),
            h.enableVertexAttribArray(a.vertex),
            h.enableVertexAttribArray(a.uv),
            h.uniform1i(s.occlusionMap, 0),
            h.uniform1i(s.map, 1),
            h.bindBuffer(h.ARRAY_BUFFER, n),
            h.vertexAttribPointer(a.vertex, 2, h.FLOAT, !1, 16, 0),
            h.vertexAttribPointer(a.uv, 2, h.FLOAT, !1, 16, 8),
            h.bindBuffer(h.ELEMENT_ARRAY_BUFFER, r),
            h.disable(h.CULL_FACE),
            h.depthMask(!1);
            for (var T = 0, C = t.length; C > T; T++) {
                w = 16 / g,
                x.set(w * v, w);
                var R = t[T];
                if (m.set(R.matrixWorld.elements[12], R.matrixWorld.elements[13], R.matrixWorld.elements[14]),
                m.applyMatrix4(p.matrixWorldInverse),
                m.applyProjection(p.projectionMatrix),
                E.copy(m),
                _.x = E.x * y + y,
                _.y = E.y * b + b,
                l || _.x > 0 && _.x < f && _.y > 0 && _.y < g) {
                    h.activeTexture(h.TEXTURE1),
                    h.bindTexture(h.TEXTURE_2D, c),
                    h.copyTexImage2D(h.TEXTURE_2D, 0, h.RGB, _.x - 8, _.y - 8, 16, 16, 0),
                    h.uniform1i(s.renderType, 0),
                    h.uniform2f(s.scale, x.x, x.y),
                    h.uniform3f(s.screenPosition, E.x, E.y, E.z),
                    h.disable(h.BLEND),
                    h.enable(h.DEPTH_TEST),
                    h.drawElements(h.TRIANGLES, 6, h.UNSIGNED_SHORT, 0),
                    h.activeTexture(h.TEXTURE0),
                    h.bindTexture(h.TEXTURE_2D, d),
                    h.copyTexImage2D(h.TEXTURE_2D, 0, h.RGBA, _.x - 8, _.y - 8, 16, 16, 0),
                    h.uniform1i(s.renderType, 1),
                    h.disable(h.DEPTH_TEST),
                    h.activeTexture(h.TEXTURE1),
                    h.bindTexture(h.TEXTURE_2D, c),
                    h.drawElements(h.TRIANGLES, 6, h.UNSIGNED_SHORT, 0),
                    R.positionScreen.copy(E),
                    R.customUpdateCallback ? R.customUpdateCallback(R) : R.updateLensFlares(),
                    h.uniform1i(s.renderType, 2),
                    h.enable(h.BLEND);
                    for (var S = 0, k = R.lensFlares.length; k > S; S++) {
                        var M = R.lensFlares[S];
                        M.opacity > .001 && M.scale > .001 && (E.x = M.x,
                        E.y = M.y,
                        E.z = M.z,
                        w = M.size * M.scale / g,
                        x.x = w * v,
                        x.y = w,
                        h.uniform3f(s.screenPosition, E.x, E.y, E.z),
                        h.uniform2f(s.scale, x.x, x.y),
                        h.uniform1f(s.rotation, M.rotation),
                        h.uniform1f(s.opacity, M.opacity),
                        h.uniform3f(s.color, M.color.r, M.color.g, M.color.b),
                        e.setBlending(M.blending, M.blendEquation, M.blendSrc, M.blendDst),
                        e.setTexture(M.texture, 1),
                        h.drawElements(h.TRIANGLES, 6, h.UNSIGNED_SHORT, 0))
                    }
                }
            }
            h.enable(h.CULL_FACE),
            h.enable(h.DEPTH_TEST),
            h.depthMask(!0),
            e.resetGLState()
        }
    }
}
,
THREE.ShadowMapPlugin = function(e, t, i, n) {
    function r(e, t, n) {
        if (t.visible) {
            var o = i[t.id];
            if (o && t.castShadow && (t.frustumCulled === !1 || f.intersectsObject(t) === !0))
                for (var a = 0, s = o.length; s > a; a++) {
                    var l = o[a];
                    t._modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, t.matrixWorld),
                    b.push(l)
                }
            for (var a = 0, s = t.children.length; s > a; a++)
                r(e, t.children[a], n)
        }
    }
    function o(e, t) {
        var i = new THREE.DirectionalLight;
        i.isVirtual = !0,
        i.onlyShadow = !0,
        i.castShadow = !0,
        i.shadowCameraNear = e.shadowCameraNear,
        i.shadowCameraFar = e.shadowCameraFar,
        i.shadowCameraLeft = e.shadowCameraLeft,
        i.shadowCameraRight = e.shadowCameraRight,
        i.shadowCameraBottom = e.shadowCameraBottom,
        i.shadowCameraTop = e.shadowCameraTop,
        i.shadowCameraVisible = e.shadowCameraVisible,
        i.shadowDarkness = e.shadowDarkness,
        i.shadowBias = e.shadowCascadeBias[t],
        i.shadowMapWidth = e.shadowCascadeWidth[t],
        i.shadowMapHeight = e.shadowCascadeHeight[t],
        i.pointsWorld = [],
        i.pointsFrustum = [];
        for (var n = i.pointsWorld, r = i.pointsFrustum, o = 0; 8 > o; o++)
            n[o] = new THREE.Vector3,
            r[o] = new THREE.Vector3;
        var a = e.shadowCascadeNearZ[t]
          , s = e.shadowCascadeFarZ[t];
        return r[0].set(-1, -1, a),
        r[1].set(1, -1, a),
        r[2].set(-1, 1, a),
        r[3].set(1, 1, a),
        r[4].set(-1, -1, s),
        r[5].set(1, -1, s),
        r[6].set(-1, 1, s),
        r[7].set(1, 1, s),
        i
    }
    function a(e, t) {
        var i = e.shadowCascadeArray[t];
        i.position.copy(e.position),
        i.target.position.copy(e.target.position),
        i.lookAt(i.target),
        i.shadowCameraVisible = e.shadowCameraVisible,
        i.shadowDarkness = e.shadowDarkness,
        i.shadowBias = e.shadowCascadeBias[t];
        var n = e.shadowCascadeNearZ[t]
          , r = e.shadowCascadeFarZ[t]
          , o = i.pointsFrustum;
        o[0].z = n,
        o[1].z = n,
        o[2].z = n,
        o[3].z = n,
        o[4].z = r,
        o[5].z = r,
        o[6].z = r,
        o[7].z = r
    }
    function s(e, t) {
        var i = t.shadowCamera
          , n = t.pointsFrustum
          , r = t.pointsWorld;
        m.set(1 / 0, 1 / 0, 1 / 0),
        v.set(-1 / 0, -1 / 0, -1 / 0);
        for (var o = 0; 8 > o; o++) {
            var a = r[o];
            a.copy(n[o]),
            a.unproject(e),
            a.applyMatrix4(i.matrixWorldInverse),
            a.x < m.x && (m.x = a.x),
            a.x > v.x && (v.x = a.x),
            a.y < m.y && (m.y = a.y),
            a.y > v.y && (v.y = a.y),
            a.z < m.z && (m.z = a.z),
            a.z > v.z && (v.z = a.z)
        }
        i.left = m.x,
        i.right = v.x,
        i.top = v.y,
        i.bottom = m.y,
        i.updateProjectionMatrix()
    }
    function l(e) {
        return e.material instanceof THREE.MeshFaceMaterial ? e.material.materials[0] : e.material
    }
    var c, d, h, u, p = e.context, f = new THREE.Frustum, g = new THREE.Matrix4, m = new THREE.Vector3, v = new THREE.Vector3, y = new THREE.Vector3, b = [], w = THREE.ShaderLib.depthRGBA, x = THREE.UniformsUtils.clone(w.uniforms);
    c = new THREE.ShaderMaterial({
        uniforms: x,
        vertexShader: w.vertexShader,
        fragmentShader: w.fragmentShader
    }),
    d = new THREE.ShaderMaterial({
        uniforms: x,
        vertexShader: w.vertexShader,
        fragmentShader: w.fragmentShader,
        morphTargets: !0
    }),
    h = new THREE.ShaderMaterial({
        uniforms: x,
        vertexShader: w.vertexShader,
        fragmentShader: w.fragmentShader,
        skinning: !0
    }),
    u = new THREE.ShaderMaterial({
        uniforms: x,
        vertexShader: w.vertexShader,
        fragmentShader: w.fragmentShader,
        morphTargets: !0,
        skinning: !0
    }),
    c._shadowPass = !0,
    d._shadowPass = !0,
    h._shadowPass = !0,
    u._shadowPass = !0,
    this.render = function(i, m) {
        if (e.shadowMapEnabled !== !1) {
            var v, w, x, E, _, T, C, R, S, k, M, A, H, P = [], O = 0, D = null ;
            for (p.clearColor(1, 1, 1, 1),
            p.disable(p.BLEND),
            p.enable(p.CULL_FACE),
            p.frontFace(p.CCW),
            p.cullFace(e.shadowMapCullFace === THREE.CullFaceFront ? p.FRONT : p.BACK),
            e.setDepthTest(!0),
            v = 0,
            w = t.length; w > v; v++)
                if (H = t[v],
                H.castShadow)
                    if (H instanceof THREE.DirectionalLight && H.shadowCascade)
                        for (_ = 0; _ < H.shadowCascadeCount; _++) {
                            var $;
                            if (H.shadowCascadeArray[_])
                                $ = H.shadowCascadeArray[_];
                            else {
                                $ = o(H, _),
                                $.originalCamera = m;
                                var L = new THREE.Gyroscope;
                                L.position.copy(H.shadowCascadeOffset),
                                L.add($),
                                L.add($.target),
                                m.add(L),
                                H.shadowCascadeArray[_] = $,
                                console.log("Created virtualLight", $)
                            }
                            a(H, _),
                            P[O] = $,
                            O++
                        }
                    else
                        P[O] = H,
                        O++;
            for (v = 0,
            w = P.length; w > v; v++) {
                if (H = P[v],
                !H.shadowMap) {
                    var I = THREE.LinearFilter;
                    e.shadowMapType === THREE.PCFSoftShadowMap && (I = THREE.NearestFilter);
                    var F = {
                        minFilter: I,
                        magFilter: I,
                        format: THREE.RGBAFormat
                    };
                    H.shadowMap = new THREE.WebGLRenderTarget(H.shadowMapWidth,H.shadowMapHeight,F),
                    H.shadowMapSize = new THREE.Vector2(H.shadowMapWidth,H.shadowMapHeight),
                    H.shadowMatrix = new THREE.Matrix4
                }
                if (!H.shadowCamera) {
                    if (H instanceof THREE.SpotLight)
                        H.shadowCamera = new THREE.PerspectiveCamera(H.shadowCameraFov,H.shadowMapWidth / H.shadowMapHeight,H.shadowCameraNear,H.shadowCameraFar);
                    else {
                        if (!(H instanceof THREE.DirectionalLight)) {
                            console.error("Unsupported light type for shadow");
                            continue
                        }
                        H.shadowCamera = new THREE.OrthographicCamera(H.shadowCameraLeft,H.shadowCameraRight,H.shadowCameraTop,H.shadowCameraBottom,H.shadowCameraNear,H.shadowCameraFar)
                    }
                    i.add(H.shadowCamera),
                    i.autoUpdate === !0 && i.updateMatrixWorld()
                }
                H.shadowCameraVisible && !H.cameraHelper && (H.cameraHelper = new THREE.CameraHelper(H.shadowCamera),
                i.add(H.cameraHelper)),
                H.isVirtual && $.originalCamera == m && s(m, H),
                T = H.shadowMap,
                C = H.shadowMatrix,
                R = H.shadowCamera,
                R.position.setFromMatrixPosition(H.matrixWorld),
                y.setFromMatrixPosition(H.target.matrixWorld),
                R.lookAt(y),
                R.updateMatrixWorld(),
                R.matrixWorldInverse.getInverse(R.matrixWorld),
                H.cameraHelper && (H.cameraHelper.visible = H.shadowCameraVisible),
                H.shadowCameraVisible && H.cameraHelper.update(),
                C.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1),
                C.multiply(R.projectionMatrix),
                C.multiply(R.matrixWorldInverse),
                g.multiplyMatrices(R.projectionMatrix, R.matrixWorldInverse),
                f.setFromMatrix(g),
                e.setRenderTarget(T),
                e.clear(),
                b.length = 0,
                r(i, i, R);
                var B, j, N;
                for (x = 0,
                E = b.length; E > x; x++)
                    M = b[x],
                    A = M.object,
                    S = M.buffer,
                    B = l(A),
                    j = void 0 !== A.geometry.morphTargets && A.geometry.morphTargets.length > 0 && B.morphTargets,
                    N = A instanceof THREE.SkinnedMesh && B.skinning,
                    k = A.customDepthMaterial ? A.customDepthMaterial : N ? j ? u : h : j ? d : c,
                    e.setMaterialFaces(B),
                    S instanceof THREE.BufferGeometry ? e.renderBufferDirect(R, t, D, k, S, A) : e.renderBuffer(R, t, D, k, S, A);
                for (x = 0,
                E = n.length; E > x; x++)
                    M = n[x],
                    A = M.object,
                    A.visible && A.castShadow && (A._modelViewMatrix.multiplyMatrices(R.matrixWorldInverse, A.matrixWorld),
                    e.renderImmediateObject(R, t, D, c, A))
            }
            var z = e.getClearColor()
              , U = e.getClearAlpha();
            p.clearColor(z.r, z.g, z.b, U),
            p.enable(p.BLEND),
            e.shadowMapCullFace === THREE.CullFaceFront && p.cullFace(p.BACK),
            e.resetGLState()
        }
    }
}
,
THREE.SpritePlugin = function(e, t) {
    function i() {
        var t = d.createProgram()
          , i = d.createShader(d.VERTEX_SHADER)
          , n = d.createShader(d.FRAGMENT_SHADER);
        return d.shaderSource(i, ["precision " + e.getPrecision() + " float;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform float rotation;", "uniform vec2 scale;", "uniform vec2 uvOffset;", "uniform vec2 uvScale;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uvOffset + uv * uvScale;", "vec2 alignedPosition = position * scale;", "vec2 rotatedPosition;", "rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;", "rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;", "vec4 finalPosition;", "finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );", "finalPosition.xy += rotatedPosition;", "finalPosition = projectionMatrix * finalPosition;", "gl_Position = finalPosition;", "}"].join("\n")),
        d.shaderSource(n, ["precision " + e.getPrecision() + " float;", "uniform vec3 color;", "uniform sampler2D map;", "uniform float opacity;", "uniform int fogType;", "uniform vec3 fogColor;", "uniform float fogDensity;", "uniform float fogNear;", "uniform float fogFar;", "uniform float alphaTest;", "varying vec2 vUV;", "void main() {", "vec4 texture = texture2D( map, vUV );", "if ( texture.a < alphaTest ) discard;", "gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );", "if ( fogType > 0 ) {", "float depth = gl_FragCoord.z / gl_FragCoord.w;", "float fogFactor = 0.0;", "if ( fogType == 1 ) {", "fogFactor = smoothstep( fogNear, fogFar, depth );", "} else {", "const float LOG2 = 1.442695;", "float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );", "fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );", "}", "gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );", "}", "}"].join("\n")),
        d.compileShader(i),
        d.compileShader(n),
        d.attachShader(t, i),
        d.attachShader(t, n),
        d.linkProgram(t),
        t
    }
    function n(e, t) {
        return e.z !== t.z ? t.z - e.z : t.id - e.id
    }
    var r, o, a, s, l, c, d = e.context, h = function() {
        var e = new Float32Array([-.5, -.5, 0, 0, .5, -.5, 1, 0, .5, .5, 1, 1, -.5, .5, 0, 1])
          , t = new Uint16Array([0, 1, 2, 0, 2, 3]);
        r = d.createBuffer(),
        o = d.createBuffer(),
        d.bindBuffer(d.ARRAY_BUFFER, r),
        d.bufferData(d.ARRAY_BUFFER, e, d.STATIC_DRAW),
        d.bindBuffer(d.ELEMENT_ARRAY_BUFFER, o),
        d.bufferData(d.ELEMENT_ARRAY_BUFFER, t, d.STATIC_DRAW),
        a = i(),
        s = {
            position: d.getAttribLocation(a, "position"),
            uv: d.getAttribLocation(a, "uv")
        },
        l = {
            uvOffset: d.getUniformLocation(a, "uvOffset"),
            uvScale: d.getUniformLocation(a, "uvScale"),
            rotation: d.getUniformLocation(a, "rotation"),
            scale: d.getUniformLocation(a, "scale"),
            color: d.getUniformLocation(a, "color"),
            map: d.getUniformLocation(a, "map"),
            opacity: d.getUniformLocation(a, "opacity"),
            modelViewMatrix: d.getUniformLocation(a, "modelViewMatrix"),
            projectionMatrix: d.getUniformLocation(a, "projectionMatrix"),
            fogType: d.getUniformLocation(a, "fogType"),
            fogDensity: d.getUniformLocation(a, "fogDensity"),
            fogNear: d.getUniformLocation(a, "fogNear"),
            fogFar: d.getUniformLocation(a, "fogFar"),
            fogColor: d.getUniformLocation(a, "fogColor"),
            alphaTest: d.getUniformLocation(a, "alphaTest")
        };
        var n = document.createElement("canvas");
        n.width = 8,
        n.height = 8;
        var h = n.getContext("2d");
        h.fillStyle = "white",
        h.fillRect(0, 0, 8, 8),
        c = new THREE.Texture(n),
        c.needsUpdate = !0
    }
    ;
    this.render = function(i, u) {
        if (0 !== t.length) {
            void 0 === a && h(),
            d.useProgram(a),
            d.enableVertexAttribArray(s.position),
            d.enableVertexAttribArray(s.uv),
            d.disable(d.CULL_FACE),
            d.enable(d.BLEND),
            d.bindBuffer(d.ARRAY_BUFFER, r),
            d.vertexAttribPointer(s.position, 2, d.FLOAT, !1, 16, 0),
            d.vertexAttribPointer(s.uv, 2, d.FLOAT, !1, 16, 8),
            d.bindBuffer(d.ELEMENT_ARRAY_BUFFER, o),
            d.uniformMatrix4fv(l.projectionMatrix, !1, u.projectionMatrix.elements),
            d.activeTexture(d.TEXTURE0),
            d.uniform1i(l.map, 0);
            var p = 0
              , f = 0
              , g = i.fog;
            g ? (d.uniform3f(l.fogColor, g.color.r, g.color.g, g.color.b),
            g instanceof THREE.Fog ? (d.uniform1f(l.fogNear, g.near),
            d.uniform1f(l.fogFar, g.far),
            d.uniform1i(l.fogType, 1),
            p = 1,
            f = 1) : g instanceof THREE.FogExp2 && (d.uniform1f(l.fogDensity, g.density),
            d.uniform1i(l.fogType, 2),
            p = 2,
            f = 2)) : (d.uniform1i(l.fogType, 0),
            p = 0,
            f = 0);
            for (var m = 0, v = t.length; v > m; m++) {
                var y = t[m];
                y._modelViewMatrix.multiplyMatrices(u.matrixWorldInverse, y.matrixWorld),
                y.z = null === y.renderDepth ? -y._modelViewMatrix.elements[14] : y.renderDepth
            }
            t.sort(n);
            for (var b = [], m = 0, v = t.length; v > m; m++) {
                var y = t[m]
                  , w = y.material;
                d.uniform1f(l.alphaTest, w.alphaTest),
                d.uniformMatrix4fv(l.modelViewMatrix, !1, y._modelViewMatrix.elements),
                b[0] = y.scale.x,
                b[1] = y.scale.y;
                var x = 0;
                i.fog && w.fog && (x = f),
                p !== x && (d.uniform1i(l.fogType, x),
                p = x),
                null !== w.map ? (d.uniform2f(l.uvOffset, w.map.offset.x, w.map.offset.y),
                d.uniform2f(l.uvScale, w.map.repeat.x, w.map.repeat.y)) : (d.uniform2f(l.uvOffset, 0, 0),
                d.uniform2f(l.uvScale, 1, 1)),
                d.uniform1f(l.opacity, w.opacity),
                d.uniform3f(l.color, w.color.r, w.color.g, w.color.b),
                d.uniform1f(l.rotation, w.rotation),
                d.uniform2fv(l.scale, b),
                e.setBlending(w.blending, w.blendEquation, w.blendSrc, w.blendDst),
                e.setDepthTest(w.depthTest),
                e.setDepthWrite(w.depthWrite),
                w.map && w.map.image && w.map.image.width ? e.setTexture(w.map, 0) : e.setTexture(c, 0),
                d.drawElements(d.TRIANGLES, 6, d.UNSIGNED_SHORT, 0)
            }
            d.enable(d.CULL_FACE),
            e.resetGLState()
        }
    }
}
,
THREE.GeometryUtils = {
    merge: function(e, t, i) {
        console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");
        var n;
        t instanceof THREE.Mesh && (t.matrixAutoUpdate && t.updateMatrix(),
        n = t.matrix,
        t = t.geometry),
        e.merge(t, n, i)
    },
    center: function(e) {
        return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),
        e.center()
    }
},
THREE.ImageUtils = {
    crossOrigin: void 0,
    loadTexture: function(e, t, i, n) {
        var r = new THREE.ImageLoader;
        r.crossOrigin = this.crossOrigin;
        var o = new THREE.Texture(void 0,t);
        return r.load(e, function(e) {
            o.image = e,
            o.needsUpdate = !0,
            i && i(o)
        }, void 0, function(e) {
            n && n(e)
        }),
        o.sourceFile = e,
        o
    },
    loadTextureCube: function(e, t, i) {
        var n = []
          , r = new THREE.ImageLoader;
        r.crossOrigin = this.crossOrigin;
        var o = new THREE.CubeTexture(n,t);
        o.flipY = !1;
        for (var a = 0, s = function(t) {
            r.load(e[t], function(e) {
                o.images[t] = e,
                a += 1,
                6 === a && (o.needsUpdate = !0,
                i && i(o))
            })
        }
        , l = 0, c = e.length; c > l; ++l)
            s(l);
        return o
    },
    loadCompressedTexture: function() {
        console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")
    },
    loadCompressedTextureCube: function() {
        console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")
    },
    getNormalMap: function(e, t) {
        var i = function(e, t) {
            return [e[1] * t[2] - e[2] * t[1], e[2] * t[0] - e[0] * t[2], e[0] * t[1] - e[1] * t[0]]
        }
          , n = function(e, t) {
            return [e[0] - t[0], e[1] - t[1], e[2] - t[2]]
        }
          , r = function(e) {
            var t = Math.sqrt(e[0] * e[0] + e[1] * e[1] + e[2] * e[2]);
            return [e[0] / t, e[1] / t, e[2] / t]
        }
        ;
        t = 1 | t;
        var o = e.width
          , a = e.height
          , s = document.createElement("canvas");
        s.width = o,
        s.height = a;
        var l = s.getContext("2d");
        l.drawImage(e, 0, 0);
        for (var c = l.getImageData(0, 0, o, a).data, d = l.createImageData(o, a), h = d.data, u = 0; o > u; u++)
            for (var p = 0; a > p; p++) {
                var f = 0 > p - 1 ? 0 : p - 1
                  , g = p + 1 > a - 1 ? a - 1 : p + 1
                  , m = 0 > u - 1 ? 0 : u - 1
                  , v = u + 1 > o - 1 ? o - 1 : u + 1
                  , y = []
                  , b = [0, 0, c[4 * (p * o + u)] / 255 * t];
                y.push([-1, 0, c[4 * (p * o + m)] / 255 * t]),
                y.push([-1, -1, c[4 * (f * o + m)] / 255 * t]),
                y.push([0, -1, c[4 * (f * o + u)] / 255 * t]),
                y.push([1, -1, c[4 * (f * o + v)] / 255 * t]),
                y.push([1, 0, c[4 * (p * o + v)] / 255 * t]),
                y.push([1, 1, c[4 * (g * o + v)] / 255 * t]),
                y.push([0, 1, c[4 * (g * o + u)] / 255 * t]),
                y.push([-1, 1, c[4 * (g * o + m)] / 255 * t]);
                for (var w = [], x = y.length, E = 0; x > E; E++) {
                    var _ = y[E]
                      , T = y[(E + 1) % x];
                    _ = n(_, b),
                    T = n(T, b),
                    w.push(r(i(_, T)))
                }
                for (var C = [0, 0, 0], E = 0; E < w.length; E++)
                    C[0] += w[E][0],
                    C[1] += w[E][1],
                    C[2] += w[E][2];
                C[0] /= w.length,
                C[1] /= w.length,
                C[2] /= w.length;
                var R = 4 * (p * o + u);
                h[R] = (C[0] + 1) / 2 * 255 | 0,
                h[R + 1] = (C[1] + 1) / 2 * 255 | 0,
                h[R + 2] = 255 * C[2] | 0,
                h[R + 3] = 255
            }
        return l.putImageData(d, 0, 0),
        s
    },
    generateDataTexture: function(e, t, i) {
        for (var n = e * t, r = new Uint8Array(3 * n), o = Math.floor(255 * i.r), a = Math.floor(255 * i.g), s = Math.floor(255 * i.b), l = 0; n > l; l++)
            r[3 * l] = o,
            r[3 * l + 1] = a,
            r[3 * l + 2] = s;
        var c = new THREE.DataTexture(r,e,t,THREE.RGBFormat);
        return c.needsUpdate = !0,
        c
    }
},
THREE.SceneUtils = {
    createMultiMaterialObject: function(e, t) {
        for (var i = new THREE.Object3D, n = 0, r = t.length; r > n; n++)
            i.add(new THREE.Mesh(e,t[n]));
        return i
    },
    detach: function(e, t, i) {
        e.applyMatrix(t.matrixWorld),
        t.remove(e),
        i.add(e)
    },
    attach: function(e, t, i) {
        var n = new THREE.Matrix4;
        n.getInverse(i.matrixWorld),
        e.applyMatrix(n),
        t.remove(e),
        i.add(e)
    }
},
THREE.FontUtils = {
    faces: {},
    face: "helvetiker",
    weight: "normal",
    style: "normal",
    size: 150,
    divisions: 10,
    getFace: function() {
        try {
            return this.faces[this.face][this.weight][this.style]
        } catch (e) {
            throw "The font " + this.face + " with " + this.weight + " weight and " + this.style + " style is missing."
        }
    },
    loadFace: function(e) {
        var t = e.familyName.toLowerCase()
          , i = this;
        i.faces[t] = i.faces[t] || {},
        i.faces[t][e.cssFontWeight] = i.faces[t][e.cssFontWeight] || {},
        i.faces[t][e.cssFontWeight][e.cssFontStyle] = e;
        i.faces[t][e.cssFontWeight][e.cssFontStyle] = e;
        return e
    },
    drawText: function(e) {
        var t, i = this.getFace(), n = this.size / i.resolution, r = 0, o = String(e).split(""), a = o.length, s = [];
        for (t = 0; a > t; t++) {
            var l = new THREE.Path
              , c = this.extractGlyphPoints(o[t], i, n, r, l);
            r += c.offset,
            s.push(c.path)
        }
        var d = r / 2;
        return {
            paths: s,
            offset: d
        }
    },
    extractGlyphPoints: function(e, t, i, n, r) {
        var o, a, s, l, c, d, h, u, p, f, g, m, v, y, b, w, x, E, _, T = [], C = t.glyphs[e] || t.glyphs["?"];
        if (C) {
            if (C.o)
                for (l = C._cachedOutline || (C._cachedOutline = C.o.split(" ")),
                d = l.length,
                h = i,
                u = i,
                o = 0; d > o; )
                    switch (c = l[o++]) {
                    case "m":
                        p = l[o++] * h + n,
                        f = l[o++] * u,
                        r.moveTo(p, f);
                        break;
                    case "l":
                        p = l[o++] * h + n,
                        f = l[o++] * u,
                        r.lineTo(p, f);
                        break;
                    case "q":
                        if (g = l[o++] * h + n,
                        m = l[o++] * u,
                        b = l[o++] * h + n,
                        w = l[o++] * u,
                        r.quadraticCurveTo(b, w, g, m),
                        _ = T[T.length - 1])
                            for (v = _.x,
                            y = _.y,
                            a = 1,
                            s = this.divisions; s >= a; a++) {
                                var R = a / s;
                                THREE.Shape.Utils.b2(R, v, b, g),
                                THREE.Shape.Utils.b2(R, y, w, m)
                            }
                        break;
                    case "b":
                        if (g = l[o++] * h + n,
                        m = l[o++] * u,
                        b = l[o++] * h + n,
                        w = l[o++] * u,
                        x = l[o++] * h + n,
                        E = l[o++] * u,
                        r.bezierCurveTo(b, w, x, E, g, m),
                        _ = T[T.length - 1])
                            for (v = _.x,
                            y = _.y,
                            a = 1,
                            s = this.divisions; s >= a; a++) {
                                var R = a / s;
                                THREE.Shape.Utils.b3(R, v, b, x, g),
                                THREE.Shape.Utils.b3(R, y, w, E, m)
                            }
                    }
            return {
                offset: C.ha * i,
                path: r
            }
        }
    }
},
THREE.FontUtils.generateShapes = function(e, t) {
    t = t || {};
    var i = void 0 !== t.size ? t.size : 100
      , n = void 0 !== t.curveSegments ? t.curveSegments : 4
      , r = void 0 !== t.font ? t.font : "helvetiker"
      , o = void 0 !== t.weight ? t.weight : "normal"
      , a = void 0 !== t.style ? t.style : "normal";
    THREE.FontUtils.size = i,
    THREE.FontUtils.divisions = n,
    THREE.FontUtils.face = r,
    THREE.FontUtils.weight = o,
    THREE.FontUtils.style = a;
    for (var s = THREE.FontUtils.drawText(e), l = s.paths, c = [], d = 0, h = l.length; h > d; d++)
        Array.prototype.push.apply(c, l[d].toShapes());
    return c
}
,
function(e) {
    var t = 1e-10
      , i = function(e, t) {
        var i = e.length;
        if (3 > i)
            return null ;
        var o, a, s, l = [], c = [], d = [];
        if (n(e) > 0)
            for (a = 0; i > a; a++)
                c[a] = a;
        else
            for (a = 0; i > a; a++)
                c[a] = i - 1 - a;
        var h = i
          , u = 2 * h;
        for (a = h - 1; h > 2; ) {
            if (u-- <= 0)
                return console.log("Warning, unable to triangulate polygon!"),
                t ? d : l;
            if (o = a,
            o >= h && (o = 0),
            a = o + 1,
            a >= h && (a = 0),
            s = a + 1,
            s >= h && (s = 0),
            r(e, o, a, s, h, c)) {
                var p, f, g, m, v;
                for (p = c[o],
                f = c[a],
                g = c[s],
                l.push([e[p], e[f], e[g]]),
                d.push([c[o], c[a], c[s]]),
                m = a,
                v = a + 1; h > v; m++,
                v++)
                    c[m] = c[v];
                h--,
                u = 2 * h
            }
        }
        return t ? d : l
    }
      , n = function(e) {
        for (var t = e.length, i = 0, n = t - 1, r = 0; t > r; n = r++)
            i += e[n].x * e[r].y - e[r].x * e[n].y;
        return .5 * i
    }
      , r = function(e, i, n, r, o, a) {
        var s, l, c, d, h, u, p, f, g;
        if (l = e[a[i]].x,
        c = e[a[i]].y,
        d = e[a[n]].x,
        h = e[a[n]].y,
        u = e[a[r]].x,
        p = e[a[r]].y,
        t > (d - l) * (p - c) - (h - c) * (u - l))
            return !1;
        var m, v, y, b, w, x, E, _, T, C, R, S, k, M, A;
        for (m = u - d,
        v = p - h,
        y = l - u,
        b = c - p,
        w = d - l,
        x = h - c,
        s = 0; o > s; s++)
            if (f = e[a[s]].x,
            g = e[a[s]].y,
            !(f === l && g === c || f === d && g === h || f === u && g === p) && (E = f - l,
            _ = g - c,
            T = f - d,
            C = g - h,
            R = f - u,
            S = g - p,
            A = m * C - v * T,
            k = w * _ - x * E,
            M = y * S - b * R,
            A >= -t && M >= -t && k >= -t))
                return !1;
        return !0
    }
    ;
    return e.Triangulate = i,
    e.Triangulate.area = n,
    e
}(THREE.FontUtils),
self._typeface_js = {
    faces: THREE.FontUtils.faces,
    loadFace: THREE.FontUtils.loadFace
},
THREE.typeface_js = self._typeface_js,
THREE.Audio = function(e) {
    THREE.Object3D.call(this),
    this.type = "Audio",
    this.context = e.context,
    this.source = this.context.createBufferSource(),
    this.gain = this.context.createGain(),
    this.gain.connect(this.context.destination),
    this.panner = this.context.createPanner(),
    this.panner.connect(this.gain)
}
,
THREE.Audio.prototype = Object.create(THREE.Object3D.prototype),
THREE.Audio.prototype.load = function(e) {
    var t = this
      , i = new XMLHttpRequest;
    return i.open("GET", e, !0),
    i.responseType = "arraybuffer",
    i.onload = function() {
        t.context.decodeAudioData(this.response, function(e) {
            t.source.buffer = e,
            t.source.connect(t.panner),
            t.source.start(0)
        })
    }
    ,
    i.send(),
    this
}
,
THREE.Audio.prototype.setLoop = function(e) {
    this.source.loop = e
}
,
THREE.Audio.prototype.setRefDistance = function(e) {
    this.panner.refDistance = e
}
,
THREE.Audio.prototype.setRolloffFactor = function(e) {
    this.panner.rolloffFactor = e
}
,
THREE.Audio.prototype.updateMatrixWorld = function() {
    var e = new THREE.Vector3;
    return function(t) {
        THREE.Object3D.prototype.updateMatrixWorld.call(this, t),
        e.setFromMatrixPosition(this.matrixWorld),
        this.panner.setPosition(e.x, e.y, e.z)
    }
}(),
THREE.AudioListener = function() {
    THREE.Object3D.call(this),
    this.type = "AudioListener",
    this.context = new (window.AudioContext || window.webkitAudioContext)
}
,
THREE.AudioListener.prototype = Object.create(THREE.Object3D.prototype),
THREE.AudioListener.prototype.updateMatrixWorld = function() {
    var e = new THREE.Vector3
      , t = new THREE.Quaternion
      , i = new THREE.Vector3
      , n = new THREE.Vector3
      , r = new THREE.Vector3
      , o = new THREE.Vector3;
    return function(a) {
        THREE.Object3D.prototype.updateMatrixWorld.call(this, a);
        var s = this.context.listener;
        this.matrixWorld.decompose(e, t, i),
        n.set(0, 0, -1).applyQuaternion(t),
        r.subVectors(e, o),
        s.setPosition(e.x, e.y, e.z),
        s.setOrientation(n.x, n.y, n.z, this.up.x, this.up.y, this.up.z),
        s.setVelocity(r.x, r.y, r.z),
        o.copy(e)
    }
}(),
THREE.Curve = function() {}
,
THREE.Curve.prototype.getPoint = function() {
    return console.log("Warning, getPoint() not implemented!"),
    null
}
,
THREE.Curve.prototype.getPointAt = function(e) {
    var t = this.getUtoTmapping(e);
    return this.getPoint(t)
}
,
THREE.Curve.prototype.getPoints = function(e) {
    e || (e = 5);
    var t, i = [];
    for (t = 0; e >= t; t++)
        i.push(this.getPoint(t / e));
    return i
}
,
THREE.Curve.prototype.getSpacedPoints = function(e) {
    e || (e = 5);
    var t, i = [];
    for (t = 0; e >= t; t++)
        i.push(this.getPointAt(t / e));
    return i
}
,
THREE.Curve.prototype.getLength = function() {
    var e = this.getLengths();
    return e[e.length - 1]
}
,
THREE.Curve.prototype.getLengths = function(e) {
    if (e || (e = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200),
    this.cacheArcLengths && this.cacheArcLengths.length == e + 1 && !this.needsUpdate)
        return this.cacheArcLengths;
    this.needsUpdate = !1;
    var t, i, n = [], r = this.getPoint(0), o = 0;
    for (n.push(0),
    i = 1; e >= i; i++)
        t = this.getPoint(i / e),
        o += t.distanceTo(r),
        n.push(o),
        r = t;
    return this.cacheArcLengths = n,
    n
}
,
THREE.Curve.prototype.updateArcLengths = function() {
    this.needsUpdate = !0,
    this.getLengths()
}
,
THREE.Curve.prototype.getUtoTmapping = function(e, t) {
    var i, n = this.getLengths(), r = 0, o = n.length;
    i = t ? t : e * n[o - 1];
    for (var a, s = 0, l = o - 1; l >= s; )
        if (r = Math.floor(s + (l - s) / 2),
        a = n[r] - i,
        0 > a)
            s = r + 1;
        else {
            if (!(a > 0)) {
                l = r;
                break
            }
            l = r - 1
        }
    if (r = l,
    n[r] == i) {
        var c = r / (o - 1);
        return c
    }
    var d = n[r]
      , h = n[r + 1]
      , u = h - d
      , p = (i - d) / u
      , c = (r + p) / (o - 1);
    return c
}
,
THREE.Curve.prototype.getTangent = function(e) {
    var t = 1e-4
      , i = e - t
      , n = e + t;
    0 > i && (i = 0),
    n > 1 && (n = 1);
    var r = this.getPoint(i)
      , o = this.getPoint(n)
      , a = o.clone().sub(r);
    return a.normalize()
}
,
THREE.Curve.prototype.getTangentAt = function(e) {
    var t = this.getUtoTmapping(e);
    return this.getTangent(t)
}
,
THREE.Curve.Utils = {
    tangentQuadraticBezier: function(e, t, i, n) {
        return 2 * (1 - e) * (i - t) + 2 * e * (n - i)
    },
    tangentCubicBezier: function(e, t, i, n, r) {
        return -3 * t * (1 - e) * (1 - e) + 3 * i * (1 - e) * (1 - e) - 6 * e * i * (1 - e) + 6 * e * n * (1 - e) - 3 * e * e * n + 3 * e * e * r
    },
    tangentSpline: function(e) {
        var t = 6 * e * e - 6 * e
          , i = 3 * e * e - 4 * e + 1
          , n = -6 * e * e + 6 * e
          , r = 3 * e * e - 2 * e;
        return t + i + n + r
    },
    interpolate: function(e, t, i, n, r) {
        var o = .5 * (i - e)
          , a = .5 * (n - t)
          , s = r * r
          , l = r * s;
        return (2 * t - 2 * i + o + a) * l + (-3 * t + 3 * i - 2 * o - a) * s + o * r + t
    }
},
THREE.Curve.create = function(e, t) {
    return e.prototype = Object.create(THREE.Curve.prototype),
    e.prototype.getPoint = t,
    e
}
,
THREE.CurvePath = function() {
    this.curves = [],
    this.bends = [],
    this.autoClose = !1
}
,
THREE.CurvePath.prototype = Object.create(THREE.Curve.prototype),
THREE.CurvePath.prototype.add = function(e) {
    this.curves.push(e)
}
,
THREE.CurvePath.prototype.checkConnection = function() {}
,
THREE.CurvePath.prototype.closePath = function() {
    var e = this.curves[0].getPoint(0)
      , t = this.curves[this.curves.length - 1].getPoint(1);
    e.equals(t) || this.curves.push(new THREE.LineCurve(t,e))
}
,
THREE.CurvePath.prototype.getPoint = function(e) {
    for (var t, i, n = e * this.getLength(), r = this.getCurveLengths(), o = 0; o < r.length; ) {
        if (r[o] >= n) {
            t = r[o] - n,
            i = this.curves[o];
            var a = 1 - t / i.getLength();
            return i.getPointAt(a)
        }
        o++
    }
    return null
}
,
THREE.CurvePath.prototype.getLength = function() {
    var e = this.getCurveLengths();
    return e[e.length - 1]
}
,
THREE.CurvePath.prototype.getCurveLengths = function() {
    if (this.cacheLengths && this.cacheLengths.length == this.curves.length)
        return this.cacheLengths;
    var e, t = [], i = 0, n = this.curves.length;
    for (e = 0; n > e; e++)
        i += this.curves[e].getLength(),
        t.push(i);
    return this.cacheLengths = t,
    t
}
,
THREE.CurvePath.prototype.getBoundingBox = function() {
    var e, t, i, n, r, o, a = this.getPoints();
    e = t = Number.NEGATIVE_INFINITY,
    n = r = Number.POSITIVE_INFINITY;
    var s, l, c, d, h = a[0]instanceof THREE.Vector3;
    for (d = h ? new THREE.Vector3 : new THREE.Vector2,
    l = 0,
    c = a.length; c > l; l++)
        s = a[l],
        s.x > e ? e = s.x : s.x < n && (n = s.x),
        s.y > t ? t = s.y : s.y < r && (r = s.y),
        h && (s.z > i ? i = s.z : s.z < o && (o = s.z)),
        d.add(s);
    var u = {
        minX: n,
        minY: r,
        maxX: e,
        maxY: t
    };
    return h && (u.maxZ = i,
    u.minZ = o),
    u
}
,
THREE.CurvePath.prototype.createPointsGeometry = function(e) {
    var t = this.getPoints(e, !0);
    return this.createGeometry(t)
}
,
THREE.CurvePath.prototype.createSpacedPointsGeometry = function(e) {
    var t = this.getSpacedPoints(e, !0);
    return this.createGeometry(t)
}
,
THREE.CurvePath.prototype.createGeometry = function(e) {
    for (var t = new THREE.Geometry, i = 0; i < e.length; i++)
        t.vertices.push(new THREE.Vector3(e[i].x,e[i].y,e[i].z || 0));
    return t
}
,
THREE.CurvePath.prototype.addWrapPath = function(e) {
    this.bends.push(e)
}
,
THREE.CurvePath.prototype.getTransformedPoints = function(e, t) {
    var i, n, r = this.getPoints(e);
    for (t || (t = this.bends),
    i = 0,
    n = t.length; n > i; i++)
        r = this.getWrapPoints(r, t[i]);
    return r
}
,
THREE.CurvePath.prototype.getTransformedSpacedPoints = function(e, t) {
    var i, n, r = this.getSpacedPoints(e);
    for (t || (t = this.bends),
    i = 0,
    n = t.length; n > i; i++)
        r = this.getWrapPoints(r, t[i]);
    return r
}
,
THREE.CurvePath.prototype.getWrapPoints = function(e, t) {
    var i, n, r, o, a, s, l = this.getBoundingBox();
    for (i = 0,
    n = e.length; n > i; i++) {
        r = e[i],
        o = r.x,
        a = r.y,
        s = o / l.maxX,
        s = t.getUtoTmapping(s, o);
        var c = t.getPoint(s)
          , d = t.getTangent(s);
        d.set(-d.y, d.x).multiplyScalar(a),
        r.x = c.x + d.x,
        r.y = c.y + d.y
    }
    return e
}
,
THREE.Gyroscope = function() {
    THREE.Object3D.call(this)
}
,
THREE.Gyroscope.prototype = Object.create(THREE.Object3D.prototype),
THREE.Gyroscope.prototype.updateMatrixWorld = function() {
    var e = new THREE.Vector3
      , t = new THREE.Quaternion
      , i = new THREE.Vector3
      , n = new THREE.Vector3
      , r = new THREE.Quaternion
      , o = new THREE.Vector3;
    return function(a) {
        this.matrixAutoUpdate && this.updateMatrix(),
        (this.matrixWorldNeedsUpdate || a) && (this.parent ? (this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
        this.matrixWorld.decompose(n, r, o),
        this.matrix.decompose(e, t, i),
        this.matrixWorld.compose(n, t, o)) : this.matrixWorld.copy(this.matrix),
        this.matrixWorldNeedsUpdate = !1,
        a = !0);
        for (var s = 0, l = this.children.length; l > s; s++)
            this.children[s].updateMatrixWorld(a)
    }
}(),
THREE.Path = function(e) {
    THREE.CurvePath.call(this),
    this.actions = [],
    e && this.fromPoints(e)
}
,
THREE.Path.prototype = Object.create(THREE.CurvePath.prototype),
THREE.PathActions = {
    MOVE_TO: "moveTo",
    LINE_TO: "lineTo",
    QUADRATIC_CURVE_TO: "quadraticCurveTo",
    BEZIER_CURVE_TO: "bezierCurveTo",
    CSPLINE_THRU: "splineThru",
    ARC: "arc",
    ELLIPSE: "ellipse"
},
THREE.Path.prototype.fromPoints = function(e) {
    this.moveTo(e[0].x, e[0].y);
    for (var t = 1, i = e.length; i > t; t++)
        this.lineTo(e[t].x, e[t].y)
}
,
THREE.Path.prototype.moveTo = function() {
    var e = Array.prototype.slice.call(arguments);
    this.actions.push({
        action: THREE.PathActions.MOVE_TO,
        args: e
    })
}
,
THREE.Path.prototype.lineTo = function(e, t) {
    var i = Array.prototype.slice.call(arguments)
      , n = this.actions[this.actions.length - 1].args
      , r = n[n.length - 2]
      , o = n[n.length - 1]
      , a = new THREE.LineCurve(new THREE.Vector2(r,o),new THREE.Vector2(e,t));
    this.curves.push(a),
    this.actions.push({
        action: THREE.PathActions.LINE_TO,
        args: i
    })
}
,
THREE.Path.prototype.quadraticCurveTo = function(e, t, i, n) {
    var r = Array.prototype.slice.call(arguments)
      , o = this.actions[this.actions.length - 1].args
      , a = o[o.length - 2]
      , s = o[o.length - 1]
      , l = new THREE.QuadraticBezierCurve(new THREE.Vector2(a,s),new THREE.Vector2(e,t),new THREE.Vector2(i,n));
    this.curves.push(l),
    this.actions.push({
        action: THREE.PathActions.QUADRATIC_CURVE_TO,
        args: r
    })
}
,
THREE.Path.prototype.bezierCurveTo = function(e, t, i, n, r, o) {
    var a = Array.prototype.slice.call(arguments)
      , s = this.actions[this.actions.length - 1].args
      , l = s[s.length - 2]
      , c = s[s.length - 1]
      , d = new THREE.CubicBezierCurve(new THREE.Vector2(l,c),new THREE.Vector2(e,t),new THREE.Vector2(i,n),new THREE.Vector2(r,o));
    this.curves.push(d),
    this.actions.push({
        action: THREE.PathActions.BEZIER_CURVE_TO,
        args: a
    })
}
,
THREE.Path.prototype.splineThru = function(e) {
    var t = Array.prototype.slice.call(arguments)
      , i = this.actions[this.actions.length - 1].args
      , n = i[i.length - 2]
      , r = i[i.length - 1]
      , o = [new THREE.Vector2(n,r)];
    Array.prototype.push.apply(o, e);
    var a = new THREE.SplineCurve(o);
    this.curves.push(a),
    this.actions.push({
        action: THREE.PathActions.CSPLINE_THRU,
        args: t
    })
}
,
THREE.Path.prototype.arc = function(e, t, i, n, r, o) {
    var a = this.actions[this.actions.length - 1].args
      , s = a[a.length - 2]
      , l = a[a.length - 1];
    this.absarc(e + s, t + l, i, n, r, o)
}
,
THREE.Path.prototype.absarc = function(e, t, i, n, r, o) {
    this.absellipse(e, t, i, i, n, r, o)
}
,
THREE.Path.prototype.ellipse = function(e, t, i, n, r, o, a) {
    var s = this.actions[this.actions.length - 1].args
      , l = s[s.length - 2]
      , c = s[s.length - 1];
    this.absellipse(e + l, t + c, i, n, r, o, a)
}
,
THREE.Path.prototype.absellipse = function(e, t, i, n, r, o, a) {
    var s = Array.prototype.slice.call(arguments)
      , l = new THREE.EllipseCurve(e,t,i,n,r,o,a);
    this.curves.push(l);
    var c = l.getPoint(1);
    s.push(c.x),
    s.push(c.y),
    this.actions.push({
        action: THREE.PathActions.ELLIPSE,
        args: s
    })
}
,
THREE.Path.prototype.getSpacedPoints = function(e) {
    e || (e = 40);
    for (var t = [], i = 0; e > i; i++)
        t.push(this.getPoint(i / e));
    return t
}
,
THREE.Path.prototype.getPoints = function(e, t) {
    if (this.useSpacedPoints)
        return console.log("tata"),
        this.getSpacedPoints(e, t);
    e = e || 12;
    var i, n, r, o, a, s, l, c, d, h, u, p, f, g, m, v, y, b, w = [];
    for (i = 0,
    n = this.actions.length; n > i; i++)
        switch (r = this.actions[i],
        o = r.action,
        a = r.args,
        o) {
        case THREE.PathActions.MOVE_TO:
            w.push(new THREE.Vector2(a[0],a[1]));
            break;
        case THREE.PathActions.LINE_TO:
            w.push(new THREE.Vector2(a[0],a[1]));
            break;
        case THREE.PathActions.QUADRATIC_CURVE_TO:
            for (s = a[2],
            l = a[3],
            h = a[0],
            u = a[1],
            w.length > 0 ? (g = w[w.length - 1],
            p = g.x,
            f = g.y) : (g = this.actions[i - 1].args,
            p = g[g.length - 2],
            f = g[g.length - 1]),
            m = 1; e >= m; m++)
                v = m / e,
                y = THREE.Shape.Utils.b2(v, p, h, s),
                b = THREE.Shape.Utils.b2(v, f, u, l),
                w.push(new THREE.Vector2(y,b));
            break;
        case THREE.PathActions.BEZIER_CURVE_TO:
            for (s = a[4],
            l = a[5],
            h = a[0],
            u = a[1],
            c = a[2],
            d = a[3],
            w.length > 0 ? (g = w[w.length - 1],
            p = g.x,
            f = g.y) : (g = this.actions[i - 1].args,
            p = g[g.length - 2],
            f = g[g.length - 1]),
            m = 1; e >= m; m++)
                v = m / e,
                y = THREE.Shape.Utils.b3(v, p, h, c, s),
                b = THREE.Shape.Utils.b3(v, f, u, d, l),
                w.push(new THREE.Vector2(y,b));
            break;
        case THREE.PathActions.CSPLINE_THRU:
            g = this.actions[i - 1].args;
            var x = new THREE.Vector2(g[g.length - 2],g[g.length - 1])
              , E = [x]
              , _ = e * a[0].length;
            E = E.concat(a[0]);
            var T = new THREE.SplineCurve(E);
            for (m = 1; _ >= m; m++)
                w.push(T.getPointAt(m / _));
            break;
        case THREE.PathActions.ARC:
            var C, R = a[0], S = a[1], k = a[2], M = a[3], A = a[4], H = !!a[5], P = A - M, O = 2 * e;
            for (m = 1; O >= m; m++)
                v = m / O,
                H || (v = 1 - v),
                C = M + v * P,
                y = R + k * Math.cos(C),
                b = S + k * Math.sin(C),
                w.push(new THREE.Vector2(y,b));
            break;
        case THREE.PathActions.ELLIPSE:
            var C, R = a[0], S = a[1], D = a[2], $ = a[3], M = a[4], A = a[5], H = !!a[6], P = A - M, O = 2 * e;
            for (m = 1; O >= m; m++)
                v = m / O,
                H || (v = 1 - v),
                C = M + v * P,
                y = R + D * Math.cos(C),
                b = S + $ * Math.sin(C),
                w.push(new THREE.Vector2(y,b))
        }
    var L = w[w.length - 1]
      , I = 1e-10;
    return Math.abs(L.x - w[0].x) < I && Math.abs(L.y - w[0].y) < I && w.splice(w.length - 1, 1),
    t && w.push(w[0]),
    w
}
,
THREE.Path.prototype.toShapes = function(e, t) {
    function i(e) {
        var t, i, n, r, o, a = [], s = new THREE.Path;
        for (t = 0,
        i = e.length; i > t; t++)
            n = e[t],
            o = n.args,
            r = n.action,
            r == THREE.PathActions.MOVE_TO && 0 != s.actions.length && (a.push(s),
            s = new THREE.Path),
            s[r].apply(s, o);
        return 0 != s.actions.length && a.push(s),
        a
    }
    function n(e) {
        for (var t = [], i = 0, n = e.length; n > i; i++) {
            var r = e[i]
              , o = new THREE.Shape;
            o.actions = r.actions,
            o.curves = r.curves,
            t.push(o)
        }
        return t
    }
    function r(e, t) {
        for (var i = 1e-10, n = t.length, r = !1, o = n - 1, a = 0; n > a; o = a++) {
            var s = t[o]
              , l = t[a]
              , c = l.x - s.x
              , d = l.y - s.y;
            if (Math.abs(d) > i) {
                if (0 > d && (s = t[a],
                c = -c,
                l = t[o],
                d = -d),
                e.y < s.y || e.y > l.y)
                    continue;if (e.y == s.y) {
                    if (e.x == s.x)
                        return !0
                } else {
                    var h = d * (e.x - s.x) - c * (e.y - s.y);
                    if (0 == h)
                        return !0;
                    if (0 > h)
                        continue;r = !r
                }
            } else {
                if (e.y != s.y)
                    continue;if (l.x <= e.x && e.x <= s.x || s.x <= e.x && e.x <= l.x)
                    return !0
            }
        }
        return r
    }
    var o = i(this.actions);
    if (0 == o.length)
        return [];
    if (t === !0)
        return n(o);
    var a, s, l, c = [];
    if (1 == o.length)
        return s = o[0],
        l = new THREE.Shape,
        l.actions = s.actions,
        l.curves = s.curves,
        c.push(l),
        c;
    var d = !THREE.Shape.Utils.isClockWise(o[0].getPoints());
    d = e ? !d : d;
    var h, u = [], p = [], f = [], g = 0;
    p[g] = void 0,
    f[g] = [];
    var m, v;
    for (m = 0,
    v = o.length; v > m; m++)
        s = o[m],
        h = s.getPoints(),
        a = THREE.Shape.Utils.isClockWise(h),
        a = e ? !a : a,
        a ? (!d && p[g] && g++,
        p[g] = {
            s: new THREE.Shape,
            p: h
        },
        p[g].s.actions = s.actions,
        p[g].s.curves = s.curves,
        d && g++,
        f[g] = []) : f[g].push({
            h: s,
            p: h[0]
        });
    if (!p[0])
        return n(o);
    if (p.length > 1) {
        for (var y = !1, b = [], w = 0, x = p.length; x > w; w++)
            u[w] = [];
        for (var w = 0, x = p.length; x > w; w++)
            for (var E = (p[w],
            f[w]), _ = 0; _ < E.length; _++) {
                for (var T = E[_], C = !0, R = 0; R < p.length; R++)
                    r(T.p, p[R].p) && (w != R && b.push({
                        froms: w,
                        tos: R,
                        hole: _
                    }),
                    C ? (C = !1,
                    u[R].push(T)) : y = !0);
                C && u[w].push(T)
            }
        b.length > 0 && (y || (f = u))
    }
    var S, k, M;
    for (m = 0,
    v = p.length; v > m; m++)
        for (l = p[m].s,
        c.push(l),
        S = f[m],
        k = 0,
        M = S.length; M > k; k++)
            l.holes.push(S[k].h);
    return c
}
,
THREE.Shape = function() {
    THREE.Path.apply(this, arguments),
    this.holes = []
}
,
THREE.Shape.prototype = Object.create(THREE.Path.prototype),
THREE.Shape.prototype.extrude = function(e) {
    var t = new THREE.ExtrudeGeometry(this,e);
    return t
}
,
THREE.Shape.prototype.makeGeometry = function(e) {
    var t = new THREE.ShapeGeometry(this,e);
    return t
}
,
THREE.Shape.prototype.getPointsHoles = function(e) {
    var t, i = this.holes.length, n = [];
    for (t = 0; i > t; t++)
        n[t] = this.holes[t].getTransformedPoints(e, this.bends);
    return n
}
,
THREE.Shape.prototype.getSpacedPointsHoles = function(e) {
    var t, i = this.holes.length, n = [];
    for (t = 0; i > t; t++)
        n[t] = this.holes[t].getTransformedSpacedPoints(e, this.bends);
    return n
}
,
THREE.Shape.prototype.extractAllPoints = function(e) {
    return {
        shape: this.getTransformedPoints(e),
        holes: this.getPointsHoles(e)
    }
}
,
THREE.Shape.prototype.extractPoints = function(e) {
    return this.useSpacedPoints ? this.extractAllSpacedPoints(e) : this.extractAllPoints(e)
}
,
THREE.Shape.prototype.extractAllSpacedPoints = function(e) {
    return {
        shape: this.getTransformedSpacedPoints(e),
        holes: this.getSpacedPointsHoles(e)
    }
}
,
THREE.Shape.Utils = {
    triangulateShape: function(e, t) {
        function i(e, t, i) {
            return e.x != t.x ? e.x < t.x ? e.x <= i.x && i.x <= t.x : t.x <= i.x && i.x <= e.x : e.y < t.y ? e.y <= i.y && i.y <= t.y : t.y <= i.y && i.y <= e.y
        }
        function n(e, t, n, r, o) {
            var a = 1e-10
              , s = t.x - e.x
              , l = t.y - e.y
              , c = r.x - n.x
              , d = r.y - n.y
              , h = e.x - n.x
              , u = e.y - n.y
              , p = l * c - s * d
              , f = l * h - s * u;
            if (Math.abs(p) > a) {
                var g;
                if (p > 0) {
                    if (0 > f || f > p)
                        return [];
                    if (g = d * h - c * u,
                    0 > g || g > p)
                        return []
                } else {
                    if (f > 0 || p > f)
                        return [];
                    if (g = d * h - c * u,
                    g > 0 || p > g)
                        return []
                }
                if (0 == g)
                    return !o || 0 != f && f != p ? [e] : [];
                if (g == p)
                    return !o || 0 != f && f != p ? [t] : [];
                if (0 == f)
                    return [n];
                if (f == p)
                    return [r];
                var m = g / p;
                return [{
                    x: e.x + m * s,
                    y: e.y + m * l
                }]
            }
            if (0 != f || d * h != c * u)
                return [];
            var v = 0 == s && 0 == l
              , y = 0 == c && 0 == d;
            if (v && y)
                return e.x != n.x || e.y != n.y ? [] : [e];
            if (v)
                return i(n, r, e) ? [e] : [];
            if (y)
                return i(e, t, n) ? [n] : [];
            var b, w, x, E, _, T, C, R;
            return 0 != s ? (e.x < t.x ? (b = e,
            x = e.x,
            w = t,
            E = t.x) : (b = t,
            x = t.x,
            w = e,
            E = e.x),
            n.x < r.x ? (_ = n,
            C = n.x,
            T = r,
            R = r.x) : (_ = r,
            C = r.x,
            T = n,
            R = n.x)) : (e.y < t.y ? (b = e,
            x = e.y,
            w = t,
            E = t.y) : (b = t,
            x = t.y,
            w = e,
            E = e.y),
            n.y < r.y ? (_ = n,
            C = n.y,
            T = r,
            R = r.y) : (_ = r,
            C = r.y,
            T = n,
            R = n.y)),
            C >= x ? C > E ? [] : E == C ? o ? [] : [_] : R >= E ? [_, w] : [_, T] : x > R ? [] : x == R ? o ? [] : [b] : R >= E ? [b, w] : [b, T]
        }
        function r(e, t, i, n) {
            var r = 1e-10
              , o = t.x - e.x
              , a = t.y - e.y
              , s = i.x - e.x
              , l = i.y - e.y
              , c = n.x - e.x
              , d = n.y - e.y
              , h = o * l - a * s
              , u = o * d - a * c;
            if (Math.abs(h) > r) {
                var p = c * l - d * s;
                return h > 0 ? u >= 0 && p >= 0 : u >= 0 || p >= 0
            }
            return u > 0
        }
        function o(e, t) {
            function i(e, t) {
                var i = y.length - 1
                  , n = e - 1;
                0 > n && (n = i);
                var o = e + 1;
                o > i && (o = 0);
                var a = r(y[e], y[n], y[o], s[t]);
                if (!a)
                    return !1;
                var l = s.length - 1
                  , c = t - 1;
                0 > c && (c = l);
                var d = t + 1;
                return d > l && (d = 0),
                a = r(s[t], s[c], s[d], y[e]),
                a ? !0 : !1
            }
            function o(e, t) {
                var i, r, o;
                for (i = 0; i < y.length; i++)
                    if (r = i + 1,
                    r %= y.length,
                    o = n(e, t, y[i], y[r], !0),
                    o.length > 0)
                        return !0;
                return !1
            }
            function a(e, i) {
                var r, o, a, s, l;
                for (r = 0; r < b.length; r++)
                    for (o = t[b[r]],
                    a = 0; a < o.length; a++)
                        if (s = a + 1,
                        s %= o.length,
                        l = n(e, i, o[a], o[s], !0),
                        l.length > 0)
                            return !0;
                return !1
            }
            for (var s, l, c, d, h, u, p, f, g, m, v, y = e.concat(), b = [], w = [], x = 0, E = t.length; E > x; x++)
                b.push(x);
            for (var _ = 0, T = 2 * b.length; b.length > 0; ) {
                if (T--,
                0 > T) {
                    console.log("Infinite Loop! Holes left:" + b.length + ", Probably Hole outside Shape!");
                    break
                }
                for (c = _; c < y.length; c++) {
                    d = y[c],
                    l = -1;
                    for (var x = 0; x < b.length; x++)
                        if (u = b[x],
                        p = d.x + ":" + d.y + ":" + u,
                        void 0 === w[p]) {
                            s = t[u];
                            for (var C = 0; C < s.length; C++)
                                if (h = s[C],
                                i(c, C) && !o(d, h) && !a(d, h)) {
                                    l = C,
                                    b.splice(x, 1),
                                    f = y.slice(0, c + 1),
                                    g = y.slice(c),
                                    m = s.slice(l),
                                    v = s.slice(0, l + 1),
                                    y = f.concat(m).concat(v).concat(g),
                                    _ = c;
                                    break
                                }
                            if (l >= 0)
                                break;
                            w[p] = !0
                        }
                    if (l >= 0)
                        break
                }
            }
            return y
        }
        for (var a, s, l, c, d, h, u = {}, p = e.concat(), f = 0, g = t.length; g > f; f++)
            Array.prototype.push.apply(p, t[f]);
        for (a = 0,
        s = p.length; s > a; a++)
            d = p[a].x + ":" + p[a].y,
            void 0 !== u[d] && console.log("Duplicate point", d),
            u[d] = a;
        var m = o(e, t)
          , v = THREE.FontUtils.Triangulate(m, !1);
        for (a = 0,
        s = v.length; s > a; a++)
            for (c = v[a],
            l = 0; 3 > l; l++)
                d = c[l].x + ":" + c[l].y,
                h = u[d],
                void 0 !== h && (c[l] = h);
        return v.concat()
    },
    isClockWise: function(e) {
        return THREE.FontUtils.Triangulate.area(e) < 0
    },
    b2p0: function(e, t) {
        var i = 1 - e;
        return i * i * t
    },
    b2p1: function(e, t) {
        return 2 * (1 - e) * e * t
    },
    b2p2: function(e, t) {
        return e * e * t
    },
    b2: function(e, t, i, n) {
        return this.b2p0(e, t) + this.b2p1(e, i) + this.b2p2(e, n)
    },
    b3p0: function(e, t) {
        var i = 1 - e;
        return i * i * i * t
    },
    b3p1: function(e, t) {
        var i = 1 - e;
        return 3 * i * i * e * t
    },
    b3p2: function(e, t) {
        var i = 1 - e;
        return 3 * i * e * e * t
    },
    b3p3: function(e, t) {
        return e * e * e * t
    },
    b3: function(e, t, i, n, r) {
        return this.b3p0(e, t) + this.b3p1(e, i) + this.b3p2(e, n) + this.b3p3(e, r)
    }
},
THREE.LineCurve = function(e, t) {
    this.v1 = e,
    this.v2 = t
}
,
THREE.LineCurve.prototype = Object.create(THREE.Curve.prototype),
THREE.LineCurve.prototype.getPoint = function(e) {
    var t = this.v2.clone().sub(this.v1);
    return t.multiplyScalar(e).add(this.v1),
    t
}
,
THREE.LineCurve.prototype.getPointAt = function(e) {
    return this.getPoint(e)
}
,
THREE.LineCurve.prototype.getTangent = function() {
    var e = this.v2.clone().sub(this.v1);
    return e.normalize()
}
,
THREE.QuadraticBezierCurve = function(e, t, i) {
    this.v0 = e,
    this.v1 = t,
    this.v2 = i
}
,
THREE.QuadraticBezierCurve.prototype = Object.create(THREE.Curve.prototype),
THREE.QuadraticBezierCurve.prototype.getPoint = function(e) {
    var t = new THREE.Vector2;
    return t.x = THREE.Shape.Utils.b2(e, this.v0.x, this.v1.x, this.v2.x),
    t.y = THREE.Shape.Utils.b2(e, this.v0.y, this.v1.y, this.v2.y),
    t
}
,
THREE.QuadraticBezierCurve.prototype.getTangent = function(e) {
    var t = new THREE.Vector2;
    return t.x = THREE.Curve.Utils.tangentQuadraticBezier(e, this.v0.x, this.v1.x, this.v2.x),
    t.y = THREE.Curve.Utils.tangentQuadraticBezier(e, this.v0.y, this.v1.y, this.v2.y),
    t.normalize()
}
,
THREE.CubicBezierCurve = function(e, t, i, n) {
    this.v0 = e,
    this.v1 = t,
    this.v2 = i,
    this.v3 = n
}
,
THREE.CubicBezierCurve.prototype = Object.create(THREE.Curve.prototype),
THREE.CubicBezierCurve.prototype.getPoint = function(e) {
    var t, i;
    return t = THREE.Shape.Utils.b3(e, this.v0.x, this.v1.x, this.v2.x, this.v3.x),
    i = THREE.Shape.Utils.b3(e, this.v0.y, this.v1.y, this.v2.y, this.v3.y),
    new THREE.Vector2(t,i)
}
,
THREE.CubicBezierCurve.prototype.getTangent = function(e) {
    var t, i;
    t = THREE.Curve.Utils.tangentCubicBezier(e, this.v0.x, this.v1.x, this.v2.x, this.v3.x),
    i = THREE.Curve.Utils.tangentCubicBezier(e, this.v0.y, this.v1.y, this.v2.y, this.v3.y);
    var n = new THREE.Vector2(t,i);
    return n.normalize(),
    n
}
,
THREE.SplineCurve = function(e) {
    this.points = void 0 == e ? [] : e
}
,
THREE.SplineCurve.prototype = Object.create(THREE.Curve.prototype),
THREE.SplineCurve.prototype.getPoint = function(e) {
    var t = this.points
      , i = (t.length - 1) * e
      , n = Math.floor(i)
      , r = i - n
      , o = t[0 == n ? n : n - 1]
      , a = t[n]
      , s = t[n > t.length - 2 ? t.length - 1 : n + 1]
      , l = t[n > t.length - 3 ? t.length - 1 : n + 2]
      , c = new THREE.Vector2;
    return c.x = THREE.Curve.Utils.interpolate(o.x, a.x, s.x, l.x, r),
    c.y = THREE.Curve.Utils.interpolate(o.y, a.y, s.y, l.y, r),
    c
}
,
THREE.EllipseCurve = function(e, t, i, n, r, o, a) {
    this.aX = e,
    this.aY = t,
    this.xRadius = i,
    this.yRadius = n,
    this.aStartAngle = r,
    this.aEndAngle = o,
    this.aClockwise = a
}
,
THREE.EllipseCurve.prototype = Object.create(THREE.Curve.prototype),
THREE.EllipseCurve.prototype.getPoint = function(e) {
    var t = this.aEndAngle - this.aStartAngle;
    0 > t && (t += 2 * Math.PI),
    t > 2 * Math.PI && (t -= 2 * Math.PI);
    var i;
    i = this.aClockwise === !0 ? this.aEndAngle + (1 - e) * (2 * Math.PI - t) : this.aStartAngle + e * t;
    var n = new THREE.Vector2;
    return n.x = this.aX + this.xRadius * Math.cos(i),
    n.y = this.aY + this.yRadius * Math.sin(i),
    n
}
,
THREE.ArcCurve = function(e, t, i, n, r, o) {
    THREE.EllipseCurve.call(this, e, t, i, i, n, r, o)
}
,
THREE.ArcCurve.prototype = Object.create(THREE.EllipseCurve.prototype),
THREE.LineCurve3 = THREE.Curve.create(function(e, t) {
    this.v1 = e,
    this.v2 = t
}, function(e) {
    var t = new THREE.Vector3;
    return t.subVectors(this.v2, this.v1),
    t.multiplyScalar(e),
    t.add(this.v1),
    t
}),
THREE.QuadraticBezierCurve3 = THREE.Curve.create(function(e, t, i) {
    this.v0 = e,
    this.v1 = t,
    this.v2 = i
}, function(e) {
    var t = new THREE.Vector3;
    return t.x = THREE.Shape.Utils.b2(e, this.v0.x, this.v1.x, this.v2.x),
    t.y = THREE.Shape.Utils.b2(e, this.v0.y, this.v1.y, this.v2.y),
    t.z = THREE.Shape.Utils.b2(e, this.v0.z, this.v1.z, this.v2.z),
    t
}),
THREE.CubicBezierCurve3 = THREE.Curve.create(function(e, t, i, n) {
    this.v0 = e,
    this.v1 = t,
    this.v2 = i,
    this.v3 = n
}, function(e) {
    var t = new THREE.Vector3;
    return t.x = THREE.Shape.Utils.b3(e, this.v0.x, this.v1.x, this.v2.x, this.v3.x),
    t.y = THREE.Shape.Utils.b3(e, this.v0.y, this.v1.y, this.v2.y, this.v3.y),
    t.z = THREE.Shape.Utils.b3(e, this.v0.z, this.v1.z, this.v2.z, this.v3.z),
    t
}),
THREE.SplineCurve3 = THREE.Curve.create(function(e) {
    this.points = void 0 == e ? [] : e
}, function(e) {
    var t = this.points
      , i = (t.length - 1) * e
      , n = Math.floor(i)
      , r = i - n
      , o = t[0 == n ? n : n - 1]
      , a = t[n]
      , s = t[n > t.length - 2 ? t.length - 1 : n + 1]
      , l = t[n > t.length - 3 ? t.length - 1 : n + 2]
      , c = new THREE.Vector3;
    return c.x = THREE.Curve.Utils.interpolate(o.x, a.x, s.x, l.x, r),
    c.y = THREE.Curve.Utils.interpolate(o.y, a.y, s.y, l.y, r),
    c.z = THREE.Curve.Utils.interpolate(o.z, a.z, s.z, l.z, r),
    c
}),
THREE.ClosedSplineCurve3 = THREE.Curve.create(function(e) {
    this.points = void 0 == e ? [] : e
}, function(e) {
    var t = this.points
      , i = (t.length - 0) * e
      , n = Math.floor(i)
      , r = i - n;
    n += n > 0 ? 0 : (Math.floor(Math.abs(n) / t.length) + 1) * t.length;
    var o = t[(n - 1) % t.length]
      , a = t[n % t.length]
      , s = t[(n + 1) % t.length]
      , l = t[(n + 2) % t.length]
      , c = new THREE.Vector3;
    return c.x = THREE.Curve.Utils.interpolate(o.x, a.x, s.x, l.x, r),
    c.y = THREE.Curve.Utils.interpolate(o.y, a.y, s.y, l.y, r),
    c.z = THREE.Curve.Utils.interpolate(o.z, a.z, s.z, l.z, r),
    c
}),
THREE.AnimationHandler = {
    LINEAR: 0,
    CATMULLROM: 1,
    CATMULLROM_FORWARD: 2,
    add: function() {
        console.warn("THREE.AnimationHandler.add() has been deprecated.")
    },
    get: function() {
        console.warn("THREE.AnimationHandler.get() has been deprecated.")
    },
    remove: function() {
        console.warn("THREE.AnimationHandler.remove() has been deprecated.")
    },
    animations: [],
    init: function(e) {
        if (e.initialized !== !0) {
            for (var t = 0; t < e.hierarchy.length; t++) {
                for (var i = 0; i < e.hierarchy[t].keys.length; i++)
                    if (e.hierarchy[t].keys[i].time < 0 && (e.hierarchy[t].keys[i].time = 0),
                    void 0 !== e.hierarchy[t].keys[i].rot && !(e.hierarchy[t].keys[i].rot instanceof THREE.Quaternion)) {
                        var n = e.hierarchy[t].keys[i].rot;
                        e.hierarchy[t].keys[i].rot = (new THREE.Quaternion).fromArray(n)
                    }
                if (e.hierarchy[t].keys.length && void 0 !== e.hierarchy[t].keys[0].morphTargets) {
                    for (var r = {}, i = 0; i < e.hierarchy[t].keys.length; i++)
                        for (var o = 0; o < e.hierarchy[t].keys[i].morphTargets.length; o++) {
                            var a = e.hierarchy[t].keys[i].morphTargets[o];
                            r[a] = -1
                        }
                    e.hierarchy[t].usedMorphTargets = r;
                    for (var i = 0; i < e.hierarchy[t].keys.length; i++) {
                        var s = {};
                        for (var a in r) {
                            for (var o = 0; o < e.hierarchy[t].keys[i].morphTargets.length; o++)
                                if (e.hierarchy[t].keys[i].morphTargets[o] === a) {
                                    s[a] = e.hierarchy[t].keys[i].morphTargetsInfluences[o];
                                    break
                                }
                            o === e.hierarchy[t].keys[i].morphTargets.length && (s[a] = 0)
                        }
                        e.hierarchy[t].keys[i].morphTargetsInfluences = s
                    }
                }
                for (var i = 1; i < e.hierarchy[t].keys.length; i++)
                    e.hierarchy[t].keys[i].time === e.hierarchy[t].keys[i - 1].time && (e.hierarchy[t].keys.splice(i, 1),
                    i--);
                for (var i = 0; i < e.hierarchy[t].keys.length; i++)
                    e.hierarchy[t].keys[i].index = i
            }
            return e.initialized = !0,
            e
        }
    },
    parse: function(e) {
        var t = function(e, i) {
            i.push(e);
            for (var n = 0; n < e.children.length; n++)
                t(e.children[n], i)
        }
          , i = [];
        if (e instanceof THREE.SkinnedMesh)
            for (var n = 0; n < e.skeleton.bones.length; n++)
                i.push(e.skeleton.bones[n]);
        else
            t(e, i);
        return i
    },
    play: function(e) {
        -1 === this.animations.indexOf(e) && this.animations.push(e)
    },
    stop: function(e) {
        var t = this.animations.indexOf(e);
        -1 !== t && this.animations.splice(t, 1)
    },
    update: function(e) {
        for (var t = 0; t < this.animations.length; t++)
            this.animations[t].resetBlendWeights();
        for (var t = 0; t < this.animations.length; t++)
            this.animations[t].update(e)
    }
},
THREE.Animation = function(e, t) {
    this.root = e,
    this.data = THREE.AnimationHandler.init(t),
    this.hierarchy = THREE.AnimationHandler.parse(e),
    this.currentTime = 0,
    this.timeScale = 1,
    this.isPlaying = !1,
    this.loop = !0,
    this.weight = 0,
    this.interpolationType = THREE.AnimationHandler.LINEAR
}
,
THREE.Animation.prototype.keyTypes = ["pos", "rot", "scl"],
THREE.Animation.prototype.play = function(e, t) {
    this.currentTime = void 0 !== e ? e : 0,
    this.weight = void 0 !== t ? t : 1,
    this.isPlaying = !0,
    this.reset(),
    THREE.AnimationHandler.play(this)
}
,
THREE.Animation.prototype.stop = function() {
    this.isPlaying = !1,
    THREE.AnimationHandler.stop(this)
}
,
THREE.Animation.prototype.reset = function() {
    for (var e = 0, t = this.hierarchy.length; t > e; e++) {
        var i = this.hierarchy[e];
        i.matrixAutoUpdate = !0,
        void 0 === i.animationCache && (i.animationCache = {
            animations: {},
            blending: {
                positionWeight: 0,
                quaternionWeight: 0,
                scaleWeight: 0
            }
        }),
        void 0 === i.animationCache.animations[this.data.name] && (i.animationCache.animations[this.data.name] = {},
        i.animationCache.animations[this.data.name].prevKey = {
            pos: 0,
            rot: 0,
            scl: 0
        },
        i.animationCache.animations[this.data.name].nextKey = {
            pos: 0,
            rot: 0,
            scl: 0
        },
        i.animationCache.animations[this.data.name].originalMatrix = i.matrix);
        for (var n = i.animationCache.animations[this.data.name], r = 0; 3 > r; r++) {
            for (var o = this.keyTypes[r], a = this.data.hierarchy[e].keys[0], s = this.getNextKeyWith(o, e, 1); s.time < this.currentTime && s.index > a.index; )
                a = s,
                s = this.getNextKeyWith(o, e, s.index + 1);
            n.prevKey[o] = a,
            n.nextKey[o] = s
        }
    }
}
,
THREE.Animation.prototype.resetBlendWeights = function() {
    for (var e = 0, t = this.hierarchy.length; t > e; e++) {
        var i = this.hierarchy[e];
        void 0 !== i.animationCache && (i.animationCache.blending.positionWeight = 0,
        i.animationCache.blending.quaternionWeight = 0,
        i.animationCache.blending.scaleWeight = 0)
    }
}
,
THREE.Animation.prototype.update = function() {
    var e = []
      , t = new THREE.Vector3
      , i = new THREE.Vector3
      , n = new THREE.Quaternion
      , r = function(e, t) {
        var i, n, r, a, s, l, c, d, h, u = [], p = [];
        return i = (e.length - 1) * t,
        n = Math.floor(i),
        r = i - n,
        u[0] = 0 === n ? n : n - 1,
        u[1] = n,
        u[2] = n > e.length - 2 ? n : n + 1,
        u[3] = n > e.length - 3 ? n : n + 2,
        l = e[u[0]],
        c = e[u[1]],
        d = e[u[2]],
        h = e[u[3]],
        a = r * r,
        s = r * a,
        p[0] = o(l[0], c[0], d[0], h[0], r, a, s),
        p[1] = o(l[1], c[1], d[1], h[1], r, a, s),
        p[2] = o(l[2], c[2], d[2], h[2], r, a, s),
        p
    }
      , o = function(e, t, i, n, r, o, a) {
        var s = .5 * (i - e)
          , l = .5 * (n - t);
        return (2 * (t - i) + s + l) * a + (-3 * (t - i) - 2 * s - l) * o + s * r + t
    }
    ;
    return function(o) {
        if (this.isPlaying !== !1 && (this.currentTime += o * this.timeScale,
        0 !== this.weight)) {
            var a = this.data.length;
            if (this.currentTime > a || this.currentTime < 0) {
                if (!this.loop)
                    return void this.stop();
                this.currentTime %= a,
                this.currentTime < 0 && (this.currentTime += a),
                this.reset()
            }
            for (var s = 0, l = this.hierarchy.length; l > s; s++)
                for (var c = this.hierarchy[s], d = c.animationCache.animations[this.data.name], h = c.animationCache.blending, u = 0; 3 > u; u++) {
                    var p = this.keyTypes[u]
                      , f = d.prevKey[p]
                      , g = d.nextKey[p];
                    if (this.timeScale > 0 && g.time <= this.currentTime || this.timeScale < 0 && f.time >= this.currentTime) {
                        for (f = this.data.hierarchy[s].keys[0],
                        g = this.getNextKeyWith(p, s, 1); g.time < this.currentTime && g.index > f.index; )
                            f = g,
                            g = this.getNextKeyWith(p, s, g.index + 1);
                        d.prevKey[p] = f,
                        d.nextKey[p] = g
                    }
                    c.matrixAutoUpdate = !0,
                    c.matrixWorldNeedsUpdate = !0;
                    var m = (this.currentTime - f.time) / (g.time - f.time)
                      , v = f[p]
                      , y = g[p];
                    if (0 > m && (m = 0),
                    m > 1 && (m = 1),
                    "pos" === p) {
                        if (this.interpolationType === THREE.AnimationHandler.LINEAR) {
                            i.x = v[0] + (y[0] - v[0]) * m,
                            i.y = v[1] + (y[1] - v[1]) * m,
                            i.z = v[2] + (y[2] - v[2]) * m;
                            var b = this.weight / (this.weight + h.positionWeight);
                            c.position.lerp(i, b),
                            h.positionWeight += this.weight
                        } else if (this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD) {
                            e[0] = this.getPrevKeyWith("pos", s, f.index - 1).pos,
                            e[1] = v,
                            e[2] = y,
                            e[3] = this.getNextKeyWith("pos", s, g.index + 1).pos,
                            m = .33 * m + .33;
                            var w = r(e, m)
                              , b = this.weight / (this.weight + h.positionWeight);
                            h.positionWeight += this.weight;
                            var x = c.position;
                            if (x.x = x.x + (w[0] - x.x) * b,
                            x.y = x.y + (w[1] - x.y) * b,
                            x.z = x.z + (w[2] - x.z) * b,
                            this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD) {
                                var E = r(e, 1.01 * m);
                                t.set(E[0], E[1], E[2]),
                                t.sub(x),
                                t.y = 0,
                                t.normalize();
                                var _ = Math.atan2(t.x, t.z);
                                c.rotation.set(0, _, 0)
                            }
                        }
                    } else if ("rot" === p)
                        if (THREE.Quaternion.slerp(v, y, n, m),
                        0 === h.quaternionWeight)
                            c.quaternion.copy(n),
                            h.quaternionWeight = this.weight;
                        else {
                            var b = this.weight / (this.weight + h.quaternionWeight);
                            THREE.Quaternion.slerp(c.quaternion, n, c.quaternion, b),
                            h.quaternionWeight += this.weight
                        }
                    else if ("scl" === p) {
                        i.x = v[0] + (y[0] - v[0]) * m,
                        i.y = v[1] + (y[1] - v[1]) * m,
                        i.z = v[2] + (y[2] - v[2]) * m;
                        var b = this.weight / (this.weight + h.scaleWeight);
                        c.scale.lerp(i, b),
                        h.scaleWeight += this.weight
                    }
                }
            return !0
        }
    }
}(),
THREE.Animation.prototype.getNextKeyWith = function(e, t, i) {
    var n = this.data.hierarchy[t].keys;
    for (this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ? i = i < n.length - 1 ? i : n.length - 1 : i %= n.length; i < n.length; i++)
        if (void 0 !== n[i][e])
            return n[i];
    return this.data.hierarchy[t].keys[0]
}
,
THREE.Animation.prototype.getPrevKeyWith = function(e, t, i) {
    var n = this.data.hierarchy[t].keys;
    for (i = this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ? i > 0 ? i : 0 : i >= 0 ? i : i + n.length; i >= 0; i--)
        if (void 0 !== n[i][e])
            return n[i];
    return this.data.hierarchy[t].keys[n.length - 1]
}
,
THREE.KeyFrameAnimation = function(e) {
    this.root = e.node,
    this.data = THREE.AnimationHandler.init(e),
    this.hierarchy = THREE.AnimationHandler.parse(this.root),
    this.currentTime = 0,
    this.timeScale = .001,
    this.isPlaying = !1,
    this.isPaused = !0,
    this.loop = !0;
    for (var t = 0, i = this.hierarchy.length; i > t; t++) {
        var n = this.data.hierarchy[t].keys
          , r = this.data.hierarchy[t].sids
          , o = this.hierarchy[t];
        if (n.length && r) {
            for (var a = 0; a < r.length; a++) {
                var s = r[a]
                  , l = this.getNextKeyWith(s, t, 0);
                l && l.apply(s)
            }
            o.matrixAutoUpdate = !1,
            this.data.hierarchy[t].node.updateMatrix(),
            o.matrixWorldNeedsUpdate = !0
        }
    }
}
,
THREE.KeyFrameAnimation.prototype.play = function(e) {
    if (this.currentTime = void 0 !== e ? e : 0,
    this.isPlaying === !1) {
        this.isPlaying = !0;
        var t, i, n, r = this.hierarchy.length;
        for (t = 0; r > t; t++) {
            i = this.hierarchy[t],
            n = this.data.hierarchy[t],
            void 0 === n.animationCache && (n.animationCache = {},
            n.animationCache.prevKey = null ,
            n.animationCache.nextKey = null ,
            n.animationCache.originalMatrix = i.matrix);
            var o = this.data.hierarchy[t].keys;
            o.length && (n.animationCache.prevKey = o[0],
            n.animationCache.nextKey = o[1],
            this.startTime = Math.min(o[0].time, this.startTime),
            this.endTime = Math.max(o[o.length - 1].time, this.endTime))
        }
        this.update(0)
    }
    this.isPaused = !1,
    THREE.AnimationHandler.play(this)
}
,
THREE.KeyFrameAnimation.prototype.stop = function() {
    this.isPlaying = !1,
    this.isPaused = !1,
    THREE.AnimationHandler.stop(this);
    for (var e = 0; e < this.data.hierarchy.length; e++) {
        var t = this.hierarchy[e]
          , i = this.data.hierarchy[e];
        if (void 0 !== i.animationCache) {
            var n = i.animationCache.originalMatrix;
            n.copy(t.matrix),
            t.matrix = n,
            delete i.animationCache
        }
    }
}
,
THREE.KeyFrameAnimation.prototype.update = function(e) {
    if (this.isPlaying !== !1) {
        this.currentTime += e * this.timeScale;
        var t = this.data.length;
        this.loop === !0 && this.currentTime > t && (this.currentTime %= t),
        this.currentTime = Math.min(this.currentTime, t);
        for (var i = 0, n = this.hierarchy.length; n > i; i++) {
            var r = this.hierarchy[i]
              , o = this.data.hierarchy[i]
              , a = o.keys
              , s = o.animationCache;
            if (a.length) {
                var l = s.prevKey
                  , c = s.nextKey;
                if (c.time <= this.currentTime) {
                    for (; c.time < this.currentTime && c.index > l.index; )
                        l = c,
                        c = a[l.index + 1];
                    s.prevKey = l,
                    s.nextKey = c
                }
                c.time >= this.currentTime ? l.interpolate(c, this.currentTime) : l.interpolate(c, c.time),
                this.data.hierarchy[i].node.updateMatrix(),
                r.matrixWorldNeedsUpdate = !0
            }
        }
    }
}
,
THREE.KeyFrameAnimation.prototype.getNextKeyWith = function(e, t, i) {
    var n = this.data.hierarchy[t].keys;
    for (i %= n.length; i < n.length; i++)
        if (n[i].hasTarget(e))
            return n[i];
    return n[0]
}
,
THREE.KeyFrameAnimation.prototype.getPrevKeyWith = function(e, t, i) {
    var n = this.data.hierarchy[t].keys;
    for (i = i >= 0 ? i : i + n.length; i >= 0; i--)
        if (n[i].hasTarget(e))
            return n[i];
    return n[n.length - 1]
}
,
THREE.MorphAnimation = function(e) {
    this.mesh = e,
    this.frames = e.morphTargetInfluences.length,
    this.currentTime = 0,
    this.duration = 1e3,
    this.loop = !0,
    this.isPlaying = !1
}
,
THREE.MorphAnimation.prototype = {
    play: function() {
        this.isPlaying = !0
    },
    pause: function() {
        this.isPlaying = !1
    },
    update: function() {
        var e = 0
          , t = 0;
        return function(i) {
            if (this.isPlaying !== !1) {
                this.currentTime += i,
                this.loop === !0 && this.currentTime > this.duration && (this.currentTime %= this.duration),
                this.currentTime = Math.min(this.currentTime, this.duration);
                var n = this.duration / this.frames
                  , r = Math.floor(this.currentTime / n);
                r != t && (this.mesh.morphTargetInfluences[e] = 0,
                this.mesh.morphTargetInfluences[t] = 1,
                this.mesh.morphTargetInfluences[r] = 0,
                e = t,
                t = r),
                this.mesh.morphTargetInfluences[r] = this.currentTime % n / n,
                this.mesh.morphTargetInfluences[e] = 1 - this.mesh.morphTargetInfluences[r]
            }
        }
    }()
},
THREE.BoxGeometry = function(e, t, i, n, r, o) {
    function a(e, t, i, n, r, o, a, l) {
        var c, d, h, u = s.widthSegments, p = s.heightSegments, f = r / 2, g = o / 2, m = s.vertices.length;
        "x" === e && "y" === t || "y" === e && "x" === t ? c = "z" : "x" === e && "z" === t || "z" === e && "x" === t ? (c = "y",
        p = s.depthSegments) : ("z" === e && "y" === t || "y" === e && "z" === t) && (c = "x",
        u = s.depthSegments);
        var v = u + 1
          , y = p + 1
          , b = r / u
          , w = o / p
          , x = new THREE.Vector3;
        for (x[c] = a > 0 ? 1 : -1,
        h = 0; y > h; h++)
            for (d = 0; v > d; d++) {
                var E = new THREE.Vector3;
                E[e] = (d * b - f) * i,
                E[t] = (h * w - g) * n,
                E[c] = a,
                s.vertices.push(E)
            }
        for (h = 0; p > h; h++)
            for (d = 0; u > d; d++) {
                var _ = d + v * h
                  , T = d + v * (h + 1)
                  , C = d + 1 + v * (h + 1)
                  , R = d + 1 + v * h
                  , S = new THREE.Vector2(d / u,1 - h / p)
                  , k = new THREE.Vector2(d / u,1 - (h + 1) / p)
                  , M = new THREE.Vector2((d + 1) / u,1 - (h + 1) / p)
                  , A = new THREE.Vector2((d + 1) / u,1 - h / p)
                  , H = new THREE.Face3(_ + m,T + m,R + m);
                H.normal.copy(x),
                H.vertexNormals.push(x.clone(), x.clone(), x.clone()),
                H.materialIndex = l,
                s.faces.push(H),
                s.faceVertexUvs[0].push([S, k, A]),
                H = new THREE.Face3(T + m,C + m,R + m),
                H.normal.copy(x),
                H.vertexNormals.push(x.clone(), x.clone(), x.clone()),
                H.materialIndex = l,
                s.faces.push(H),
                s.faceVertexUvs[0].push([k.clone(), M, A.clone()])
            }
    }
    THREE.Geometry.call(this),
    this.type = "BoxGeometry",
    this.parameters = {
        width: e,
        height: t,
        depth: i,
        widthSegments: n,
        heightSegments: r,
        depthSegments: o
    },
    this.widthSegments = n || 1,
    this.heightSegments = r || 1,
    this.depthSegments = o || 1;
    var s = this
      , l = e / 2
      , c = t / 2
      , d = i / 2;
    a("z", "y", -1, -1, i, t, l, 0),
    a("z", "y", 1, -1, i, t, -l, 1),
    a("x", "z", 1, 1, e, i, c, 2),
    a("x", "z", 1, -1, e, i, -c, 3),
    a("x", "y", 1, -1, e, t, d, 4),
    a("x", "y", -1, -1, e, t, -d, 5),
    this.mergeVertices()
}
,
THREE.BoxGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.CircleGeometry = function(e, t, i, n) {
    THREE.Geometry.call(this),
    this.type = "CircleGeometry",
    this.parameters = {
        radius: e,
        segments: t,
        thetaStart: i,
        thetaLength: n
    },
    e = e || 50,
    t = void 0 !== t ? Math.max(3, t) : 8,
    i = void 0 !== i ? i : 0,
    n = void 0 !== n ? n : 2 * Math.PI;
    var r, o = [], a = new THREE.Vector3, s = new THREE.Vector2(.5,.5);
    for (this.vertices.push(a),
    o.push(s),
    r = 0; t >= r; r++) {
        var l = new THREE.Vector3
          , c = i + r / t * n;
        l.x = e * Math.cos(c),
        l.y = e * Math.sin(c),
        this.vertices.push(l),
        o.push(new THREE.Vector2((l.x / e + 1) / 2,(l.y / e + 1) / 2))
    }
    var d = new THREE.Vector3(0,0,1);
    for (r = 1; t >= r; r++)
        this.faces.push(new THREE.Face3(r,r + 1,0,[d.clone(), d.clone(), d.clone()])),
        this.faceVertexUvs[0].push([o[r].clone(), o[r + 1].clone(), s.clone()]);
    this.computeFaceNormals(),
    this.boundingSphere = new THREE.Sphere(new THREE.Vector3,e)
}
,
THREE.CircleGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.CubeGeometry = function(e, t, i, n, r, o) {
    return console.warn("THREE.CubeGeometry has been renamed to THREE.BoxGeometry."),
    new THREE.BoxGeometry(e,t,i,n,r,o)
}
,
THREE.CylinderGeometry = function(e, t, i, n, r, o) {
    THREE.Geometry.call(this),
    this.type = "CylinderGeometry",
    this.parameters = {
        radiusTop: e,
        radiusBottom: t,
        height: i,
        radialSegments: n,
        heightSegments: r,
        openEnded: o
    },
    e = void 0 !== e ? e : 20,
    t = void 0 !== t ? t : 20,
    i = void 0 !== i ? i : 100,
    n = n || 8,
    r = r || 1,
    o = void 0 !== o ? o : !1;
    var a, s, l = i / 2, c = [], d = [];
    for (s = 0; r >= s; s++) {
        var h = []
          , u = []
          , p = s / r
          , f = p * (t - e) + e;
        for (a = 0; n >= a; a++) {
            var g = a / n
              , m = new THREE.Vector3;
            m.x = f * Math.sin(g * Math.PI * 2),
            m.y = -p * i + l,
            m.z = f * Math.cos(g * Math.PI * 2),
            this.vertices.push(m),
            h.push(this.vertices.length - 1),
            u.push(new THREE.Vector2(g,1 - p))
        }
        c.push(h),
        d.push(u)
    }
    var v, y, b = (t - e) / i;
    for (a = 0; n > a; a++)
        for (0 !== e ? (v = this.vertices[c[0][a]].clone(),
        y = this.vertices[c[0][a + 1]].clone()) : (v = this.vertices[c[1][a]].clone(),
        y = this.vertices[c[1][a + 1]].clone()),
        v.setY(Math.sqrt(v.x * v.x + v.z * v.z) * b).normalize(),
        y.setY(Math.sqrt(y.x * y.x + y.z * y.z) * b).normalize(),
        s = 0; r > s; s++) {
            var w = c[s][a]
              , x = c[s + 1][a]
              , E = c[s + 1][a + 1]
              , _ = c[s][a + 1]
              , T = v.clone()
              , C = v.clone()
              , R = y.clone()
              , S = y.clone()
              , k = d[s][a].clone()
              , M = d[s + 1][a].clone()
              , A = d[s + 1][a + 1].clone()
              , H = d[s][a + 1].clone();
            this.faces.push(new THREE.Face3(w,x,_,[T, C, S])),
            this.faceVertexUvs[0].push([k, M, H]),
            this.faces.push(new THREE.Face3(x,E,_,[C.clone(), R, S.clone()])),
            this.faceVertexUvs[0].push([M.clone(), A, H.clone()])
        }
    if (o === !1 && e > 0)
        for (this.vertices.push(new THREE.Vector3(0,l,0)),
        a = 0; n > a; a++) {
            var w = c[0][a]
              , x = c[0][a + 1]
              , E = this.vertices.length - 1
              , T = new THREE.Vector3(0,1,0)
              , C = new THREE.Vector3(0,1,0)
              , R = new THREE.Vector3(0,1,0)
              , k = d[0][a].clone()
              , M = d[0][a + 1].clone()
              , A = new THREE.Vector2(M.x,0);
            this.faces.push(new THREE.Face3(w,x,E,[T, C, R])),
            this.faceVertexUvs[0].push([k, M, A])
        }
    if (o === !1 && t > 0)
        for (this.vertices.push(new THREE.Vector3(0,-l,0)),
        a = 0; n > a; a++) {
            var w = c[s][a + 1]
              , x = c[s][a]
              , E = this.vertices.length - 1
              , T = new THREE.Vector3(0,-1,0)
              , C = new THREE.Vector3(0,-1,0)
              , R = new THREE.Vector3(0,-1,0)
              , k = d[s][a + 1].clone()
              , M = d[s][a].clone()
              , A = new THREE.Vector2(M.x,1);
            this.faces.push(new THREE.Face3(w,x,E,[T, C, R])),
            this.faceVertexUvs[0].push([k, M, A])
        }
    this.computeFaceNormals()
}
,
THREE.CylinderGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.ExtrudeGeometry = function(e, t) {
    return "undefined" == typeof e ? void (e = []) : (THREE.Geometry.call(this),
    this.type = "ExtrudeGeometry",
    e = e instanceof Array ? e : [e],
    this.addShapeList(e, t),
    void this.computeFaceNormals())
}
,
THREE.ExtrudeGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.ExtrudeGeometry.prototype.addShapeList = function(e, t) {
    for (var i = e.length, n = 0; i > n; n++) {
        var r = e[n];
        this.addShape(r, t)
    }
}
,
THREE.ExtrudeGeometry.prototype.addShape = function(e, t) {
    function i(e, t, i) {
        return t || console.log("die"),
        t.clone().multiplyScalar(i).add(e)
    }
    function n(e, t, i) {
        var n, r, o = 1e-10, a = 1, s = e.x - t.x, l = e.y - t.y, c = i.x - e.x, d = i.y - e.y, h = s * s + l * l, u = s * d - l * c;
        if (Math.abs(u) > o) {
            var p = Math.sqrt(h)
              , f = Math.sqrt(c * c + d * d)
              , g = t.x - l / p
              , m = t.y + s / p
              , v = i.x - d / f
              , y = i.y + c / f
              , b = ((v - g) * d - (y - m) * c) / (s * d - l * c);
            n = g + s * b - e.x,
            r = m + l * b - e.y;
            var w = n * n + r * r;
            if (2 >= w)
                return new THREE.Vector2(n,r);
            a = Math.sqrt(w / 2)
        } else {
            var x = !1;
            s > o ? c > o && (x = !0) : -o > s ? -o > c && (x = !0) : Math.sign(l) == Math.sign(d) && (x = !0),
            x ? (n = -l,
            r = s,
            a = Math.sqrt(h)) : (n = s,
            r = l,
            a = Math.sqrt(h / 2))
        }
        return new THREE.Vector2(n / a,r / a)
    }
    function r() {
        if (b) {
            var e = 0
              , t = V * e;
            for (q = 0; W > q; q++)
                U = L[q],
                l(U[2] + t, U[1] + t, U[0] + t);
            for (e = x + 2 * y,
            t = V * e,
            q = 0; W > q; q++)
                U = L[q],
                l(U[0] + t, U[1] + t, U[2] + t)
        } else {
            for (q = 0; W > q; q++)
                U = L[q],
                l(U[2], U[1], U[0]);
            for (q = 0; W > q; q++)
                U = L[q],
                l(U[0] + V * x, U[1] + V * x, U[2] + V * x)
        }
    }
    function o() {
        var e = 0;
        for (a(I, e),
        e += I.length,
        k = 0,
        M = D.length; M > k; k++)
            S = D[k],
            a(S, e),
            e += S.length
    }
    function a(e, t) {
        var i, n;
        for (q = e.length; --q >= 0; ) {
            i = q,
            n = q - 1,
            0 > n && (n = e.length - 1);
            var r = 0
              , o = x + 2 * y;
            for (r = 0; o > r; r++) {
                var a = V * r
                  , s = V * (r + 1)
                  , l = t + i + a
                  , d = t + n + a
                  , h = t + n + s
                  , u = t + i + s;
                c(l, d, h, u, e, r, o, i, n)
            }
        }
    }
    function s(e, t, i) {
        A.vertices.push(new THREE.Vector3(e,t,i))
    }
    function l(e, t, i) {
        e += H,
        t += H,
        i += H,
        A.faces.push(new THREE.Face3(e,t,i,null ,null ,T));
        var n = R.generateTopUV(A, e, t, i);
        A.faceVertexUvs[0].push(n)
    }
    function c(e, t, i, n) {
        e += H,
        t += H,
        i += H,
        n += H,
        A.faces.push(new THREE.Face3(e,t,n,null ,null ,C)),
        A.faces.push(new THREE.Face3(t,i,n,null ,null ,C));
        var r = R.generateSideWallUV(A, e, t, i, n);
        A.faceVertexUvs[0].push([r[0], r[1], r[3]]),
        A.faceVertexUvs[0].push([r[1], r[2], r[3]])
    }
    var d, h, u, p, f, g = void 0 !== t.amount ? t.amount : 100, m = void 0 !== t.bevelThickness ? t.bevelThickness : 6, v = void 0 !== t.bevelSize ? t.bevelSize : m - 2, y = void 0 !== t.bevelSegments ? t.bevelSegments : 3, b = void 0 !== t.bevelEnabled ? t.bevelEnabled : !0, w = void 0 !== t.curveSegments ? t.curveSegments : 12, x = void 0 !== t.steps ? t.steps : 1, E = t.extrudePath, _ = !1, T = t.material, C = t.extrudeMaterial, R = void 0 !== t.UVGenerator ? t.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;
    E && (d = E.getSpacedPoints(x),
    _ = !0,
    b = !1,
    h = void 0 !== t.frames ? t.frames : new THREE.TubeGeometry.FrenetFrames(E,x,!1),
    u = new THREE.Vector3,
    p = new THREE.Vector3,
    f = new THREE.Vector3),
    b || (y = 0,
    m = 0,
    v = 0);
    var S, k, M, A = this, H = this.vertices.length, P = e.extractPoints(w), O = P.shape, D = P.holes, $ = !THREE.Shape.Utils.isClockWise(O);
    if ($) {
        for (O = O.reverse(),
        k = 0,
        M = D.length; M > k; k++)
            S = D[k],
            THREE.Shape.Utils.isClockWise(S) && (D[k] = S.reverse());
        $ = !1
    }
    var L = THREE.Shape.Utils.triangulateShape(O, D)
      , I = O;
    for (k = 0,
    M = D.length; M > k; k++)
        S = D[k],
        O = O.concat(S);
    for (var F, B, j, N, z, U, V = O.length, W = L.length, G = (I.length,
    180 / Math.PI,
    []), q = 0, X = I.length, Y = X - 1, J = q + 1; X > q; q++,
    Y++,
    J++) {
        Y === X && (Y = 0),
        J === X && (J = 0);
        {
            I[q],
            I[Y],
            I[J]
        }
        G[q] = n(I[q], I[Y], I[J])
    }
    var K, Z = [], Q = G.concat();
    for (k = 0,
    M = D.length; M > k; k++) {
        for (S = D[k],
        K = [],
        q = 0,
        X = S.length,
        Y = X - 1,
        J = q + 1; X > q; q++,
        Y++,
        J++)
            Y === X && (Y = 0),
            J === X && (J = 0),
            K[q] = n(S[q], S[Y], S[J]);
        Z.push(K),
        Q = Q.concat(K)
    }
    for (F = 0; y > F; F++) {
        for (j = F / y,
        N = m * (1 - j),
        B = v * Math.sin(j * Math.PI / 2),
        q = 0,
        X = I.length; X > q; q++)
            z = i(I[q], G[q], B),
            s(z.x, z.y, -N);
        for (k = 0,
        M = D.length; M > k; k++)
            for (S = D[k],
            K = Z[k],
            q = 0,
            X = S.length; X > q; q++)
                z = i(S[q], K[q], B),
                s(z.x, z.y, -N)
    }
    for (B = v,
    q = 0; V > q; q++)
        z = b ? i(O[q], Q[q], B) : O[q],
        _ ? (p.copy(h.normals[0]).multiplyScalar(z.x),
        u.copy(h.binormals[0]).multiplyScalar(z.y),
        f.copy(d[0]).add(p).add(u),
        s(f.x, f.y, f.z)) : s(z.x, z.y, 0);
    var et;
    for (et = 1; x >= et; et++)
        for (q = 0; V > q; q++)
            z = b ? i(O[q], Q[q], B) : O[q],
            _ ? (p.copy(h.normals[et]).multiplyScalar(z.x),
            u.copy(h.binormals[et]).multiplyScalar(z.y),
            f.copy(d[et]).add(p).add(u),
            s(f.x, f.y, f.z)) : s(z.x, z.y, g / x * et);
    for (F = y - 1; F >= 0; F--) {
        for (j = F / y,
        N = m * (1 - j),
        B = v * Math.sin(j * Math.PI / 2),
        q = 0,
        X = I.length; X > q; q++)
            z = i(I[q], G[q], B),
            s(z.x, z.y, g + N);
        for (k = 0,
        M = D.length; M > k; k++)
            for (S = D[k],
            K = Z[k],
            q = 0,
            X = S.length; X > q; q++)
                z = i(S[q], K[q], B),
                _ ? s(z.x, z.y + d[x - 1].y, d[x - 1].x + N) : s(z.x, z.y, g + N)
    }
    r(),
    o()
}
,
THREE.ExtrudeGeometry.WorldUVGenerator = {
    generateTopUV: function(e, t, i, n) {
        var r = e.vertices
          , o = r[t]
          , a = r[i]
          , s = r[n];
        return [new THREE.Vector2(o.x,o.y), new THREE.Vector2(a.x,a.y), new THREE.Vector2(s.x,s.y)]
    },
    generateSideWallUV: function(e, t, i, n, r) {
        var o = e.vertices
          , a = o[t]
          , s = o[i]
          , l = o[n]
          , c = o[r];
        return Math.abs(a.y - s.y) < .01 ? [new THREE.Vector2(a.x,1 - a.z), new THREE.Vector2(s.x,1 - s.z), new THREE.Vector2(l.x,1 - l.z), new THREE.Vector2(c.x,1 - c.z)] : [new THREE.Vector2(a.y,1 - a.z), new THREE.Vector2(s.y,1 - s.z), new THREE.Vector2(l.y,1 - l.z), new THREE.Vector2(c.y,1 - c.z)]
    }
},
THREE.ShapeGeometry = function(e, t) {
    THREE.Geometry.call(this),
    this.type = "ShapeGeometry",
    e instanceof Array == !1 && (e = [e]),
    this.addShapeList(e, t),
    this.computeFaceNormals()
}
,
THREE.ShapeGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.ShapeGeometry.prototype.addShapeList = function(e, t) {
    for (var i = 0, n = e.length; n > i; i++)
        this.addShape(e[i], t);
    return this
}
,
THREE.ShapeGeometry.prototype.addShape = function(e, t) {
    void 0 === t && (t = {});
    var i, n, r, o = void 0 !== t.curveSegments ? t.curveSegments : 12, a = t.material, s = void 0 === t.UVGenerator ? THREE.ExtrudeGeometry.WorldUVGenerator : t.UVGenerator, l = this.vertices.length, c = e.extractPoints(o), d = c.shape, h = c.holes, u = !THREE.Shape.Utils.isClockWise(d);
    if (u) {
        for (d = d.reverse(),
        i = 0,
        n = h.length; n > i; i++)
            r = h[i],
            THREE.Shape.Utils.isClockWise(r) && (h[i] = r.reverse());
        u = !1
    }
    var p = THREE.Shape.Utils.triangulateShape(d, h)
      , f = d;
    for (i = 0,
    n = h.length; n > i; i++)
        r = h[i],
        d = d.concat(r);
    {
        var g, m, v = d.length, y = p.length;
        f.length
    }
    for (i = 0; v > i; i++)
        g = d[i],
        this.vertices.push(new THREE.Vector3(g.x,g.y,0));
    for (i = 0; y > i; i++) {
        m = p[i];
        var b = m[0] + l
          , w = m[1] + l
          , x = m[2] + l;
        this.faces.push(new THREE.Face3(b,w,x,null ,null ,a)),
        this.faceVertexUvs[0].push(s.generateTopUV(this, b, w, x))
    }
}
,
THREE.LatheGeometry = function(e, t, i, n) {
    THREE.Geometry.call(this),
    this.type = "LatheGeometry",
    this.parameters = {
        points: e,
        segments: t,
        phiStart: i,
        phiLength: n
    },
    t = t || 12,
    i = i || 0,
    n = n || 2 * Math.PI;
    for (var r = 1 / (e.length - 1), o = 1 / t, a = 0, s = t; s >= a; a++)
        for (var l = i + a * o * n, c = Math.cos(l), d = Math.sin(l), h = 0, u = e.length; u > h; h++) {
            var p = e[h]
              , f = new THREE.Vector3;
            f.x = c * p.x - d * p.y,
            f.y = d * p.x + c * p.y,
            f.z = p.z,
            this.vertices.push(f)
        }
    for (var g = e.length, a = 0, s = t; s > a; a++)
        for (var h = 0, u = e.length - 1; u > h; h++) {
            var m = h + g * a
              , v = m
              , y = m + g
              , c = m + 1 + g
              , b = m + 1
              , w = a * o
              , x = h * r
              , E = w + o
              , _ = x + r;
            this.faces.push(new THREE.Face3(v,y,b)),
            this.faceVertexUvs[0].push([new THREE.Vector2(w,x), new THREE.Vector2(E,x), new THREE.Vector2(w,_)]),
            this.faces.push(new THREE.Face3(y,c,b)),
            this.faceVertexUvs[0].push([new THREE.Vector2(E,x), new THREE.Vector2(E,_), new THREE.Vector2(w,_)])
        }
    this.mergeVertices(),
    this.computeFaceNormals(),
    this.computeVertexNormals()
}
,
THREE.LatheGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.PlaneGeometry = function(e, t, i, n) {
    console.info("THREE.PlaneGeometry: Consider using THREE.PlaneBufferGeometry for lower memory footprint."),
    THREE.Geometry.call(this),
    this.type = "PlaneGeometry",
    this.parameters = {
        width: e,
        height: t,
        widthSegments: i,
        heightSegments: n
    },
    this.fromBufferGeometry(new THREE.PlaneBufferGeometry(e,t,i,n))
}
,
THREE.PlaneGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.PlaneBufferGeometry = function(e, t, i, n) {
    THREE.BufferGeometry.call(this),
    this.type = "PlaneBufferGeometry",
    this.parameters = {
        width: e,
        height: t,
        widthSegments: i,
        heightSegments: n
    };
    for (var r = e / 2, o = t / 2, a = i || 1, s = n || 1, l = a + 1, c = s + 1, d = e / a, h = t / s, u = new Float32Array(l * c * 3), p = new Float32Array(l * c * 3), f = new Float32Array(l * c * 2), g = 0, m = 0, v = 0; c > v; v++)
        for (var y = v * h - o, b = 0; l > b; b++) {
            var w = b * d - r;
            u[g] = w,
            u[g + 1] = -y,
            p[g + 2] = 1,
            f[m] = b / a,
            f[m + 1] = 1 - v / s,
            g += 3,
            m += 2
        }
    g = 0;
    for (var x = new (u.length / 3 > 65535 ? Uint32Array : Uint16Array)(a * s * 6), v = 0; s > v; v++)
        for (var b = 0; a > b; b++) {
            var E = b + l * v
              , _ = b + l * (v + 1)
              , T = b + 1 + l * (v + 1)
              , C = b + 1 + l * v;
            x[g] = E,
            x[g + 1] = _,
            x[g + 2] = C,
            x[g + 3] = _,
            x[g + 4] = T,
            x[g + 5] = C,
            g += 6
        }
    this.addAttribute("index", new THREE.BufferAttribute(x,1)),
    this.addAttribute("position", new THREE.BufferAttribute(u,3)),
    this.addAttribute("normal", new THREE.BufferAttribute(p,3)),
    this.addAttribute("uv", new THREE.BufferAttribute(f,2))
}
,
THREE.PlaneBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),
THREE.RingGeometry = function(e, t, i, n, r, o) {
    THREE.Geometry.call(this),
    this.type = "RingGeometry",
    this.parameters = {
        innerRadius: e,
        outerRadius: t,
        thetaSegments: i,
        phiSegments: n,
        thetaStart: r,
        thetaLength: o
    },
    e = e || 0,
    t = t || 50,
    r = void 0 !== r ? r : 0,
    o = void 0 !== o ? o : 2 * Math.PI,
    i = void 0 !== i ? Math.max(3, i) : 8,
    n = void 0 !== n ? Math.max(1, n) : 8;
    var a, s, l = [], c = e, d = (t - e) / n;
    for (a = 0; n + 1 > a; a++) {
        for (s = 0; i + 1 > s; s++) {
            var h = new THREE.Vector3
              , u = r + s / i * o;
            h.x = c * Math.cos(u),
            h.y = c * Math.sin(u),
            this.vertices.push(h),
            l.push(new THREE.Vector2((h.x / t + 1) / 2,(h.y / t + 1) / 2))
        }
        c += d
    }
    var p = new THREE.Vector3(0,0,1);
    for (a = 0; n > a; a++) {
        var f = a * (i + 1);
        for (s = 0; i > s; s++) {
            var u = s + f
              , g = u
              , m = u + i + 1
              , v = u + i + 2;
            this.faces.push(new THREE.Face3(g,m,v,[p.clone(), p.clone(), p.clone()])),
            this.faceVertexUvs[0].push([l[g].clone(), l[m].clone(), l[v].clone()]),
            g = u,
            m = u + i + 2,
            v = u + 1,
            this.faces.push(new THREE.Face3(g,m,v,[p.clone(), p.clone(), p.clone()])),
            this.faceVertexUvs[0].push([l[g].clone(), l[m].clone(), l[v].clone()])
        }
    }
    this.computeFaceNormals(),
    this.boundingSphere = new THREE.Sphere(new THREE.Vector3,c)
}
,
THREE.RingGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.SphereGeometry = function(e, t, i, n, r, o, a) {
    THREE.Geometry.call(this),
    this.type = "SphereGeometry",
    this.parameters = {
        radius: e,
        widthSegments: t,
        heightSegments: i,
        phiStart: n,
        phiLength: r,
        thetaStart: o,
        thetaLength: a
    },
    e = e || 50,
    t = Math.max(3, Math.floor(t) || 8),
    i = Math.max(2, Math.floor(i) || 6),
    n = void 0 !== n ? n : 0,
    r = void 0 !== r ? r : 2 * Math.PI,
    o = void 0 !== o ? o : 0,
    a = void 0 !== a ? a : Math.PI;
    var s, l, c = [], d = [];
    for (l = 0; i >= l; l++) {
        var h = []
          , u = [];
        for (s = 0; t >= s; s++) {
            var p = s / t
              , f = l / i
              , g = new THREE.Vector3;
            g.x = -e * Math.cos(n + p * r) * Math.sin(o + f * a),
            g.y = e * Math.cos(o + f * a),
            g.z = e * Math.sin(n + p * r) * Math.sin(o + f * a),
            this.vertices.push(g),
            h.push(this.vertices.length - 1),
            u.push(new THREE.Vector2(p,1 - f))
        }
        c.push(h),
        d.push(u)
    }
    for (l = 0; i > l; l++)
        for (s = 0; t > s; s++) {
            var m = c[l][s + 1]
              , v = c[l][s]
              , y = c[l + 1][s]
              , b = c[l + 1][s + 1]
              , w = this.vertices[m].clone().normalize()
              , x = this.vertices[v].clone().normalize()
              , E = this.vertices[y].clone().normalize()
              , _ = this.vertices[b].clone().normalize()
              , T = d[l][s + 1].clone()
              , C = d[l][s].clone()
              , R = d[l + 1][s].clone()
              , S = d[l + 1][s + 1].clone();
            Math.abs(this.vertices[m].y) === e ? (T.x = (T.x + C.x) / 2,
            this.faces.push(new THREE.Face3(m,y,b,[w, E, _])),
            this.faceVertexUvs[0].push([T, R, S])) : Math.abs(this.vertices[y].y) === e ? (R.x = (R.x + S.x) / 2,
            this.faces.push(new THREE.Face3(m,v,y,[w, x, E])),
            this.faceVertexUvs[0].push([T, C, R])) : (this.faces.push(new THREE.Face3(m,v,b,[w, x, _])),
            this.faceVertexUvs[0].push([T, C, S]),
            this.faces.push(new THREE.Face3(v,y,b,[x.clone(), E, _.clone()])),
            this.faceVertexUvs[0].push([C.clone(), R, S.clone()]))
        }
    this.computeFaceNormals(),
    this.boundingSphere = new THREE.Sphere(new THREE.Vector3,e)
}
,
THREE.SphereGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.TextGeometry = function(e, t) {
    t = t || {};
    var i = THREE.FontUtils.generateShapes(e, t);
    t.amount = void 0 !== t.height ? t.height : 50,
    void 0 === t.bevelThickness && (t.bevelThickness = 10),
    void 0 === t.bevelSize && (t.bevelSize = 8),
    void 0 === t.bevelEnabled && (t.bevelEnabled = !1),
    THREE.ExtrudeGeometry.call(this, i, t),
    this.type = "TextGeometry"
}
,
THREE.TextGeometry.prototype = Object.create(THREE.ExtrudeGeometry.prototype),
THREE.TorusGeometry = function(e, t, i, n, r) {
    THREE.Geometry.call(this),
    this.type = "TorusGeometry",
    this.parameters = {
        radius: e,
        tube: t,
        radialSegments: i,
        tubularSegments: n,
        arc: r
    },
    e = e || 100,
    t = t || 40,
    i = i || 8,
    n = n || 6,
    r = r || 2 * Math.PI;
    for (var o = new THREE.Vector3, a = [], s = [], l = 0; i >= l; l++)
        for (var c = 0; n >= c; c++) {
            var d = c / n * r
              , h = l / i * Math.PI * 2;
            o.x = e * Math.cos(d),
            o.y = e * Math.sin(d);
            var u = new THREE.Vector3;
            u.x = (e + t * Math.cos(h)) * Math.cos(d),
            u.y = (e + t * Math.cos(h)) * Math.sin(d),
            u.z = t * Math.sin(h),
            this.vertices.push(u),
            a.push(new THREE.Vector2(c / n,l / i)),
            s.push(u.clone().sub(o).normalize())
        }
    for (var l = 1; i >= l; l++)
        for (var c = 1; n >= c; c++) {
            var p = (n + 1) * l + c - 1
              , f = (n + 1) * (l - 1) + c - 1
              , g = (n + 1) * (l - 1) + c
              , m = (n + 1) * l + c
              , v = new THREE.Face3(p,f,m,[s[p].clone(), s[f].clone(), s[m].clone()]);
            this.faces.push(v),
            this.faceVertexUvs[0].push([a[p].clone(), a[f].clone(), a[m].clone()]),
            v = new THREE.Face3(f,g,m,[s[f].clone(), s[g].clone(), s[m].clone()]),
            this.faces.push(v),
            this.faceVertexUvs[0].push([a[f].clone(), a[g].clone(), a[m].clone()])
        }
    this.computeFaceNormals()
}
,
THREE.TorusGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.TorusKnotGeometry = function(e, t, i, n, r, o, a) {
    function s(e, t, i, n, r) {
        var o = Math.cos(e)
          , a = Math.sin(e)
          , s = t / i * e
          , l = Math.cos(s)
          , c = n * (2 + l) * .5 * o
          , d = n * (2 + l) * a * .5
          , h = r * n * Math.sin(s) * .5;
        return new THREE.Vector3(c,d,h)
    }
    THREE.Geometry.call(this),
    this.type = "TorusKnotGeometry",
    this.parameters = {
        radius: e,
        tube: t,
        radialSegments: i,
        tubularSegments: n,
        p: r,
        q: o,
        heightScale: a
    },
    e = e || 100,
    t = t || 40,
    i = i || 64,
    n = n || 8,
    r = r || 2,
    o = o || 3,
    a = a || 1;
    for (var l = new Array(i), c = new THREE.Vector3, d = new THREE.Vector3, h = new THREE.Vector3, u = 0; i > u; ++u) {
        l[u] = new Array(n);
        var p = u / i * 2 * r * Math.PI
          , f = s(p, o, r, e, a)
          , g = s(p + .01, o, r, e, a);
        c.subVectors(g, f),
        d.addVectors(g, f),
        h.crossVectors(c, d),
        d.crossVectors(h, c),
        h.normalize(),
        d.normalize();
        for (var m = 0; n > m; ++m) {
            var v = m / n * 2 * Math.PI
              , y = -t * Math.cos(v)
              , b = t * Math.sin(v)
              , w = new THREE.Vector3;
            w.x = f.x + y * d.x + b * h.x,
            w.y = f.y + y * d.y + b * h.y,
            w.z = f.z + y * d.z + b * h.z,
            l[u][m] = this.vertices.push(w) - 1
        }
    }
    for (var u = 0; i > u; ++u)
        for (var m = 0; n > m; ++m) {
            var x = (u + 1) % i
              , E = (m + 1) % n
              , _ = l[u][m]
              , T = l[x][m]
              , C = l[x][E]
              , R = l[u][E]
              , S = new THREE.Vector2(u / i,m / n)
              , k = new THREE.Vector2((u + 1) / i,m / n)
              , M = new THREE.Vector2((u + 1) / i,(m + 1) / n)
              , A = new THREE.Vector2(u / i,(m + 1) / n);
            this.faces.push(new THREE.Face3(_,T,R)),
            this.faceVertexUvs[0].push([S, k, A]),
            this.faces.push(new THREE.Face3(T,C,R)),
            this.faceVertexUvs[0].push([k.clone(), M, A.clone()])
        }
    this.computeFaceNormals(),
    this.computeVertexNormals()
}
,
THREE.TorusKnotGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.TubeGeometry = function(e, t, i, n, r) {
    function o(e, t, i) {
        return S.vertices.push(new THREE.Vector3(e,t,i)) - 1
    }
    THREE.Geometry.call(this),
    this.type = "TubeGeometry",
    this.parameters = {
        path: e,
        segments: t,
        radius: i,
        radialSegments: n,
        closed: r
    },
    t = t || 64,
    i = i || 1,
    n = n || 8,
    r = r || !1;
    var a, s, l, c, d, h, u, p, f, g, m, v, y, b, w, x, E, _, T, C, R = [], S = this, k = t + 1, M = new THREE.Vector3, A = new THREE.TubeGeometry.FrenetFrames(e,t,r), H = A.tangents, P = A.normals, O = A.binormals;
    for (this.tangents = H,
    this.normals = P,
    this.binormals = O,
    f = 0; k > f; f++)
        for (R[f] = [],
        c = f / (k - 1),
        p = e.getPointAt(c),
        a = H[f],
        s = P[f],
        l = O[f],
        g = 0; n > g; g++)
            d = g / n * 2 * Math.PI,
            h = -i * Math.cos(d),
            u = i * Math.sin(d),
            M.copy(p),
            M.x += h * s.x + u * l.x,
            M.y += h * s.y + u * l.y,
            M.z += h * s.z + u * l.z,
            R[f][g] = o(M.x, M.y, M.z);
    for (f = 0; t > f; f++)
        for (g = 0; n > g; g++)
            m = r ? (f + 1) % t : f + 1,
            v = (g + 1) % n,
            y = R[f][g],
            b = R[m][g],
            w = R[m][v],
            x = R[f][v],
            E = new THREE.Vector2(f / t,g / n),
            _ = new THREE.Vector2((f + 1) / t,g / n),
            T = new THREE.Vector2((f + 1) / t,(g + 1) / n),
            C = new THREE.Vector2(f / t,(g + 1) / n),
            this.faces.push(new THREE.Face3(y,b,x)),
            this.faceVertexUvs[0].push([E, _, C]),
            this.faces.push(new THREE.Face3(b,w,x)),
            this.faceVertexUvs[0].push([_.clone(), T, C.clone()]);
    this.computeFaceNormals(),
    this.computeVertexNormals()
}
,
THREE.TubeGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.TubeGeometry.FrenetFrames = function(e, t, i) {
    function n() {
        p[0] = new THREE.Vector3,
        f[0] = new THREE.Vector3,
        o = Number.MAX_VALUE,
        a = Math.abs(u[0].x),
        s = Math.abs(u[0].y),
        l = Math.abs(u[0].z),
        o >= a && (o = a,
        h.set(1, 0, 0)),
        o >= s && (o = s,
        h.set(0, 1, 0)),
        o >= l && h.set(0, 0, 1),
        g.crossVectors(u[0], h).normalize(),
        p[0].crossVectors(u[0], g),
        f[0].crossVectors(u[0], p[0])
    }
    var r, o, a, s, l, c, d, h = (new THREE.Vector3,
    new THREE.Vector3), u = (new THREE.Vector3,
    []), p = [], f = [], g = new THREE.Vector3, m = new THREE.Matrix4, v = t + 1, y = 1e-4;
    for (this.tangents = u,
    this.normals = p,
    this.binormals = f,
    c = 0; v > c; c++)
        d = c / (v - 1),
        u[c] = e.getTangentAt(d),
        u[c].normalize();
    for (n(),
    c = 1; v > c; c++)
        p[c] = p[c - 1].clone(),
        f[c] = f[c - 1].clone(),
        g.crossVectors(u[c - 1], u[c]),
        g.length() > y && (g.normalize(),
        r = Math.acos(THREE.Math.clamp(u[c - 1].dot(u[c]), -1, 1)),
        p[c].applyMatrix4(m.makeRotationAxis(g, r))),
        f[c].crossVectors(u[c], p[c]);
    if (i)
        for (r = Math.acos(THREE.Math.clamp(p[0].dot(p[v - 1]), -1, 1)),
        r /= v - 1,
        u[0].dot(g.crossVectors(p[0], p[v - 1])) > 0 && (r = -r),
        c = 1; v > c; c++)
            p[c].applyMatrix4(m.makeRotationAxis(u[c], r * c)),
            f[c].crossVectors(u[c], p[c])
}
,
THREE.PolyhedronGeometry = function(e, t, i, n) {
    function r(e) {
        var t = e.normalize().clone();
        t.index = d.vertices.push(t) - 1;
        var i = s(e) / 2 / Math.PI + .5
          , n = l(e) / Math.PI + .5;
        return t.uv = new THREE.Vector2(i,1 - n),
        t
    }
    function o(e, t, i) {
        var n = new THREE.Face3(e.index,t.index,i.index,[e.clone(), t.clone(), i.clone()]);
        d.faces.push(n),
        b.copy(e).add(t).add(i).divideScalar(3);
        var r = s(b);
        d.faceVertexUvs[0].push([c(e.uv, e, r), c(t.uv, t, r), c(i.uv, i, r)])
    }
    function a(e, t) {
        for (var i = Math.pow(2, t), n = (Math.pow(4, t),
        r(d.vertices[e.a])), a = r(d.vertices[e.b]), s = r(d.vertices[e.c]), l = [], c = 0; i >= c; c++) {
            l[c] = [];
            for (var h = r(n.clone().lerp(s, c / i)), u = r(a.clone().lerp(s, c / i)), p = i - c, f = 0; p >= f; f++)
                l[c][f] = 0 == f && c == i ? h : r(h.clone().lerp(u, f / p))
        }
        for (var c = 0; i > c; c++)
            for (var f = 0; 2 * (i - c) - 1 > f; f++) {
                var g = Math.floor(f / 2);
                f % 2 == 0 ? o(l[c][g + 1], l[c + 1][g], l[c][g]) : o(l[c][g + 1], l[c + 1][g + 1], l[c + 1][g])
            }
    }
    function s(e) {
        return Math.atan2(e.z, -e.x)
    }
    function l(e) {
        return Math.atan2(-e.y, Math.sqrt(e.x * e.x + e.z * e.z))
    }
    function c(e, t, i) {
        return 0 > i && 1 === e.x && (e = new THREE.Vector2(e.x - 1,e.y)),
        0 === t.x && 0 === t.z && (e = new THREE.Vector2(i / 2 / Math.PI + .5,e.y)),
        e.clone()
    }
    THREE.Geometry.call(this),
    this.type = "PolyhedronGeometry",
    this.parameters = {
        vertices: e,
        indices: t,
        radius: i,
        detail: n
    },
    i = i || 1,
    n = n || 0;
    for (var d = this, h = 0, u = e.length; u > h; h += 3)
        r(new THREE.Vector3(e[h],e[h + 1],e[h + 2]));
    for (var p = this.vertices, f = [], h = 0, g = 0, u = t.length; u > h; h += 3,
    g++) {
        var m = p[t[h]]
          , v = p[t[h + 1]]
          , y = p[t[h + 2]];
        f[g] = new THREE.Face3(m.index,v.index,y.index,[m.clone(), v.clone(), y.clone()])
    }
    for (var b = new THREE.Vector3, h = 0, u = f.length; u > h; h++)
        a(f[h], n);
    for (var h = 0, u = this.faceVertexUvs[0].length; u > h; h++) {
        var w = this.faceVertexUvs[0][h]
          , x = w[0].x
          , E = w[1].x
          , _ = w[2].x
          , T = Math.max(x, Math.max(E, _))
          , C = Math.min(x, Math.min(E, _));
        T > .9 && .1 > C && (.2 > x && (w[0].x += 1),
        .2 > E && (w[1].x += 1),
        .2 > _ && (w[2].x += 1))
    }
    for (var h = 0, u = this.vertices.length; u > h; h++)
        this.vertices[h].multiplyScalar(i);
    this.mergeVertices(),
    this.computeFaceNormals(),
    this.boundingSphere = new THREE.Sphere(new THREE.Vector3,i)
}
,
THREE.PolyhedronGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.DodecahedronGeometry = function(e, t) {
    this.parameters = {
        radius: e,
        detail: t
    };
    var i = (1 + Math.sqrt(5)) / 2
      , n = 1 / i
      , r = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -n, -i, 0, -n, i, 0, n, -i, 0, n, i, -n, -i, 0, -n, i, 0, n, -i, 0, n, i, 0, -i, 0, -n, i, 0, -n, -i, 0, n, i, 0, n]
      , o = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];
    THREE.PolyhedronGeometry.call(this, r, o, e, t)
}
,
THREE.DodecahedronGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.IcosahedronGeometry = function(e, t) {
    var i = (1 + Math.sqrt(5)) / 2
      , n = [-1, i, 0, 1, i, 0, -1, -i, 0, 1, -i, 0, 0, -1, i, 0, 1, i, 0, -1, -i, 0, 1, -i, i, 0, -1, i, 0, 1, -i, 0, -1, -i, 0, 1]
      , r = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];
    THREE.PolyhedronGeometry.call(this, n, r, e, t),
    this.type = "IcosahedronGeometry",
    this.parameters = {
        radius: e,
        detail: t
    }
}
,
THREE.IcosahedronGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.OctahedronGeometry = function(e, t) {
    this.parameters = {
        radius: e,
        detail: t
    };
    var i = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1]
      , n = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];
    THREE.PolyhedronGeometry.call(this, i, n, e, t),
    this.type = "OctahedronGeometry",
    this.parameters = {
        radius: e,
        detail: t
    }
}
,
THREE.OctahedronGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.TetrahedronGeometry = function(e, t) {
    var i = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1]
      , n = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
    THREE.PolyhedronGeometry.call(this, i, n, e, t),
    this.type = "TetrahedronGeometry",
    this.parameters = {
        radius: e,
        detail: t
    }
}
,
THREE.TetrahedronGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.ParametricGeometry = function(e, t, i) {
    THREE.Geometry.call(this),
    this.type = "ParametricGeometry",
    this.parameters = {
        func: e,
        slices: t,
        stacks: i
    };
    var n, r, o, a, s, l = this.vertices, c = this.faces, d = this.faceVertexUvs[0], h = t + 1;
    for (n = 0; i >= n; n++)
        for (s = n / i,
        r = 0; t >= r; r++)
            a = r / t,
            o = e(a, s),
            l.push(o);
    var u, p, f, g, m, v, y, b;
    for (n = 0; i > n; n++)
        for (r = 0; t > r; r++)
            u = n * h + r,
            p = n * h + r + 1,
            f = (n + 1) * h + r + 1,
            g = (n + 1) * h + r,
            m = new THREE.Vector2(r / t,n / i),
            v = new THREE.Vector2((r + 1) / t,n / i),
            y = new THREE.Vector2((r + 1) / t,(n + 1) / i),
            b = new THREE.Vector2(r / t,(n + 1) / i),
            c.push(new THREE.Face3(u,p,g)),
            d.push([m, v, b]),
            c.push(new THREE.Face3(p,f,g)),
            d.push([v.clone(), y, b.clone()]);
    this.computeFaceNormals(),
    this.computeVertexNormals()
}
,
THREE.ParametricGeometry.prototype = Object.create(THREE.Geometry.prototype),
THREE.AxisHelper = function(e) {
    e = e || 1;
    var t = new Float32Array([0, 0, 0, e, 0, 0, 0, 0, 0, 0, e, 0, 0, 0, 0, 0, 0, e])
      , i = new Float32Array([1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1])
      , n = new THREE.BufferGeometry;
    n.addAttribute("position", new THREE.BufferAttribute(t,3)),
    n.addAttribute("color", new THREE.BufferAttribute(i,3));
    var r = new THREE.LineBasicMaterial({
        vertexColors: THREE.VertexColors
    });
    THREE.Line.call(this, n, r, THREE.LinePieces)
}
,
THREE.AxisHelper.prototype = Object.create(THREE.Line.prototype),
THREE.ArrowHelper = function() {
    var e = new THREE.Geometry;
    e.vertices.push(new THREE.Vector3(0,0,0), new THREE.Vector3(0,1,0));
    var t = new THREE.CylinderGeometry(0,.5,1,5,1);
    return t.applyMatrix((new THREE.Matrix4).makeTranslation(0, -.5, 0)),
    function(i, n, r, o, a, s) {
        THREE.Object3D.call(this),
        void 0 === o && (o = 16776960),
        void 0 === r && (r = 1),
        void 0 === a && (a = .2 * r),
        void 0 === s && (s = .2 * a),
        this.position.copy(n),
        this.line = new THREE.Line(e,new THREE.LineBasicMaterial({
            color: o
        })),
        this.line.matrixAutoUpdate = !1,
        this.add(this.line),
        this.cone = new THREE.Mesh(t,new THREE.MeshBasicMaterial({
            color: o
        })),
        this.cone.matrixAutoUpdate = !1,
        this.add(this.cone),
        this.setDirection(i),
        this.setLength(r, a, s)
    }
}(),
THREE.ArrowHelper.prototype = Object.create(THREE.Object3D.prototype),
THREE.ArrowHelper.prototype.setDirection = function() {
    var e, t = new THREE.Vector3;
    return function(i) {
        i.y > .99999 ? this.quaternion.set(0, 0, 0, 1) : i.y < -.99999 ? this.quaternion.set(1, 0, 0, 0) : (t.set(i.z, 0, -i.x).normalize(),
        e = Math.acos(i.y),
        this.quaternion.setFromAxisAngle(t, e))
    }
}(),
THREE.ArrowHelper.prototype.setLength = function(e, t, i) {
    void 0 === t && (t = .2 * e),
    void 0 === i && (i = .2 * t),
    this.line.scale.set(1, e, 1),
    this.line.updateMatrix(),
    this.cone.scale.set(i, t, i),
    this.cone.position.y = e,
    this.cone.updateMatrix()
}
,
THREE.ArrowHelper.prototype.setColor = function(e) {
    this.line.material.color.set(e),
    this.cone.material.color.set(e)
}
,
THREE.BoxHelper = function(e) {
    var t = new THREE.BufferGeometry;
    t.addAttribute("position", new THREE.BufferAttribute(new Float32Array(72),3)),
    THREE.Line.call(this, t, new THREE.LineBasicMaterial({
        color: 16776960
    }), THREE.LinePieces),
    void 0 !== e && this.update(e)
}
,
THREE.BoxHelper.prototype = Object.create(THREE.Line.prototype),
THREE.BoxHelper.prototype.update = function(e) {
    var t = e.geometry;
    null === t.boundingBox && t.computeBoundingBox();
    var i = t.boundingBox.min
      , n = t.boundingBox.max
      , r = this.geometry.attributes.position.array;
    r[0] = n.x,
    r[1] = n.y,
    r[2] = n.z,
    r[3] = i.x,
    r[4] = n.y,
    r[5] = n.z,
    r[6] = i.x,
    r[7] = n.y,
    r[8] = n.z,
    r[9] = i.x,
    r[10] = i.y,
    r[11] = n.z,
    r[12] = i.x,
    r[13] = i.y,
    r[14] = n.z,
    r[15] = n.x,
    r[16] = i.y,
    r[17] = n.z,
    r[18] = n.x,
    r[19] = i.y,
    r[20] = n.z,
    r[21] = n.x,
    r[22] = n.y,
    r[23] = n.z,
    r[24] = n.x,
    r[25] = n.y,
    r[26] = i.z,
    r[27] = i.x,
    r[28] = n.y,
    r[29] = i.z,
    r[30] = i.x,
    r[31] = n.y,
    r[32] = i.z,
    r[33] = i.x,
    r[34] = i.y,
    r[35] = i.z,
    r[36] = i.x,
    r[37] = i.y,
    r[38] = i.z,
    r[39] = n.x,
    r[40] = i.y,
    r[41] = i.z,
    r[42] = n.x,
    r[43] = i.y,
    r[44] = i.z,
    r[45] = n.x,
    r[46] = n.y,
    r[47] = i.z,
    r[48] = n.x,
    r[49] = n.y,
    r[50] = n.z,
    r[51] = n.x,
    r[52] = n.y,
    r[53] = i.z,
    r[54] = i.x,
    r[55] = n.y,
    r[56] = n.z,
    r[57] = i.x,
    r[58] = n.y,
    r[59] = i.z,
    r[60] = i.x,
    r[61] = i.y,
    r[62] = n.z,
    r[63] = i.x,
    r[64] = i.y,
    r[65] = i.z,
    r[66] = n.x,
    r[67] = i.y,
    r[68] = n.z,
    r[69] = n.x,
    r[70] = i.y,
    r[71] = i.z,
    this.geometry.attributes.position.needsUpdate = !0,
    this.geometry.computeBoundingSphere(),
    this.matrix = e.matrixWorld,
    this.matrixAutoUpdate = !1
}
,
THREE.BoundingBoxHelper = function(e, t) {
    var i = void 0 !== t ? t : 8947848;
    this.object = e,
    this.box = new THREE.Box3,
    THREE.Mesh.call(this, new THREE.BoxGeometry(1,1,1), new THREE.MeshBasicMaterial({
        color: i,
        wireframe: !0
    }))
}
,
THREE.BoundingBoxHelper.prototype = Object.create(THREE.Mesh.prototype),
THREE.BoundingBoxHelper.prototype.update = function() {
    this.box.setFromObject(this.object),
    this.box.size(this.scale),
    this.box.center(this.position)
}
,
THREE.CameraHelper = function(e) {
    function t(e, t, n) {
        i(e, n),
        i(t, n)
    }
    function i(e, t) {
        n.vertices.push(new THREE.Vector3),
        n.colors.push(new THREE.Color(t)),
        void 0 === o[e] && (o[e] = []),
        o[e].push(n.vertices.length - 1)
    }
    var n = new THREE.Geometry
      , r = new THREE.LineBasicMaterial({
        color: 16777215,
        vertexColors: THREE.FaceColors
    })
      , o = {}
      , a = 16755200
      , s = 16711680
      , l = 43775
      , c = 16777215
      , d = 3355443;
    t("n1", "n2", a),
    t("n2", "n4", a),
    t("n4", "n3", a),
    t("n3", "n1", a),
    t("f1", "f2", a),
    t("f2", "f4", a),
    t("f4", "f3", a),
    t("f3", "f1", a),
    t("n1", "f1", a),
    t("n2", "f2", a),
    t("n3", "f3", a),
    t("n4", "f4", a),
    t("p", "n1", s),
    t("p", "n2", s),
    t("p", "n3", s),
    t("p", "n4", s),
    t("u1", "u2", l),
    t("u2", "u3", l),
    t("u3", "u1", l),
    t("c", "t", c),
    t("p", "c", d),
    t("cn1", "cn2", d),
    t("cn3", "cn4", d),
    t("cf1", "cf2", d),
    t("cf3", "cf4", d),
    THREE.Line.call(this, n, r, THREE.LinePieces),
    this.camera = e,
    this.matrix = e.matrixWorld,
    this.matrixAutoUpdate = !1,
    this.pointMap = o,
    this.update()
}
,
THREE.CameraHelper.prototype = Object.create(THREE.Line.prototype),
THREE.CameraHelper.prototype.update = function() {
    var e, t, i = new THREE.Vector3, n = new THREE.Camera, r = function(r, o, a, s) {
        i.set(o, a, s).unproject(n);
        var l = t[r];
        if (void 0 !== l)
            for (var c = 0, d = l.length; d > c; c++)
                e.vertices[l[c]].copy(i)
    }
    ;
    return function() {
        e = this.geometry,
        t = this.pointMap;
        var i = 1
          , o = 1;
        n.projectionMatrix.copy(this.camera.projectionMatrix),
        r("c", 0, 0, -1),
        r("t", 0, 0, 1),
        r("n1", -i, -o, -1),
        r("n2", i, -o, -1),
        r("n3", -i, o, -1),
        r("n4", i, o, -1),
        r("f1", -i, -o, 1),
        r("f2", i, -o, 1),
        r("f3", -i, o, 1),
        r("f4", i, o, 1),
        r("u1", .7 * i, 1.1 * o, -1),
        r("u2", .7 * -i, 1.1 * o, -1),
        r("u3", 0, 2 * o, -1),
        r("cf1", -i, 0, 1),
        r("cf2", i, 0, 1),
        r("cf3", 0, -o, 1),
        r("cf4", 0, o, 1),
        r("cn1", -i, 0, -1),
        r("cn2", i, 0, -1),
        r("cn3", 0, -o, -1),
        r("cn4", 0, o, -1),
        e.verticesNeedUpdate = !0
    }
}(),
THREE.DirectionalLightHelper = function(e, t) {
    THREE.Object3D.call(this),
    this.light = e,
    this.light.updateMatrixWorld(),
    this.matrix = e.matrixWorld,
    this.matrixAutoUpdate = !1,
    t = t || 1;
    var i = new THREE.Geometry;
    i.vertices.push(new THREE.Vector3(-t,t,0), new THREE.Vector3(t,t,0), new THREE.Vector3(t,-t,0), new THREE.Vector3(-t,-t,0), new THREE.Vector3(-t,t,0));
    var n = new THREE.LineBasicMaterial({
        fog: !1
    });
    n.color.copy(this.light.color).multiplyScalar(this.light.intensity),
    this.lightPlane = new THREE.Line(i,n),
    this.add(this.lightPlane),
    i = new THREE.Geometry,
    i.vertices.push(new THREE.Vector3, new THREE.Vector3),
    n = new THREE.LineBasicMaterial({
        fog: !1
    }),
    n.color.copy(this.light.color).multiplyScalar(this.light.intensity),
    this.targetLine = new THREE.Line(i,n),
    this.add(this.targetLine),
    this.update()
}
,
THREE.DirectionalLightHelper.prototype = Object.create(THREE.Object3D.prototype),
THREE.DirectionalLightHelper.prototype.dispose = function() {
    this.lightPlane.geometry.dispose(),
    this.lightPlane.material.dispose(),
    this.targetLine.geometry.dispose(),
    this.targetLine.material.dispose()
}
,
THREE.DirectionalLightHelper.prototype.update = function() {
    var e = new THREE.Vector3
      , t = new THREE.Vector3
      , i = new THREE.Vector3;
    return function() {
        e.setFromMatrixPosition(this.light.matrixWorld),
        t.setFromMatrixPosition(this.light.target.matrixWorld),
        i.subVectors(t, e),
        this.lightPlane.lookAt(i),
        this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),
        this.targetLine.geometry.vertices[1].copy(i),
        this.targetLine.geometry.verticesNeedUpdate = !0,
        this.targetLine.material.color.copy(this.lightPlane.material.color)
    }
}(),
THREE.EdgesHelper = function(e, t) {
    var i = void 0 !== t ? t : 16777215
      , n = [0, 0]
      , r = {}
      , o = function(e, t) {
        return e - t
    }
      , a = ["a", "b", "c"]
      , s = new THREE.BufferGeometry
      , l = e.geometry.clone();
    l.mergeVertices(),
    l.computeFaceNormals();
    for (var c = l.vertices, d = l.faces, h = 0, u = 0, p = d.length; p > u; u++)
        for (var f = d[u], g = 0; 3 > g; g++) {
            n[0] = f[a[g]],
            n[1] = f[a[(g + 1) % 3]],
            n.sort(o);
            var m = n.toString();
            void 0 === r[m] ? (r[m] = {
                vert1: n[0],
                vert2: n[1],
                face1: u,
                face2: void 0
            },
            h++) : r[m].face2 = u
        }
    var v = new Float32Array(2 * h * 3)
      , y = 0;
    for (var m in r) {
        var b = r[m];
        if (void 0 === b.face2 || d[b.face1].normal.dot(d[b.face2].normal) < .9999) {
            var w = c[b.vert1];
            v[y++] = w.x,
            v[y++] = w.y,
            v[y++] = w.z,
            w = c[b.vert2],
            v[y++] = w.x,
            v[y++] = w.y,
            v[y++] = w.z
        }
    }
    s.addAttribute("position", new THREE.BufferAttribute(v,3)),
    THREE.Line.call(this, s, new THREE.LineBasicMaterial({
        color: i
    }), THREE.LinePieces),
    this.matrix = e.matrixWorld,
    this.matrixAutoUpdate = !1
}
,
THREE.EdgesHelper.prototype = Object.create(THREE.Line.prototype),
THREE.FaceNormalsHelper = function(e, t, i, n) {
    this.object = e,
    this.size = void 0 !== t ? t : 1;
    for (var r = void 0 !== i ? i : 16776960, o = void 0 !== n ? n : 1, a = new THREE.Geometry, s = this.object.geometry.faces, l = 0, c = s.length; c > l; l++)
        a.vertices.push(new THREE.Vector3, new THREE.Vector3);
    THREE.Line.call(this, a, new THREE.LineBasicMaterial({
        color: r,
        linewidth: o
    }), THREE.LinePieces),
    this.matrixAutoUpdate = !1,
    this.normalMatrix = new THREE.Matrix3,
    this.update()
}
,
THREE.FaceNormalsHelper.prototype = Object.create(THREE.Line.prototype),
THREE.FaceNormalsHelper.prototype.update = function() {
    var e = this.geometry.vertices
      , t = this.object
      , i = t.geometry.vertices
      , n = t.geometry.faces
      , r = t.matrixWorld;
    t.updateMatrixWorld(!0),
    this.normalMatrix.getNormalMatrix(r);
    for (var o = 0, a = 0, s = n.length; s > o; o++,
    a += 2) {
        var l = n[o];
        e[a].copy(i[l.a]).add(i[l.b]).add(i[l.c]).divideScalar(3).applyMatrix4(r),
        e[a + 1].copy(l.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(e[a])
    }
    return this.geometry.verticesNeedUpdate = !0,
    this
}
,
THREE.GridHelper = function(e, t) {
    var i = new THREE.Geometry
      , n = new THREE.LineBasicMaterial({
        vertexColors: THREE.VertexColors
    });
    this.color1 = new THREE.Color(4473924),
    this.color2 = new THREE.Color(8947848);
    for (var r = -e; e >= r; r += t) {
        i.vertices.push(new THREE.Vector3(-e,0,r), new THREE.Vector3(e,0,r), new THREE.Vector3(r,0,-e), new THREE.Vector3(r,0,e));
        var o = 0 === r ? this.color1 : this.color2;
        i.colors.push(o, o, o, o)
    }
    THREE.Line.call(this, i, n, THREE.LinePieces)
}
,
THREE.GridHelper.prototype = Object.create(THREE.Line.prototype),
THREE.GridHelper.prototype.setColors = function(e, t) {
    this.color1.set(e),
    this.color2.set(t),
    this.geometry.colorsNeedUpdate = !0
}
,
THREE.HemisphereLightHelper = function(e, t) {
    THREE.Object3D.call(this),
    this.light = e,
    this.light.updateMatrixWorld(),
    this.matrix = e.matrixWorld,
    this.matrixAutoUpdate = !1,
    this.colors = [new THREE.Color, new THREE.Color];
    var i = new THREE.SphereGeometry(t,4,2);
    i.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI / 2));
    for (var n = 0, r = 8; r > n; n++)
        i.faces[n].color = this.colors[4 > n ? 0 : 1];
    var o = new THREE.MeshBasicMaterial({
        vertexColors: THREE.FaceColors,
        wireframe: !0
    });
    this.lightSphere = new THREE.Mesh(i,o),
    this.add(this.lightSphere),
    this.update()
}
,
THREE.HemisphereLightHelper.prototype = Object.create(THREE.Object3D.prototype),
THREE.HemisphereLightHelper.prototype.dispose = function() {
    this.lightSphere.geometry.dispose(),
    this.lightSphere.material.dispose()
}
,
THREE.HemisphereLightHelper.prototype.update = function() {
    var e = new THREE.Vector3;
    return function() {
        this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),
        this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),
        this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate()),
        this.lightSphere.geometry.colorsNeedUpdate = !0
    }
}(),
THREE.PointLightHelper = function(e, t) {
    this.light = e,
    this.light.updateMatrixWorld();
    var i = new THREE.SphereGeometry(t,4,2)
      , n = new THREE.MeshBasicMaterial({
        wireframe: !0,
        fog: !1
    });
    n.color.copy(this.light.color).multiplyScalar(this.light.intensity),
    THREE.Mesh.call(this, i, n),
    this.matrix = this.light.matrixWorld,
    this.matrixAutoUpdate = !1
}
,
THREE.PointLightHelper.prototype = Object.create(THREE.Mesh.prototype),
THREE.PointLightHelper.prototype.dispose = function() {
    this.geometry.dispose(),
    this.material.dispose()
}
,
THREE.PointLightHelper.prototype.update = function() {
    this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
}
,
THREE.SkeletonHelper = function(e) {
    this.bones = this.getBoneList(e);
    for (var t = new THREE.Geometry, i = 0; i < this.bones.length; i++) {
        var n = this.bones[i];
        n.parent instanceof THREE.Bone && (t.vertices.push(new THREE.Vector3),
        t.vertices.push(new THREE.Vector3),
        t.colors.push(new THREE.Color(0,0,1)),
        t.colors.push(new THREE.Color(0,1,0)))
    }
    var r = new THREE.LineBasicMaterial({
        vertexColors: THREE.VertexColors,
        depthTest: !1,
        depthWrite: !1,
        transparent: !0
    });
    THREE.Line.call(this, t, r, THREE.LinePieces),
    this.root = e,
    this.matrix = e.matrixWorld,
    this.matrixAutoUpdate = !1,
    this.update()
}
,
THREE.SkeletonHelper.prototype = Object.create(THREE.Line.prototype),
THREE.SkeletonHelper.prototype.getBoneList = function(e) {
    var t = [];
    e instanceof THREE.Bone && t.push(e);
    for (var i = 0; i < e.children.length; i++)
        t.push.apply(t, this.getBoneList(e.children[i]));
    return t
}
,
THREE.SkeletonHelper.prototype.update = function() {
    for (var e = this.geometry, t = (new THREE.Matrix4).getInverse(this.root.matrixWorld), i = new THREE.Matrix4, n = 0, r = 0; r < this.bones.length; r++) {
        var o = this.bones[r];
        o.parent instanceof THREE.Bone && (i.multiplyMatrices(t, o.matrixWorld),
        e.vertices[n].setFromMatrixPosition(i),
        i.multiplyMatrices(t, o.parent.matrixWorld),
        e.vertices[n + 1].setFromMatrixPosition(i),
        n += 2)
    }
    e.verticesNeedUpdate = !0,
    e.computeBoundingSphere()
}
,
THREE.SpotLightHelper = function(e) {
    THREE.Object3D.call(this),
    this.light = e,
    this.light.updateMatrixWorld(),
    this.matrix = e.matrixWorld,
    this.matrixAutoUpdate = !1;
    var t = new THREE.CylinderGeometry(0,1,1,8,1,!0);
    t.applyMatrix((new THREE.Matrix4).makeTranslation(0, -.5, 0)),
    t.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI / 2));
    var i = new THREE.MeshBasicMaterial({
        wireframe: !0,
        fog: !1
    });
    this.cone = new THREE.Mesh(t,i),
    this.add(this.cone),
    this.update()
}
,
THREE.SpotLightHelper.prototype = Object.create(THREE.Object3D.prototype),
THREE.SpotLightHelper.prototype.dispose = function() {
    this.cone.geometry.dispose(),
    this.cone.material.dispose()
}
,
THREE.SpotLightHelper.prototype.update = function() {
    var e = new THREE.Vector3
      , t = new THREE.Vector3;
    return function() {
        var i = this.light.distance ? this.light.distance : 1e4
          , n = i * Math.tan(this.light.angle);
        this.cone.scale.set(n, n, i),
        e.setFromMatrixPosition(this.light.matrixWorld),
        t.setFromMatrixPosition(this.light.target.matrixWorld),
        this.cone.lookAt(t.sub(e)),
        this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
    }
}(),
THREE.VertexNormalsHelper = function(e, t, i, n) {
    this.object = e,
    this.size = void 0 !== t ? t : 1;
    for (var r = void 0 !== i ? i : 16711680, o = void 0 !== n ? n : 1, a = new THREE.Geometry, s = (e.geometry.vertices,
    e.geometry.faces), l = 0, c = s.length; c > l; l++)
        for (var d = s[l], h = 0, u = d.vertexNormals.length; u > h; h++)
            a.vertices.push(new THREE.Vector3, new THREE.Vector3);
    THREE.Line.call(this, a, new THREE.LineBasicMaterial({
        color: r,
        linewidth: o
    }), THREE.LinePieces),
    this.matrixAutoUpdate = !1,
    this.normalMatrix = new THREE.Matrix3,
    this.update()
}
,
THREE.VertexNormalsHelper.prototype = Object.create(THREE.Line.prototype),
THREE.VertexNormalsHelper.prototype.update = function() {
    var e = new THREE.Vector3;
    return function() {
        var t = ["a", "b", "c", "d"];
        this.object.updateMatrixWorld(!0),
        this.normalMatrix.getNormalMatrix(this.object.matrixWorld);
        for (var i = this.geometry.vertices, n = this.object.geometry.vertices, r = this.object.geometry.faces, o = this.object.matrixWorld, a = 0, s = 0, l = r.length; l > s; s++)
            for (var c = r[s], d = 0, h = c.vertexNormals.length; h > d; d++) {
                var u = c[t[d]]
                  , p = n[u]
                  , f = c.vertexNormals[d];
                i[a].copy(p).applyMatrix4(o),
                e.copy(f).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),
                e.add(i[a]),
                a += 1,
                i[a].copy(e),
                a += 1
            }
        return this.geometry.verticesNeedUpdate = !0,
        this
    }
}(),
THREE.VertexTangentsHelper = function(e, t, i, n) {
    this.object = e,
    this.size = void 0 !== t ? t : 1;
    for (var r = void 0 !== i ? i : 255, o = void 0 !== n ? n : 1, a = new THREE.Geometry, s = (e.geometry.vertices,
    e.geometry.faces), l = 0, c = s.length; c > l; l++)
        for (var d = s[l], h = 0, u = d.vertexTangents.length; u > h; h++)
            a.vertices.push(new THREE.Vector3),
            a.vertices.push(new THREE.Vector3);
    THREE.Line.call(this, a, new THREE.LineBasicMaterial({
        color: r,
        linewidth: o
    }), THREE.LinePieces),
    this.matrixAutoUpdate = !1,
    this.update()
}
,
THREE.VertexTangentsHelper.prototype = Object.create(THREE.Line.prototype),
THREE.VertexTangentsHelper.prototype.update = function() {
    var e = new THREE.Vector3;
    return function() {
        var t = ["a", "b", "c", "d"];
        this.object.updateMatrixWorld(!0);
        for (var i = this.geometry.vertices, n = this.object.geometry.vertices, r = this.object.geometry.faces, o = this.object.matrixWorld, a = 0, s = 0, l = r.length; l > s; s++)
            for (var c = r[s], d = 0, h = c.vertexTangents.length; h > d; d++) {
                var u = c[t[d]]
                  , p = n[u]
                  , f = c.vertexTangents[d];
                i[a].copy(p).applyMatrix4(o),
                e.copy(f).transformDirection(o).multiplyScalar(this.size),
                e.add(i[a]),
                a += 1,
                i[a].copy(e),
                a += 1
            }
        return this.geometry.verticesNeedUpdate = !0,
        this
    }
}(),
THREE.WireframeHelper = function(e, t) {
    var i = void 0 !== t ? t : 16777215
      , n = [0, 0]
      , r = {}
      , o = function(e, t) {
        return e - t
    }
      , a = ["a", "b", "c"]
      , s = new THREE.BufferGeometry;
    if (e.geometry instanceof THREE.Geometry) {
        for (var l = e.geometry.vertices, c = e.geometry.faces, d = 0, h = new Uint32Array(6 * c.length), u = 0, p = c.length; p > u; u++)
            for (var f = c[u], g = 0; 3 > g; g++) {
                n[0] = f[a[g]],
                n[1] = f[a[(g + 1) % 3]],
                n.sort(o);
                var m = n.toString();
                void 0 === r[m] && (h[2 * d] = n[0],
                h[2 * d + 1] = n[1],
                r[m] = !0,
                d++)
            }
        for (var v = new Float32Array(2 * d * 3), u = 0, p = d; p > u; u++)
            for (var g = 0; 2 > g; g++) {
                var y = l[h[2 * u + g]]
                  , b = 6 * u + 3 * g;
                v[b + 0] = y.x,
                v[b + 1] = y.y,
                v[b + 2] = y.z
            }
        s.addAttribute("position", new THREE.BufferAttribute(v,3))
    } else if (e.geometry instanceof THREE.BufferGeometry)
        if (void 0 !== e.geometry.attributes.index) {
            var l = e.geometry.attributes.position.array
              , w = e.geometry.attributes.index.array
              , x = e.geometry.drawcalls
              , d = 0;
            0 === x.length && (x = [{
                count: w.length,
                index: 0,
                start: 0
            }]);
            for (var h = new Uint32Array(2 * w.length), E = 0, _ = x.length; _ > E; ++E)
                for (var T = x[E].start, C = x[E].count, b = x[E].index, u = T, R = T + C; R > u; u += 3)
                    for (var g = 0; 3 > g; g++) {
                        n[0] = b + w[u + g],
                        n[1] = b + w[u + (g + 1) % 3],
                        n.sort(o);
                        var m = n.toString();
                        void 0 === r[m] && (h[2 * d] = n[0],
                        h[2 * d + 1] = n[1],
                        r[m] = !0,
                        d++)
                    }
            for (var v = new Float32Array(2 * d * 3), u = 0, p = d; p > u; u++)
                for (var g = 0; 2 > g; g++) {
                    var b = 6 * u + 3 * g
                      , S = 3 * h[2 * u + g];
                    v[b + 0] = l[S],
                    v[b + 1] = l[S + 1],
                    v[b + 2] = l[S + 2]
                }
            s.addAttribute("position", new THREE.BufferAttribute(v,3))
        } else {
            for (var l = e.geometry.attributes.position.array, d = l.length / 3, k = d / 3, v = new Float32Array(2 * d * 3), u = 0, p = k; p > u; u++)
                for (var g = 0; 3 > g; g++) {
                    var b = 18 * u + 6 * g
                      , M = 9 * u + 3 * g;
                    v[b + 0] = l[M],
                    v[b + 1] = l[M + 1],
                    v[b + 2] = l[M + 2];
                    var S = 9 * u + 3 * ((g + 1) % 3);
                    v[b + 3] = l[S],
                    v[b + 4] = l[S + 1],
                    v[b + 5] = l[S + 2]
                }
            s.addAttribute("position", new THREE.BufferAttribute(v,3))
        }
    THREE.Line.call(this, s, new THREE.LineBasicMaterial({
        color: i
    }), THREE.LinePieces),
    this.matrix = e.matrixWorld,
    this.matrixAutoUpdate = !1
}
,
THREE.WireframeHelper.prototype = Object.create(THREE.Line.prototype),
THREE.ImmediateRenderObject = function() {
    THREE.Object3D.call(this),
    this.render = function() {}
}
,
THREE.ImmediateRenderObject.prototype = Object.create(THREE.Object3D.prototype),
THREE.MorphBlendMesh = function(e, t) {
    THREE.Mesh.call(this, e, t),
    this.animationsMap = {},
    this.animationsList = [];
    var i = this.geometry.morphTargets.length
      , n = "__default"
      , r = 0
      , o = i - 1
      , a = i / 1;
    this.createAnimation(n, r, o, a),
    this.setAnimationWeight(n, 1)
}
,
THREE.MorphBlendMesh.prototype = Object.create(THREE.Mesh.prototype),
THREE.MorphBlendMesh.prototype.createAnimation = function(e, t, i, n) {
    var r = {
        startFrame: t,
        endFrame: i,
        length: i - t + 1,
        fps: n,
        duration: (i - t) / n,
        lastFrame: 0,
        currentFrame: 0,
        active: !1,
        time: 0,
        direction: 1,
        weight: 1,
        directionBackwards: !1,
        mirroredLoop: !1
    };
    this.animationsMap[e] = r,
    this.animationsList.push(r)
}
,
THREE.MorphBlendMesh.prototype.autoCreateAnimations = function(e) {
    for (var t, i = /([a-z]+)_?(\d+)/, n = {}, r = this.geometry, o = 0, a = r.morphTargets.length; a > o; o++) {
        var s = r.morphTargets[o]
          , l = s.name.match(i);
        if (l && l.length > 1) {
            {
                var c = l[1];
                l[2]
            }
            n[c] || (n[c] = {
                start: 1 / 0,
                end: -1 / 0
            });
            var d = n[c];
            o < d.start && (d.start = o),
            o > d.end && (d.end = o),
            t || (t = c)
        }
    }
    for (var c in n) {
        var d = n[c];
        this.createAnimation(c, d.start, d.end, e)
    }
    this.firstAnimation = t
}
,
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function(e) {
    var t = this.animationsMap[e];
    t && (t.direction = 1,
    t.directionBackwards = !1)
}
,
THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function(e) {
    var t = this.animationsMap[e];
    t && (t.direction = -1,
    t.directionBackwards = !0)
}
,
THREE.MorphBlendMesh.prototype.setAnimationFPS = function(e, t) {
    var i = this.animationsMap[e];
    i && (i.fps = t,
    i.duration = (i.end - i.start) / i.fps)
}
,
THREE.MorphBlendMesh.prototype.setAnimationDuration = function(e, t) {
    var i = this.animationsMap[e];
    i && (i.duration = t,
    i.fps = (i.end - i.start) / i.duration)
}
,
THREE.MorphBlendMesh.prototype.setAnimationWeight = function(e, t) {
    var i = this.animationsMap[e];
    i && (i.weight = t)
}
,
THREE.MorphBlendMesh.prototype.setAnimationTime = function(e, t) {
    var i = this.animationsMap[e];
    i && (i.time = t)
}
,
THREE.MorphBlendMesh.prototype.getAnimationTime = function(e) {
    var t = 0
      , i = this.animationsMap[e];
    return i && (t = i.time),
    t
}
,
THREE.MorphBlendMesh.prototype.getAnimationDuration = function(e) {
    var t = -1
      , i = this.animationsMap[e];
    return i && (t = i.duration),
    t
}
,
THREE.MorphBlendMesh.prototype.playAnimation = function(e) {
    var t = this.animationsMap[e];
    t ? (t.time = 0,
    t.active = !0) : console.warn("animation[" + e + "] undefined")
}
,
THREE.MorphBlendMesh.prototype.stopAnimation = function(e) {
    var t = this.animationsMap[e];
    t && (t.active = !1)
}
,
THREE.MorphBlendMesh.prototype.update = function(e) {
    for (var t = 0, i = this.animationsList.length; i > t; t++) {
        var n = this.animationsList[t];
        if (n.active) {
            var r = n.duration / n.length;
            n.time += n.direction * e,
            n.mirroredLoop ? (n.time > n.duration || n.time < 0) && (n.direction *= -1,
            n.time > n.duration && (n.time = n.duration,
            n.directionBackwards = !0),
            n.time < 0 && (n.time = 0,
            n.directionBackwards = !1)) : (n.time = n.time % n.duration,
            n.time < 0 && (n.time += n.duration));
            var o = n.startFrame + THREE.Math.clamp(Math.floor(n.time / r), 0, n.length - 1)
              , a = n.weight;
            o !== n.currentFrame && (this.morphTargetInfluences[n.lastFrame] = 0,
            this.morphTargetInfluences[n.currentFrame] = 1 * a,
            this.morphTargetInfluences[o] = 0,
            n.lastFrame = n.currentFrame,
            n.currentFrame = o);
            var s = n.time % r / r;
            n.directionBackwards && (s = 1 - s),
            this.morphTargetInfluences[n.currentFrame] = s * a,
            this.morphTargetInfluences[n.lastFrame] = (1 - s) * a
        }
    }
}
,
!function(e) {
    if ("object" == typeof exports && "undefined" != typeof module)
        module.exports = e();
    else {
        var t;
        "undefined" != typeof window ? t = window : "undefined" != typeof global ? t = global : "undefined" != typeof self && (t = self),
        t.CANNON = e()
    }
}(function() {
    return function e(t, i, n) {
        function r(a, s) {
            if (!i[a]) {
                if (!t[a]) {
                    var l = "function" == typeof require && require;
                    if (!s && l)
                        return l(a, !0);
                    if (o)
                        return o(a, !0);
                    throw new Error("Cannot find module '" + a + "'")
                }
                var c = i[a] = {
                    exports: {}
                };
                t[a][0].call(c.exports, function(e) {
                    var i = t[a][1][e];
                    return r(i ? i : e)
                }, c, c.exports, e, t, i, n)
            }
            return i[a].exports
        }
        for (var o = "function" == typeof require && require, a = 0; a < n.length; a++)
            r(n[a]);
        return r
    }({
        1: [function(e, t) {
            t.exports = {
                name: "cannon",
                version: "0.6.1",
                description: "A lightweight 3D physics engine written in JavaScript.",
                homepage: "https://github.com/schteppe/cannon.js",
                author: "Stefan Hedman <schteppe@gmail.com> (http://steffe.se)",
                keywords: ["cannon.js", "cannon", "physics", "engine", "3d"],
                main: "./build/cannon.js",
                engines: {
                    node: "*"
                },
                repository: {
                    type: "git",
                    url: "https://github.com/schteppe/cannon.js.git"
                },
                bugs: {
                    url: "https://github.com/schteppe/cannon.js/issues"
                },
                licenses: [{
                    type: "MIT"
                }],
                devDependencies: {
                    jshint: "latest",
                    "uglify-js": "latest",
                    nodeunit: "^0.9.0",
                    grunt: "~0.4.0",
                    "grunt-contrib-jshint": "~0.1.1",
                    "grunt-contrib-nodeunit": "^0.4.1",
                    "grunt-contrib-concat": "~0.1.3",
                    "grunt-contrib-uglify": "^0.5.1",
                    "grunt-browserify": "^2.1.4",
                    "grunt-contrib-yuidoc": "^0.5.2",
                    browserify: "*"
                },
                dependencies: {}
            }
        }
        , {}],
        2: [function(e, t) {
            t.exports = {
                version: e("../package.json").version,
                ArrayCollisionMatrix: e("./collision/ArrayCollisionMatrix"),
                Body: e("./objects/Body"),
                Box: e("./shapes/Box"),
                Broadphase: e("./collision/Broadphase"),
                Constraint: e("./constraints/Constraint"),
                ContactEquation: e("./equations/ContactEquation"),
                Narrowphase: e("./world/Narrowphase"),
                ContactMaterial: e("./material/ContactMaterial"),
                ConvexPolyhedron: e("./shapes/ConvexPolyhedron"),
                Cylinder: e("./shapes/Cylinder"),
                DistanceConstraint: e("./constraints/DistanceConstraint"),
                Equation: e("./equations/Equation"),
                EventTarget: e("./utils/EventTarget"),
                FrictionEquation: e("./equations/FrictionEquation"),
                GSSolver: e("./solver/GSSolver"),
                GridBroadphase: e("./collision/GridBroadphase"),
                Heightfield: e("./shapes/Heightfield"),
                HingeConstraint: e("./constraints/HingeConstraint"),
                Mat3: e("./math/Mat3"),
                Material: e("./material/Material"),
                NaiveBroadphase: e("./collision/NaiveBroadphase"),
                ObjectCollisionMatrix: e("./collision/ObjectCollisionMatrix"),
                Pool: e("./utils/Pool"),
                Particle: e("./shapes/Particle"),
                Plane: e("./shapes/Plane"),
                PointToPointConstraint: e("./constraints/PointToPointConstraint"),
                Quaternion: e("./math/Quaternion"),
                Ray: e("./collision/Ray"),
                RaycastVehicle: e("./objects/RaycastVehicle"),
                RaycastResult: e("./collision/RaycastResult"),
                RigidVehicle: e("./objects/RigidVehicle"),
                RotationalEquation: e("./equations/RotationalEquation"),
                RotationalMotorEquation: e("./equations/RotationalMotorEquation"),
                SAPBroadphase: e("./collision/SAPBroadphase"),
                SPHSystem: e("./objects/SPHSystem"),
                Shape: e("./shapes/Shape"),
                Solver: e("./solver/Solver"),
                Sphere: e("./shapes/Sphere"),
                SplitSolver: e("./solver/SplitSolver"),
                Spring: e("./objects/Spring"),
                Vec3: e("./math/Vec3"),
                Vec3Pool: e("./utils/Vec3Pool"),
                World: e("./world/World")
            }
        }
        , {
            "../package.json": 1,
            "./collision/ArrayCollisionMatrix": 4,
            "./collision/Broadphase": 5,
            "./collision/GridBroadphase": 6,
            "./collision/NaiveBroadphase": 7,
            "./collision/ObjectCollisionMatrix": 8,
            "./collision/Ray": 9,
            "./collision/RaycastResult": 10,
            "./collision/SAPBroadphase": 11,
            "./constraints/Constraint": 12,
            "./constraints/DistanceConstraint": 13,
            "./constraints/HingeConstraint": 14,
            "./constraints/PointToPointConstraint": 15,
            "./equations/ContactEquation": 16,
            "./equations/Equation": 17,
            "./equations/FrictionEquation": 18,
            "./equations/RotationalEquation": 19,
            "./equations/RotationalMotorEquation": 20,
            "./material/ContactMaterial": 21,
            "./material/Material": 22,
            "./math/Mat3": 24,
            "./math/Quaternion": 25,
            "./math/Vec3": 27,
            "./objects/Body": 28,
            "./objects/RaycastVehicle": 29,
            "./objects/RigidVehicle": 30,
            "./objects/SPHSystem": 31,
            "./objects/Spring": 32,
            "./shapes/Box": 34,
            "./shapes/ConvexPolyhedron": 35,
            "./shapes/Cylinder": 36,
            "./shapes/Heightfield": 37,
            "./shapes/Particle": 38,
            "./shapes/Plane": 39,
            "./shapes/Shape": 40,
            "./shapes/Sphere": 41,
            "./solver/GSSolver": 42,
            "./solver/Solver": 43,
            "./solver/SplitSolver": 44,
            "./utils/EventTarget": 45,
            "./utils/Pool": 46,
            "./utils/Vec3Pool": 49,
            "./world/Narrowphase": 50,
            "./world/World": 51
        }],
        3: [function(e, t) {
            function i(e) {
                e = e || {},
                this.lowerBound = new n,
                e.lowerBound && this.lowerBound.copy(e.lowerBound),
                this.upperBound = new n,
                e.upperBound && this.upperBound.copy(e.upperBound)
            }
            {
                var n = e("../math/Vec3");
                e("../utils/Utils")
            }
            t.exports = i;
            var r = new n;
            i.prototype.setFromPoints = function(e, t, i, n) {
                var o = this.lowerBound
                  , a = this.upperBound
                  , s = i;
                o.copy(e[0]),
                s && s.vmult(o, o),
                a.copy(o);
                for (var l = 1; l < e.length; l++) {
                    var c = e[l];
                    s && (s.vmult(c, r),
                    c = r),
                    c.x > a.x && (a.x = c.x),
                    c.x < o.x && (o.x = c.x),
                    c.y > a.y && (a.y = c.y),
                    c.y < o.y && (o.y = c.y),
                    c.z > a.z && (a.z = c.z),
                    c.z < o.z && (o.z = c.z)
                }
                t && (t.vadd(o, o),
                t.vadd(a, a)),
                n && (o.x -= n,
                o.y -= n,
                o.z -= n,
                a.x += n,
                a.y += n,
                a.z += n)
            }
            ,
            i.prototype.copy = function(e) {
                this.lowerBound.copy(e.lowerBound),
                this.upperBound.copy(e.upperBound)
            }
            ,
            i.prototype.extend = function(e) {
                var t = e.lowerBound.x;
                this.lowerBound.x > t && (this.lowerBound.x = t);
                var i = e.upperBound.x;
                this.upperBound.x < i && (this.upperBound.x = i);
                var t = e.lowerBound.y;
                this.lowerBound.y > t && (this.lowerBound.y = t);
                var i = e.upperBound.y;
                this.upperBound.y < i && (this.upperBound.y = i);
                var t = e.lowerBound.z;
                this.lowerBound.z > t && (this.lowerBound.z = t);
                var i = e.upperBound.z;
                this.upperBound.z < i && (this.upperBound.z = i)
            }
            ,
            i.prototype.overlaps = function(e) {
                var t = this.lowerBound
                  , i = this.upperBound
                  , n = e.lowerBound
                  , r = e.upperBound;
                return (n.x <= i.x && i.x <= r.x || t.x <= r.x && r.x <= i.x) && (n.y <= i.y && i.y <= r.y || t.y <= r.y && r.y <= i.y) && (n.z <= i.z && i.z <= r.z || t.z <= r.z && r.z <= i.z)
            }
        }
        , {
            "../math/Vec3": 27,
            "../utils/Utils": 48
        }],
        4: [function(e, t) {
            function i() {
                this.matrix = []
            }
            t.exports = i,
            i.prototype.get = function(e, t) {
                if (e = e.index,
                t = t.index,
                t > e) {
                    var i = t;
                    t = e,
                    e = i
                }
                return this.matrix[(e * (e + 1) >> 1) + t - 1]
            }
            ,
            i.prototype.set = function(e, t, i) {
                if (e = e.index,
                t = t.index,
                t > e) {
                    var n = t;
                    t = e,
                    e = n
                }
                this.matrix[(e * (e + 1) >> 1) + t - 1] = i ? 1 : 0
            }
            ,
            i.prototype.reset = function() {
                for (var e = 0, t = this.matrix.length; e !== t; e++)
                    this.matrix[e] = 0
            }
            ,
            i.prototype.setNumObjects = function(e) {
                this.matrix.length = e * (e - 1) >> 1
            }
        }
        , {}],
        5: [function(e, t) {
            function i() {
                this.world = null ,
                this.useBoundingBoxes = !1,
                this.dirty = !0
            }
            {
                var n = e("../objects/Body")
                  , r = e("../math/Vec3")
                  , o = e("../math/Quaternion");
                e("../shapes/Shape"),
                e("../shapes/Plane")
            }
            t.exports = i,
            i.prototype.collisionPairs = function() {
                throw new Error("collisionPairs not implemented for this BroadPhase class!")
            }
            ;
            var a = n.STATIC | n.KINEMATIC;
            i.prototype.needBroadphaseCollision = function(e, t) {
                return 0 === (e.collisionFilterGroup & t.collisionFilterMask) || 0 === (t.collisionFilterGroup & e.collisionFilterMask) ? !1 : 0 === (e.type & a) && e.sleepState !== n.SLEEPING || 0 === (t.type & a) && t.sleepState !== n.SLEEPING ? !0 : !1
            }
            ,
            i.prototype.intersectionTest = function(e, t, i, n) {
                this.useBoundingBoxes ? this.doBoundingBoxBroadphase(e, t, i, n) : this.doBoundingSphereBroadphase(e, t, i, n)
            }
            ;
            {
                var s = new r;
                new r,
                new o,
                new r
            }
            i.prototype.doBoundingSphereBroadphase = function(e, t, i, n) {
                var r = s;
                t.position.vsub(e.position, r);
                var o = Math.pow(e.boundingRadius + t.boundingRadius, 2)
                  , a = r.norm2();
                o > a && (i.push(e),
                n.push(t))
            }
            ,
            i.prototype.doBoundingBoxBroadphase = function(e, t, i, n) {
                e.aabbNeedsUpdate && e.computeAABB(),
                t.aabbNeedsUpdate && t.computeAABB(),
                e.aabb.overlaps(t.aabb) && (i.push(e),
                n.push(t))
            }
            ;
            var l = {
                keys: []
            }
              , c = []
              , d = [];
            i.prototype.makePairsUnique = function(e, t) {
                for (var i = l, n = c, r = d, o = e.length, a = 0; a !== o; a++)
                    n[a] = e[a],
                    r[a] = t[a];
                e.length = 0,
                t.length = 0;
                for (var a = 0; a !== o; a++) {
                    var s = n[a].id
                      , h = r[a].id
                      , u = h > s ? s + "," + h : h + "," + s;
                    i[u] = a,
                    i.keys.push(u)
                }
                for (var a = 0; a !== i.keys.length; a++) {
                    var u = i.keys.pop()
                      , p = i[u];
                    e.push(n[p]),
                    t.push(r[p]),
                    delete i[u]
                }
            }
            ,
            i.prototype.setWorld = function() {}
            ;
            var h = new r;
            i.boundingSphereCheck = function(e, t) {
                var i = h;
                return e.position.vsub(t.position, i),
                Math.pow(e.shape.boundingSphereRadius + t.shape.boundingSphereRadius, 2) > i.norm2()
            }
            ,
            i.prototype.aabbQuery = function() {
                return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),
                []
            }
        }
        , {
            "../math/Quaternion": 25,
            "../math/Vec3": 27,
            "../objects/Body": 28,
            "../shapes/Plane": 39,
            "../shapes/Shape": 40
        }],
        6: [function(e, t) {
            function i(e, t, i, o, a) {
                n.apply(this),
                this.nx = i || 10,
                this.ny = o || 10,
                this.nz = a || 10,
                this.aabbMin = e || new r(100,100,100),
                this.aabbMax = t || new r(-100,-100,-100);
                var s = this.nx * this.ny * this.nz;
                if (0 >= s)
                    throw "GridBroadphase: Each dimension's n must be >0";
                this.bins = [],
                this.binLengths = [],
                this.bins.length = s,
                this.binLengths.length = s;
                for (var l = 0; s > l; l++)
                    this.bins[l] = [],
                    this.binLengths[l] = 0
            }
            t.exports = i;
            var n = e("./Broadphase")
              , r = e("../math/Vec3")
              , o = e("../shapes/Shape");
            i.prototype = new n,
            i.prototype.constructor = i;
            {
                var a = new r;
                new r
            }
            i.prototype.collisionPairs = function(e, t, i) {
                function n(e, t, i, n, r, o, a) {
                    var s = (e - b) * E | 0
                      , l = (t - w) * _ | 0
                      , c = (i - x) * T | 0
                      , m = L((n - b) * E)
                      , v = L((r - w) * _)
                      , y = L((o - x) * T);
                    0 > s ? s = 0 : s >= d && (s = d - 1),
                    0 > l ? l = 0 : l >= h && (l = h - 1),
                    0 > c ? c = 0 : c >= u && (c = u - 1),
                    0 > m ? m = 0 : m >= d && (m = d - 1),
                    0 > v ? v = 0 : v >= h && (v = h - 1),
                    0 > y ? y = 0 : y >= u && (y = u - 1),
                    s *= p,
                    l *= f,
                    c *= g,
                    m *= p,
                    v *= f,
                    y *= g;
                    for (var C = s; m >= C; C += p)
                        for (var R = l; v >= R; R += f)
                            for (var S = c; y >= S; S += g) {
                                var k = C + R + S;
                                P[k][O[k]++] = a
                            }
                }
                for (var r = e.numObjects(), s = e.bodies, l = this.aabbMax, c = this.aabbMin, d = this.nx, h = this.ny, u = this.nz, p = h * u, f = u, g = 1, m = l.x, v = l.y, y = l.z, b = c.x, w = c.y, x = c.z, E = d / (m - b), _ = h / (v - w), T = u / (y - x), C = (m - b) / d, R = (v - w) / h, S = (y - x) / u, k = .5 * Math.sqrt(C * C + R * R + S * S), M = o.types, A = M.SPHERE, H = M.PLANE, P = (M.BOX,
                M.COMPOUND,
                M.CONVEXPOLYHEDRON,
                this.bins), O = this.binLengths, D = this.bins.length, $ = 0; $ !== D; $++)
                    O[$] = 0;
                for (var L = Math.ceil, c = Math.min, l = Math.max, $ = 0; $ !== r; $++) {
                    var I = s[$]
                      , F = I.shape;
                    switch (F.type) {
                    case A:
                        var B = I.position.x
                          , j = I.position.y
                          , N = I.position.z
                          , z = F.radius;
                        n(B - z, j - z, N - z, B + z, j + z, N + z, I);
                        break;
                    case H:
                        F.worldNormalNeedsUpdate && F.computeWorldNormal(I.quaternion);
                        var U = F.worldNormal
                          , V = b + .5 * C - I.position.x
                          , W = w + .5 * R - I.position.y
                          , G = x + .5 * S - I.position.z
                          , q = a;
                        q.set(V, W, G);
                        for (var X = 0, Y = 0; X !== d; X++,
                        Y += p,
                        q.y = W,
                        q.x += C)
                            for (var J = 0, K = 0; J !== h; J++,
                            K += f,
                            q.z = G,
                            q.y += R)
                                for (var Z = 0, Q = 0; Z !== u; Z++,
                                Q += g,
                                q.z += S)
                                    if (q.dot(U) < k) {
                                        var et = Y + K + Q;
                                        P[et][O[et]++] = I
                                    }
                        break;
                    default:
                        I.aabbNeedsUpdate && I.computeAABB(),
                        n(I.aabb.lowerBound.x, I.aabb.lowerBound.y, I.aabb.lowerBound.z, I.aabb.upperBound.x, I.aabb.upperBound.y, I.aabb.upperBound.z, I)
                    }
                }
                for (var $ = 0; $ !== D; $++) {
                    var tt = O[$];
                    if (tt > 1)
                        for (var it = P[$], X = 0; X !== tt; X++)
                            for (var I = it[X], J = 0; J !== X; J++) {
                                var nt = it[J];
                                this.needBroadphaseCollision(I, nt) && this.intersectionTest(I, nt, t, i)
                            }
                }
                this.makePairsUnique(t, i)
            }
        }
        , {
            "../math/Vec3": 27,
            "../shapes/Shape": 40,
            "./Broadphase": 5
        }],
        7: [function(e, t) {
            function i() {
                n.apply(this)
            }
            t.exports = i;
            var n = e("./Broadphase")
              , r = e("./AABB");
            i.prototype = new n,
            i.prototype.constructor = i,
            i.prototype.collisionPairs = function(e, t, i) {
                var n, r, o, a, s = e.bodies, l = s.length;
                for (n = 0; n !== l; n++)
                    for (r = 0; r !== n; r++)
                        o = s[n],
                        a = s[r],
                        this.needBroadphaseCollision(o, a) && this.intersectionTest(o, a, t, i)
            }
            ;
            new r;
            i.prototype.aabbQuery = function(e, t, i) {
                i = i || [];
                for (var n = 0; n < e.bodies.length; n++) {
                    var r = e.bodies[n];
                    r.aabbNeedsUpdate && r.computeAABB(),
                    r.aabb.overlaps(t) && i.push(r)
                }
                return i
            }
        }
        , {
            "./AABB": 3,
            "./Broadphase": 5
        }],
        8: [function(e, t) {
            function i() {
                this.matrix = {}
            }
            t.exports = i,
            i.prototype.get = function(e, t) {
                if (e = e.id,
                t = t.id,
                t > e) {
                    var i = t;
                    t = e,
                    e = i
                }
                return e + "-" + t in this.matrix
            }
            ,
            i.prototype.set = function(e, t, i) {
                if (e = e.id,
                t = t.id,
                t > e) {
                    var n = t;
                    t = e,
                    e = n
                }
                i ? this.matrix[e + "-" + t] = !0 : delete this.matrix[e + "-" + t]
            }
            ,
            i.prototype.reset = function() {
                this.matrix = {}
            }
            ,
            i.prototype.setNumObjects = function() {}
        }
        , {}],
        9: [function(e, t) {
            function i(e, t) {
                this.from = e ? e.clone() : new o,
                this.to = t ? t.clone() : new o,
                this._direction = new o,
                this.precision = 1e-4,
                this.checkCollisionResponse = !0
            }
            function n(e, t, i, n) {
                n.vsub(t, E),
                i.vsub(t, d),
                e.vsub(t, h);
                var r, o, a = E.dot(E), s = E.dot(d), l = E.dot(h), c = d.dot(d), u = d.dot(h);
                return (r = c * l - s * u) >= 0 && (o = a * u - s * l) >= 0 && a * c - s * s > r + o
            }
            function r(e, t, i) {
                i.vsub(e, E);
                var n = E.dot(t);
                t.mult(n, _),
                _.vadd(e, _);
                var r = i.distanceTo(_);
                return r
            }
            t.exports = i;
            {
                var o = e("../math/Vec3")
                  , a = e("../math/Quaternion")
                  , s = e("../math/Transform")
                  , l = (e("../shapes/ConvexPolyhedron"),
                e("../shapes/Box"),
                e("../collision/RaycastResult"))
                  , c = e("../shapes/Shape");
                e("../collision/AABB")
            }
            i.prototype.constructor = i;
            var d = new o
              , h = new o;
            i.prototype.intersectBody = function(e, t, i) {
                var n = this.checkCollisionResponse;
                if (n && !e.collisionResponse)
                    return t;
                i || (this._updateDirection(),
                i = this._direction);
                for (var r = new o, s = new a, l = 0; l < e.shapes.length; l++) {
                    var c = e.shapes[l];
                    (!n || c.collisionResponse) && (e.quaternion.mult(e.shapeOrientations[l], s),
                    e.quaternion.vmult(e.shapeOffsets[l], r),
                    r.vadd(e.position, r),
                    this.intersectShape(c, s, r, e, i, t))
                }
                return t
            }
            ,
            i.prototype.intersectBodies = function(e, t) {
                this._updateDirection();
                var i = this._direction;
                t instanceof l && t.reset();
                for (var n = 0, r = e.length; r > n; n++)
                    this.intersectBody(e[n], t, i)
            }
            ,
            i.prototype._updateDirection = function() {
                this.to.vsub(this.from, this._direction),
                this._direction.normalize()
            }
            ,
            i.prototype.intersectShape = function(e, t, i, n, o, a) {
                var s = this.from
                  , l = r(s, o, i);
                return l > e.boundingSphereRadius ? a : (this[e.type](e, t, i, n, o, a),
                a)
            }
            ;
            var u = (new o,
            new o,
            new o)
              , p = new o
              , f = new o
              , g = new o
              , m = (new o,
            new l);
            i.prototype.intersectBox = function(e, t, i, n, r, o) {
                return this.intersectConvex(e.convexPolyhedronRepresentation, t, i, n, r, o)
            }
            ,
            i.prototype[c.types.BOX] = i.prototype.intersectBox,
            i.prototype.intersectPlane = function(e, t, i, n, r, a) {
                var s = this.from
                  , l = this.to
                  , c = new o(0,0,1);
                t.vmult(c, c);
                var d = new o;
                s.vsub(i, d);
                var h = d.dot(c);
                l.vsub(i, d);
                var u = d.dot(c);
                if (h * u > 0)
                    return a;
                if (s.distanceTo(l) < h)
                    return a;
                var p = c.dot(r);
                if (Math.abs(p) < this.precision)
                    return a;
                var f = new o
                  , g = new o
                  , m = new o;
                s.vsub(i, f);
                var v = -c.dot(f) / p;
                return r.scale(v, g),
                s.vadd(g, m),
                this.reportIntersection(c, m, e, n, a) ? a : a
            }
            ,
            i.prototype[c.types.PLANE] = i.prototype.intersectPlane,
            i.prototype.getAABB = function(e) {
                var t = this.to
                  , i = this.from;
                e.lowerBound.x = Math.min(t.x, i.x),
                e.lowerBound.y = Math.min(t.y, i.y),
                e.lowerBound.z = Math.min(t.z, i.z),
                e.upperBound.x = Math.max(t.x, i.x),
                e.upperBound.y = Math.max(t.y, i.y),
                e.upperBound.z = Math.max(t.z, i.z)
            }
            ;
            var v = {
                faceList: [0]
            };
            i.prototype.intersectHeightfield = function(e, t, n, r, a, l) {
                var c = (e.data,
                e.elementSize,
                new o)
                  , d = new i(this.from,this.to);
                s.pointToLocalFrame(n, t, d.from, d.from),
                s.pointToLocalFrame(n, t, d.to, d.to);
                var h = []
                  , u = null
                  , p = null
                  , f = null
                  , g = null
                  , m = e.getIndexOfPosition(d.from.x, d.from.y, h, !1);
                if (m && (u = h[0],
                p = h[1],
                f = h[0],
                g = h[1]),
                m = e.getIndexOfPosition(d.to.x, d.to.y, h, !1),
                m && ((null === u || h[0] < u) && (u = h[0]),
                (null === f || h[0] > f) && (f = h[0]),
                (null === p || h[1] < p) && (p = h[1]),
                (null === g || h[1] > g) && (g = h[1])),
                null === u)
                    return l;
                var y = [];
                e.getRectMinMax(u, p, f, g, y);
                for (var b = (y[0],
                y[1],
                u); f >= b; b++)
                    for (var w = p; g >= w; w++)
                        e.getConvexTrianglePillar(b, w, !1),
                        s.pointToWorldFrame(n, t, e.pillarOffset, c),
                        this.intersectConvex(e.pillarConvex, t, c, r, a, l, v),
                        e.getConvexTrianglePillar(b, w, !0),
                        s.pointToWorldFrame(n, t, e.pillarOffset, c),
                        this.intersectConvex(e.pillarConvex, t, c, r, a, l, v);
                return l
            }
            ,
            i.prototype[c.types.HEIGHTFIELD] = i.prototype.intersectHeightfield,
            i.prototype.intersectSphere = function(e, t, i, n, r, a) {
                var s = this.from
                  , l = this.to
                  , c = e.radius
                  , d = Math.pow(l.x - s.x, 2) + Math.pow(l.y - s.y, 2) + Math.pow(l.z - s.z, 2)
                  , h = 2 * ((l.x - s.x) * (s.x - i.x) + (l.y - s.y) * (s.y - i.y) + (l.z - s.z) * (s.z - i.z))
                  , u = Math.pow(s.x - i.x, 2) + Math.pow(s.y - i.y, 2) + Math.pow(s.z - i.z, 2) - Math.pow(c, 2)
                  , p = Math.pow(h, 2) - 4 * d * u;
                if (0 > p)
                    return a;
                if (0 === p) {
                    var f = new o;
                    s.lerp(l, p, f);
                    var g = new o;
                    if (f.vsub(i, g),
                    g.normalize(),
                    this.reportIntersection(g, f, e, n, a))
                        return a
                } else {
                    var m = (-h - Math.sqrt(p)) / (2 * d)
                      , v = (-h + Math.sqrt(p)) / (2 * d)
                      , f = new o;
                    s.lerp(l, m, f);
                    var g = new o;
                    if (f.vsub(i, g),
                    g.normalize(),
                    this.reportIntersection(g, f, e, n, a))
                        return a;
                    s.lerp(l, v, f);
                    var g = new o;
                    if (f.vsub(i, g),
                    g.normalize(),
                    this.reportIntersection(g, f, e, n, a))
                        return a
                }
                return a
            }
            ,
            i.prototype[c.types.SPHERE] = i.prototype.intersectSphere;
            var y = new o
              , b = new o
              , w = new o
              , x = new o;
            i.prototype.intersectConvex = function(e, t, i, r, o, a, s) {
                for (var l = b, c = y, d = x, h = w, m = s && s.faceList || null , v = e.faces, E = e.vertices, _ = e.faceNormals, T = this.from, C = this.to, R = T.distanceTo(C), S = -1, k = m ? m.length : v.length, M = 0; k > M; M++) {
                    var A = m ? m[M] : M
                      , H = v[A]
                      , P = _[A]
                      , O = t
                      , D = i;
                    d.copy(E[H[0]]),
                    O.vmult(d, d),
                    d.vadd(D, d),
                    d.vsub(T, d),
                    O.vmult(P, c);
                    var $ = o.dot(c);
                    if (!(Math.abs($) < this.precision)) {
                        var L = c.dot(d) / $;
                        if (!(0 > L) && 0 > $) {
                            o.mult(L, u),
                            u.vadd(T, u),
                            p.copy(E[H[0]]),
                            O.vmult(p, p),
                            D.vadd(p, p);
                            for (var I = 1; I < H.length - 1; I++) {
                                f.copy(E[H[I]]),
                                g.copy(E[H[I + 1]]),
                                O.vmult(f, f),
                                O.vmult(g, g),
                                D.vadd(f, f),
                                D.vadd(g, g);
                                var F = u.distanceTo(T);
                                !n(u, p, f, g) || F > R || (-1 === S || S > F) && (S = F,
                                l.copy(c),
                                h.copy(u))
                            }
                        }
                    }
                }
                return -1 !== S && this.reportIntersection(l, h, e, r, a) ? a : a
            }
            ,
            i.prototype[c.types.CONVEXPOLYHEDRON] = i.prototype.intersectConvex,
            i.prototype.reportIntersection = function(e, t, i, n, r) {
                var o = this.from
                  , a = this.to
                  , s = o.distanceTo(t);
                return r instanceof l ? ((s < r.distance || !r.hasHit) && (r.hasHit = !0,
                r.set(o, a, e, t, i, n, s)),
                !1) : (m.set(o, a, e, t, i, n, s),
                m.hasHit = !0,
                r(m),
                !0)
            }
            ;
            var E = new o
              , _ = new o
        }
        , {
            "../collision/AABB": 3,
            "../collision/RaycastResult": 10,
            "../math/Quaternion": 25,
            "../math/Transform": 26,
            "../math/Vec3": 27,
            "../shapes/Box": 34,
            "../shapes/ConvexPolyhedron": 35,
            "../shapes/Shape": 40
        }],
        10: [function(e, t) {
            function i() {
                this.rayFromWorld = new n,
                this.rayToWorld = new n,
                this.hitNormalWorld = new n,
                this.hitPointWorld = new n,
                this.hasHit = !1,
                this.shape = null ,
                this.body = null ,
                this.distance = -1
            }
            var n = e("../math/Vec3");
            t.exports = i,
            i.prototype.reset = function() {
                this.rayFromWorld.setZero(),
                this.rayToWorld.setZero(),
                this.hitNormalWorld.setZero(),
                this.hitPointWorld.setZero(),
                this.hasHit = !1,
                this.shape = null ,
                this.body = null ,
                this.distance = -1
            }
            ,
            i.prototype.set = function(e, t, i, n, r, o, a) {
                this.rayFromWorld.copy(e),
                this.rayToWorld.copy(t),
                this.hitNormalWorld.copy(i),
                this.hitPointWorld.copy(n),
                this.shape = r,
                this.body = o,
                this.distance = a
            }
        }
        , {
            "../math/Vec3": 27
        }],
        11: [function(e, t) {
            function i(e) {
                n.apply(this),
                this.axisList = [],
                this.world = null ,
                this.axisIndex = 0;
                var t = this.axisList;
                this._addBodyHandler = function(e) {
                    t.push(e.body)
                }
                ,
                this._removeBodyHandler = function(e) {
                    var i = t.indexOf(e.body);
                    -1 !== i && t.splice(i, 1)
                }
                ,
                e && this.setWorld(e)
            }
            var n = (e("../shapes/Shape"),
            e("../collision/Broadphase"));
            t.exports = i,
            i.prototype = new n,
            i.prototype.setWorld = function(e) {
                this.axisList.length = 0;
                for (var t = 0; t < e.bodies.length; t++)
                    this.axisList.push(e.bodies[t]);
                e.removeEventListener("addBody", this._addBodyHandler),
                e.removeEventListener("removeBody", this._removeBodyHandler),
                e.addEventListener("addBody", this._addBodyHandler),
                e.addEventListener("removeBody", this._removeBodyHandler),
                this.world = e,
                this.dirty = !0
            }
            ,
            i.insertionSortX = function(e) {
                for (var t = 1, i = e.length; i > t; t++) {
                    for (var n = e[t], r = t - 1; r >= 0 && !(e[r].aabb.lowerBound.x <= n.aabb.lowerBound.x); r--)
                        e[r + 1] = e[r];
                    e[r + 1] = n
                }
                return e
            }
            ,
            i.insertionSortY = function(e) {
                for (var t = 1, i = e.length; i > t; t++) {
                    for (var n = e[t], r = t - 1; r >= 0 && !(e[r].aabb.lowerBound.y <= n.aabb.lowerBound.y); r--)
                        e[r + 1] = e[r];
                    e[r + 1] = n
                }
                return e
            }
            ,
            i.insertionSortZ = function(e) {
                for (var t = 1, i = e.length; i > t; t++) {
                    for (var n = e[t], r = t - 1; r >= 0 && !(e[r].aabb.lowerBound.z <= n.aabb.lowerBound.z); r--)
                        e[r + 1] = e[r];
                    e[r + 1] = n
                }
                return e
            }
            ,
            i.prototype.collisionPairs = function(e, t, n) {
                var r, o, a = this.axisList, s = a.length, l = this.axisIndex;
                for (this.dirty && (this.sortList(),
                this.dirty = !1),
                r = 0; r !== s; r++) {
                    var c = a[r];
                    for (o = r + 1; s > o; o++) {
                        var d = a[o];
                        if (this.needBroadphaseCollision(c, d)) {
                            if (!i.checkBounds(c, d, l))
                                break;
                            this.intersectionTest(c, d, t, n)
                        }
                    }
                }
            }
            ,
            i.prototype.sortList = function() {
                for (var e = this.axisList, t = this.axisIndex, n = e.length, r = 0; r !== n; r++) {
                    var o = e[r];
                    o.aabbNeedsUpdate && o.computeAABB()
                }
                0 === t ? i.insertionSortX(e) : 1 === t ? i.insertionSortY(e) : 2 === t && i.insertionSortZ(e)
            }
            ,
            i.checkBounds = function(e, t, i) {
                var n;
                0 === i && (n = "x"),
                1 === i && (n = "y"),
                2 === i && (n = "z");
                var r = e.position[n]
                  , o = e.boundingRadius
                  , a = t.position[n]
                  , s = t.boundingRadius
                  , l = r + o
                  , c = a - s;
                return l > c
            }
            ,
            i.prototype.autoDetectAxis = function() {
                for (var e = 0, t = 0, i = 0, n = 0, r = 0, o = 0, a = this.axisList, s = a.length, l = 1 / s, c = 0; c !== s; c++) {
                    var d = a[c]
                      , h = d.position.x;
                    e += h,
                    t += h * h;
                    var u = d.position.y;
                    i += u,
                    n += u * u;
                    var p = d.position.z;
                    r += p,
                    o += p * p
                }
                var f = t - e * e * l
                  , g = n - i * i * l
                  , m = o - r * r * l;
                this.axisIndex = f > g ? f > m ? 0 : 2 : g > m ? 1 : 2
            }
            ,
            i.prototype.aabbQuery = function(e, t, i) {
                i = i || [],
                this.dirty && (this.sortList(),
                this.dirty = !1);
                var n = this.axisIndex
                  , r = "x";
                1 === n && (r = "y"),
                2 === n && (r = "z");
                for (var o = this.axisList, a = (t.lowerBound[r],
                t.upperBound[r],
                0); a < o.length; a++) {
                    var s = o[a];
                    s.aabbNeedsUpdate && s.computeAABB(),
                    s.aabb.overlaps(t) && i.push(s)
                }
                return i
            }
        }
        , {
            "../collision/Broadphase": 5,
            "../shapes/Shape": 40
        }],
        12: [function(e, t) {
            function i(e, t, r) {
                r = n.defaults(r, {
                    collideConnected: !0,
                    wakeUpBodies: !0
                }),
                this.equations = [],
                this.bodyA = e,
                this.bodyB = t,
                this.id = i.idCounter++,
                this.collideConnected = r.collideConnected,
                r.wakeUpBodies && (e && e.wakeUp(),
                t && t.wakeUp())
            }
            t.exports = i;
            var n = e("../utils/Utils");
            i.prototype.update = function() {
                throw new Error("method update() not implmemented in this Constraint subclass!")
            }
            ,
            i.idCounter = 0
        }
        , {
            "../utils/Utils": 48
        }],
        13: [function(e, t) {
            function i(e, t, i, o) {
                n.call(this, e, t),
                "undefined" == typeof o && (o = 1e6);
                var a = this.equations = [new r(e,t)]
                  , s = a[0];
                s.minForce = -o,
                s.maxForce = o,
                this.update = function() {
                    t.position.vsub(e.position, s.ni),
                    s.ni.normalize(),
                    s.ni.mult(.5 * i, s.ri),
                    s.ni.mult(.5 * -i, s.rj)
                }
            }
            t.exports = i;
            var n = e("./Constraint")
              , r = e("../equations/ContactEquation");
            i.prototype = new n
        }
        , {
            "../equations/ContactEquation": 16,
            "./Constraint": 12
        }],
        14: [function(e, t) {
            function i(e, t, i) {
                n.call(this, e, t, i);
                var l = "undefined" != typeof i.maxForce ? i.maxForce : 1e6
                  , c = this.pivotA = "undefined" != typeof i.pivotA ? i.pivotA.clone() : new s
                  , d = this.pivotB = "undefined" != typeof i.pivotB ? i.pivotB.clone() : new s
                  , h = this.axisA = "undefined" != typeof i.axisA ? i.axisA.clone() : new s(1,0,0)
                  , u = this.axisB = "undefined" != typeof i.axisB ? i.axisB.clone() : new s(1,0,0)
                  , p = (this.equations = [new r(e,t), new r(e,t), new a(e,t), new a(e,t), new a(e,t)],
                this.getRotationalEquation1(),
                this.getRotationalEquation2(),
                this.getPointToPointEquation1())
                  , f = this.getPointToPointEquation2()
                  , g = this.getPointToPointEquation3();
                f.minForce = g.minForce = p.minForce = -l,
                f.maxForce = g.maxForce = p.maxForce = l;
                var m = c.unit()
                  , v = d.unit()
                  , y = this.axisA_x_pivotA = new s
                  , b = this.axisA_x_axisA_x_pivotA = new s
                  , w = this.axisB_x_pivotB = new s;
                h.cross(m, y),
                y.norm2() < .001 && m.tangents(y, y),
                h.cross(y, b),
                u.cross(v, w),
                w.norm2() < .001 && u.tangents(w, w),
                y.normalize(),
                w.normalize(),
                this.motorEnabled = !1,
                this.motorTargetVelocity = 0,
                this.motorMinForce = -l,
                this.motorMaxForce = l,
                this.motorEquation = new o(e,t,l)
            }
            t.exports = i;
            var n = e("./Constraint")
              , r = e("../equations/RotationalEquation")
              , o = e("../equations/RotationalMotorEquation")
              , a = e("../equations/ContactEquation")
              , s = e("../math/Vec3");
            i.prototype = new n,
            i.prototype.enableMotor = function() {
                this.motorEnabled || (this.equations.push(this.motorEquation),
                this.motorEnabled = !0)
            }
            ,
            i.prototype.disableMotor = function() {
                this.motorEnabled && (this.motorEnabled = !1,
                this.equations.pop())
            }
            ,
            i.prototype.update = function() {
                var e = this.bodyA
                  , t = this.bodyB
                  , i = this.equations
                  , n = this.motorEquation
                  , r = i[0]
                  , o = i[1]
                  , a = i[2]
                  , s = i[3]
                  , l = i[4]
                  , c = this.axisA_x_pivotA
                  , d = this.axisA
                  , h = this.axisB
                  , u = this.pivotA
                  , p = this.pivotB
                  , f = this.axisA_x_axisA_x_pivotA
                  , g = this.axisB_x_pivotB;
                a.ni.set(1, 0, 0),
                s.ni.set(0, 1, 0),
                l.ni.set(0, 0, 1),
                e.quaternion.vmult(this.pivotA, a.ri),
                t.quaternion.vmult(this.pivotB, a.rj),
                s.ri.copy(a.ri),
                s.rj.copy(a.rj),
                l.ri.copy(a.ri),
                l.rj.copy(a.rj),
                d.cross(u, c),
                c.norm2() < .001 && u.tangents(c, c),
                d.cross(c, f),
                h.cross(p, g),
                g.norm2() < .001 && h.tangents(g, g),
                c.normalize(),
                g.normalize(),
                e.quaternion.vmult(c, r.ni),
                t.quaternion.vmult(h, r.nj),
                e.quaternion.vmult(f, o.ni),
                t.quaternion.vmult(h, o.nj),
                this.motorEnabled && (e.quaternion.vmult(this.axisA, n.axisA),
                t.quaternion.vmult(this.axisB, n.axisB),
                n.targetVelocity = this.motorTargetVelocity,
                n.maxForce = this.motorMaxForce,
                n.minForce = this.motorMinForce)
            }
            ,
            i.prototype.getRotationalEquation1 = function() {
                return this.equations[0]
            }
            ,
            i.prototype.getRotationalEquation2 = function() {
                return this.equations[1]
            }
            ,
            i.prototype.getPointToPointEquation1 = function() {
                return this.equations[2]
            }
            ,
            i.prototype.getPointToPointEquation2 = function() {
                return this.equations[3]
            }
            ,
            i.prototype.getPointToPointEquation3 = function() {
                return this.equations[4]
            }
        }
        , {
            "../equations/ContactEquation": 16,
            "../equations/RotationalEquation": 19,
            "../equations/RotationalMotorEquation": 20,
            "../math/Vec3": 27,
            "./Constraint": 12
        }],
        15: [function(e, t) {
            function i(e, t, i, o, a) {
                n.call(this, e, i);
                var s = this.equations = [new r(e,i), new r(e,i), new r(e,i)]
                  , l = s[0]
                  , c = s[1]
                  , d = s[2];
                c.minForce = d.minForce = l.minForce = -a,
                c.maxForce = d.maxForce = l.maxForce = a,
                this.update = function() {
                    i.position.vsub(e.position, l.ni),
                    l.ni.normalize(),
                    e.quaternion.vmult(t, l.ri),
                    i.quaternion.vmult(o, l.rj),
                    l.ni.tangents(c.ni, d.ni),
                    c.ri.copy(l.ri),
                    c.rj.copy(l.rj),
                    d.ri.copy(l.ri),
                    d.rj.copy(l.rj)
                }
            }
            t.exports = i;
            var n = e("./Constraint")
              , r = e("../equations/ContactEquation");
            i.prototype = new n
        }
        , {
            "../equations/ContactEquation": 16,
            "./Constraint": 12
        }],
        16: [function(e, t) {
            function i(e, t) {
                n.call(this, e, t, 0, 1e6),
                this.restitution = 0,
                this.ri = new r,
                this.rj = new r,
                this.penetrationVec = new r,
                this.ni = new r,
                this.rixn = new r,
                this.rjxn = new r,
                this.invIi = new o,
                this.invIj = new o,
                this.biInvInertiaTimesRixn = new r,
                this.bjInvInertiaTimesRjxn = new r
            }
            t.exports = i;
            var n = e("./Equation")
              , r = e("../math/Vec3")
              , o = e("../math/Mat3");
            i.prototype = new n,
            i.prototype.constructor = i;
            var a = new r
              , s = new r
              , l = new r;
            i.prototype.computeB = function(e) {
                var t = this.a
                  , i = this.b
                  , n = this.bi
                  , r = this.bj
                  , o = this.ri
                  , c = this.rj
                  , d = this.rixn
                  , h = this.rjxn
                  , u = l
                  , p = n.velocity
                  , f = n.angularVelocity ? n.angularVelocity : u
                  , g = (n.force,
                n.torque ? n.torque : u)
                  , m = r.velocity
                  , v = r.angularVelocity ? r.angularVelocity : u
                  , y = (r.force,
                r.torque ? r.torque : u)
                  , b = this.penetrationVec
                  , w = (n.invMass,
                r.invMass,
                this.invIi,
                this.invIj,
                this.jacobianElementA)
                  , x = this.jacobianElementB
                  , E = this.ni;
                o.cross(E, d),
                c.cross(E, h),
                E.negate(w.spatial),
                d.negate(w.rotational),
                x.spatial.copy(E),
                x.rotational.copy(h);
                var b = this.penetrationVec;
                b.set(0, 0, 0),
                b.vadd(r.position, b),
                b.vadd(c, b),
                b.vsub(n.position, b),
                b.vsub(o, b);
                var _ = E.dot(b)
                  , T = a
                  , C = s;
                n.invInertiaWorld ? n.invInertiaWorld.vmult(g, T) : T.set(0, 0, 0),
                r.invInertiaWorld ? r.invInertiaWorld.vmult(y, C) : C.set(0, 0, 0);
                var R = this.restitution + 1
                  , S = R * m.dot(E) - R * p.dot(E) + v.dot(h) - f.dot(d)
                  , k = this.computeGiMf()
                  , M = -_ * t - S * i - e * k;
                return M
            }
        }
        , {
            "../math/Mat3": 24,
            "../math/Vec3": 27,
            "./Equation": 17
        }],
        17: [function(e, t) {
            function i(e, t, i, r) {
                this.id = -1,
                this.minForce = "undefined" == typeof i ? -1e6 : i,
                this.maxForce = "undefined" == typeof r ? 1e6 : r,
                this.bi = e,
                this.bj = t,
                this.a = 0,
                this.b = 0,
                this.eps = 0,
                this.jacobianElementA = new n,
                this.jacobianElementB = new n,
                this.setSpookParams(1e7, 4, 1 / 60),
                this.enabled = !0
            }
            t.exports = i;
            var n = e("../math/JacobianElement")
              , r = e("../math/Vec3");
            i.prototype.constructor = i,
            i.prototype.setSpookParams = function(e, t, i) {
                var n = t
                  , r = e
                  , o = i;
                this.a = 4 / (o * (1 + 4 * n)),
                this.b = 4 * n / (1 + 4 * n),
                this.eps = 4 / (o * o * r * (1 + 4 * n))
            }
            ,
            i.prototype.computeB = function(e, t, i) {
                var n = this.computeGW()
                  , r = this.computeGq()
                  , o = this.computeGiMf();
                return -r * e - n * t - o * i
            }
            ,
            i.prototype.computeGq = function() {
                var e = this.jacobianElementA
                  , t = this.jacobianElementB
                  , i = this.bi
                  , n = this.bj
                  , r = i.position
                  , o = n.position;
                return e.spatial.dot(r) + t.spatial.dot(o)
            }
            ;
            var o = new r;
            i.prototype.computeGW = function() {
                var e = this.jacobianElementA
                  , t = this.jacobianElementB
                  , i = this.bi
                  , n = this.bj
                  , r = i.velocity
                  , a = n.velocity
                  , s = i.angularVelocity || o
                  , l = n.angularVelocity || o;
                return e.multiplyVectors(r, s) + t.multiplyVectors(a, l)
            }
            ,
            i.prototype.computeGWlambda = function() {
                var e = this.jacobianElementA
                  , t = this.jacobianElementB
                  , i = this.bi
                  , n = this.bj
                  , r = i.vlambda
                  , a = n.vlambda
                  , s = i.wlambda || o
                  , l = n.wlambda || o;
                return e.multiplyVectors(r, s) + t.multiplyVectors(a, l)
            }
            ;
            var a = new r
              , s = new r
              , l = new r
              , c = new r;
            i.prototype.computeGiMf = function() {
                var e = this.jacobianElementA
                  , t = this.jacobianElementB
                  , i = this.bi
                  , n = this.bj
                  , r = i.force
                  , o = i.torque
                  , d = n.force
                  , h = n.torque
                  , u = i.invMassSolve
                  , p = n.invMassSolve;
                return i.invInertiaWorldSolve ? i.invInertiaWorldSolve.vmult(o, l) : l.set(0, 0, 0),
                n.invInertiaWorldSolve ? n.invInertiaWorldSolve.vmult(h, c) : c.set(0, 0, 0),
                r.mult(u, a),
                d.mult(p, s),
                e.multiplyVectors(a, l) + t.multiplyVectors(s, c)
            }
            ;
            var d = new r;
            i.prototype.computeGiMGt = function() {
                var e = this.jacobianElementA
                  , t = this.jacobianElementB
                  , i = this.bi
                  , n = this.bj
                  , r = i.invMassSolve
                  , o = n.invMassSolve
                  , a = i.invInertiaWorldSolve
                  , s = n.invInertiaWorldSolve
                  , l = r + o;
                return a && (a.vmult(e.rotational, d),
                l += d.dot(e.rotational)),
                s && (s.vmult(t.rotational, d),
                l += d.dot(t.rotational)),
                l
            }
            ;
            {
                var h = new r;
                new r,
                new r,
                new r,
                new r,
                new r
            }
            i.prototype.addToWlambda = function(e) {
                var t = this.jacobianElementA
                  , i = this.jacobianElementB
                  , n = this.bi
                  , r = this.bj
                  , o = h;
                t.spatial.mult(n.invMassSolve * e, o),
                n.vlambda.vadd(o, n.vlambda),
                i.spatial.mult(r.invMassSolve * e, o),
                r.vlambda.vadd(o, r.vlambda),
                n.invInertiaWorldSolve && (n.invInertiaWorldSolve.vmult(t.rotational, o),
                o.mult(e, o),
                n.wlambda.vadd(o, n.wlambda)),
                r.invInertiaWorldSolve && (r.invInertiaWorldSolve.vmult(i.rotational, o),
                o.mult(e, o),
                r.wlambda.vadd(o, r.wlambda))
            }
            ,
            i.prototype.computeC = function() {
                return this.computeGiMGt() + this.eps
            }
        }
        , {
            "../math/JacobianElement": 23,
            "../math/Vec3": 27
        }],
        18: [function(e, t) {
            function i(e, t, i) {
                n.call(this, e, t, -i, i),
                this.ri = new r,
                this.rj = new r,
                this.t = new r,
                this.rixt = new r,
                this.rjxt = new r,
                this.wixri = new r,
                this.wjxrj = new r,
                this.invIi = new o,
                this.invIj = new o,
                this.relVel = new r,
                this.relForce = new r,
                this.biInvInertiaTimesRixt = new r,
                this.bjInvInertiaTimesRjxt = new r
            }
            t.exports = i;
            var n = e("./Equation")
              , r = e("../math/Vec3")
              , o = e("../math/Mat3");
            i.prototype = new n,
            i.prototype.constructor = i;
            var a = new r
              , s = new r
              , l = new r;
            i.prototype.computeB = function(e) {
                var t = (this.a,
                this.b)
                  , i = this.bi
                  , n = this.bj
                  , r = this.ri
                  , o = this.rj
                  , c = this.rixt
                  , d = this.rjxt
                  , h = this.wixri
                  , u = this.wjxrj
                  , p = l
                  , f = (i.velocity,
                i.angularVelocity ? i.angularVelocity : p)
                  , g = (i.force,
                i.torque ? i.torque : p)
                  , m = (n.velocity,
                n.angularVelocity ? n.angularVelocity : p)
                  , v = (n.force,
                n.torque ? n.torque : p)
                  , y = (this.relVel,
                this.relForce,
                i.invMass,
                n.invMass,
                this.invIi,
                this.invIj,
                this.t)
                  , b = a
                  , w = s;
                r.cross(y, c),
                o.cross(y, d),
                f.cross(r, h),
                m.cross(o, u);
                var x = this.jacobianElementA
                  , E = this.jacobianElementB;
                y.negate(x.spatial),
                c.negate(x.rotational),
                E.spatial.copy(y),
                E.rotational.copy(d),
                i.invInertiaWorld ? i.invInertiaWorld.vmult(g, b) : b.set(0, 0, 0),
                n.invInertiaWorld ? n.invInertiaWorld.vmult(v, w) : w.set(0, 0, 0);
                var _ = this.computeGW()
                  , T = this.computeGiMf()
                  , C = -_ * t - e * T;
                return C
            }
        }
        , {
            "../math/Mat3": 24,
            "../math/Vec3": 27,
            "./Equation": 17
        }],
        19: [function(e, t) {
            function i(e, t) {
                o.call(this, e, t, -1e6, 1e6),
                this.ni = new n,
                this.nj = new n,
                this.nixnj = new n,
                this.njxni = new n,
                this.invIi = new r,
                this.invIj = new r,
                this.relVel = new n,
                this.relForce = new n
            }
            t.exports = i;
            var n = e("../math/Vec3")
              , r = e("../math/Mat3")
              , o = e("./Equation");
            i.prototype = new o,
            i.prototype.constructor = i;
            var a = new n;
            i.prototype.computeB = function(e) {
                {
                    var t = this.a
                      , i = this.b
                      , n = this.bi
                      , r = this.bj
                      , o = this.ni
                      , s = this.nj
                      , l = this.nixnj
                      , c = this.njxni
                      , d = (n.velocity,
                    n.angularVelocity ? n.angularVelocity : a,
                    n.force,
                    n.torque ? n.torque : a,
                    r.velocity,
                    r.angularVelocity ? r.angularVelocity : a,
                    r.force,
                    r.torque ? r.torque : a,
                    n.invMass,
                    r.invMass,
                    this.jacobianElementA)
                      , h = this.jacobianElementB;
                    this.invIi,
                    this.invIj
                }
                o.cross(s, l),
                s.cross(o, c),
                d.rotational.copy(c),
                h.rotational.copy(l);
                var u = -o.dot(s)
                  , p = this.computeGW()
                  , f = this.computeGiMf()
                  , g = -u * t - p * i - e * f;
                return g
            }
        }
        , {
            "../math/Mat3": 24,
            "../math/Vec3": 27,
            "./Equation": 17
        }],
        20: [function(e, t) {
            function i(e, t, i) {
                i = i || 1e6,
                o.call(this, e, t, -i, i),
                this.axisA = new n,
                this.axisB = new n,
                this.invIi = new r,
                this.invIj = new r,
                this.targetVelocity = 0
            }
            t.exports = i;
            var n = e("../math/Vec3")
              , r = e("../math/Mat3")
              , o = e("./Equation");
            i.prototype = new o,
            i.prototype.constructor = i;
            var a = new n;
            i.prototype.computeB = function(e) {
                {
                    var t = (this.a,
                    this.b)
                      , i = this.bi
                      , n = this.bj
                      , r = this.axisA
                      , o = this.axisB
                      , s = (i.velocity,
                    i.angularVelocity ? i.angularVelocity : a,
                    i.force,
                    i.torque ? i.torque : a,
                    n.velocity,
                    n.angularVelocity ? n.angularVelocity : a,
                    n.force,
                    n.torque ? n.torque : a,
                    this.jacobianElementA)
                      , l = this.jacobianElementB;
                    i.invMass,
                    n.invMass
                }
                s.rotational.copy(r),
                o.negate(l.rotational);
                var c = this.computeGW() - this.targetVelocity
                  , d = this.computeGiMf()
                  , h = -c * t - e * d;
                return h
            }
        }
        , {
            "../math/Mat3": 24,
            "../math/Vec3": 27,
            "./Equation": 17
        }],
        21: [function(e, t) {
            function i(e, t, r) {
                r = n.defaults(r, {
                    friction: .3,
                    restitution: .3,
                    contactEquationStiffness: 1e7,
                    contactEquationRelaxation: 3,
                    frictionEquationStiffness: 1e7,
                    frictionEquationRelaxation: 3
                }),
                this.id = i.idCounter++,
                this.materials = [e, t],
                this.friction = r.friction,
                this.restitution = r.restitution,
                this.contactEquationStiffness = r.contactEquationStiffness,
                this.contactEquationRelaxation = r.contactEquationRelaxation,
                this.frictionEquationStiffness = r.frictionEquationStiffness,
                this.frictionEquationRelaxation = r.frictionEquationRelaxation
            }
            var n = e("../utils/Utils");
            t.exports = i,
            i.idCounter = 0
        }
        , {
            "../utils/Utils": 48
        }],
        22: [function(e, t) {
            function i(e) {
                this.name = e,
                this.id = i.idCounter++
            }
            t.exports = i,
            i.idCounter = 0
        }
        , {}],
        23: [function(e, t) {
            function i() {
                this.spatial = new n,
                this.rotational = new n
            }
            t.exports = i;
            var n = e("./Vec3");
            i.prototype.multiplyElement = function(e) {
                return e.spatial.dot(this.spatial) + e.rotational.dot(this.rotational)
            }
            ,
            i.prototype.multiplyVectors = function(e, t) {
                return e.dot(this.spatial) + t.dot(this.rotational)
            }
        }
        , {
            "./Vec3": 27
        }],
        24: [function(e, t) {
            function i(e) {
                this.elements = e ? e : [0, 0, 0, 0, 0, 0, 0, 0, 0]
            }
            t.exports = i;
            var n = e("./Vec3");
            i.prototype.identity = function() {
                this.elements[0] = 1,
                this.elements[1] = 0,
                this.elements[2] = 0,
                this.elements[3] = 0,
                this.elements[4] = 1,
                this.elements[5] = 0,
                this.elements[6] = 0,
                this.elements[7] = 0,
                this.elements[8] = 1
            }
            ,
            i.prototype.setZero = function() {
                var e = this.elements;
                e[0] = 0,
                e[1] = 0,
                e[2] = 0,
                e[3] = 0,
                e[4] = 0,
                e[5] = 0,
                e[6] = 0,
                e[7] = 0,
                e[8] = 0
            }
            ,
            i.prototype.setTrace = function(e) {
                var t = this.elements;
                t[0] = e.x,
                t[4] = e.y,
                t[8] = e.z
            }
            ,
            i.prototype.getTrace = function(e) {
                var e = e || new n
                  , t = this.elements;
                e.x = t[0],
                e.y = t[4],
                e.z = t[8]
            }
            ,
            i.prototype.vmult = function(e, t) {
                t = t || new n;
                var i = this.elements
                  , r = e.x
                  , o = e.y
                  , a = e.z;
                return t.x = i[0] * r + i[1] * o + i[2] * a,
                t.y = i[3] * r + i[4] * o + i[5] * a,
                t.z = i[6] * r + i[7] * o + i[8] * a,
                t
            }
            ,
            i.prototype.smult = function(e) {
                for (var t = 0; t < this.elements.length; t++)
                    this.elements[t] *= e
            }
            ,
            i.prototype.mmult = function(e, t) {
                for (var n = t || new i, r = 0; 3 > r; r++)
                    for (var o = 0; 3 > o; o++) {
                        for (var a = 0, s = 0; 3 > s; s++)
                            a += e.elements[r + 3 * s] * this.elements[s + 3 * o];
                        n.elements[r + 3 * o] = a
                    }
                return n
            }
            ,
            i.prototype.scale = function(e, t) {
                t = t || new i;
                for (var n = this.elements, r = t.elements, o = 0; 3 !== o; o++)
                    r[3 * o + 0] = e.x * n[3 * o + 0],
                    r[3 * o + 1] = e.y * n[3 * o + 1],
                    r[3 * o + 2] = e.z * n[3 * o + 2];
                return t
            }
            ,
            i.prototype.solve = function(e, t) {
                t = t || new n;
                for (var i = 3, r = 4, o = [], a = 0; i * r > a; a++)
                    o.push(0);
                var a, s;
                for (a = 0; 3 > a; a++)
                    for (s = 0; 3 > s; s++)
                        o[a + r * s] = this.elements[a + 3 * s];
                o[3] = e.x,
                o[7] = e.y,
                o[11] = e.z;
                var l, c, d = 3, h = d, u = 4;
                do {
                    if (a = h - d,
                    0 === o[a + r * a])
                        for (s = a + 1; h > s; s++)
                            if (0 !== o[a + r * s]) {
                                l = u;
                                do
                                    c = u - l,
                                    o[c + r * a] += o[c + r * s];
                                while (--l);break
                            }
                    if (0 !== o[a + r * a])
                        for (s = a + 1; h > s; s++) {
                            var p = o[a + r * s] / o[a + r * a];
                            l = u;
                            do
                                c = u - l,
                                o[c + r * s] = a >= c ? 0 : o[c + r * s] - o[c + r * a] * p;
                            while (--l)
                        }
                } while (--d);if (t.z = o[2 * r + 3] / o[2 * r + 2],
                t.y = (o[1 * r + 3] - o[1 * r + 2] * t.z) / o[1 * r + 1],
                t.x = (o[0 * r + 3] - o[0 * r + 2] * t.z - o[0 * r + 1] * t.y) / o[0 * r + 0],
                isNaN(t.x) || isNaN(t.y) || isNaN(t.z) || 1 / 0 === t.x || 1 / 0 === t.y || 1 / 0 === t.z)
                    throw "Could not solve equation! Got x=[" + t.toString() + "], b=[" + e.toString() + "], A=[" + this.toString() + "]";
                return t
            }
            ,
            i.prototype.e = function(e, t, i) {
                return void 0 === i ? this.elements[t + 3 * e] : void (this.elements[t + 3 * e] = i)
            }
            ,
            i.prototype.copy = function(e) {
                for (var t = 0; t < e.elements.length; t++)
                    this.elements[t] = e.elements[t];
                return this
            }
            ,
            i.prototype.toString = function() {
                for (var e = "", t = ",", i = 0; 9 > i; i++)
                    e += this.elements[i] + t;
                return e
            }
            ,
            i.prototype.reverse = function(e) {
                e = e || new i;
                for (var t = 3, n = 6, r = [], o = 0; t * n > o; o++)
                    r.push(0);
                var o, a;
                for (o = 0; 3 > o; o++)
                    for (a = 0; 3 > a; a++)
                        r[o + n * a] = this.elements[o + 3 * a];
                r[3] = 1,
                r[9] = 0,
                r[15] = 0,
                r[4] = 0,
                r[10] = 1,
                r[16] = 0,
                r[5] = 0,
                r[11] = 0,
                r[17] = 1;
                var s, l, c = 3, d = c, h = n;
                do {
                    if (o = d - c,
                    0 === r[o + n * o])
                        for (a = o + 1; d > a; a++)
                            if (0 !== r[o + n * a]) {
                                s = h;
                                do
                                    l = h - s,
                                    r[l + n * o] += r[l + n * a];
                                while (--s);break
                            }
                    if (0 !== r[o + n * o])
                        for (a = o + 1; d > a; a++) {
                            var u = r[o + n * a] / r[o + n * o];
                            s = h;
                            do
                                l = h - s,
                                r[l + n * a] = o >= l ? 0 : r[l + n * a] - r[l + n * o] * u;
                            while (--s)
                        }
                } while (--c);o = 2;
                do {
                    a = o - 1;
                    do {
                        var u = r[o + n * a] / r[o + n * o];
                        s = n;
                        do
                            l = n - s,
                            r[l + n * a] = r[l + n * a] - r[l + n * o] * u;
                        while (--s)
                    } while (a--)
                } while (--o);o = 2;
                do {
                    var u = 1 / r[o + n * o];
                    s = n;
                    do
                        l = n - s,
                        r[l + n * o] = r[l + n * o] * u;
                    while (--s)
                } while (o--);o = 2;
                do {
                    a = 2;
                    do {
                        if (l = r[t + a + n * o],
                        isNaN(l) || 1 / 0 === l)
                            throw "Could not reverse! A=[" + this.toString() + "]";
                        e.e(o, a, l)
                    } while (a--)
                } while (o--);return e
            }
            ,
            i.prototype.setRotationFromQuaternion = function(e) {
                var t = e.x
                  , i = e.y
                  , n = e.z
                  , r = e.w
                  , o = t + t
                  , a = i + i
                  , s = n + n
                  , l = t * o
                  , c = t * a
                  , d = t * s
                  , h = i * a
                  , u = i * s
                  , p = n * s
                  , f = r * o
                  , g = r * a
                  , m = r * s
                  , v = this.elements;
                return v[0] = 1 - (h + p),
                v[1] = c - m,
                v[2] = d + g,
                v[3] = c + m,
                v[4] = 1 - (l + p),
                v[5] = u - f,
                v[6] = d - g,
                v[7] = u + f,
                v[8] = 1 - (l + h),
                this
            }
            ,
            i.prototype.transpose = function(e) {
                e = e || new i;
                for (var t = e.elements, n = this.elements, r = 0; 3 !== r; r++)
                    for (var o = 0; 3 !== o; o++)
                        t[3 * r + o] = n[3 * o + r];
                return e
            }
        }
        , {
            "./Vec3": 27
        }],
        25: [function(e, t) {
            function i(e, t, i, n) {
                this.x = void 0 !== e ? e : 0,
                this.y = void 0 !== t ? t : 0,
                this.z = void 0 !== i ? i : 0,
                this.w = void 0 !== n ? n : 1
            }
            t.exports = i;
            var n = e("./Vec3");
            i.prototype.set = function(e, t, i, n) {
                this.x = e,
                this.y = t,
                this.z = i,
                this.w = n
            }
            ,
            i.prototype.toString = function() {
                return this.x + "," + this.y + "," + this.z + "," + this.w
            }
            ,
            i.prototype.toArray = function() {
                return [this.x, this.y, this.z, this.w]
            }
            ,
            i.prototype.setFromAxisAngle = function(e, t) {
                var i = Math.sin(.5 * t);
                this.x = e.x * i,
                this.y = e.y * i,
                this.z = e.z * i,
                this.w = Math.cos(.5 * t)
            }
            ,
            i.prototype.toAxisAngle = function(e) {
                e = e || new n,
                this.normalize();
                var t = 2 * Math.acos(this.w)
                  , i = Math.sqrt(1 - this.w * this.w);
                return .001 > i ? (e.x = this.x,
                e.y = this.y,
                e.z = this.z) : (e.x = this.x / i,
                e.y = this.y / i,
                e.z = this.z / i),
                [e, t]
            }
            ;
            var r = new n
              , o = new n;
            i.prototype.setFromVectors = function(e, t) {
                if (e.isAntiparallelTo(t)) {
                    var i = r
                      , n = o;
                    e.tangents(i, n),
                    this.setFromAxisAngle(i, Math.PI)
                } else {
                    var a = e.cross(t);
                    this.x = a.x,
                    this.y = a.y,
                    this.z = a.z,
                    this.w = Math.sqrt(Math.pow(e.norm(), 2) * Math.pow(t.norm(), 2)) + e.dot(t),
                    this.normalize()
                }
            }
            ;
            var a = new n
              , s = new n
              , l = new n;
            i.prototype.mult = function(e, t) {
                t = t || new i;
                var n = this.w
                  , r = a
                  , o = s
                  , c = l;
                return r.set(this.x, this.y, this.z),
                o.set(e.x, e.y, e.z),
                t.w = n * e.w - r.dot(o),
                r.cross(o, c),
                t.x = n * o.x + e.w * r.x + c.x,
                t.y = n * o.y + e.w * r.y + c.y,
                t.z = n * o.z + e.w * r.z + c.z,
                t
            }
            ,
            i.prototype.inverse = function(e) {
                var t = this.x
                  , n = this.y
                  , r = this.z
                  , o = this.w;
                e = e || new i,
                this.conjugate(e);
                var a = 1 / (t * t + n * n + r * r + o * o);
                return e.x *= a,
                e.y *= a,
                e.z *= a,
                e.w *= a,
                e
            }
            ,
            i.prototype.conjugate = function(e) {
                return e = e || new i,
                e.x = -this.x,
                e.y = -this.y,
                e.z = -this.z,
                e.w = this.w,
                e
            }
            ,
            i.prototype.normalize = function() {
                var e = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
                0 === e ? (this.x = 0,
                this.y = 0,
                this.z = 0,
                this.w = 0) : (e = 1 / e,
                this.x *= e,
                this.y *= e,
                this.z *= e,
                this.w *= e)
            }
            ,
            i.prototype.normalizeFast = function() {
                var e = (3 - (this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)) / 2;
                0 === e ? (this.x = 0,
                this.y = 0,
                this.z = 0,
                this.w = 0) : (this.x *= e,
                this.y *= e,
                this.z *= e,
                this.w *= e)
            }
            ,
            i.prototype.vmult = function(e, t) {
                t = t || new n;
                var i = e.x
                  , r = e.y
                  , o = e.z
                  , a = this.x
                  , s = this.y
                  , l = this.z
                  , c = this.w
                  , d = c * i + s * o - l * r
                  , h = c * r + l * i - a * o
                  , u = c * o + a * r - s * i
                  , p = -a * i - s * r - l * o;
                return t.x = d * c + p * -a + h * -l - u * -s,
                t.y = h * c + p * -s + u * -a - d * -l,
                t.z = u * c + p * -l + d * -s - h * -a,
                t
            }
            ,
            i.prototype.copy = function(e) {
                return this.x = e.x,
                this.y = e.y,
                this.z = e.z,
                this.w = e.w,
                this
            }
            ,
            i.prototype.toEuler = function(e, t) {
                t = t || "YZX";
                var i, n, r, o = this.x, a = this.y, s = this.z, l = this.w;
                switch (t) {
                case "YZX":
                    var c = o * a + s * l;
                    if (c > .499 && (i = 2 * Math.atan2(o, l),
                    n = Math.PI / 2,
                    r = 0),
                    -.499 > c && (i = -2 * Math.atan2(o, l),
                    n = -Math.PI / 2,
                    r = 0),
                    isNaN(i)) {
                        var d = o * o
                          , h = a * a
                          , u = s * s;
                        i = Math.atan2(2 * a * l - 2 * o * s, 1 - 2 * h - 2 * u),
                        n = Math.asin(2 * c),
                        r = Math.atan2(2 * o * l - 2 * a * s, 1 - 2 * d - 2 * u)
                    }
                    break;
                default:
                    throw new Error("Euler order " + t + " not supported yet.")
                }
                e.y = i,
                e.z = n,
                e.x = r
            }
            ,
            i.prototype.setFromEuler = function(e, t, i, n) {
                n = n || "XYZ";
                var r = Math.cos(e / 2)
                  , o = Math.cos(t / 2)
                  , a = Math.cos(i / 2)
                  , s = Math.sin(e / 2)
                  , l = Math.sin(t / 2)
                  , c = Math.sin(i / 2);
                return "XYZ" === n ? (this.x = s * o * a + r * l * c,
                this.y = r * l * a - s * o * c,
                this.z = r * o * c + s * l * a,
                this.w = r * o * a - s * l * c) : "YXZ" === n ? (this.x = s * o * a + r * l * c,
                this.y = r * l * a - s * o * c,
                this.z = r * o * c - s * l * a,
                this.w = r * o * a + s * l * c) : "ZXY" === n ? (this.x = s * o * a - r * l * c,
                this.y = r * l * a + s * o * c,
                this.z = r * o * c + s * l * a,
                this.w = r * o * a - s * l * c) : "ZYX" === n ? (this.x = s * o * a - r * l * c,
                this.y = r * l * a + s * o * c,
                this.z = r * o * c - s * l * a,
                this.w = r * o * a + s * l * c) : "YZX" === n ? (this.x = s * o * a + r * l * c,
                this.y = r * l * a + s * o * c,
                this.z = r * o * c - s * l * a,
                this.w = r * o * a - s * l * c) : "XZY" === n && (this.x = s * o * a - r * l * c,
                this.y = r * l * a - s * o * c,
                this.z = r * o * c + s * l * a,
                this.w = r * o * a + s * l * c),
                this
            }
            ,
            i.prototype.clone = function() {
                return new i(this.x,this.y,this.z,this.w)
            }
        }
        , {
            "./Vec3": 27
        }],
        26: [function(e, t) {
            function i() {
                this.position = new n,
                this.quaternion = new r
            }
            var n = e("./Vec3")
              , r = e("./Quaternion");
            t.exports = i;
            var o = new r;
            i.pointToLocalFrame = function(e, t, i, r) {
                var r = r || new n;
                return i.vsub(e, r),
                t.conjugate(o),
                o.vmult(r, r),
                r
            }
            ,
            i.pointToWorldFrame = function(e, t, i, r) {
                var r = r || new n;
                return t.vmult(i, r),
                r.vadd(e, r),
                r
            }
            ,
            i.prototype.vectorToWorldFrame = function(e, t) {
                var t = t || new n;
                return this.quaternion.vmult(e, t),
                t
            }
            ,
            i.vectorToLocalFrame = function(e, t, i, r) {
                var r = r || new n;
                return t.w *= -1,
                t.vmult(i, r),
                t.w *= -1,
                r
            }
        }
        , {
            "./Quaternion": 25,
            "./Vec3": 27
        }],
        27: [function(e, t) {
            function i(e, t, i) {
                this.x = e || 0,
                this.y = t || 0,
                this.z = i || 0
            }
            t.exports = i;
            var n = e("./Mat3");
            i.ZERO = new i(0,0,0),
            i.prototype.cross = function(e, t) {
                var n = e.x
                  , r = e.y
                  , o = e.z
                  , a = this.x
                  , s = this.y
                  , l = this.z;
                return t = t || new i,
                t.x = s * o - l * r,
                t.y = l * n - a * o,
                t.z = a * r - s * n,
                t
            }
            ,
            i.prototype.set = function(e, t, i) {
                return this.x = e,
                this.y = t,
                this.z = i,
                this
            }
            ,
            i.prototype.setZero = function() {
                this.x = this.y = this.z = 0
            }
            ,
            i.prototype.vadd = function(e, t) {
                return t ? (t.x = e.x + this.x,
                t.y = e.y + this.y,
                t.z = e.z + this.z,
                void 0) : new i(this.x + e.x,this.y + e.y,this.z + e.z)
            }
            ,
            i.prototype.vsub = function(e, t) {
                return t ? (t.x = this.x - e.x,
                t.y = this.y - e.y,
                t.z = this.z - e.z,
                void 0) : new i(this.x - e.x,this.y - e.y,this.z - e.z)
            }
            ,
            i.prototype.crossmat = function() {
                return new n([0, -this.z, this.y, this.z, 0, -this.x, -this.y, this.x, 0])
            }
            ,
            i.prototype.normalize = function() {
                var e = this.x
                  , t = this.y
                  , i = this.z
                  , n = Math.sqrt(e * e + t * t + i * i);
                if (n > 0) {
                    var r = 1 / n;
                    this.x *= r,
                    this.y *= r,
                    this.z *= r
                } else
                    this.x = 0,
                    this.y = 0,
                    this.z = 0;
                return n
            }
            ,
            i.prototype.unit = function(e) {
                e = e || new i;
                var t = this.x
                  , n = this.y
                  , r = this.z
                  , o = Math.sqrt(t * t + n * n + r * r);
                return o > 0 ? (o = 1 / o,
                e.x = t * o,
                e.y = n * o,
                e.z = r * o) : (e.x = 1,
                e.y = 0,
                e.z = 0),
                e
            }
            ,
            i.prototype.norm = function() {
                var e = this.x
                  , t = this.y
                  , i = this.z;
                return Math.sqrt(e * e + t * t + i * i)
            }
            ,
            i.prototype.norm2 = function() {
                return this.dot(this)
            }
            ,
            i.prototype.distanceTo = function(e) {
                var t = this.x
                  , i = this.y
                  , n = this.z
                  , r = e.x
                  , o = e.y
                  , a = e.z;
                return Math.sqrt((r - t) * (r - t) + (o - i) * (o - i) + (a - n) * (a - n))
            }
            ,
            i.prototype.mult = function(e, t) {
                t = t || new i;
                var n = this.x
                  , r = this.y
                  , o = this.z;
                return t.x = e * n,
                t.y = e * r,
                t.z = e * o,
                t
            }
            ,
            i.prototype.scale = i.prototype.mult,
            i.prototype.dot = function(e) {
                return this.x * e.x + this.y * e.y + this.z * e.z
            }
            ,
            i.prototype.isZero = function() {
                return 0 === this.x && 0 === this.y && 0 === this.z
            }
            ,
            i.prototype.negate = function(e) {
                return e = e || new i,
                e.x = -this.x,
                e.y = -this.y,
                e.z = -this.z,
                e
            }
            ;
            var r = new i
              , o = new i;
            i.prototype.tangents = function(e, t) {
                var i = this.norm();
                if (i > 0) {
                    var n = r
                      , a = 1 / i;
                    n.set(this.x * a, this.y * a, this.z * a);
                    var s = o;
                    Math.abs(n.x) < .9 ? (s.set(1, 0, 0),
                    n.cross(s, e)) : (s.set(0, 1, 0),
                    n.cross(s, e)),
                    n.cross(e, t)
                } else
                    e.set(1, 0, 0).normalize(),
                    t.set(0, 1, 0).normalize()
            }
            ,
            i.prototype.toString = function() {
                return this.x + "," + this.y + "," + this.z
            }
            ,
            i.prototype.toArray = function() {
                return [this.x, this.y, this.z]
            }
            ,
            i.prototype.copy = function(e) {
                return this.x = e.x,
                this.y = e.y,
                this.z = e.z,
                this
            }
            ,
            i.prototype.lerp = function(e, t, i) {
                var n = this.x
                  , r = this.y
                  , o = this.z;
                i.x = n + (e.x - n) * t,
                i.y = r + (e.y - r) * t,
                i.z = o + (e.z - o) * t
            }
            ,
            i.prototype.almostEquals = function(e, t) {
                return void 0 === t && (t = 1e-6),
                Math.abs(this.x - e.x) > t || Math.abs(this.y - e.y) > t || Math.abs(this.z - e.z) > t ? !1 : !0
            }
            ,
            i.prototype.almostZero = function(e) {
                return void 0 === e && (e = 1e-6),
                Math.abs(this.x) > e || Math.abs(this.y) > e || Math.abs(this.z) > e ? !1 : !0
            }
            ;
            var a = new i;
            i.prototype.isAntiparallelTo = function(e, t) {
                return this.negate(a),
                a.almostEquals(e, t)
            }
            ,
            i.prototype.clone = function() {
                return new i(this.x,this.y,this.z)
            }
        }
        , {
            "./Mat3": 24
        }],
        28: [function(e, t) {
            function i(e) {
                e = e || {},
                n.apply(this),
                this.id = i.idCounter++,
                this.world = null ,
                this.preStep = null ,
                this.postStep = null ,
                this.vlambda = new r,
                this.collisionFilterGroup = 1,
                this.collisionFilterMask = 1,
                this.collisionResponse = !0,
                this.position = new r,
                e.position && this.position.copy(e.position),
                this.previousPosition = new r,
                this.initPosition = new r,
                this.velocity = new r,
                e.velocity && this.velocity.copy(e.velocity),
                this.initVelocity = new r,
                this.force = new r;
                var t = "number" == typeof e.mass ? e.mass : 0;
                this.mass = t,
                this.invMass = t > 0 ? 1 / t : 0,
                this.material = e.material || null ,
                this.linearDamping = "number" == typeof e.linearDamping ? e.linearDamping : .01,
                this.type = 0 >= t ? i.STATIC : i.DYNAMIC,
                typeof e.type == typeof i.STATIC && (this.type = e.type),
                this.allowSleep = !0,
                this.sleepState = 0,
                this.sleepSpeedLimit = .1,
                this.sleepTimeLimit = 1,
                this.timeLastSleepy = 0,
                this._wakeUpAfterNarrowphase = !1,
                this.torque = new r,
                this.quaternion = new a,
                e.quaternion && this.quaternion.copy(e.quaternion),
                this.initQuaternion = new a,
                this.angularVelocity = new r,
                e.angularVelocity && this.angularVelocity.copy(e.angularVelocity),
                this.initAngularVelocity = new r,
                this.interpolatedPosition = new r,
                this.interpolatedQuaternion = new a,
                this.shapes = [],
                this.shapeOffsets = [],
                this.shapeOrientations = [],
                this.inertia = new r,
                this.invInertia = new r,
                this.invInertiaWorld = new o,
                this.invMassSolve = 0,
                this.invInertiaSolve = new r,
                this.invInertiaWorldSolve = new o,
                this.fixedRotation = !1,
                this.angularDamping = .01,
                this.aabb = new s,
                this.aabbNeedsUpdate = !0,
                this.wlambda = new r,
                this.updateMassProperties()
            }
            t.exports = i;
            var n = e("../utils/EventTarget")
              , r = (e("../shapes/Shape"),
            e("../math/Vec3"))
              , o = e("../math/Mat3")
              , a = e("../math/Quaternion")
              , s = (e("../material/Material"),
            e("../collision/AABB"))
              , l = e("../shapes/Box");
            i.prototype = new n,
            i.prototype.constructor = i,
            i.DYNAMIC = 1,
            i.STATIC = 2,
            i.KINEMATIC = 4,
            i.AWAKE = 0,
            i.SLEEPY = 1,
            i.SLEEPING = 2,
            i.idCounter = 0,
            i.prototype.wakeUp = function() {
                var e = this.sleepState;
                this.sleepState = 0,
                e === i.SLEEPING && this.dispatchEvent({
                    type: "wakeup"
                })
            }
            ,
            i.prototype.sleep = function() {
                this.sleepState = i.SLEEPING,
                this.velocity.set(0, 0, 0),
                this.angularVelocity.set(0, 0, 0)
            }
            ,
            i.sleepyEvent = {
                type: "sleepy"
            },
            i.sleepEvent = {
                type: "sleep"
            },
            i.prototype.sleepTick = function(e) {
                if (this.allowSleep) {
                    var t = this.sleepState
                      , n = this.velocity.norm2() + this.angularVelocity.norm2()
                      , r = Math.pow(this.sleepSpeedLimit, 2);
                    t === i.AWAKE && r > n ? (this.sleepState = i.SLEEPY,
                    this.timeLastSleepy = e,
                    this.dispatchEvent(i.sleepyEvent)) : t === i.SLEEPY && n > r ? this.wakeUp() : t === i.SLEEPY && e - this.timeLastSleepy > this.sleepTimeLimit && (this.sleep(),
                    this.dispatchEvent(i.sleepEvent))
                }
            }
            ,
            i.prototype.updateSolveMassProperties = function() {
                this.sleepState === i.SLEEPING || this.type === i.KINEMATIC ? (this.invMassSolve = 0,
                this.invInertiaSolve.setZero(),
                this.invInertiaWorldSolve.setZero()) : (this.invMassSolve = this.invMass,
                this.invInertiaSolve.copy(this.invInertia),
                this.invInertiaWorldSolve.copy(this.invInertiaWorld))
            }
            ,
            i.prototype.pointToLocalFrame = function(e, t) {
                var t = t || new r;
                return e.vsub(this.position, t),
                this.quaternion.conjugate().vmult(t, t),
                t
            }
            ,
            i.prototype.pointToWorldFrame = function(e, t) {
                var t = t || new r;
                return this.quaternion.vmult(e, t),
                t.vadd(this.position, t),
                t
            }
            ,
            i.prototype.vectorToWorldFrame = function(e, t) {
                var t = t || new r;
                return this.quaternion.vmult(e, t),
                t
            }
            ;
            var c = new r
              , d = new a;
            i.prototype.addShape = function(e, t, i) {
                var n = new r
                  , o = new a;
                t && n.copy(t),
                i && o.copy(i),
                this.shapes.push(e),
                this.shapeOffsets.push(n),
                this.shapeOrientations.push(o),
                this.updateMassProperties(),
                this.updateBoundingRadius(),
                this.aabbNeedsUpdate = !0
            }
            ,
            i.prototype.updateBoundingRadius = function() {
                for (var e = this.shapes, t = this.shapeOffsets, i = e.length, n = 0, r = 0; r !== i; r++) {
                    var o = e[r];
                    o.updateBoundingSphereRadius();
                    var a = t[r].norm()
                      , s = o.boundingSphereRadius;
                    a + s > n && (n = a + s)
                }
                this.boundingRadius = n
            }
            ;
            var h = new s;
            i.prototype.computeAABB = function() {
                for (var e = this.shapes, t = this.shapeOffsets, i = this.shapeOrientations, n = e.length, r = c, o = d, a = this.quaternion, s = this.aabb, l = h, u = 0; u !== n; u++) {
                    var p = e[u];
                    i[u].mult(a, o),
                    o.vmult(t[u], r),
                    r.vadd(this.position, r),
                    p.calculateWorldAABB(r, o, l.lowerBound, l.upperBound),
                    0 === u ? s.copy(l) : s.extend(l)
                }
                this.aabbNeedsUpdate = !1
            }
            ;
            {
                var u = new o
                  , p = new o;
                new o
            }
            i.prototype.updateInertiaWorld = function(e) {
                var t = this.invInertia;
                if (t.x !== t.y || t.y !== t.z || e) {
                    var i = u
                      , n = p;
                    i.setRotationFromQuaternion(this.quaternion),
                    i.transpose(n),
                    i.scale(t, i),
                    i.mmult(n, this.invInertiaWorld)
                } else
                    ;
            }
            ;
            var f = new r
              , g = new r;
            i.prototype.applyForce = function(e, t) {
                if (this.type === i.DYNAMIC) {
                    var n = f;
                    t.vsub(this.position, n);
                    var r = g;
                    n.cross(e, r),
                    this.force.vadd(e, this.force),
                    this.torque.vadd(r, this.torque)
                }
            }
            ;
            var m = new r
              , v = new r
              , y = new r;
            i.prototype.applyImpulse = function(e, t) {
                if (this.type === i.DYNAMIC) {
                    var n = m;
                    t.vsub(this.position, n);
                    var r = v;
                    r.copy(e),
                    r.mult(this.invMass, r),
                    this.velocity.vadd(r, this.velocity);
                    var o = y;
                    n.cross(e, o),
                    this.invInertiaWorld.vmult(o, o),
                    this.angularVelocity.vadd(o, this.angularVelocity)
                }
            }
            ,
            i.prototype.updateMassProperties = function() {
                new r;
                this.invMass = this.mass > 0 ? 1 / this.mass : 0;
                var e = this.inertia
                  , t = this.fixedRotation;
                this.computeAABB(),
                l.calculateInertia(new r((this.aabb.upperBound.x - this.aabb.lowerBound.x) / 2,(this.aabb.upperBound.y - this.aabb.lowerBound.y) / 2,(this.aabb.upperBound.z - this.aabb.lowerBound.z) / 2), this.mass, e),
                this.invInertia.set(e.x > 0 && !t ? 1 / e.x : 0, e.y > 0 && !t ? 1 / e.y : 0, e.z > 0 && !t ? 1 / e.z : 0),
                this.updateInertiaWorld(!0)
            }
            ,
            i.prototype.getVelocityAtWorldPoint = function(e, t) {
                var i = new r;
                return e.vsub(this.position, i),
                this.angularVelocity.cross(i, t),
                this.velocity.vadd(t, t),
                t
            }
        }
        , {
            "../collision/AABB": 3,
            "../material/Material": 22,
            "../math/Mat3": 24,
            "../math/Quaternion": 25,
            "../math/Vec3": 27,
            "../shapes/Box": 34,
            "../shapes/Shape": 40,
            "../utils/EventTarget": 45
        }],
        29: [function(e, t) {
            function i(e) {
                this.chassisBody = e.chassisBody,
                this.wheelInfos = [],
                this.sliding = !1,
                this.world = null ,
                this.indexRightAxis = "undefined" != typeof e.indexRightAxis ? e.indexRightAxis : 1,
                this.indexForwardAxis = "undefined" != typeof e.indexForwardAxis ? e.indexForwardAxis : 0,
                this.indexUpAxis = "undefined" != typeof e.indexUpAxis ? e.indexUpAxis : 2
            }
            function n(e, t, i, n, o) {
                var a = 0
                  , s = i
                  , l = w
                  , c = x
                  , d = E;
                e.getVelocityAtWorldPoint(s, l),
                t.getVelocityAtWorldPoint(s, c),
                l.vsub(c, d);
                var h = n.dot(d)
                  , u = r(e, i, n)
                  , p = r(t, i, n)
                  , f = 1
                  , g = f / (u + p);
                return a = -h * g,
                a > o && (a = o),
                -o > a && (a = -o),
                a
            }
            function r(e, t, i) {
                var n = _
                  , r = T
                  , o = C
                  , a = R;
                return t.vsub(e.position, n),
                n.cross(i, r),
                e.invInertiaWorld.vmult(r, a),
                a.cross(n, o),
                e.invMass + i.dot(o)
            }
            function o(e, t, i, n, r, o) {
                var a = r.norm2();
                if (a > 1.1)
                    return 0;
                var s = S
                  , l = k
                  , c = M;
                e.getVelocityAtWorldPoint(t, s),
                i.getVelocityAtWorldPoint(n, l),
                s.vsub(l, c);
                var d = r.dot(c)
                  , h = .2
                  , u = 1 / (e.invMass + i.invMass)
                  , o = -h * d * u;
                return o
            }
            var a = (e("./Body"),
            e("../math/Vec3"))
              , s = e("../math/Quaternion")
              , l = (e("../collision/RaycastResult"),
            e("../collision/Ray"))
              , c = e("../objects/WheelInfo");
            t.exports = i;
            {
                var d = (new a,
                new a,
                new a,
                new a)
                  , h = new a
                  , u = new a;
                new l
            }
            i.prototype.addWheel = function(e) {
                e = e || {};
                var t = new c(e)
                  , i = this.wheelInfos.length;
                return this.wheelInfos.push(t),
                i
            }
            ,
            i.prototype.setSteeringValue = function(e, t) {
                var i = this.wheelInfos[t];
                i.steering = e
            }
            ;
            new a;
            i.prototype.applyEngineForce = function(e, t) {
                this.wheelInfos[t].engineForce = e
            }
            ,
            i.prototype.setBrake = function(e, t) {
                this.wheelInfos[t].brake = e
            }
            ,
            i.prototype.addToWorld = function(e) {
                this.constraints;
                e.add(this.chassisBody);
                var t = this;
                e.addEventListener("preStep", function() {
                    t.updateVehicle(e.dt)
                }),
                this.world = e
            }
            ,
            i.prototype.getVehicleAxisWorld = function(e, t) {
                t.set(0 === e ? 1 : 0, 1 === e ? 1 : 0, 2 === e ? 1 : 0),
                this.chassisBody.vectorToWorldFrame(t, t)
            }
            ,
            i.prototype.updateVehicle = function(e) {
                for (var t = this.wheelInfos, i = t.length, n = this.chassisBody, r = 0; i > r; r++)
                    this.updateWheelTransform(r, !1);
                this.currentVehicleSpeedKmHour = 3.6 * n.velocity.norm();
                var o = new a;
                this.getVehicleAxisWorld(this.indexForwardAxis, o),
                o.dot(n.velocity) < 0 && (this.currentVehicleSpeedKmHour *= -1);
                for (var r = 0; i > r; r++)
                    this.castRay(t[r]);
                this.updateSuspension(e);
                for (var s = new a, l = new a, r = 0; i > r; r++) {
                    var c = t[r]
                      , d = c.suspensionForce;
                    d > c.maxSuspensionForce && (d = c.maxSuspensionForce),
                    c.raycastResult.hitNormalWorld.scale(d * e, s),
                    c.raycastResult.hitPointWorld.vsub(n.position, l),
                    n.applyImpulse(s, c.raycastResult.hitPointWorld)
                }
                this.updateFriction(e);
                var h = new a
                  , u = new a
                  , p = new a;
                for (r = 0; i > r; r++) {
                    var c = t[r];
                    n.getVelocityAtWorldPoint(c.chassisConnectionPointWorld, p);
                    var f = 1;
                    switch (this.indexUpAxis) {
                    case 1:
                        f = -1
                    }
                    if (c.isInContact) {
                        this.getVehicleAxisWorld(this.indexForwardAxis, u);
                        var g = u.dot(c.raycastResult.hitNormalWorld);
                        c.raycastResult.hitNormalWorld.scale(g, h),
                        u.vsub(h, u);
                        var m = u.dot(p);
                        c.deltaRotation = f * m * e / c.radius
                    }
                    !c.sliding && c.isInContact || 0 === c.engineForce || !c.useCustomSlidingRotationalSpeed || (c.deltaRotation = (c.engineForce > 0 ? 1 : -1) * c.customSlidingRotationalSpeed * e),
                    Math.abs(c.brake) > Math.abs(c.engineForce) && (c.deltaRotation = 0),
                    c.rotation += c.deltaRotation,
                    c.deltaRotation *= .99
                }
            }
            ,
            i.prototype.updateSuspension = function() {
                for (var e = this.chassisBody, t = e.mass, i = this.wheelInfos, n = i.length, r = 0; n > r; r++) {
                    var o = i[r];
                    if (o.isInContact) {
                        var a, s = o.suspensionRestLength, l = o.suspensionLength, c = s - l;
                        a = o.suspensionStiffness * c * o.clippedInvContactDotSuspension;
                        var d, h = o.suspensionRelativeVelocity;
                        d = 0 > h ? o.dampingCompression : o.dampingRelaxation,
                        a -= d * h,
                        o.suspensionForce = a * t,
                        o.suspensionForce < 0 && (o.suspensionForce = 0)
                    } else
                        o.suspensionForce = 0
                }
            }
            ,
            i.prototype.removeFromWorld = function(e) {
                this.constraints;
                e.remove(this.chassisBody),
                e.removeEventListener("preStep", this.updateVehicle),
                this.world = null
            }
            ;
            var p = new a
              , f = new a;
            i.prototype.castRay = function(e) {
                var t = p
                  , i = f;
                this.updateWheelTransformWorld(e);
                var n = this.chassisBody
                  , r = -1
                  , o = e.suspensionRestLength + e.radius;
                e.directionWorld.scale(o, t);
                var s = e.chassisConnectionPointWorld;
                s.vadd(t, i);
                var l = e.raycastResult;
                l.reset();
                var c = n.collisionResponse;
                n.collisionResponse = !1,
                this.world.rayTest(s, i, l),
                n.collisionResponse = c;
                var d = l.body;
                if (e.raycastResult.groundObject = 0,
                d) {
                    r = l.distance,
                    e.raycastResult.hitNormalWorld = l.hitNormalWorld,
                    e.isInContact = !0;
                    var h = l.distance;
                    e.suspensionLength = h - e.radius;
                    var u = e.suspensionRestLength - e.maxSuspensionTravel
                      , g = e.suspensionRestLength + e.maxSuspensionTravel;
                    e.suspensionLength < u && (e.suspensionLength = u),
                    e.suspensionLength > g && (e.suspensionLength = g,
                    e.raycastResult.reset());
                    var m = e.raycastResult.hitNormalWorld.dot(e.directionWorld)
                      , v = new a;
                    n.getVelocityAtWorldPoint(e.raycastResult.hitPointWorld, v);
                    var y = e.raycastResult.hitNormalWorld.dot(v);
                    if (m >= -.1)
                        e.suspensionRelativeVelocity = 0,
                        e.clippedInvContactDotSuspension = 10;
                    else {
                        var b = -1 / m;
                        e.suspensionRelativeVelocity = y * b,
                        e.clippedInvContactDotSuspension = b
                    }
                } else
                    e.suspensionLength = e.suspensionRestLength + 0 * e.maxSuspensionTravel,
                    e.suspensionRelativeVelocity = 0,
                    e.directionWorld.scale(-1, e.raycastResult.hitNormalWorld),
                    e.clippedInvContactDotSuspension = 1;
                return r
            }
            ,
            i.prototype.updateWheelTransformWorld = function(e) {
                e.isInContact = !1;
                var t = this.chassisBody;
                t.pointToWorldFrame(e.chassisConnectionPointLocal, e.chassisConnectionPointWorld),
                t.vectorToWorldFrame(e.directionLocal, e.directionWorld),
                t.vectorToWorldFrame(e.axleLocal, e.axleWorld)
            }
            ,
            i.prototype.updateWheelTransform = function(e) {
                var t = d
                  , i = h
                  , n = u
                  , r = this.wheelInfos[e];
                this.updateWheelTransformWorld(r),
                r.directionLocal.scale(-1, t),
                i.copy(r.axleLocal),
                t.cross(i, n),
                n.normalize(),
                i.normalize();
                var o = r.steering
                  , a = new s;
                a.setFromAxisAngle(t, o);
                var l = new s;
                l.setFromAxisAngle(i, r.rotation);
                var c = r.worldTransform.quaternion;
                this.chassisBody.quaternion.mult(a, c),
                c.mult(l, c),
                c.normalize();
                var p = r.worldTransform.position;
                p.copy(r.directionWorld),
                p.scale(r.suspensionLength, p),
                p.vadd(r.chassisConnectionPointWorld, p)
            }
            ;
            var g = [new a(1,0,0), new a(0,1,0), new a(0,0,1)];
            i.prototype.getWheelTransformWorld = function(e) {
                return this.wheelInfos[e].worldTransform
            }
            ;
            var m = new a
              , v = []
              , y = []
              , b = 1;
            i.prototype.updateFriction = function(e) {
                for (var t = m, i = this.wheelInfos, r = i.length, s = this.chassisBody, l = y, c = v, d = 0, h = 0; r > h; h++) {
                    var u = i[h]
                      , p = u.raycastResult.body;
                    p && d++,
                    u.sideImpulse = 0,
                    u.forwardImpulse = 0,
                    l[h] || (l[h] = new a),
                    c[h] || (c[h] = new a)
                }
                for (var h = 0; r > h; h++) {
                    var u = i[h]
                      , p = u.raycastResult.body;
                    if (p) {
                        var f = c[h]
                          , w = this.getWheelTransformWorld(h);
                        w.vectorToWorldFrame(g[this.indexRightAxis], f);
                        var x = u.raycastResult.hitNormalWorld
                          , E = f.dot(x);
                        x.scale(E, t),
                        f.vsub(t, f),
                        f.normalize(),
                        x.cross(f, l[h]),
                        l[h].normalize(),
                        u.sideImpulse = o(s, u.raycastResult.hitPointWorld, p, u.raycastResult.hitPointWorld, f),
                        u.sideImpulse *= b
                    }
                }
                var _ = 1
                  , T = .5;
                this.sliding = !1;
                for (var h = 0; r > h; h++) {
                    var u = i[h]
                      , p = u.raycastResult.body
                      , C = 0;
                    if (u.slipInfo = 1,
                    p) {
                        var R = 0
                          , S = u.brake ? u.brake : R;
                        C = n(s, p, u.raycastResult.hitPointWorld, l[h], S),
                        C += u.engineForce * e;
                        var k = S / C;
                        u.slipInfo *= k
                    }
                    if (u.forwardImpulse = 0,
                    u.skidInfo = 1,
                    p) {
                        u.skidInfo = 1;
                        var M = u.suspensionForce * e * u.frictionSlip
                          , A = M
                          , H = M * A;
                        u.forwardImpulse = C;
                        var P = u.forwardImpulse * T
                          , O = u.sideImpulse * _
                          , D = P * P + O * O;
                        if (u.sliding = !1,
                        D > H) {
                            this.sliding = !0,
                            u.sliding = !0;
                            var k = M / Math.sqrt(D);
                            u.skidInfo *= k
                        }
                    }
                }
                if (this.sliding)
                    for (var h = 0; r > h; h++) {
                        var u = i[h];
                        0 !== u.sideImpulse && u.skidInfo < 1 && (u.forwardImpulse *= u.skidInfo,
                        u.sideImpulse *= u.skidInfo)
                    }
                for (var h = 0; r > h; h++) {
                    var u = i[h]
                      , $ = new a;
                    if ($.copy(u.raycastResult.hitPointWorld),
                    0 !== u.forwardImpulse) {
                        var L = new a;
                        l[h].scale(u.forwardImpulse, L),
                        s.applyImpulse(L, $)
                    }
                    if (0 !== u.sideImpulse) {
                        var p = u.raycastResult.body
                          , I = new a;
                        I.copy(u.raycastResult.hitPointWorld);
                        var F = new a;
                        c[h].scale(u.sideImpulse, F),
                        s.pointToLocalFrame($, $),
                        $["xyz"[this.indexUpAxis]] *= u.rollInfluence,
                        s.pointToWorldFrame($, $),
                        s.applyImpulse(F, $),
                        F.scale(-1, F),
                        p.applyImpulse(F, I)
                    }
                }
            }
            ;
            var w = new a
              , x = new a
              , E = new a
              , _ = new a
              , T = new a
              , C = new a
              , R = new a
              , S = new a
              , k = new a
              , M = new a
        }
        , {
            "../collision/Ray": 9,
            "../collision/RaycastResult": 10,
            "../math/Quaternion": 25,
            "../math/Vec3": 27,
            "../objects/WheelInfo": 33,
            "./Body": 28
        }],
        30: [function(e, t) {
            function i(e) {
                if (this.wheelBodies = [],
                this.coordinateSystem = "undefined" == typeof e.coordinateSystem ? new a(1,2,3) : e.coordinateSystem.clone(),
                this.chassisBody = e.chassisBody,
                !this.chassisBody) {
                    var t = new o(new a(5,2,.5));
                    this.chassisBody = new n(1,t)
                }
                this.constraints = [],
                this.wheelAxes = [],
                this.wheelForces = []
            }
            var n = e("./Body")
              , r = e("../shapes/Sphere")
              , o = e("../shapes/Box")
              , a = e("../math/Vec3")
              , s = e("../constraints/HingeConstraint");
            t.exports = i,
            i.prototype.addWheel = function(e) {
                e = e || {};
                var t = e.body;
                t || (t = new n(1,new r(1.2))),
                this.wheelBodies.push(t),
                this.wheelForces.push(0);
                var i = (new a,
                "undefined" != typeof e.position ? e.position.clone() : new a)
                  , o = new a;
                this.chassisBody.pointToWorldFrame(i, o),
                t.position.set(o.x, o.y, o.z);
                var l = "undefined" != typeof e.axis ? e.axis.clone() : new a(0,1,0);
                this.wheelAxes.push(l);
                var c = new s(this.chassisBody,t,{
                    pivotA: i,
                    axisA: l,
                    pivotB: a.ZERO,
                    axisB: l,
                    collideConnected: !1
                });
                return this.constraints.push(c),
                this.wheelBodies.length - 1
            }
            ,
            i.prototype.setSteeringValue = function(e, t) {
                var i = this.wheelAxes[t]
                  , n = Math.cos(e)
                  , r = Math.sin(e)
                  , o = i.x
                  , a = i.y;
                this.constraints[t].axisA.set(n * o - r * a, r * o + n * a, 0)
            }
            ,
            i.prototype.setMotorSpeed = function(e, t) {
                var i = this.constraints[t];
                i.enableMotor(),
                i.motorTargetVelocity = e
            }
            ,
            i.prototype.disableMotor = function(e) {
                var t = this.constraints[e];
                t.disableMotor()
            }
            ;
            var l = new a;
            i.prototype.setWheelForce = function(e, t) {
                this.wheelForces[t] = e
            }
            ,
            i.prototype.applyWheelForce = function(e, t) {
                var i = this.wheelAxes[t]
                  , n = this.wheelBodies[t]
                  , r = n.torque;
                i.scale(e, l),
                n.vectorToWorldFrame(l, l),
                r.vadd(l, r)
            }
            ,
            i.prototype.addToWorld = function(e) {
                for (var t = this.constraints, i = this.wheelBodies.concat([this.chassisBody]), n = 0; n < i.length; n++)
                    e.add(i[n]);
                for (var n = 0; n < t.length; n++)
                    e.addConstraint(t[n]);
                e.addEventListener("preStep", this._update.bind(this))
            }
            ,
            i.prototype._update = function() {
                for (var e = this.wheelForces, t = 0; t < e.length; t++)
                    this.applyWheelForce(e[t], t)
            }
            ,
            i.prototype.removeFromWorld = function(e) {
                for (var t = this.constraints, i = this.wheelBodies.concat([this.chassisBody]), n = 0; n < i.length; n++)
                    e.remove(i[n]);
                for (var n = 0; n < t.length; n++)
                    e.removeConstraint(t[n])
            }
            ;
            var c = new a;
            i.prototype.getWheelSpeed = function(e) {
                var t = this.wheelAxes[e]
                  , i = this.wheelBodies[e]
                  , n = i.angularVelocity;
                return this.chassisBody.vectorToWorldFrame(t, c),
                n.dot(c)
            }
        }
        , {
            "../constraints/HingeConstraint": 14,
            "../math/Vec3": 27,
            "../shapes/Box": 34,
            "../shapes/Sphere": 41,
            "./Body": 28
        }],
        31: [function(e, t) {
            function i() {
                this.particles = [],
                this.density = 1,
                this.smoothingRadius = 1,
                this.speedOfSound = 1,
                this.viscosity = .01,
                this.eps = 1e-6,
                this.pressures = [],
                this.densities = [],
                this.neighbors = []
            }
            t.exports = i;
            {
                var n = (e("../shapes/Shape"),
                e("../math/Vec3"));
                e("../math/Quaternion"),
                e("../shapes/Particle"),
                e("../objects/Body"),
                e("../material/Material")
            }
            i.prototype.add = function(e) {
                this.particles.push(e),
                this.neighbors.length < this.particles.length && this.neighbors.push([])
            }
            ,
            i.prototype.remove = function(e) {
                var t = this.particles.indexOf(e);
                -1 !== t && (this.particles.splice(t, 1),
                this.neighbors.length > this.particles.length && this.neighbors.pop())
            }
            ;
            var r = new n;
            i.prototype.getNeighbors = function(e, t) {
                for (var i = this.particles.length, n = e.id, o = this.smoothingRadius * this.smoothingRadius, a = r, s = 0; s !== i; s++) {
                    var l = this.particles[s];
                    l.position.vsub(e.position, a),
                    n !== l.id && a.norm2() < o && t.push(l)
                }
            }
            ;
            var o = new n
              , a = new n
              , s = new n
              , l = new n
              , c = new n
              , d = new n;
            i.prototype.update = function() {
                for (var e = this.particles.length, t = o, i = this.speedOfSound, n = this.eps, r = 0; r !== e; r++) {
                    var h = this.particles[r]
                      , u = this.neighbors[r];
                    u.length = 0,
                    this.getNeighbors(h, u),
                    u.push(this.particles[r]);
                    for (var p = u.length, f = 0, g = 0; g !== p; g++) {
                        h.position.vsub(u[g].position, t);
                        var m = t.norm()
                          , v = this.w(m);
                        f += u[g].mass * v
                    }
                    this.densities[r] = f,
                    this.pressures[r] = i * i * (this.densities[r] - this.density)
                }
                for (var y = a, b = s, w = l, x = c, E = d, r = 0; r !== e; r++) {
                    var _ = this.particles[r];
                    y.set(0, 0, 0),
                    b.set(0, 0, 0);
                    for (var T, C, u = this.neighbors[r], p = u.length, g = 0; g !== p; g++) {
                        var R = u[g];
                        _.position.vsub(R.position, x);
                        var S = x.norm();
                        T = -R.mass * (this.pressures[r] / (this.densities[r] * this.densities[r] + n) + this.pressures[g] / (this.densities[g] * this.densities[g] + n)),
                        this.gradw(x, w),
                        w.mult(T, w),
                        y.vadd(w, y),
                        R.velocity.vsub(_.velocity, E),
                        E.mult(1 / (1e-4 + this.densities[r] * this.densities[g]) * this.viscosity * R.mass, E),
                        C = this.nablaw(S),
                        E.mult(C, E),
                        b.vadd(E, b)
                    }
                    b.mult(_.mass, b),
                    y.mult(_.mass, y),
                    _.force.vadd(b, _.force),
                    _.force.vadd(y, _.force)
                }
            }
            ,
            i.prototype.w = function(e) {
                var t = this.smoothingRadius;
                return 315 / (64 * Math.PI * Math.pow(t, 9)) * Math.pow(t * t - e * e, 3)
            }
            ,
            i.prototype.gradw = function(e, t) {
                var i = e.norm()
                  , n = this.smoothingRadius;
                e.mult(945 / (32 * Math.PI * Math.pow(n, 9)) * Math.pow(n * n - i * i, 2), t)
            }
            ,
            i.prototype.nablaw = function(e) {
                var t = this.smoothingRadius
                  , i = 945 / (32 * Math.PI * Math.pow(t, 9)) * (t * t - e * e) * (7 * e * e - 3 * t * t);
                return i
            }
        }
        , {
            "../material/Material": 22,
            "../math/Quaternion": 25,
            "../math/Vec3": 27,
            "../objects/Body": 28,
            "../shapes/Particle": 38,
            "../shapes/Shape": 40
        }],
        32: [function(e, t) {
            function i(e, t, i) {
                i = i || {},
                this.restLength = "number" == typeof i.restLength ? i.restLength : 1,
                this.stiffness = i.stiffness || 100,
                this.damping = i.damping || 1,
                this.bodyA = e,
                this.bodyB = t,
                this.localAnchorA = new n,
                this.localAnchorB = new n,
                i.localAnchorA && this.localAnchorA.copy(i.localAnchorA),
                i.localAnchorB && this.localAnchorB.copy(i.localAnchorB),
                i.worldAnchorA && this.setWorldAnchorA(i.worldAnchorA),
                i.worldAnchorB && this.setWorldAnchorB(i.worldAnchorB)
            }
            var n = e("../math/Vec3");
            t.exports = i,
            i.prototype.setWorldAnchorA = function(e) {
                this.bodyA.pointToLocalFrame(e, this.localAnchorA)
            }
            ,
            i.prototype.setWorldAnchorB = function(e) {
                this.bodyB.pointToLocalFrame(e, this.localAnchorB)
            }
            ,
            i.prototype.getWorldAnchorA = function(e) {
                this.bodyA.pointToWorldFrame(this.localAnchorA, e)
            }
            ,
            i.prototype.getWorldAnchorB = function(e) {
                this.bodyB.pointToWorldFrame(this.localAnchorB, e)
            }
            ;
            var r = new n
              , o = new n
              , a = new n
              , s = new n
              , l = new n
              , c = new n
              , d = new n
              , h = new n
              , u = new n
              , p = new n
              , f = new n;
            i.prototype.applyForce = function() {
                var e = this.stiffness
                  , t = this.damping
                  , i = this.restLength
                  , n = this.bodyA
                  , g = this.bodyB
                  , m = r
                  , v = o
                  , y = a
                  , b = s
                  , w = f
                  , x = l
                  , E = c
                  , _ = d
                  , T = h
                  , C = u
                  , R = p;
                this.getWorldAnchorA(x),
                this.getWorldAnchorB(E),
                x.vsub(n.position, _),
                E.vsub(g.position, T),
                E.vsub(x, m);
                var S = m.norm();
                v.copy(m),
                v.normalize(),
                g.velocity.vsub(n.velocity, y),
                g.angularVelocity.cross(T, w),
                y.vadd(w, y),
                n.angularVelocity.cross(_, w),
                y.vsub(w, y),
                v.mult(-e * (S - i) - t * y.dot(v), b),
                n.force.vsub(b, n.force),
                g.force.vadd(b, g.force),
                _.cross(b, C),
                T.cross(b, R),
                n.torque.vsub(C, n.torque),
                g.torque.vadd(R, g.torque)
            }
        }
        , {
            "../math/Vec3": 27
        }],
        33: [function(e, t) {
            function i(e) {
                e = a.defaults(e, {
                    chassisConnectionPointLocal: new n,
                    chassisConnectionPointWorld: new n,
                    directionLocal: new n,
                    directionWorld: new n,
                    axleLocal: new n,
                    axleWorld: new n,
                    suspensionRestLength: 1,
                    suspensionMaxLength: 2,
                    radius: 1,
                    suspensionStiffness: 100,
                    dampingCompression: 10,
                    dampingRelaxation: 10,
                    frictionSlip: 1e4,
                    steering: 0,
                    rotation: 0,
                    deltaRotation: 0,
                    rollInfluence: .01,
                    maxSuspensionForce: Number.MAX_VALUE,
                    isFrontWheel: !0,
                    clippedInvContactDotSuspension: 1,
                    suspensionRelativeVelocity: 0,
                    suspensionForce: 0,
                    skidInfo: 0,
                    suspensionLength: 0,
                    maxSuspensionTravel: 1,
                    useCustomSlidingRotationalSpeed: !1,
                    customSlidingRotationalSpeed: -.1
                }),
                this.maxSuspensionTravel = e.maxSuspensionTravel,
                this.customSlidingRotationalSpeed = e.customSlidingRotationalSpeed,
                this.useCustomSlidingRotationalSpeed = e.useCustomSlidingRotationalSpeed,
                this.sliding = !1,
                this.chassisConnectionPointLocal = e.chassisConnectionPointLocal.clone(),
                this.chassisConnectionPointWorld = e.chassisConnectionPointWorld.clone(),
                this.directionLocal = e.directionLocal.clone(),
                this.directionWorld = e.directionWorld.clone(),
                this.axleLocal = e.axleLocal.clone(),
                this.axleWorld = e.axleWorld.clone(),
                this.suspensionRestLength = e.suspensionRestLength,
                this.suspensionMaxLength = e.suspensionMaxLength,
                this.radius = e.radius,
                this.suspensionStiffness = e.suspensionStiffness,
                this.dampingCompression = e.dampingCompression,
                this.dampingRelaxation = e.dampingRelaxation,
                this.frictionSlip = e.frictionSlip,
                this.steering = 0,
                this.rotation = 0,
                this.deltaRotation = 0,
                this.rollInfluence = e.rollInfluence,
                this.maxSuspensionForce = e.maxSuspensionForce,
                this.engineForce = 0,
                this.brake = 0,
                this.isFrontWheel = e.isFrontWheel,
                this.clippedInvContactDotSuspension = 1,
                this.suspensionRelativeVelocity = 0,
                this.suspensionForce = 0,
                this.skidInfo = 0,
                this.suspensionLength = 0,
                this.sideImpulse = 0,
                this.forwardImpulse = 0,
                this.raycastResult = new o,
                this.worldTransform = new r,
                this.isInContact = !1
            }
            var n = e("../math/Vec3")
              , r = e("../math/Transform")
              , o = e("../collision/RaycastResult")
              , a = e("../utils/Utils");
            t.exports = i;
            var s = new n
              , l = new n
              , s = new n;
            i.prototype.updateWheel = function(e) {
                var t = this.raycastResult;
                if (this.isInContact) {
                    var i = t.hitNormalWorld.dot(t.directionWorld);
                    t.hitPointWorld.vsub(e.position, l),
                    e.getVelocityAtWorldPoint(l, s);
                    var n = t.hitNormalWorld.dot(s);
                    if (i >= -.1)
                        this.suspensionRelativeVelocity = 0,
                        this.clippedInvContactDotSuspension = 10;
                    else {
                        var r = -1 / i;
                        this.suspensionRelativeVelocity = n * r,
                        this.clippedInvContactDotSuspension = r
                    }
                } else
                    t.suspensionLength = this.suspensionRestLength,
                    this.suspensionRelativeVelocity = 0,
                    t.directionWorld.scale(-1, t.hitNormalWorld),
                    this.clippedInvContactDotSuspension = 1
            }
        }
        , {
            "../collision/RaycastResult": 10,
            "../math/Transform": 26,
            "../math/Vec3": 27,
            "../utils/Utils": 48
        }],
        34: [function(e, t) {
            function i(e) {
                n.call(this),
                this.type = n.types.BOX,
                this.halfExtents = e,
                this.convexPolyhedronRepresentation = null ,
                this.updateConvexPolyhedronRepresentation(),
                this.updateBoundingSphereRadius()
            }
            t.exports = i;
            var n = e("./Shape")
              , r = e("../math/Vec3")
              , o = e("./ConvexPolyhedron");
            i.prototype = new n,
            i.prototype.constructor = i,
            i.prototype.updateConvexPolyhedronRepresentation = function() {
                var e = this.halfExtents.x
                  , t = this.halfExtents.y
                  , i = this.halfExtents.z
                  , n = r
                  , a = new o([new n(-e,-t,-i), new n(e,-t,-i), new n(e,t,-i), new n(-e,t,-i), new n(-e,-t,i), new n(e,-t,i), new n(e,t,i), new n(-e,t,i)],[[3, 2, 1, 0], [4, 5, 6, 7], [5, 4, 0, 1], [2, 3, 7, 6], [0, 4, 7, 3], [1, 2, 6, 5]],[new n(0,0,-1), new n(0,0,1), new n(0,-1,0), new n(0,1,0), new n(-1,0,0), new n(1,0,0)]);
                this.convexPolyhedronRepresentation = a
            }
            ,
            i.prototype.calculateLocalInertia = function(e, t) {
                return t = t || new r,
                i.calculateInertia(this.halfExtents, e, t),
                t
            }
            ,
            i.calculateInertia = function(e, t, i) {
                var n = e;
                i.x = 1 / 12 * t * (2 * n.y * 2 * n.y + 2 * n.z * 2 * n.z),
                i.y = 1 / 12 * t * (2 * n.x * 2 * n.x + 2 * n.z * 2 * n.z),
                i.z = 1 / 12 * t * (2 * n.y * 2 * n.y + 2 * n.x * 2 * n.x)
            }
            ,
            i.prototype.getSideNormals = function(e, t) {
                var i = e
                  , n = this.halfExtents;
                if (i[0].set(n.x, 0, 0),
                i[1].set(0, n.y, 0),
                i[2].set(0, 0, n.z),
                i[3].set(-n.x, 0, 0),
                i[4].set(0, -n.y, 0),
                i[5].set(0, 0, -n.z),
                void 0 !== t)
                    for (var r = 0; r !== i.length; r++)
                        t.vmult(i[r], i[r]);
                return i
            }
            ,
            i.prototype.volume = function() {
                return 8 * this.halfExtents.x * this.halfExtents.y * this.halfExtents.z
            }
            ,
            i.prototype.updateBoundingSphereRadius = function() {
                this.boundingSphereRadius = this.halfExtents.norm()
            }
            ;
            {
                var a = new r;
                new r
            }
            i.prototype.forEachWorldCorner = function(e, t, i) {
                for (var n = this.halfExtents, r = [[n.x, n.y, n.z], [-n.x, n.y, n.z], [-n.x, -n.y, n.z], [-n.x, -n.y, -n.z], [n.x, -n.y, -n.z], [n.x, n.y, -n.z], [-n.x, n.y, -n.z], [n.x, -n.y, n.z]], o = 0; o < r.length; o++)
                    a.set(r[o][0], r[o][1], r[o][2]),
                    t.vmult(a, a),
                    e.vadd(a, a),
                    i(a.x, a.y, a.z)
            }
            ;
            var s = [new r, new r, new r, new r, new r, new r, new r, new r];
            i.prototype.calculateWorldAABB = function(e, t, i, n) {
                var r = this.halfExtents;
                s[0].set(r.x, r.y, r.z),
                s[1].set(-r.x, r.y, r.z),
                s[2].set(-r.x, -r.y, r.z),
                s[3].set(-r.x, -r.y, -r.z),
                s[4].set(r.x, -r.y, -r.z),
                s[5].set(r.x, r.y, -r.z),
                s[6].set(-r.x, r.y, -r.z),
                s[7].set(r.x, -r.y, r.z);
                var o = s[0];
                t.vmult(o, o),
                e.vadd(o, o),
                n.copy(o),
                i.copy(o);
                for (var a = 1; 8 > a; a++) {
                    var o = s[a];
                    t.vmult(o, o),
                    e.vadd(o, o);
                    var l = o.x
                      , c = o.y
                      , d = o.z;
                    l > n.x && (n.x = l),
                    c > n.y && (n.y = c),
                    d > n.z && (n.z = d),
                    l < i.x && (i.x = l),
                    c < i.y && (i.y = c),
                    d < i.z && (i.z = d)
                }
            }
        }
        , {
            "../math/Vec3": 27,
            "./ConvexPolyhedron": 35,
            "./Shape": 40
        }],
        35: [function(e, t) {
            function i(e, t) {
                n.call(this),
                this.type = n.types.CONVEXPOLYHEDRON,
                this.vertices = e || [],
                this.worldVertices = [],
                this.worldVerticesNeedsUpdate = !0,
                this.faces = t || [],
                this.faceNormals = [],
                this.computeNormals(),
                this.worldFaceNormalsNeedsUpdate = !0,
                this.worldFaceNormals = [],
                this.uniqueEdges = [],
                this.computeEdges(),
                this.updateBoundingSphereRadius()
            }
            t.exports = i;
            var n = e("./Shape")
              , r = e("../math/Vec3")
              , o = e("../math/Quaternion")
              , a = e("../math/Transform");
            i.prototype = new n,
            i.prototype.constructor = i,
            i.prototype.computeEdges = function() {
                var e = this.faces
                  , t = this.vertices
                  , i = t.length
                  , n = this.uniqueEdges;
                n.length = 0;
                for (var o = 0; i > o; o++) {
                    var a = t[o];
                    if (!(a instanceof r))
                        throw "Argument 1 must be instance of Vec3";
                    this.uniqueEdges.push(a)
                }
                for (var s = 0; s < e.length; s++)
                    for (var l = e[s], c = l.length, d = 0; c > d; d++) {
                        var h = (d + 1) % c
                          , u = new r;
                        t[l[d]].vsub(t[l[h]], u),
                        u.normalize();
                        for (var p = !1, a = 0; a < n.length; a++)
                            if (n[a].almostEquals(u) || n[a].almostEquals(u)) {
                                p = !0;
                                break
                            }
                        p || n.push(u),
                        u && (u.face1 = s)
                    }
            }
            ,
            i.prototype.computeNormals = function() {
                this.faceNormals.length = this.faces.length;
                for (var e = 0; e < this.faces.length; e++) {
                    for (var t = 0; t < this.faces[e].length; t++)
                        if (!this.vertices[this.faces[e][t]])
                            throw new Error("Vertex " + this.faces[e][t] + " not found!");
                    var i = this.faceNormals[e] || new r;
                    this.getFaceNormal(e, i),
                    i.negate(i),
                    this.faceNormals[e] = i;
                    var n = this.vertices[this.faces[e][0]];
                    if (i.dot(n) < 0) {
                        console.error(".faceNormals[" + e + "] = Vec3(" + i.toString() + ") looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.");
                        for (var t = 0; t < this.faces[e].length; t++)
                            console.warn(".vertices[" + this.faces[e][t] + "] = Vec3(" + this.vertices[this.faces[e][t]].toString() + ")")
                    }
                }
            }
            ;
            var s = new r
              , l = new r;
            i.computeNormal = function(e, t, i, n) {
                t.vsub(e, l),
                i.vsub(t, s),
                s.cross(l, n),
                n.isZero() || n.normalize()
            }
            ,
            i.prototype.getFaceNormal = function(e, t) {
                var n = this.faces[e]
                  , r = this.vertices[n[0]]
                  , o = this.vertices[n[1]]
                  , a = this.vertices[n[2]];
                return i.computeNormal(r, o, a, t)
            }
            ;
            var c = new r;
            i.prototype.clipAgainstHull = function(e, t, i, n, a, s, l, d, h) {
                var u = c;
                if (!(e instanceof r))
                    throw new Error("posA must be Vec3");
                if (!(t instanceof o))
                    throw new Error("quatA must be Quaternion");
                for (var p = -1, f = -1 / 0, g = 0; g < i.faces.length; g++) {
                    u.copy(i.faceNormals[g]),
                    a.vmult(u, u);
                    var m = u.dot(s);
                    m > f && (f = m,
                    p = g)
                }
                for (var v = [], y = i.faces[p], b = y.length, w = 0; b > w; w++) {
                    var x = i.vertices[y[w]]
                      , E = new r;
                    E.copy(x),
                    a.vmult(E, E),
                    n.vadd(E, E),
                    v.push(E)
                }
                p >= 0 && this.clipFaceAgainstHull(s, e, t, v, l, d, h)
            }
            ;
            var d = new r
              , h = new r
              , u = new r
              , p = new r
              , f = new r
              , g = new r;
            i.prototype.findSeparatingAxis = function(e, t, i, n, r, o, a, s) {
                for (var l = d, c = h, m = u, v = p, y = f, b = g, w = 1 / 0, x = this, E = 0, _ = a ? a.length : x.faces.length, T = 0; _ > T; T++) {
                    var C = a ? a[T] : T;
                    l.copy(x.faceNormals[C]),
                    i.vmult(l, l);
                    var R = x.testSepAxis(l, e, t, i, n, r);
                    if (R === !1)
                        return !1;
                    w > R && (w = R,
                    o.copy(l))
                }
                for (var S = s ? s.length : e.faces.length, T = 0; S > T; T++) {
                    var C = s ? s[T] : T;
                    c.copy(e.faceNormals[C]),
                    r.vmult(c, c),
                    E++;
                    var R = x.testSepAxis(c, e, t, i, n, r);
                    if (R === !1)
                        return !1;
                    w > R && (w = R,
                    o.copy(c))
                }
                for (var k = 0, M = 0; M < x.uniqueEdges.length; M++) {
                    v.copy(x.uniqueEdges[M]),
                    i.vmult(v, v);
                    for (var A = 0; A < e.uniqueEdges.length; A++)
                        if (y.copy(e.uniqueEdges[A]),
                        r.vmult(y, y),
                        v.cross(y, b),
                        k++,
                        !b.almostZero()) {
                            b.normalize();
                            var H = x.testSepAxis(b, e, t, i, n, r);
                            if (H === !1)
                                return !1;
                            w > H && (w = H,
                            o.copy(b))
                        }
                }
                return n.vsub(t, m),
                m.dot(o) > 0 && o.negate(o),
                !0
            }
            ,
            i.prototype.testSepAxis = function(e, t, n, r, o, a) {
                var s = []
                  , l = []
                  , c = this;
                i.project(c, e, n, r, s),
                i.project(t, e, o, a, l);
                var d = s[0]
                  , h = s[1]
                  , u = l[0]
                  , p = l[1];
                if (p > d || h > u)
                    return !1;
                var f = d - p
                  , g = u - h
                  , m = g > f ? f : g;
                return m
            }
            ;
            var m = new r
              , v = new r;
            i.prototype.calculateLocalInertia = function(e, t) {
                this.computeLocalAABB(m, v);
                var i = v.x - m.x
                  , n = v.y - m.y
                  , r = v.z - m.z;
                t.x = 1 / 12 * e * (2 * n * 2 * n + 2 * r * 2 * r),
                t.y = 1 / 12 * e * (2 * i * 2 * i + 2 * r * 2 * r),
                t.z = 1 / 12 * e * (2 * n * 2 * n + 2 * i * 2 * i)
            }
            ,
            i.prototype.getPlaneConstantOfFace = function(e) {
                var t = this.faces[e]
                  , i = this.faceNormals[e]
                  , n = this.vertices[t[0]]
                  , r = -i.dot(n);
                return r
            }
            ;
            var y = new r
              , b = new r
              , w = new r
              , x = new r
              , E = new r
              , _ = new r
              , T = new r
              , C = new r;
            i.prototype.clipFaceAgainstHull = function(e, t, i, n, o, a, s) {
                if (!(e instanceof r))
                    throw new Error("sep normal must be vector");
                if (!(n instanceof Array))
                    throw new Error("world verts must be array");
                var l = y
                  , c = b
                  , d = w
                  , h = x
                  , u = E
                  , p = _
                  , f = T
                  , g = C;
                o = Number(o),
                a = Number(a);
                for (var m = this, v = [], R = n, S = v, k = -1, M = 1 / 0, A = 0; A < m.faces.length; A++) {
                    l.copy(m.faceNormals[A]),
                    i.vmult(l, l);
                    var H = l.dot(e);
                    M > H && (M = H,
                    k = A)
                }
                if (0 > k)
                    return void console.log("--- did not find any closest face... ---");
                var P = m.faces[k];
                P.connectedFaces = [];
                for (var O = 0; O < m.faces.length; O++)
                    for (var D = 0; D < m.faces[O].length; D++)
                        -1 !== P.indexOf(m.faces[O][D]) && O !== k && -1 === P.connectedFaces.indexOf(O) && P.connectedFaces.push(O);
                for (var $ = (R.length,
                P.length), L = 0; $ > L; L++) {
                    var I = m.vertices[P[L]]
                      , F = m.vertices[P[(L + 1) % $]];
                    I.vsub(F, c),
                    d.copy(c),
                    i.vmult(d, d),
                    t.vadd(d, d),
                    h.copy(this.faceNormals[k]),
                    i.vmult(h, h),
                    t.vadd(h, h),
                    d.cross(h, u),
                    u.negate(u),
                    p.copy(I),
                    i.vmult(p, p),
                    t.vadd(p, p);
                    var B, j = (-p.dot(u),
                    P.connectedFaces[L]);
                    f.copy(this.faceNormals[j]);
                    var N = this.getPlaneConstantOfFace(j);
                    g.copy(f),
                    i.vmult(g, g);
                    var B = N - g.dot(t);
                    for (this.clipFaceAgainstPlane(R, S, g, B); R.length; )
                        R.shift();
                    for (; S.length; )
                        R.push(S.shift())
                }
                f.copy(this.faceNormals[k]);
                var N = this.getPlaneConstantOfFace(k);
                g.copy(f),
                i.vmult(g, g);
                for (var B = N - g.dot(t), O = 0; O < R.length; O++) {
                    var z = g.dot(R[O]) + B;
                    if (o >= z && (console.log("clamped: depth=" + z + " to minDist=" + (o + "")),
                    z = o),
                    a >= z) {
                        var U = R[O];
                        if (0 >= z) {
                            var V = {
                                point: U,
                                normal: g,
                                depth: z
                            };
                            s.push(V)
                        }
                    }
                }
            }
            ,
            i.prototype.clipFaceAgainstPlane = function(e, t, i, n) {
                if (!(i instanceof r))
                    throw new Error("planeNormal must be Vec3, " + i + " given");
                if (!(e instanceof Array))
                    throw new Error("invertices must be Array, " + e + " given");
                if (!(t instanceof Array))
                    throw new Error("outvertices must be Array, " + t + " given");
                var o, a, s = e.length;
                if (2 > s)
                    return t;
                var l = e[e.length - 1]
                  , c = e[0];
                o = i.dot(l) + n;
                for (var d = 0; s > d; d++) {
                    if (c = e[d],
                    a = i.dot(c) + n,
                    0 > o)
                        if (0 > a) {
                            var h = new r;
                            h.copy(c),
                            t.push(h)
                        } else {
                            var h = new r;
                            l.lerp(c, o / (o - a), h),
                            t.push(h)
                        }
                    else if (0 > a) {
                        var h = new r;
                        l.lerp(c, o / (o - a), h),
                        t.push(h),
                        t.push(c)
                    }
                    l = c,
                    o = a
                }
                return t
            }
            ,
            i.prototype.computeWorldVertices = function(e, t) {
                for (var i = this.vertices.length; this.worldVertices.length < i; )
                    this.worldVertices.push(new r);
                for (var n = this.vertices, o = this.worldVertices, a = 0; a !== i; a++)
                    t.vmult(n[a], o[a]),
                    e.vadd(o[a], o[a]);
                this.worldVerticesNeedsUpdate = !1
            }
            ;
            new r;
            i.prototype.computeLocalAABB = function(e, t) {
                var i = this.vertices.length
                  , n = this.vertices;
                e.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE),
                t.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);
                for (var r = 0; i > r; r++) {
                    var o = n[r];
                    o.x < e.x ? e.x = o.x : o.x > t.x && (t.x = o.x),
                    o.y < e.y ? e.y = o.y : o.y > t.y && (t.y = o.y),
                    o.z < e.z ? e.z = o.z : o.z > t.z && (t.z = o.z)
                }
            }
            ,
            i.prototype.computeWorldFaceNormals = function(e) {
                for (var t = this.faceNormals.length; this.worldFaceNormals.length < t; )
                    this.worldFaceNormals.push(new r);
                for (var i = this.faceNormals, n = this.worldFaceNormals, o = 0; o !== t; o++)
                    e.vmult(i[o], n[o]);
                this.worldFaceNormalsNeedsUpdate = !1
            }
            ,
            i.prototype.updateBoundingSphereRadius = function() {
                for (var e = 0, t = this.vertices, i = 0, n = t.length; i !== n; i++) {
                    var r = t[i].norm2();
                    r > e && (e = r)
                }
                this.boundingSphereRadius = Math.sqrt(e)
            }
            ;
            var R = new r;
            i.prototype.calculateWorldAABB = function(e, t, i, n) {
                for (var r, o, a, s, l, c, d = this.vertices.length, h = this.vertices, u = 0; d > u; u++) {
                    R.copy(h[u]),
                    t.vmult(R, R),
                    e.vadd(R, R);
                    var p = R;
                    p.x < r || void 0 === r ? r = p.x : (p.x > s || void 0 === s) && (s = p.x),
                    p.y < o || void 0 === o ? o = p.y : (p.y > l || void 0 === l) && (l = p.y),
                    p.z < a || void 0 === a ? a = p.z : (p.z > c || void 0 === c) && (c = p.z)
                }
                i.set(r, o, a),
                n.set(s, l, c)
            }
            ,
            i.prototype.volume = function() {
                return 4 * Math.PI * this.boundingSphereRadius / 3
            }
            ,
            i.prototype.getAveragePointLocal = function(e) {
                e = e || new r;
                for (var t = this.vertices.length, i = this.vertices, n = 0; t > n; n++)
                    e.vadd(i[n], e);
                return e.mult(1 / t, e),
                e
            }
            ,
            i.prototype.transformAllPoints = function(e, t) {
                var i = this.vertices.length
                  , n = this.vertices;
                if (t) {
                    for (var r = 0; i > r; r++) {
                        var o = n[r];
                        t.vmult(o, o)
                    }
                    for (var r = 0; r < this.faceNormals.length; r++) {
                        var o = this.faceNormals[r];
                        t.vmult(o, o)
                    }
                }
                if (e)
                    for (var r = 0; i > r; r++) {
                        var o = n[r];
                        o.vadd(e, o)
                    }
            }
            ;
            var S = new r
              , k = new r
              , M = new r;
            i.prototype.pointIsInside = function(e) {
                var t = this.vertices.length
                  , i = this.vertices
                  , n = this.faces
                  , r = this.faceNormals
                  , o = null
                  , a = this.faces.length
                  , s = S;
                this.getAveragePointLocal(s);
                for (var l = 0; a > l; l++) {
                    var t = (this.faces[l].length,
                    r[l])
                      , c = i[n[l][0]]
                      , d = k;
                    e.vsub(c, d);
                    var h = t.dot(d)
                      , u = M;
                    s.vsub(c, u);
                    var p = t.dot(u);
                    if (0 > h && p > 0 || h > 0 && 0 > p)
                        return !1
                }
                return o ? 1 : -1
            }
            ;
            var A = (new r,
            new r)
              , H = new r;
            i.project = function(e, t, i, n, r) {
                var o = e.vertices.length
                  , s = A
                  , l = 0
                  , c = 0
                  , d = H
                  , h = e.vertices;
                d.setZero(),
                a.vectorToLocalFrame(i, n, t, s),
                a.pointToLocalFrame(i, n, d, d);
                var u = d.dot(s);
                c = l = h[0].dot(s);
                for (var p = 1; o > p; p++) {
                    var f = h[p].dot(s);
                    f > l && (l = f),
                    c > f && (c = f)
                }
                if (c -= u,
                l -= u,
                c > l) {
                    var g = c;
                    c = l,
                    l = g
                }
                r[0] = l,
                r[1] = c
            }
        }
        , {
            "../math/Quaternion": 25,
            "../math/Transform": 26,
            "../math/Vec3": 27,
            "./Shape": 40
        }],
        36: [function(e, t) {
            function i(e, t, i, a) {
                var s = a
                  , l = []
                  , c = []
                  , d = []
                  , h = []
                  , u = []
                  , p = Math.cos
                  , f = Math.sin;
                l.push(new r(t * p(0),t * f(0),.5 * -i)),
                h.push(0),
                l.push(new r(e * p(0),e * f(0),.5 * i)),
                u.push(1);
                for (var g = 0; s > g; g++) {
                    var m = 2 * Math.PI / s * (g + 1)
                      , v = 2 * Math.PI / s * (g + .5);
                    s - 1 > g ? (l.push(new r(t * p(m),t * f(m),.5 * -i)),
                    h.push(2 * g + 2),
                    l.push(new r(e * p(m),e * f(m),.5 * i)),
                    u.push(2 * g + 3),
                    c.push(new r(p(v),f(v),0)),
                    d.push([2 * g + 2, 2 * g + 3, 2 * g + 1, 2 * g])) : (d.push([0, 1, 2 * g + 1, 2 * g]),
                    c.push(new r(p(v),f(v),0)))
                }
                d.push(u),
                c.push(new r(0,0,1));
                for (var y = [], g = 0; g < h.length; g++)
                    y.push(h[h.length - g - 1]);
                d.push(y),
                c.push(new r(0,0,-1)),
                this.type = n.types.CONVEXPOLYHEDRON,
                o.call(this, l, d, c)
            }
            t.exports = i;
            var n = e("./Shape")
              , r = e("../math/Vec3")
              , o = (e("../math/Quaternion"),
            e("./ConvexPolyhedron"));
            i.prototype = new o
        }
        , {
            "../math/Quaternion": 25,
            "../math/Vec3": 27,
            "./ConvexPolyhedron": 35,
            "./Shape": 40
        }],
        37: [function(e, t) {
            function i(e, t) {
                t = a.defaults(t, {
                    maxValue: null ,
                    minValue: null ,
                    elementSize: 1
                }),
                this.data = e,
                this.maxValue = t.maxValue,
                this.minValue = t.minValue,
                this.elementSize = t.elementSize,
                null === t.minValue && this.updateMinValue(),
                null === t.maxValue && this.updateMaxValue(),
                this.cacheEnabled = !0,
                n.call(this),
                this.pillarConvex = new r,
                this.pillarOffset = new o,
                this.type = n.types.HEIGHTFIELD,
                this.updateBoundingSphereRadius(),
                this._cachedPillars = {}
            }
            var n = e("./Shape")
              , r = e("./ConvexPolyhedron")
              , o = e("../math/Vec3")
              , a = e("../utils/Utils");
            t.exports = i,
            i.prototype = new n,
            i.prototype.update = function() {
                this._cachedPillars = {}
            }
            ,
            i.prototype.updateMinValue = function() {
                for (var e = this.data, t = e[0][0], i = 0; i !== e.length; i++)
                    for (var n = 0; n !== e[i].length; n++) {
                        var r = e[i][n];
                        t > r && (t = r)
                    }
                this.minValue = t
            }
            ,
            i.prototype.updateMaxValue = function() {
                for (var e = this.data, t = e[0][0], i = 0; i !== e.length; i++)
                    for (var n = 0; n !== e[i].length; n++) {
                        var r = e[i][n];
                        r > t && (t = r)
                    }
                this.maxValue = t
            }
            ,
            i.prototype.setHeightValueAtIndex = function(e, t, i) {
                var n = this.data;
                n[e][t] = i,
                this.clearCachedConvexTrianglePillar(e, t, !1),
                e > 0 && (this.clearCachedConvexTrianglePillar(e - 1, t, !0),
                this.clearCachedConvexTrianglePillar(e - 1, t, !1)),
                t > 0 && (this.clearCachedConvexTrianglePillar(e, t - 1, !0),
                this.clearCachedConvexTrianglePillar(e, t - 1, !1)),
                t > 0 && e > 0 && this.clearCachedConvexTrianglePillar(e - 1, t - 1, !0)
            }
            ,
            i.prototype.getRectMinMax = function(e, t, i, n, r) {
                r = r || [];
                for (var o = this.data, a = this.minValue, s = e; i > s; s++)
                    for (var l = t; n > l; l++) {
                        var c = o[s][l];
                        c > a && (a = c)
                    }
                r[0] = this.minValue,
                r[1] = a
            }
            ,
            i.prototype.getIndexOfPosition = function(e, t, i, n) {
                var r = this.elementSize
                  , o = this.data
                  , a = Math.floor(e / r)
                  , s = Math.floor(t / r);
                return i[0] = a,
                i[1] = s,
                n && (0 > a && (a = 0),
                0 > s && (s = 0),
                a >= o.length - 1 && (a = o.length - 1),
                s >= o[0].length - 1 && (s = o[0].length - 1)),
                0 > a || 0 > s || a >= o.length - 1 || s >= o[0].length - 1 ? !1 : !0
            }
            ,
            i.prototype.getHeightAt = function(e, t, i) {
                var n = [];
                this.getIndexOfPosition(e, t, n, i);
                var r = [];
                return this.getRectMinMax(n[0], n[1] + 1, n[0], n[1] + 1, r),
                (r[0] + r[1]) / 2
            }
            ,
            i.prototype.getCacheConvexTrianglePillarKey = function(e, t, i) {
                return e + "_" + t + "_" + (i ? 1 : 0)
            }
            ,
            i.prototype.getCachedConvexTrianglePillar = function(e, t, i) {
                return this._cachedPillars[this.getCacheConvexTrianglePillarKey(e, t, i)]
            }
            ,
            i.prototype.setCachedConvexTrianglePillar = function(e, t, i, n, r) {
                this._cachedPillars[this.getCacheConvexTrianglePillarKey(e, t, i)] = {
                    convex: n,
                    offset: r
                }
            }
            ,
            i.prototype.clearCachedConvexTrianglePillar = function(e, t, i) {
                delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(e, t, i)]
            }
            ,
            i.prototype.getConvexTrianglePillar = function(e, t, i) {
                var n = this.pillarConvex
                  , a = this.pillarOffset;
                if (this.cacheEnabled) {
                    var s = this.getCachedConvexTrianglePillar(e, t, i);
                    if (s)
                        return this.pillarConvex = s.convex,
                        void (this.pillarOffset = s.offset);
                    n = new r,
                    a = new o,
                    this.pillarConvex = n,
                    this.pillarOffset = a
                }
                var s = this.data
                  , l = this.elementSize
                  , c = n.faces;
                n.vertices.length = 6;
                for (var d = 0; 6 > d; d++)
                    n.vertices[d] || (n.vertices[d] = new o);
                c.length = 5;
                for (var d = 0; 5 > d; d++)
                    c[d] || (c[d] = []);
                var h = n.vertices
                  , u = (Math.min(s[e][t], s[e + 1][t], s[e][t + 1], s[e + 1][t + 1]) - this.minValue) / 2 + this.minValue;
                i ? (a.set((e + .75) * l, (t + .75) * l, u),
                h[0].set(.25 * l, .25 * l, s[e + 1][t + 1] - u),
                h[1].set(-.75 * l, .25 * l, s[e][t + 1] - u),
                h[2].set(.25 * l, -.75 * l, s[e + 1][t] - u),
                h[3].set(.25 * l, .25 * l, -u - 1),
                h[4].set(-.75 * l, .25 * l, -u - 1),
                h[5].set(.25 * l, -.75 * l, -u - 1),
                c[0][0] = 0,
                c[0][1] = 1,
                c[0][2] = 2,
                c[1][0] = 5,
                c[1][1] = 4,
                c[1][2] = 3,
                c[2][0] = 2,
                c[2][1] = 5,
                c[2][2] = 3,
                c[2][3] = 0,
                c[3][0] = 3,
                c[3][1] = 4,
                c[3][2] = 1,
                c[3][3] = 0,
                c[4][0] = 1,
                c[4][1] = 4,
                c[4][2] = 5,
                c[4][3] = 2) : (a.set((e + .25) * l, (t + .25) * l, u),
                h[0].set(-.25 * l, -.25 * l, s[e][t] - u),
                h[1].set(.75 * l, -.25 * l, s[e + 1][t] - u),
                h[2].set(-.25 * l, .75 * l, s[e][t + 1] - u),
                h[3].set(-.25 * l, -.25 * l, -u - 1),
                h[4].set(.75 * l, -.25 * l, -u - 1),
                h[5].set(-.25 * l, .75 * l, -u - 1),
                c[0][0] = 0,
                c[0][1] = 1,
                c[0][2] = 2,
                c[1][0] = 5,
                c[1][1] = 4,
                c[1][2] = 3,
                c[2][0] = 0,
                c[2][1] = 2,
                c[2][2] = 5,
                c[2][3] = 3,
                c[3][0] = 1,
                c[3][1] = 0,
                c[3][2] = 3,
                c[3][3] = 4,
                c[4][0] = 4,
                c[4][1] = 5,
                c[4][2] = 2,
                c[4][3] = 1),
                n.computeNormals(),
                n.computeEdges(),
                n.updateBoundingSphereRadius(),
                this.setCachedConvexTrianglePillar(e, t, i, n, a)
            }
            ,
            i.prototype.calculateLocalInertia = function(e, t) {
                return t = t || new o,
                t.set(0, 0, 0),
                t
            }
            ,
            i.prototype.volume = function() {
                return Number.MAX_VALUE
            }
            ,
            i.prototype.calculateWorldAABB = function(e, t, i, n) {
                i.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE),
                n.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE)
            }
            ,
            i.prototype.updateBoundingSphereRadius = function() {
                var e = this.data
                  , t = this.elementSize;
                this.boundingSphereRadius = new o(e.length * t,e[0].length * t,Math.max(Math.abs(this.maxValue), Math.abs(this.minValue))).norm()
            }
        }
        , {
            "../math/Vec3": 27,
            "../utils/Utils": 48,
            "./ConvexPolyhedron": 35,
            "./Shape": 40
        }],
        38: [function(e, t) {
            function i() {
                n.call(this),
                this.type = n.types.PARTICLE
            }
            t.exports = i;
            var n = e("./Shape")
              , r = e("../math/Vec3");
            i.prototype = new n,
            i.prototype.constructor = i,
            i.prototype.calculateLocalInertia = function(e, t) {
                return t = t || new r,
                t.set(0, 0, 0),
                t
            }
            ,
            i.prototype.volume = function() {
                return 0
            }
            ,
            i.prototype.updateBoundingSphereRadius = function() {
                this.boundingSphereRadius = 0
            }
            ,
            i.prototype.calculateWorldAABB = function(e, t, i, n) {
                i.copy(e),
                n.copy(e)
            }
        }
        , {
            "../math/Vec3": 27,
            "./Shape": 40
        }],
        39: [function(e, t) {
            function i() {
                n.call(this),
                this.type = n.types.PLANE,
                this.worldNormal = new r,
                this.worldNormalNeedsUpdate = !0,
                this.boundingSphereRadius = Number.MAX_VALUE
            }
            t.exports = i;
            var n = e("./Shape")
              , r = e("../math/Vec3");
            i.prototype = new n,
            i.prototype.constructor = i,
            i.prototype.computeWorldNormal = function(e) {
                var t = this.worldNormal;
                t.set(0, 0, 1),
                e.vmult(t, t),
                this.worldNormalNeedsUpdate = !1
            }
            ,
            i.prototype.calculateLocalInertia = function(e, t) {
                return t = t || new r
            }
            ,
            i.prototype.volume = function() {
                return Number.MAX_VALUE
            }
            ;
            var o = new r;
            i.prototype.calculateWorldAABB = function(e, t, i, n) {
                o.set(0, 0, 1),
                t.vmult(o, o);
                var r = Number.MAX_VALUE;
                i.set(-r, -r, -r),
                n.set(r, r, r),
                1 === o.x && (n.x = e.x),
                1 === o.y && (n.y = e.y),
                1 === o.z && (n.z = e.z),
                -1 === o.x && (i.x = e.x),
                -1 === o.y && (i.y = e.y),
                -1 === o.z && (i.z = e.z)
            }
            ,
            i.prototype.updateBoundingSphereRadius = function() {
                this.boundingSphereRadius = Number.MAX_VALUE
            }
        }
        , {
            "../math/Vec3": 27,
            "./Shape": 40
        }],
        40: [function(e, t) {
            function i() {
                this.type = 0,
                this.boundingSphereRadius = 0,
                this.collisionResponse = !0
            }
            t.exports = i;
            {
                var i = e("./Shape");
                e("../math/Vec3"),
                e("../math/Quaternion"),
                e("../material/Material")
            }
            i.prototype.constructor = i,
            i.prototype.updateBoundingSphereRadius = function() {
                throw "computeBoundingSphereRadius() not implemented for shape type " + this.type
            }
            ,
            i.prototype.volume = function() {
                throw "volume() not implemented for shape type " + this.type
            }
            ,
            i.prototype.calculateLocalInertia = function() {
                throw "calculateLocalInertia() not implemented for shape type " + this.type
            }
            ,
            i.types = {
                SPHERE: 1,
                PLANE: 2,
                BOX: 4,
                COMPOUND: 8,
                CONVEXPOLYHEDRON: 16,
                HEIGHTFIELD: 32,
                PARTICLE: 64,
                CYLINDER: 128
            }
        }
        , {
            "../material/Material": 22,
            "../math/Quaternion": 25,
            "../math/Vec3": 27,
            "./Shape": 40
        }],
        41: [function(e, t) {
            function i(e) {
                n.call(this),
                this.radius = void 0 !== e ? Number(e) : 1,
                this.type = n.types.SPHERE,
                this.updateBoundingSphereRadius()
            }
            t.exports = i;
            var n = e("./Shape")
              , r = e("../math/Vec3");
            i.prototype = new n,
            i.prototype.constructor = i,
            i.prototype.calculateLocalInertia = function(e, t) {
                t = t || new r;
                var i = 2 * e * this.radius * this.radius / 5;
                return t.x = i,
                t.y = i,
                t.z = i,
                t
            }
            ,
            i.prototype.volume = function() {
                return 4 * Math.PI * this.radius / 3
            }
            ,
            i.prototype.updateBoundingSphereRadius = function() {
                this.boundingSphereRadius = this.radius
            }
            ,
            i.prototype.calculateWorldAABB = function(e, t, i, n) {
                for (var r = this.radius, o = ["x", "y", "z"], a = 0; a < o.length; a++) {
                    var s = o[a];
                    i[s] = e[s] - r,
                    n[s] = e[s] + r
                }
            }
        }
        , {
            "../math/Vec3": 27,
            "./Shape": 40
        }],
        42: [function(e, t) {
            function i() {
                n.call(this),
                this.iterations = 10,
                this.tolerance = 0
            }
            t.exports = i;
            var n = (e("../math/Vec3"),
            e("../math/Quaternion"),
            e("./Solver"));
            i.prototype = new n;
            var r = []
              , o = []
              , a = [];
            i.prototype.solve = function(e, t) {
                var i, n, s, l, c, d, h = 0, u = this.iterations, p = this.tolerance * this.tolerance, f = this.equations, g = f.length, m = t.bodies, v = m.length, y = e;
                if (0 !== g)
                    for (var b = 0; b !== v; b++)
                        m[b].updateSolveMassProperties();
                var w = o
                  , x = a
                  , E = r;
                w.length = g,
                x.length = g,
                E.length = g;
                for (var b = 0; b !== g; b++) {
                    var _ = f[b];
                    E[b] = 0,
                    x[b] = _.computeB(y),
                    w[b] = 1 / _.computeC()
                }
                if (0 !== g) {
                    for (var b = 0; b !== v; b++) {
                        var T = m[b]
                          , C = T.vlambda
                          , R = T.wlambda;
                        C.set(0, 0, 0),
                        R && R.set(0, 0, 0)
                    }
                    for (h = 0; h !== u; h++) {
                        l = 0;
                        for (var S = 0; S !== g; S++) {
                            var _ = f[S];
                            i = x[S],
                            n = w[S],
                            d = E[S],
                            c = _.computeGWlambda(),
                            s = n * (i - c - _.eps * d),
                            d + s < _.minForce ? s = _.minForce - d : d + s > _.maxForce && (s = _.maxForce - d),
                            E[S] += s,
                            l += s > 0 ? s : -s,
                            _.addToWlambda(s)
                        }
                        if (p > l * l)
                            break
                    }
                    for (var b = 0; b !== v; b++) {
                        var T = m[b]
                          , k = T.velocity
                          , M = T.angularVelocity;
                        k.vadd(T.vlambda, k),
                        M && M.vadd(T.wlambda, M)
                    }
                }
                return h
            }
        }
        , {
            "../math/Quaternion": 25,
            "../math/Vec3": 27,
            "./Solver": 43
        }],
        43: [function(e, t) {
            function i() {
                this.equations = []
            }
            t.exports = i,
            i.prototype.solve = function() {
                return 0
            }
            ,
            i.prototype.addEquation = function(e) {
                e.enabled && this.equations.push(e)
            }
            ,
            i.prototype.removeEquation = function(e) {
                var t = this.equations
                  , i = t.indexOf(e);
                -1 !== i && t.splice(i, 1)
            }
            ,
            i.prototype.removeAllEquations = function() {
                this.equations.length = 0
            }
        }
        , {}],
        44: [function(e, t) {
            function i(e) {
                n.call(this),
                this.subsolver = e
            }
            t.exports = i;
            var n = (e("../math/Vec3"),
            e("../math/Quaternion"),
            e("./Solver"))
              , r = e("../objects/Body");
            i.prototype = new n;
            var o = []
              , a = []
              , s = []
              , l = {
                bodies: null
            };
            i.prototype.solve = function(e, t) {
                function i(e) {
                    for (var t = e.length, i = 0; i !== t; i++) {
                        var n = e[i];
                        if (!(n.visited || n.body.type & T))
                            return n
                    }
                    return !1
                }
                function n(e, t) {
                    var n = [];
                    for (n.push(e),
                    e.visited = !0,
                    t(e); n.length; )
                        for (var r, o = n.pop(); r = i(o.children); )
                            r.visited = !0,
                            t(r),
                            n.push(r)
                }
                function c(e) {
                    S.push(e.body);
                    for (var t = e.eqs.length, i = 0; i !== t; i++) {
                        var n = e.eqs[i];
                        -1 === R.indexOf(n) && R.push(n)
                    }
                }
                var d = o
                  , h = t.bodies
                  , u = this.equations
                  , p = u.length
                  , f = h.length
                  , g = this.subsolver;
                for (d.length > f && (d.length = f); d.length < f; )
                    d.push({
                        body: null ,
                        children: [],
                        eqs: [],
                        visited: !1
                    });
                for (var m = 0; m !== f; m++) {
                    var v = d[m];
                    v.body = h[m],
                    v.children.length = 0,
                    v.eqs.length = 0,
                    v.visited = !1
                }
                for (var y = 0; y !== p; y++) {
                    var b = u[y]
                      , m = h.indexOf(b.bi)
                      , w = h.indexOf(b.bj)
                      , x = d[m]
                      , E = d[w];
                    x.children.push(E),
                    x.eqs.push(b),
                    E.children.push(x),
                    E.eqs.push(b)
                }
                for (var _, T = r.STATIC, C = 0, R = a, S = s, k = l; _ = i(d); ) {
                    R.length = 0,
                    S.length = 0,
                    n(_, c);
                    for (var M = R.length, m = 0; m !== M; m++)
                        g.addEquation(R[m]);
                    k.bodies = S;
                    {
                        g.solve(e, k)
                    }
                    g.removeAllEquations(),
                    C++
                }
                return C
            }
        }
        , {
            "../math/Quaternion": 25,
            "../math/Vec3": 27,
            "../objects/Body": 28,
            "./Solver": 43
        }],
        45: [function(e, t) {
            var i = function() {}
            ;
            t.exports = i,
            i.prototype = {
                constructor: i,
                addEventListener: function(e, t) {
                    void 0 === this._listeners && (this._listeners = {});
                    var i = this._listeners;
                    return void 0 === i[e] && (i[e] = []),
                    -1 === i[e].indexOf(t) && i[e].push(t),
                    this
                },
                hasEventListener: function(e, t) {
                    if (void 0 === this._listeners)
                        return !1;
                    var i = this._listeners;
                    return void 0 !== i[e] && -1 !== i[e].indexOf(t) ? !0 : !1
                },
                removeEventListener: function(e, t) {
                    if (void 0 === this._listeners)
                        return this;
                    var i = this._listeners;
                    if (void 0 === i[e])
                        return this;
                    var n = i[e].indexOf(t);
                    return -1 !== n && i[e].splice(n, 1),
                    this
                },
                dispatchEvent: function(e) {
                    if (void 0 === this._listeners)
                        return this;
                    var t = this._listeners
                      , i = t[e.type];
                    if (void 0 !== i) {
                        e.target = this;
                        for (var n = 0, r = i.length; r > n; n++)
                            i[n].call(this, e)
                    }
                    return this
                }
            }
        }
        , {}],
        46: [function(e, t) {
            function i() {
                this.objects = [],
                this.type = Object
            }
            t.exports = i,
            i.prototype.release = function() {
                for (var e = arguments.length, t = 0; t !== e; t++)
                    this.objects.push(arguments[t])
            }
            ,
            i.prototype.get = function() {
                return 0 === this.objects.length ? this.constructObject() : this.objects.pop()
            }
            ,
            i.prototype.constructObject = function() {
                throw new Error("constructObject() not implemented in this Pool subclass yet!")
            }
        }
        , {}],
        47: [function(e, t) {
            function i() {
                this.data = {
                    keys: []
                }
            }
            t.exports = i,
            i.prototype.get = function(e, t) {
                if (e > t) {
                    var i = t;
                    t = e,
                    e = i
                }
                return this.data[e + "-" + t]
            }
            ,
            i.prototype.set = function(e, t, i) {
                if (e > t) {
                    var n = t;
                    t = e,
                    e = n
                }
                var r = e + "-" + t;
                this.get(e, t) || this.data.keys.push(r),
                this.data[r] = i
            }
            ,
            i.prototype.reset = function() {
                for (var e = this.data, t = e.keys; t.length > 0; ) {
                    var i = t.pop();
                    delete e[i]
                }
            }
        }
        , {}],
        48: [function(e, t) {
            function i() {}
            t.exports = i,
            i.defaults = function(e, t) {
                e = e || {};
                for (var i in t)
                    i in e || (e[i] = t[i]);
                return e
            }
        }
        , {}],
        49: [function(e, t) {
            function i() {
                r.call(this),
                this.type = n
            }
            t.exports = i;
            var n = e("../math/Vec3")
              , r = e("./Pool");
            i.prototype = new r,
            i.prototype.constructObject = function() {
                return new n
            }
        }
        , {
            "../math/Vec3": 27,
            "./Pool": 46
        }],
        50: [function(e, t) {
            function i() {
                this.contactPointPool = [],
                this.v3pool = new l
            }
            function n(e, t, i) {
                for (var n = null , r = e.length, o = 0; o !== r; o++) {
                    var a = e[o]
                      , s = m;
                    e[(o + 1) % r].vsub(a, s);
                    var l = v;
                    s.cross(t, l);
                    var c = y;
                    i.vsub(a, c);
                    var d = l.dot(c);
                    if (!(null === n || d > 0 && n === !0 || 0 >= d && n === !1))
                        return !1;
                    null === n && (n = d > 0)
                }
                return !0
            }
            t.exports = i;
            var r = e("../shapes/Shape")
              , o = e("../math/Vec3")
              , a = e("../math/Transform")
              , s = (e("../shapes/ConvexPolyhedron"),
            e("../math/Quaternion"))
              , l = (e("../solver/Solver"),
            e("../utils/Vec3Pool"))
              , c = e("../equations/ContactEquation");
            i.prototype.makeResult = function(e, t, i, n, r, o) {
                var a;
                return this.contactPointPool.length ? (a = this.contactPointPool.pop(),
                a.bi = e,
                a.bj = t) : a = new c(e,t),
                a.enabled = !0,
                a.si = r || i,
                a.sj = o || n,
                a
            }
            ;
            var d = new o
              , h = new o
              , u = new s
              , p = new s;
            i.prototype.getContacts = function(e, t, i, n, r) {
                this.contactPointPool = r;
                for (var o = u, a = p, s = d, l = h, c = 0, f = e.length; c !== f; c++)
                    for (var g = e[c], m = t[c], v = 0; v < g.shapes.length; v++) {
                        g.quaternion.mult(g.shapeOrientations[v], o),
                        g.quaternion.vmult(g.shapeOffsets[v], s),
                        s.vadd(g.position, s);
                        for (var y = g.shapes[v], b = 0; b < m.shapes.length; b++) {
                            m.quaternion.mult(m.shapeOrientations[b], a),
                            m.quaternion.vmult(m.shapeOffsets[b], l),
                            l.vadd(m.position, l);
                            var w = m.shapes[b];
                            if (!(s.distanceTo(l) > y.boundingSphereRadius + w.boundingSphereRadius)) {
                                var x = this[y.type | w.type];
                                x && (y.type < w.type ? x.call(this, n, y, w, s, l, o, a, g, m, y, w) : x.call(this, n, w, y, l, s, a, o, m, g, y, w))
                            }
                        }
                    }
            }
            ;
            i.prototype[r.types.BOX | r.types.BOX] = i.prototype.boxBox = function(e, t, i, n, r, o, a, s, l) {
                this.convexConvex(e, t.convexPolyhedronRepresentation, i.convexPolyhedronRepresentation, n, r, o, a, s, l, t, i)
            }
            ,
            i.prototype[r.types.BOX | r.types.CONVEXPOLYHEDRON] = i.prototype.boxConvex = function(e, t, i, n, r, o, a, s, l) {
                this.convexConvex(e, t.convexPolyhedronRepresentation, i, n, r, o, a, s, l, t, i)
            }
            ,
            i.prototype[r.types.BOX | r.types.PARTICLE] = i.prototype.boxParticle = function(e, t, i, n, r, o, a, s, l) {
                this.convexParticle(e, t.convexPolyhedronRepresentation, i, n, r, o, a, s, l, t, i)
            }
            ,
            i.prototype[r.types.SPHERE] = i.prototype.sphereSphere = function(e, t, i, n, r, o, a, s, l) {
                var c = this.makeResult(s, l, t, i);
                l.position.vsub(n, c.ni),
                c.ni.normalize(),
                c.ri.copy(c.ni),
                c.rj.copy(c.ni),
                c.ri.mult(t.radius, c.ri),
                c.rj.mult(-i.radius, c.rj),
                e.push(c)
            }
            ;
            var f = new o
              , g = new o;
            i.prototype[r.types.SPHERE | r.types.PLANE] = i.prototype.spherePlane = function(e, t, i, n, r, o, a, s, l) {
                var c = this.makeResult(s, l, t, i);
                if (c.ni.set(0, 0, 1),
                a.vmult(c.ni, c.ni),
                c.ni.negate(c.ni),
                c.ni.normalize(),
                c.ni.mult(t.radius, c.ri),
                n.vsub(r, f),
                c.ni.mult(c.ni.dot(f), g),
                f.vsub(g, c.rj),
                g.norm2() <= t.radius * t.radius) {
                    e.push(c);
                    var d = c.ri
                      , h = c.rj;
                    d.vadd(n, d),
                    d.vsub(s.position, d),
                    h.vadd(r, h),
                    h.vsub(l.position, h)
                }
            }
            ;
            var m = new o
              , v = new o
              , y = new o
              , b = new o
              , w = new o
              , x = new o
              , E = new o
              , _ = [new o, new o, new o, new o, new o, new o]
              , T = new o
              , C = new o
              , R = new o
              , S = new o;
            i.prototype[r.types.SPHERE | r.types.BOX] = i.prototype.sphereBox = function(e, t, i, n, r, o, a, s, l) {
                var c = this.v3pool
                  , d = _;
                n.vsub(r, b),
                i.getSideNormals(d, a);
                for (var h = t.radius, u = !1, p = C, f = R, g = S, m = null , v = 0, y = 0, k = 0, M = null , A = 0, H = d.length; A !== H && u === !1; A++) {
                    var P = w;
                    P.copy(d[A]);
                    var O = P.norm();
                    P.normalize();
                    var D = b.dot(P);
                    if (O + h > D && D > 0) {
                        var $ = x
                          , L = E;
                        $.copy(d[(A + 1) % 3]),
                        L.copy(d[(A + 2) % 3]);
                        var I = $.norm()
                          , F = L.norm();
                        $.normalize(),
                        L.normalize();
                        var B = b.dot($)
                          , j = b.dot(L);
                        if (I > B && B > -I && F > j && j > -F) {
                            var N = Math.abs(D - O - h);
                            (null === M || M > N) && (M = N,
                            y = B,
                            k = j,
                            m = O,
                            p.copy(P),
                            f.copy($),
                            g.copy(L),
                            v++)
                        }
                    }
                }
                if (v) {
                    u = !0;
                    var z = this.makeResult(s, l, t, i);
                    p.mult(-h, z.ri),
                    z.ni.copy(p),
                    z.ni.negate(z.ni),
                    p.mult(m, p),
                    f.mult(y, f),
                    p.vadd(f, p),
                    g.mult(k, g),
                    p.vadd(g, z.rj),
                    z.ri.vadd(n, z.ri),
                    z.ri.vsub(s.position, z.ri),
                    z.rj.vadd(r, z.rj),
                    z.rj.vsub(l.position, z.rj),
                    e.push(z)
                }
                for (var U = c.get(), V = T, W = 0; 2 !== W && !u; W++)
                    for (var G = 0; 2 !== G && !u; G++)
                        for (var q = 0; 2 !== q && !u; q++)
                            if (U.set(0, 0, 0),
                            W ? U.vadd(d[0], U) : U.vsub(d[0], U),
                            G ? U.vadd(d[1], U) : U.vsub(d[1], U),
                            q ? U.vadd(d[2], U) : U.vsub(d[2], U),
                            r.vadd(U, V),
                            V.vsub(n, V),
                            V.norm2() < h * h) {
                                u = !0;
                                var z = this.makeResult(s, l, t, i);
                                z.ri.copy(V),
                                z.ri.normalize(),
                                z.ni.copy(z.ri),
                                z.ri.mult(h, z.ri),
                                z.rj.copy(U),
                                z.ri.vadd(n, z.ri),
                                z.ri.vsub(s.position, z.ri),
                                z.rj.vadd(r, z.rj),
                                z.rj.vsub(l.position, z.rj),
                                e.push(z)
                            }
                c.release(U),
                U = null ;
                for (var X = c.get(), Y = c.get(), z = c.get(), J = c.get(), N = c.get(), K = d.length, W = 0; W !== K && !u; W++)
                    for (var G = 0; G !== K && !u; G++)
                        if (W % 3 !== G % 3) {
                            d[G].cross(d[W], X),
                            X.normalize(),
                            d[W].vadd(d[G], Y),
                            z.copy(n),
                            z.vsub(Y, z),
                            z.vsub(r, z);
                            var Z = z.dot(X);
                            X.mult(Z, J);
                            for (var q = 0; q === W % 3 || q === G % 3; )
                                q++;
                            N.copy(n),
                            N.vsub(J, N),
                            N.vsub(Y, N),
                            N.vsub(r, N);
                            var Q = Math.abs(Z)
                              , et = N.norm();
                            if (Q < d[q].norm() && h > et) {
                                u = !0;
                                var tt = this.makeResult(s, l, t, i);
                                Y.vadd(J, tt.rj),
                                tt.rj.copy(tt.rj),
                                N.negate(tt.ni),
                                tt.ni.normalize(),
                                tt.ri.copy(tt.rj),
                                tt.ri.vadd(r, tt.ri),
                                tt.ri.vsub(n, tt.ri),
                                tt.ri.normalize(),
                                tt.ri.mult(h, tt.ri),
                                tt.ri.vadd(n, tt.ri),
                                tt.ri.vsub(s.position, tt.ri),
                                tt.rj.vadd(r, tt.rj),
                                tt.rj.vsub(l.position, tt.rj),
                                e.push(tt)
                            }
                        }
                c.release(X, Y, z, J, N)
            }
            ;
            var k = new o
              , M = new o
              , A = new o
              , H = new o
              , P = new o
              , O = new o
              , D = new o
              , $ = new o
              , L = new o
              , I = new o;
            i.prototype[r.types.SPHERE | r.types.CONVEXPOLYHEDRON] = i.prototype.sphereConvex = function(e, t, i, r, o, a, s, l, c) {
                var d = this.v3pool;
                r.vsub(o, k);
                for (var h = i.faceNormals, u = i.faces, p = i.vertices, f = t.radius, g = 0; g !== p.length; g++) {
                    var m = p[g]
                      , v = P;
                    s.vmult(m, v),
                    o.vadd(v, v);
                    var y = H;
                    if (v.vsub(r, y),
                    y.norm2() < f * f) {
                        w = !0;
                        var b = this.makeResult(l, c, t, i);
                        return b.ri.copy(y),
                        b.ri.normalize(),
                        b.ni.copy(b.ri),
                        b.ri.mult(f, b.ri),
                        v.vsub(o, b.rj),
                        b.ri.vadd(r, b.ri),
                        b.ri.vsub(l.position, b.ri),
                        b.rj.vadd(o, b.rj),
                        b.rj.vsub(c.position, b.rj),
                        void e.push(b)
                    }
                }
                for (var w = !1, g = 0, x = u.length; g !== x && w === !1; g++) {
                    var E = h[g]
                      , _ = u[g]
                      , T = O;
                    s.vmult(E, T);
                    var C = D;
                    s.vmult(p[_[0]], C),
                    C.vadd(o, C);
                    var R = $;
                    T.mult(-f, R),
                    r.vadd(R, R);
                    var S = L;
                    R.vsub(C, S);
                    var F = S.dot(T)
                      , B = I;
                    if (r.vsub(C, B),
                    0 > F && B.dot(T) > 0) {
                        for (var j = [], N = 0, z = _.length; N !== z; N++) {
                            var U = d.get();
                            s.vmult(p[_[N]], U),
                            o.vadd(U, U),
                            j.push(U)
                        }
                        if (n(j, T, r)) {
                            w = !0;
                            var b = this.makeResult(l, c, t, i);
                            T.mult(-f, b.ri),
                            T.negate(b.ni);
                            var V = d.get();
                            T.mult(-F, V);
                            var W = d.get();
                            T.mult(-f, W),
                            r.vsub(o, b.rj),
                            b.rj.vadd(W, b.rj),
                            b.rj.vadd(V, b.rj),
                            b.rj.vadd(o, b.rj),
                            b.rj.vsub(c.position, b.rj),
                            b.ri.vadd(r, b.ri),
                            b.ri.vsub(l.position, b.ri),
                            d.release(V),
                            d.release(W),
                            e.push(b);
                            for (var N = 0, G = j.length; N !== G; N++)
                                d.release(j[N]);
                            return
                        }
                        for (var N = 0; N !== _.length; N++) {
                            var q = d.get()
                              , X = d.get();
                            s.vmult(p[_[(N + 1) % _.length]], q),
                            s.vmult(p[_[(N + 2) % _.length]], X),
                            o.vadd(q, q),
                            o.vadd(X, X);
                            var Y = M;
                            X.vsub(q, Y);
                            var J = A;
                            Y.unit(J);
                            var K = d.get()
                              , Z = d.get();
                            r.vsub(q, Z);
                            var Q = Z.dot(J);
                            J.mult(Q, K),
                            K.vadd(q, K);
                            var et = d.get();
                            if (K.vsub(r, et),
                            Q > 0 && Q * Q < Y.norm2() && et.norm2() < f * f) {
                                var b = this.makeResult(l, c, t, i);
                                K.vsub(o, b.rj),
                                K.vsub(r, b.ni),
                                b.ni.normalize(),
                                b.ni.mult(f, b.ri),
                                b.rj.vadd(o, b.rj),
                                b.rj.vsub(c.position, b.rj),
                                b.ri.vadd(r, b.ri),
                                b.ri.vsub(l.position, b.ri),
                                e.push(b);
                                for (var N = 0, G = j.length; N !== G; N++)
                                    d.release(j[N]);
                                return d.release(q),
                                d.release(X),
                                d.release(K),
                                d.release(et),
                                void d.release(Z)
                            }
                            d.release(q),
                            d.release(X),
                            d.release(K),
                            d.release(et),
                            d.release(Z)
                        }
                        for (var N = 0, G = j.length; N !== G; N++)
                            d.release(j[N])
                    }
                }
            }
            ;
            new o,
            new o;
            i.prototype[r.types.PLANE | r.types.BOX] = i.prototype.planeBox = function(e, t, i, n, r, o, a, s, l) {
                this.planeConvex(e, t, i.convexPolyhedronRepresentation, n, r, o, a, s, l)
            }
            ;
            var F = new o
              , B = new o
              , j = new o
              , N = new o;
            i.prototype[r.types.PLANE | r.types.CONVEXPOLYHEDRON] = i.prototype.planeConvex = function(e, t, i, n, r, o, a, s, l) {
                var c = F
                  , d = B;
                d.set(0, 0, 1),
                o.vmult(d, d);
                for (var h = j, u = 0; u !== i.vertices.length; u++) {
                    c.copy(i.vertices[u]),
                    a.vmult(c, c),
                    r.vadd(c, c),
                    c.vsub(n, h);
                    var p = d.dot(h);
                    if (0 >= p) {
                        var f = this.makeResult(s, l, t, i)
                          , g = N;
                        d.mult(d.dot(h), g),
                        c.vsub(g, g),
                        g.vsub(n, f.ri),
                        f.ni.copy(d),
                        c.vsub(r, f.rj),
                        f.ri.vadd(n, f.ri),
                        f.ri.vsub(s.position, f.ri),
                        f.rj.vadd(r, f.rj),
                        f.rj.vsub(l.position, f.rj),
                        e.push(f)
                    }
                }
            }
            ;
            var z = new o
              , U = new o;
            i.prototype[r.types.CONVEXPOLYHEDRON] = i.prototype.convexConvex = function(e, t, i, n, r, o, a, s, l, c, d, h, u) {
                var p = z;
                if (!(n.distanceTo(r) > t.boundingSphereRadius + i.boundingSphereRadius) && t.findSeparatingAxis(i, n, o, r, a, p, h, u)) {
                    var f = []
                      , g = U;
                    t.clipAgainstHull(n, o, i, r, a, p, -100, 100, f);
                    for (var m = 0; m !== f.length; m++) {
                        var v = this.makeResult(s, l, t, i, c, d)
                          , y = v.ri
                          , b = v.rj;
                        p.negate(v.ni),
                        f[m].normal.negate(g),
                        g.mult(f[m].depth, g),
                        f[m].point.vadd(g, y),
                        b.copy(f[m].point),
                        y.vsub(n, y),
                        b.vsub(r, b),
                        y.vadd(n, y),
                        y.vsub(s.position, y),
                        b.vadd(r, b),
                        b.vsub(l.position, b),
                        e.push(v)
                    }
                }
            }
            ;
            var V = new o
              , W = new o
              , G = new o;
            i.prototype[r.types.PLANE | r.types.PARTICLE] = i.prototype.planeParticle = function(e, t, i, n, r, o, a, s, l) {
                var c = V;
                c.set(0, 0, 1),
                s.quaternion.vmult(c, c);
                var d = W;
                r.vsub(s.position, d);
                var h = c.dot(d);
                if (0 >= h) {
                    var u = this.makeResult(l, s, i, t);
                    u.ni.copy(c),
                    u.ni.negate(u.ni),
                    u.ri.set(0, 0, 0);
                    var p = G;
                    c.mult(c.dot(r), p),
                    r.vsub(p, p),
                    u.rj.copy(p),
                    e.push(u)
                }
            }
            ;
            var q = new o;
            i.prototype[r.types.PARTICLE | r.types.SPHERE] = i.prototype.sphereParticle = function(e, t, i, n, r, o, a, s, l) {
                var c = q;
                c.set(0, 0, 1),
                r.vsub(n, c);
                var d = c.norm2();
                if (d <= t.radius * t.radius) {
                    var h = this.makeResult(l, s, i, t);
                    c.normalize(),
                    h.rj.copy(c),
                    h.rj.mult(t.radius, h.rj),
                    h.ni.copy(c),
                    h.ni.negate(h.ni),
                    h.ri.set(0, 0, 0),
                    e.push(h)
                }
            }
            ;
            var X = new s
              , Y = new o
              , J = (new o,
            new o)
              , K = new o
              , Z = new o;
            i.prototype[r.types.PARTICLE | r.types.CONVEXPOLYHEDRON] = i.prototype.convexParticle = function(e, t, i, n, r, o, a, s, l) {
                var c = -1
                  , d = J
                  , h = Z
                  , u = null
                  , p = 0
                  , f = Y;
                if (f.copy(r),
                f.vsub(n, f),
                o.conjugate(X),
                X.vmult(f, f),
                t.pointIsInside(f)) {
                    t.worldVerticesNeedsUpdate && t.computeWorldVertices(n, o),
                    t.worldFaceNormalsNeedsUpdate && t.computeWorldFaceNormals(o);
                    for (var g = 0, m = t.faces.length; g !== m; g++) {
                        var v = [t.worldVertices[t.faces[g][0]]]
                          , y = t.worldFaceNormals[g];
                        r.vsub(v[0], K);
                        var b = -y.dot(K);
                        (null === u || Math.abs(b) < Math.abs(u)) && (u = b,
                        c = g,
                        d.copy(y),
                        p++)
                    }
                    if (-1 !== c) {
                        var w = this.makeResult(l, s, i, t);
                        d.mult(u, h),
                        h.vadd(r, h),
                        h.vsub(n, h),
                        w.rj.copy(h),
                        d.negate(w.ni),
                        w.ri.set(0, 0, 0);
                        var x = w.ri
                          , E = w.rj;
                        x.vadd(r, x),
                        x.vsub(l.position, x),
                        E.vadd(n, E),
                        E.vsub(s.position, E),
                        e.push(w)
                    } else
                        console.warn("Point found inside convex, but did not find penetrating face!")
                }
            }
            ,
            i.prototype[r.types.BOX | r.types.HEIGHTFIELD] = i.prototype.boxHeightfield = function(e, t, i, n, r, o, a, s, l) {
                this.convexHeightfield(e, t.convexPolyhedronRepresentation, i, n, r, o, a, s, l)
            }
            ;
            var Q = new o
              , et = new o
              , tt = [0];
            i.prototype[r.types.CONVEXPOLYHEDRON | r.types.HEIGHTFIELD] = i.prototype.convexHeightfield = function(e, t, i, n, r, o, s, l, c) {
                var d = i.data
                  , h = i.elementSize
                  , u = t.boundingSphereRadius
                  , p = et
                  , f = tt
                  , g = Q;
                a.pointToLocalFrame(r, s, n, g);
                var m = Math.floor((g.x - u) / h) - 1
                  , v = Math.ceil((g.x + u) / h) + 1
                  , y = Math.floor((g.y - u) / h) - 1
                  , b = Math.ceil((g.y + u) / h) + 1;
                if (!(0 > v || 0 > b || m > d.length || b > d[0].length)) {
                    0 > m && (m = 0),
                    0 > v && (v = 0),
                    0 > y && (y = 0),
                    0 > b && (b = 0),
                    m >= d.length && (m = d.length - 1),
                    v >= d.length && (v = d.length - 1),
                    b >= d[0].length && (b = d[0].length - 1),
                    y >= d[0].length && (y = d[0].length - 1);
                    var w = [];
                    i.getRectMinMax(m, y, v, b, w);
                    var x = w[0]
                      , E = w[1];
                    if (!(g.z - u > E || g.z + u < x))
                        for (var _ = m; v > _; _++)
                            for (var T = y; b > T; T++)
                                i.getConvexTrianglePillar(_, T, !1),
                                a.pointToWorldFrame(r, s, i.pillarOffset, p),
                                n.distanceTo(p) < i.pillarConvex.boundingSphereRadius + t.boundingSphereRadius && this.convexConvex(e, t, i.pillarConvex, n, p, o, s, l, c, null , null , f, null ),
                                i.getConvexTrianglePillar(_, T, !0),
                                a.pointToWorldFrame(r, s, i.pillarOffset, p),
                                n.distanceTo(p) < i.pillarConvex.boundingSphereRadius + t.boundingSphereRadius && this.convexConvex(e, t, i.pillarConvex, n, p, o, s, l, c, null , null , f, null )
                }
            }
            ;
            var it = new o
              , nt = new o;
            i.prototype[r.types.SPHERE | r.types.HEIGHTFIELD] = i.prototype.sphereHeightfield = function(e, t, i, n, r, o, s, l, c) {
                var d = i.data
                  , h = t.radius
                  , u = i.elementSize
                  , p = nt
                  , f = it;
                a.pointToLocalFrame(r, s, n, f);
                var g = Math.floor((f.x - h) / u) - 1
                  , m = Math.ceil((f.x + h) / u) + 1
                  , v = Math.floor((f.y - h) / u) - 1
                  , y = Math.ceil((f.y + h) / u) + 1;
                if (!(0 > m || 0 > y || g > d.length || y > d[0].length)) {
                    0 > g && (g = 0),
                    0 > m && (m = 0),
                    0 > v && (v = 0),
                    0 > y && (y = 0),
                    g >= d.length && (g = d.length - 1),
                    m >= d.length && (m = d.length - 1),
                    y >= d[0].length && (y = d[0].length - 1),
                    v >= d[0].length && (v = d[0].length - 1);
                    var b = [];
                    i.getRectMinMax(g, v, m, y, b);
                    var w = b[0]
                      , x = b[1];
                    if (!(f.z - h > x || f.z + h < w))
                        for (var E = g; m > E; E++)
                            for (var _ = v; y > _; _++) {
                                var T = e.length;
                                i.getConvexTrianglePillar(E, _, !1),
                                a.pointToWorldFrame(r, s, i.pillarOffset, p),
                                n.distanceTo(p) < i.pillarConvex.boundingSphereRadius + t.boundingSphereRadius && this.sphereConvex(e, t, i.pillarConvex, n, p, o, s, l, c),
                                i.getConvexTrianglePillar(E, _, !0),
                                a.pointToWorldFrame(r, s, i.pillarOffset, p),
                                n.distanceTo(p) < i.pillarConvex.boundingSphereRadius + t.boundingSphereRadius && this.sphereConvex(e, t, i.pillarConvex, n, p, o, s, l, c);
                                var C = e.length - T;
                                if (C > 2)
                                    return
                            }
                }
            }
        }
        , {
            "../equations/ContactEquation": 16,
            "../math/Quaternion": 25,
            "../math/Transform": 26,
            "../math/Vec3": 27,
            "../shapes/ConvexPolyhedron": 35,
            "../shapes/Shape": 40,
            "../solver/Solver": 43,
            "../utils/Vec3Pool": 49
        }],
        51: [function(e, t) {
            function i() {
                c.apply(this),
                this.dt = -1,
                this.allowSleep = !1,
                this.contacts = [],
                this.frictionEquations = [],
                this.quatNormalizeSkip = 0,
                this.quatNormalizeFast = !1,
                this.time = 0,
                this.stepnumber = 0,
                this.default_dt = 1 / 60,
                this.nextId = 0,
                this.gravity = new r,
                this.broadphase = new v,
                this.bodies = [],
                this.solver = new a,
                this.constraints = [],
                this.narrowphase = new l,
                this.collisionMatrix = new d,
                this.collisionMatrixPrevious = new d,
                this.materials = [],
                this.contactmaterials = [],
                this.contactMaterialTable = new f,
                this.defaultMaterial = new h("default"),
                this.defaultContactMaterial = new u(this.defaultMaterial,this.defaultMaterial,{
                    friction: .3,
                    restitution: 0
                }),
                this.doProfiling = !1,
                this.profile = {
                    solve: 0,
                    makeContactConstraints: 0,
                    broadphase: 0,
                    integrate: 0,
                    narrowphase: 0
                },
                this.subsystems = [],
                this.addBodyEvent = {
                    type: "addBody",
                    body: null
                },
                this.removeBodyEvent = {
                    type: "removeBody",
                    body: null
                }
            }
            t.exports = i;
            var n = e("../shapes/Shape")
              , r = e("../math/Vec3")
              , o = e("../math/Quaternion")
              , a = e("../solver/GSSolver")
              , s = (e("../utils/Vec3Pool"),
            e("../equations/ContactEquation"),
            e("../equations/FrictionEquation"))
              , l = e("./Narrowphase")
              , c = e("../utils/EventTarget")
              , d = e("../collision/ArrayCollisionMatrix")
              , h = e("../material/Material")
              , u = e("../material/ContactMaterial")
              , p = e("../objects/Body")
              , f = e("../utils/TupleDictionary")
              , g = (e("../collision/RaycastResult"),
            e("../collision/AABB"))
              , m = e("../collision/Ray")
              , v = e("../collision/NaiveBroadphase");
            i.prototype = new c;
            var y = new g
              , b = []
              , w = new m;
            if (i.prototype.getContactMaterial = function(e, t) {
                return this.contactMaterialTable.get(e.id, t.id)
            }
            ,
            i.prototype.numObjects = function() {
                return this.bodies.length
            }
            ,
            i.prototype.collisionMatrixTick = function() {
                var e = this.collisionMatrixPrevious;
                this.collisionMatrixPrevious = this.collisionMatrix,
                this.collisionMatrix = e,
                this.collisionMatrix.reset()
            }
            ,
            i.prototype.add = i.prototype.addBody = function(e) {
                -1 === this.bodies.indexOf(e) && (e.index = this.bodies.length,
                this.bodies.push(e),
                e.world = this,
                e.initPosition.copy(e.position),
                e.initVelocity.copy(e.velocity),
                e.timeLastSleepy = this.time,
                e instanceof p && (e.initAngularVelocity.copy(e.angularVelocity),
                e.initQuaternion.copy(e.quaternion)),
                this.collisionMatrix.setNumObjects(this.bodies.length),
                this.addBodyEvent.body = e,
                this.dispatchEvent(this.addBodyEvent))
            }
            ,
            i.prototype.addConstraint = function(e) {
                this.constraints.push(e)
            }
            ,
            i.prototype.removeConstraint = function(e) {
                var t = this.constraints.indexOf(e);
                -1 !== t && this.constraints.splice(t, 1)
            }
            ,
            i.prototype.rayTest = function(e, t, i) {
                w.from.copy(e),
                w.to.copy(t),
                w.getAABB(y),
                b.length = 0,
                this.broadphase.aabbQuery(this, y, b),
                w.intersectBodies(b, i)
            }
            ,
            i.prototype.remove = function(e) {
                e.world = null ;
                var t = this.bodies.length - 1
                  , i = this.bodies
                  , n = i.indexOf(e);
                if (-1 !== n) {
                    i.splice(n, 1);
                    for (var r = 0; r !== i.length; r++)
                        i[r].index = r;
                    this.collisionMatrix.setNumObjects(t),
                    this.removeBodyEvent.body = e,
                    this.dispatchEvent(this.removeBodyEvent)
                }
            }
            ,
            i.prototype.addMaterial = function(e) {
                this.materials.push(e)
            }
            ,
            i.prototype.addContactMaterial = function(e) {
                this.contactmaterials.push(e),
                this.contactMaterialTable.set(e.materials[0].id, e.materials[1].id, e)
            }
            ,
            "undefined" == typeof performance && (performance = {}),
            !performance.now) {
                var x = Date.now();
                performance.timing && performance.timing.navigationStart && (x = performance.timing.navigationStart),
                performance.now = function() {
                    return Date.now() - x
                }
            }
            var E = new r;
            i.prototype.step = function(e, t, i) {
                if (i = i || 10,
                t = t || 0,
                0 === t)
                    this.internalStep(e),
                    this.time += e;
                else {
                    var n = Math.floor((this.time + t) / e) - Math.floor(this.time / e);
                    n = Math.min(n, i);
                    for (var r = performance.now(), o = 0; o !== n && (this.internalStep(e),
                    !(performance.now() - r > 1e3 * e)); o++)
                        ;
                    this.time += t;
                    for (var a = this.time % e, s = a / e, l = E, c = this.bodies, d = 0; d !== c.length; d++) {
                        var h = c[d];
                        h.type !== p.STATIC && h.sleepState !== p.SLEEPING ? (h.position.vsub(h.previousPosition, l),
                        l.scale(s, l),
                        h.position.vadd(l, h.interpolatedPosition)) : (h.interpolatedPosition.copy(h.position),
                        h.interpolatedQuaternion.copy(h.quaternion))
                    }
                }
            }
            ;
            var _ = {
                type: "postStep"
            }
              , T = {
                type: "preStep"
            }
              , C = {
                type: "collide",
                body: null ,
                contact: null
            }
              , R = []
              , S = []
              , k = []
              , M = []
              , A = new r
              , H = (new r,
            new r,
            new r,
            new r,
            new r,
            new r,
            new r,
            new r,
            new o,
            new o)
              , P = new o
              , O = new r;
            i.prototype.internalStep = function(e) {
                this.dt = e;
                var t, i = this.contacts, r = k, o = M, a = this.numObjects(), l = this.bodies, c = this.solver, d = this.gravity, h = this.doProfiling, u = this.profile, f = p.DYNAMIC, g = this.constraints, m = S, v = d.norm(), y = d.x, b = d.y, w = d.z, x = 0;
                for (h && (t = performance.now()),
                x = 0; x !== a; x++) {
                    var E = l[x];
                    if (E.type & f) {
                        var D = E.force
                          , $ = E.mass;
                        D.x += $ * y,
                        D.y += $ * b,
                        D.z += $ * w
                    }
                }
                for (var x = 0, L = this.subsystems.length; x !== L; x++)
                    this.subsystems[x].update();
                h && (t = performance.now()),
                r.length = 0,
                o.length = 0,
                this.broadphase.collisionPairs(this, r, o),
                h && (u.broadphase = performance.now() - t);
                var I = g.length;
                for (x = 0; x !== I; x++) {
                    var F = g[x];
                    if (!F.collideConnected)
                        for (var B = r.length - 1; B >= 0; B -= 1)
                            (F.bodyA === r[B] && F.bodyB === o[B] || F.bodyB === r[B] && F.bodyA === o[B]) && (r.splice(B, 1),
                            o.splice(B, 1))
                }
                this.collisionMatrixTick(),
                h && (t = performance.now());
                var j = R
                  , N = i.length;
                for (x = 0; x !== N; x++)
                    j.push(i[x]);
                i.length = 0,
                this.narrowphase.getContacts(r, o, this, i, j),
                h && (u.narrowphase = performance.now() - t),
                h && (t = performance.now());
                var z = i.length
                  , U = this.frictionEquations.length;
                for (x = 0; x !== U; x++)
                    m.push(this.frictionEquations[x]);
                this.frictionEquations.length = 0;
                for (var V = 0; V !== z; V++) {
                    var W, F = i[V], E = F.bi, G = F.bj, q = F.si, X = F.sj, x = l.indexOf(E), B = l.indexOf(G);
                    W = E.material && G.material ? this.getContactMaterial(E.material, G.material) || this.defaultContactMaterial : this.defaultContactMaterial;
                    var Y = W.friction
                      , J = A;
                    J.set(G.position.x + F.rj.x - E.position.x - F.ri.x, G.position.y + F.rj.y - E.position.y - F.ri.y, G.position.z + F.rj.z - E.position.z - F.ri.z);
                    var K = J.dot(F.ni);
                    if (0 > K) {
                        if (F.enabled = E.collisionResponse && G.collisionResponse && q.collisionResponse && X.collisionResponse,
                        F.restitution = W.restitution,
                        F.penetration = K,
                        F.setSpookParams(W.contactEquationStiffness, W.contactEquationRelaxation, e),
                        c.addEquation(F),
                        Y > 0) {
                            var Z = Y * v
                              , Q = E.invMass + G.invMass;
                            Q > 0 && (Q = 1 / Q);
                            var et = m
                              , tt = et.length ? et.pop() : new s(E,G,Z * Q)
                              , it = et.length ? et.pop() : new s(E,G,Z * Q);
                            this.frictionEquations.push(tt),
                            this.frictionEquations.push(it),
                            tt.bi = it.bi = E,
                            tt.bj = it.bj = G,
                            tt.minForce = it.minForce = -Z * Q,
                            tt.maxForce = it.maxForce = Z * Q,
                            tt.ri.copy(F.ri),
                            tt.rj.copy(F.rj),
                            it.ri.copy(F.ri),
                            it.rj.copy(F.rj),
                            F.ni.tangents(tt.t, it.t),
                            tt.setSpookParams(W.frictionEquationStiffness, W.frictionEquationRelaxation, e),
                            it.setSpookParams(W.frictionEquationStiffness, W.frictionEquationRelaxation, e),
                            tt.enabled = it.enabled = F.enabled,
                            c.addEquation(tt),
                            c.addEquation(it)
                        }
                        if (E.allowSleep && E.type === p.DYNAMIC && E.sleepState === p.SLEEPING && G.sleepState === p.AWAKE && G.type !== p.STATIC) {
                            var nt = G.velocity.norm2() + G.angularVelocity.norm2()
                              , rt = Math.pow(G.sleepSpeedLimit, 2);
                            nt >= 2 * rt && (E._wakeUpAfterNarrowphase = !0)
                        }
                        if (G.allowSleep && G.type === p.DYNAMIC && G.sleepState === p.SLEEPING && E.sleepState === p.AWAKE && E.type !== p.STATIC) {
                            var ot = E.velocity.norm2() + E.angularVelocity.norm2()
                              , at = Math.pow(E.sleepSpeedLimit, 2);
                            ot >= 2 * at && (G._wakeUpAfterNarrowphase = !0)
                        }
                        this.collisionMatrix.set(E, G, !0),
                        this.collisionMatrix.get(E, G) !== this.collisionMatrixPrevious.get(E, G) && (C.body = G,
                        C.contact = F,
                        E.dispatchEvent(C),
                        C.body = E,
                        G.dispatchEvent(C))
                    }
                }
                for (h && (u.makeContactConstraints = performance.now() - t,
                t = performance.now()),
                x = 0; x !== a; x++) {
                    var E = l[x];
                    E._wakeUpAfterNarrowphase && (E.wakeUp(),
                    E._wakeUpAfterNarrowphase = !1)
                }
                var I = g.length;
                for (x = 0; x !== I; x++) {
                    var F = g[x];
                    F.update();
                    for (var B = 0, st = F.equations.length; B !== st; B++) {
                        var lt = F.equations[B];
                        c.addEquation(lt)
                    }
                }
                c.solve(e, this),
                h && (u.solve = performance.now() - t),
                c.removeAllEquations();
                var ct = Math.pow;
                for (x = 0; x !== a; x++) {
                    var E = l[x];
                    if (E.type & f) {
                        var dt = ct(1 - E.linearDamping, e)
                          , ht = E.velocity;
                        ht.mult(dt, ht);
                        var ut = E.angularVelocity;
                        if (ut) {
                            var pt = ct(1 - E.angularDamping, e);
                            ut.mult(pt, ut)
                        }
                    }
                }
                for (this.dispatchEvent(T),
                x = 0; x !== a; x++) {
                    var E = l[x];
                    E.preStep && E.preStep.call(E)
                }
                h && (t = performance.now());
                var ft = H
                  , gt = P
                  , mt = this.stepnumber
                  , vt = p.DYNAMIC | p.KINEMATIC
                  , yt = mt % (this.quatNormalizeSkip + 1) === 0
                  , bt = this.quatNormalizeFast
                  , wt = .5 * e
                  , xt = n.types.PLANE
                  , Et = n.types.CONVEXPOLYHEDRON;
                for (x = 0; x !== a; x++) {
                    var _t = l[x]
                      , Tt = _t.shape
                      , Ct = _t.force
                      , Rt = _t.torque;
                    if (_t.type & vt && _t.sleepState !== p.SLEEPING) {
                        var St = _t.velocity
                          , kt = _t.angularVelocity
                          , Mt = _t.position
                          , At = _t.quaternion
                          , Ht = _t.invMass
                          , Pt = _t.invInertiaWorld;
                        if (St.x += Ct.x * Ht * e,
                        St.y += Ct.y * Ht * e,
                        St.z += Ct.z * Ht * e,
                        _t.angularVelocity && (Pt.vmult(Rt, O),
                        O.mult(e, O),
                        O.vadd(kt, kt)),
                        Mt.x += St.x * e,
                        Mt.y += St.y * e,
                        Mt.z += St.z * e,
                        _t.angularVelocity && (ft.set(kt.x, kt.y, kt.z, 0),
                        ft.mult(At, gt),
                        At.x += wt * gt.x,
                        At.y += wt * gt.y,
                        At.z += wt * gt.z,
                        At.w += wt * gt.w,
                        yt && (bt ? At.normalizeFast() : At.normalize())),
                        _t.aabb && (_t.aabbNeedsUpdate = !0),
                        Tt)
                            switch (Tt.type) {
                            case xt:
                                Tt.worldNormalNeedsUpdate = !0;
                                break;
                            case Et:
                                Tt.worldFaceNormalsNeedsUpdate = !0,
                                Tt.worldVerticesNeedsUpdate = !0
                            }
                        _t.updateInertiaWorld && _t.updateInertiaWorld()
                    }
                    _t.force.set(0, 0, 0),
                    _t.torque && _t.torque.set(0, 0, 0)
                }
                for (this.broadphase.dirty = !0,
                h && (u.integrate = performance.now() - t),
                this.time += e,
                this.stepnumber += 1,
                this.dispatchEvent(_),
                x = 0; x !== a; x++) {
                    var E = l[x]
                      , Ot = E.postStep;
                    Ot && Ot.call(E)
                }
                if (this.allowSleep)
                    for (x = 0; x !== a; x++)
                        l[x].sleepTick(this.time)
            }
        }
        , {
            "../collision/AABB": 3,
            "../collision/ArrayCollisionMatrix": 4,
            "../collision/NaiveBroadphase": 7,
            "../collision/Ray": 9,
            "../collision/RaycastResult": 10,
            "../equations/ContactEquation": 16,
            "../equations/FrictionEquation": 18,
            "../material/ContactMaterial": 21,
            "../material/Material": 22,
            "../math/Quaternion": 25,
            "../math/Vec3": 27,
            "../objects/Body": 28,
            "../shapes/Shape": 40,
            "../solver/GSSolver": 42,
            "../utils/EventTarget": 45,
            "../utils/TupleDictionary": 47,
            "../utils/Vec3Pool": 49,
            "./Narrowphase": 50
        }]
    }, {}, [2])(2)
});
var dbits, canary = 0xdeadbeefcafe, j_lm = 15715070 == (16777215 & canary);
j_lm && "Microsoft Internet Explorer" == navigator.appName ? (BigInteger.prototype.am = am2,
dbits = 30) : j_lm && "Netscape" != navigator.appName ? (BigInteger.prototype.am = am1,
dbits = 26) : (BigInteger.prototype.am = am3,
dbits = 28),
BigInteger.prototype.DB = dbits,
BigInteger.prototype.DM = (1 << dbits) - 1,
BigInteger.prototype.DV = 1 << dbits;
var BI_FP = 52;
BigInteger.prototype.FV = Math.pow(2, BI_FP),
BigInteger.prototype.F1 = BI_FP - dbits,
BigInteger.prototype.F2 = 2 * dbits - BI_FP;
var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz", BI_RC = new Array, rr, vv;
for (rr = "0".charCodeAt(0),
vv = 0; 9 >= vv; ++vv)
    BI_RC[rr++] = vv;
for (rr = "a".charCodeAt(0),
vv = 10; 36 > vv; ++vv)
    BI_RC[rr++] = vv;
for (rr = "A".charCodeAt(0),
vv = 10; 36 > vv; ++vv)
    BI_RC[rr++] = vv;
Classic.prototype.convert = cConvert,
Classic.prototype.revert = cRevert,
Classic.prototype.reduce = cReduce,
Classic.prototype.mulTo = cMulTo,
Classic.prototype.sqrTo = cSqrTo,
Montgomery.prototype.convert = montConvert,
Montgomery.prototype.revert = montRevert,
Montgomery.prototype.reduce = montReduce,
Montgomery.prototype.mulTo = montMulTo,
Montgomery.prototype.sqrTo = montSqrTo,
BigInteger.prototype.copyTo = bnpCopyTo,
BigInteger.prototype.fromInt = bnpFromInt,
BigInteger.prototype.fromString = bnpFromString,
BigInteger.prototype.clamp = bnpClamp,
BigInteger.prototype.dlShiftTo = bnpDLShiftTo,
BigInteger.prototype.drShiftTo = bnpDRShiftTo,
BigInteger.prototype.lShiftTo = bnpLShiftTo,
BigInteger.prototype.rShiftTo = bnpRShiftTo,
BigInteger.prototype.subTo = bnpSubTo,
BigInteger.prototype.multiplyTo = bnpMultiplyTo,
BigInteger.prototype.squareTo = bnpSquareTo,
BigInteger.prototype.divRemTo = bnpDivRemTo,
BigInteger.prototype.invDigit = bnpInvDigit,
BigInteger.prototype.isEven = bnpIsEven,
BigInteger.prototype.exp = bnpExp,
BigInteger.prototype.toString = bnToString,
BigInteger.prototype.negate = bnNegate,
BigInteger.prototype.abs = bnAbs,
BigInteger.prototype.compareTo = bnCompareTo,
BigInteger.prototype.bitLength = bnBitLength,
BigInteger.prototype.mod = bnMod,
BigInteger.prototype.modPowInt = bnModPowInt,
BigInteger.ZERO = nbv(0),
BigInteger.ONE = nbv(1),
NullExp.prototype.convert = nNop,
NullExp.prototype.revert = nNop,
NullExp.prototype.mulTo = nMulTo,
NullExp.prototype.sqrTo = nSqrTo,
Barrett.prototype.convert = barrettConvert,
Barrett.prototype.revert = barrettRevert,
Barrett.prototype.reduce = barrettReduce,
Barrett.prototype.mulTo = barrettMulTo,
Barrett.prototype.sqrTo = barrettSqrTo;
var lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997]
  , lplim = (1 << 26) / lowprimes[lowprimes.length - 1];
BigInteger.prototype.chunkSize = bnpChunkSize,
BigInteger.prototype.toRadix = bnpToRadix,
BigInteger.prototype.fromRadix = bnpFromRadix,
BigInteger.prototype.fromNumber = bnpFromNumber,
BigInteger.prototype.bitwiseTo = bnpBitwiseTo,
BigInteger.prototype.changeBit = bnpChangeBit,
BigInteger.prototype.addTo = bnpAddTo,
BigInteger.prototype.dMultiply = bnpDMultiply,
BigInteger.prototype.dAddOffset = bnpDAddOffset,
BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo,
BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo,
BigInteger.prototype.modInt = bnpModInt,
BigInteger.prototype.millerRabin = bnpMillerRabin,
BigInteger.prototype.clone = bnClone,
BigInteger.prototype.intValue = bnIntValue,
BigInteger.prototype.byteValue = bnByteValue,
BigInteger.prototype.shortValue = bnShortValue,
BigInteger.prototype.signum = bnSigNum,
BigInteger.prototype.toByteArray = bnToByteArray,
BigInteger.prototype.equals = bnEquals,
BigInteger.prototype.min = bnMin,
BigInteger.prototype.max = bnMax,
BigInteger.prototype.and = bnAnd,
BigInteger.prototype.or = bnOr,
BigInteger.prototype.xor = bnXor,
BigInteger.prototype.andNot = bnAndNot,
BigInteger.prototype.not = bnNot,
BigInteger.prototype.shiftLeft = bnShiftLeft,
BigInteger.prototype.shiftRight = bnShiftRight,
BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit,
BigInteger.prototype.bitCount = bnBitCount,
BigInteger.prototype.testBit = bnTestBit,
BigInteger.prototype.setBit = bnSetBit,
BigInteger.prototype.clearBit = bnClearBit,
BigInteger.prototype.flipBit = bnFlipBit,
BigInteger.prototype.add = bnAdd,
BigInteger.prototype.subtract = bnSubtract,
BigInteger.prototype.multiply = bnMultiply,
BigInteger.prototype.divide = bnDivide,
BigInteger.prototype.remainder = bnRemainder,
BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder,
BigInteger.prototype.modPow = bnModPow,
BigInteger.prototype.modInverse = bnModInverse,
BigInteger.prototype.pow = bnPow,
BigInteger.prototype.gcd = bnGCD,
BigInteger.prototype.isProbablePrime = bnIsProbablePrime,
BigInteger.prototype.square = bnSquare;
var SHA1_SIZE = 20;
RSAKey.prototype.doPublic = RSADoPublic,
RSAKey.prototype.setPublic = RSASetPublic,
RSAKey.prototype.encrypt = RSAEncrypt,
RSAKey.prototype.encryptOAEP = RSAEncryptOAEP,
RSAKey.prototype.type = "RSA";
var SHA1_SIZE = 20;
RSAKey.prototype.doPrivate = RSADoPrivate,
RSAKey.prototype.setPrivate = RSASetPrivate,
RSAKey.prototype.setPrivateEx = RSASetPrivateEx,
RSAKey.prototype.generate = RSAGenerate,
RSAKey.prototype.decrypt = RSADecrypt,
RSAKey.prototype.decryptOAEP = RSADecryptOAEP;
var b64map = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
  , b64pad = "="
  , CryptoJS = CryptoJS || function(e, t) {
    var i = {}
      , n = i.lib = {}
      , r = n.Base = function() {
        function e() {}
        return {
            extend: function(t) {
                e.prototype = this;
                var i = new e;
                return t && i.mixIn(t),
                i.hasOwnProperty("init") || (i.init = function() {
                    i.$super.init.apply(this, arguments)
                }
                ),
                i.init.prototype = i,
                i.$super = this,
                i
            },
            create: function() {
                var e = this.extend();
                return e.init.apply(e, arguments),
                e
            },
            init: function() {},
            mixIn: function(e) {
                for (var t in e)
                    e.hasOwnProperty(t) && (this[t] = e[t]);
                e.hasOwnProperty("toString") && (this.toString = e.toString)
            },
            clone: function() {
                return this.init.prototype.extend(this)
            }
        }
    }()
      , o = n.WordArray = r.extend({
        init: function(e, i) {
            e = this.words = e || [],
            this.sigBytes = i != t ? i : 4 * e.length
        },
        toString: function(e) {
            return (e || s).stringify(this)
        },
        concat: function(e) {
            var t = this.words
              , i = e.words
              , n = this.sigBytes
              , r = e.sigBytes;
            if (this.clamp(),
            n % 4)
                for (var o = 0; r > o; o++) {
                    var a = i[o >>> 2] >>> 24 - o % 4 * 8 & 255;
                    t[n + o >>> 2] |= a << 24 - (n + o) % 4 * 8
                }
            else if (i.length > 65535)
                for (var o = 0; r > o; o += 4)
                    t[n + o >>> 2] = i[o >>> 2];
            else
                t.push.apply(t, i);
            return this.sigBytes += r,
            this
        },
        clamp: function() {
            var t = this.words
              , i = this.sigBytes;
            t[i >>> 2] &= 4294967295 << 32 - i % 4 * 8,
            t.length = e.ceil(i / 4)
        },
        clone: function() {
            var e = r.clone.call(this);
            return e.words = this.words.slice(0),
            e
        },
        random: function(t) {
            for (var i = [], n = 0; t > n; n += 4)
                i.push(4294967296 * e.random() | 0);
            return new o.init(i,t)
        }
    })
      , a = i.enc = {}
      , s = a.Hex = {
        stringify: function(e) {
            for (var t = e.words, i = e.sigBytes, n = [], r = 0; i > r; r++) {
                var o = t[r >>> 2] >>> 24 - r % 4 * 8 & 255;
                n.push((o >>> 4).toString(16)),
                n.push((15 & o).toString(16))
            }
            return n.join("")
        },
        parse: function(e) {
            for (var t = e.length, i = [], n = 0; t > n; n += 2)
                i[n >>> 3] |= parseInt(e.substr(n, 2), 16) << 24 - n % 8 * 4;
            return new o.init(i,t / 2)
        }
    }
      , l = a.Latin1 = {
        stringify: function(e) {
            for (var t = e.words, i = e.sigBytes, n = [], r = 0; i > r; r++) {
                var o = t[r >>> 2] >>> 24 - r % 4 * 8 & 255;
                n.push(String.fromCharCode(o))
            }
            return n.join("")
        },
        parse: function(e) {
            for (var t = e.length, i = [], n = 0; t > n; n++)
                i[n >>> 2] |= (255 & e.charCodeAt(n)) << 24 - n % 4 * 8;
            return new o.init(i,t)
        }
    }
      , c = a.Utf8 = {
        stringify: function(e) {
            try {
                return decodeURIComponent(escape(l.stringify(e)))
            } catch (t) {
                throw new Error("Malformed UTF-8 data")
            }
        },
        parse: function(e) {
            return l.parse(unescape(encodeURIComponent(e)))
        }
    }
      , d = n.BufferedBlockAlgorithm = r.extend({
        reset: function() {
            this._data = new o.init,
            this._nDataBytes = 0
        },
        _append: function(e) {
            "string" == typeof e && (e = c.parse(e)),
            this._data.concat(e),
            this._nDataBytes += e.sigBytes
        },
        _process: function(t) {
            var i = this._data
              , n = i.words
              , r = i.sigBytes
              , a = this.blockSize
              , s = 4 * a
              , l = r / s;
            l = t ? e.ceil(l) : e.max((0 | l) - this._minBufferSize, 0);
            var c = l * a
              , d = e.min(4 * c, r);
            if (c) {
                for (var h = 0; c > h; h += a)
                    this._doProcessBlock(n, h);
                var u = n.splice(0, c);
                i.sigBytes -= d
            }
            return new o.init(u,d)
        },
        clone: function() {
            var e = r.clone.call(this);
            return e._data = this._data.clone(),
            e
        },
        _minBufferSize: 0
    })
      , h = (n.Hasher = d.extend({
        cfg: r.extend(),
        init: function(e) {
            this.cfg = this.cfg.extend(e),
            this.reset()
        },
        reset: function() {
            d.reset.call(this),
            this._doReset()
        },
        update: function(e) {
            return this._append(e),
            this._process(),
            this
        },
        finalize: function(e) {
            e && this._append(e);
            var t = this._doFinalize();
            return t
        },
        blockSize: 16,
        _createHelper: function(e) {
            return function(t, i) {
                return new e.init(i).finalize(t)
            }
        },
        _createHmacHelper: function(e) {
            return function(t, i) {
                return new h.HMAC.init(e,i).finalize(t)
            }
        }
    }),
    i.algo = {});
    return i
}(Math);
!function() {
    var e = CryptoJS
      , t = e.lib
      , i = t.WordArray
      , n = t.Hasher
      , r = e.algo
      , o = []
      , a = r.SHA1 = n.extend({
        _doReset: function() {
            this._hash = new i.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520])
        },
        _doProcessBlock: function(e, t) {
            for (var i = this._hash.words, n = i[0], r = i[1], a = i[2], s = i[3], l = i[4], c = 0; 80 > c; c++) {
                if (16 > c)
                    o[c] = 0 | e[t + c];
                else {
                    var d = o[c - 3] ^ o[c - 8] ^ o[c - 14] ^ o[c - 16];
                    o[c] = d << 1 | d >>> 31
                }
                var h = (n << 5 | n >>> 27) + l + o[c];
                h += 20 > c ? (r & a | ~r & s) + 1518500249 : 40 > c ? (r ^ a ^ s) + 1859775393 : 60 > c ? (r & a | r & s | a & s) - 1894007588 : (r ^ a ^ s) - 899497514,
                l = s,
                s = a,
                a = r << 30 | r >>> 2,
                r = n,
                n = h
            }
            i[0] = i[0] + n | 0,
            i[1] = i[1] + r | 0,
            i[2] = i[2] + a | 0,
            i[3] = i[3] + s | 0,
            i[4] = i[4] + l | 0
        },
        _doFinalize: function() {
            var e = this._data
              , t = e.words
              , i = 8 * this._nDataBytes
              , n = 8 * e.sigBytes;
            return t[n >>> 5] |= 128 << 24 - n % 32,
            t[(n + 64 >>> 9 << 4) + 14] = Math.floor(i / 4294967296),
            t[(n + 64 >>> 9 << 4) + 15] = i,
            e.sigBytes = 4 * t.length,
            this._process(),
            this._hash
        },
        clone: function() {
            var e = n.clone.call(this);
            return e._hash = this._hash.clone(),
            e
        }
    });
    e.SHA1 = n._createHelper(a),
    e.HmacSHA1 = n._createHmacHelper(a)
}(),
RSAKey.prototype.readPrivateKeyFromPEMString = _rsapem_readPrivateKeyFromPEMString,
RSAKey.prototype.readPrivateKeyFromASN1HexString = _rsapem_readPrivateKeyFromASN1HexString;
var _RE_HEXDECONLY = new RegExp("");
_RE_HEXDECONLY.compile("[^0-9a-f]", "gi"),
RSAKey.prototype.signWithMessageHash = _rsasign_signWithMessageHash,
RSAKey.prototype.signString = _rsasign_signString,
RSAKey.prototype.signStringWithSHA1 = _rsasign_signStringWithSHA1,
RSAKey.prototype.signStringWithSHA256 = _rsasign_signStringWithSHA256,
RSAKey.prototype.sign = _rsasign_signString,
RSAKey.prototype.signWithSHA1 = _rsasign_signStringWithSHA1,
RSAKey.prototype.signWithSHA256 = _rsasign_signStringWithSHA256,
RSAKey.prototype.signWithMessageHashPSS = _rsasign_signWithMessageHashPSS,
RSAKey.prototype.signStringPSS = _rsasign_signStringPSS,
RSAKey.prototype.signPSS = _rsasign_signStringPSS,
RSAKey.SALT_LEN_HLEN = -1,
RSAKey.SALT_LEN_MAX = -2,
RSAKey.prototype.verifyWithMessageHash = _rsasign_verifyWithMessageHash,
RSAKey.prototype.verifyString = _rsasign_verifyString,
RSAKey.prototype.verifyHexSignatureForMessage = _rsasign_verifyHexSignatureForMessage,
RSAKey.prototype.verify = _rsasign_verifyString,
RSAKey.prototype.verifyHexSignatureForByteArrayMessage = _rsasign_verifyHexSignatureForMessage,
RSAKey.prototype.verifyWithMessageHashPSS = _rsasign_verifyWithMessageHashPSS,
RSAKey.prototype.verifyStringPSS = _rsasign_verifyStringPSS,
RSAKey.prototype.verifyPSS = _rsasign_verifyStringPSS,
RSAKey.SALT_LEN_RECOVER = -2;
var ASN1HEX = new function() {
    this.getByteLengthOfL_AtObj = function(e, t) {
        if ("8" != e.substring(t + 2, t + 3))
            return 1;
        var i = parseInt(e.substring(t + 3, t + 4));
        return 0 == i ? -1 : i > 0 && 10 > i ? i + 1 : -2
    }
    ,
    this.getHexOfL_AtObj = function(e, t) {
        var i = this.getByteLengthOfL_AtObj(e, t);
        return 1 > i ? "" : e.substring(t + 2, t + 2 + 2 * i)
    }
    ,
    this.getIntOfL_AtObj = function(e, t) {
        var i = this.getHexOfL_AtObj(e, t);
        if ("" == i)
            return -1;
        var n;
        return n = parseInt(i.substring(0, 1)) < 8 ? new BigInteger(i,16) : new BigInteger(i.substring(2),16),
        n.intValue()
    }
    ,
    this.getStartPosOfV_AtObj = function(e, t) {
        var i = this.getByteLengthOfL_AtObj(e, t);
        return 0 > i ? i : t + 2 * (i + 1)
    }
    ,
    this.getHexOfV_AtObj = function(e, t) {
        var i = this.getStartPosOfV_AtObj(e, t)
          , n = this.getIntOfL_AtObj(e, t);
        return e.substring(i, i + 2 * n)
    }
    ,
    this.getHexOfTLV_AtObj = function(e, t) {
        var i = e.substr(t, 2)
          , n = this.getHexOfL_AtObj(e, t)
          , r = this.getHexOfV_AtObj(e, t);
        return i + n + r
    }
    ,
    this.getPosOfNextSibling_AtObj = function(e, t) {
        var i = this.getStartPosOfV_AtObj(e, t)
          , n = this.getIntOfL_AtObj(e, t);
        return i + 2 * n
    }
    ,
    this.getPosArrayOfChildren_AtObj = function(e, t) {
        var i = new Array
          , n = this.getStartPosOfV_AtObj(e, t);
        i.push(n);
        for (var r = this.getIntOfL_AtObj(e, t), o = n, a = 0; ; ) {
            var s = this.getPosOfNextSibling_AtObj(e, o);
            if (null == s || s - n >= 2 * r)
                break;
            if (a >= 200)
                break;
            i.push(s),
            o = s,
            a++
        }
        return i
    }
    ,
    this.getNthChildIndex_AtObj = function(e, t, i) {
        var n = this.getPosArrayOfChildren_AtObj(e, t);
        return n[i]
    }
    ,
    this.getDecendantIndexByNthList = function(e, t, i) {
        if (0 == i.length)
            return t;
        var n = i.shift()
          , r = this.getPosArrayOfChildren_AtObj(e, t);
        return this.getDecendantIndexByNthList(e, r[n], i)
    }
    ,
    this.getDecendantHexTLVByNthList = function(e, t, i) {
        var n = this.getDecendantIndexByNthList(e, t, i);
        return this.getHexOfTLV_AtObj(e, n)
    }
    ,
    this.getDecendantHexVByNthList = function(e, t, i) {
        var n = this.getDecendantIndexByNthList(e, t, i);
        return this.getHexOfV_AtObj(e, n)
    }
}
;
ASN1HEX.getVbyList = function(e, t, i, n) {
    var r = this.getDecendantIndexByNthList(e, t, i);
    if (void 0 === r)
        throw "can't find nthList object";
    if (void 0 !== n && e.substr(r, 2) != n)
        throw "checking tag doesn't match: " + e.substr(r, 2) + "!=" + n;
    return this.getHexOfV_AtObj(e, r)
}
,
X509.pemToBase64 = function(e) {
    var t = e;
    return t = t.replace("-----BEGIN CERTIFICATE-----", ""),
    t = t.replace("-----END CERTIFICATE-----", ""),
    t = t.replace(/[ \n]+/g, "")
}
,
X509.pemToHex = function(e) {
    var t = X509.pemToBase64(e)
      , i = b64tohex(t);
    return i
}
,
X509.getSubjectPublicKeyPosFromCertHex = function(e) {
    var t = X509.getSubjectPublicKeyInfoPosFromCertHex(e);
    if (-1 == t)
        return -1;
    var i = ASN1HEX.getPosArrayOfChildren_AtObj(e, t);
    if (2 != i.length)
        return -1;
    var n = i[1];
    if ("03" != e.substring(n, n + 2))
        return -1;
    var r = ASN1HEX.getStartPosOfV_AtObj(e, n);
    return "00" != e.substring(r, r + 2) ? -1 : r + 2
}
,
X509.getSubjectPublicKeyInfoPosFromCertHex = function(e) {
    var t = ASN1HEX.getStartPosOfV_AtObj(e, 0)
      , i = ASN1HEX.getPosArrayOfChildren_AtObj(e, t);
    return i.length < 1 ? -1 : "a003020102" == e.substring(i[0], i[0] + 10) ? i.length < 6 ? -1 : i[6] : i.length < 5 ? -1 : i[5]
}
,
X509.getPublicKeyHexArrayFromCertHex = function(e) {
    var t = X509.getSubjectPublicKeyPosFromCertHex(e)
      , i = ASN1HEX.getPosArrayOfChildren_AtObj(e, t);
    if (2 != i.length)
        return [];
    var n = ASN1HEX.getHexOfV_AtObj(e, i[0])
      , r = ASN1HEX.getHexOfV_AtObj(e, i[1]);
    return null != n && null != r ? [n, r] : []
}
,
X509.getHexTbsCertificateFromCert = function(e) {
    var t = ASN1HEX.getStartPosOfV_AtObj(e, 0);
    return t
}
,
X509.getPublicKeyHexArrayFromCertPEM = function(e) {
    var t = X509.pemToHex(e)
      , i = X509.getPublicKeyHexArrayFromCertHex(t);
    return i
}
,
X509.hex2dn = function(e) {
    for (var t = "", i = ASN1HEX.getPosArrayOfChildren_AtObj(e, 0), n = 0; n < i.length; n++) {
        var r = ASN1HEX.getHexOfTLV_AtObj(e, i[n]);
        t = t + "/" + X509.hex2rdn(r)
    }
    return t
}
,
X509.hex2rdn = function(e) {
    var t = ASN1HEX.getDecendantHexTLVByNthList(e, 0, [0, 0])
      , i = ASN1HEX.getDecendantHexVByNthList(e, 0, [0, 1])
      , n = "";
    try {
        n = X509.DN_ATTRHEX[t]
    } catch (r) {
        n = t
    }
    i = i.replace(/(..)/g, "%$1");
    var o = decodeURIComponent(i);
    return n + "=" + o
}
,
X509.DN_ATTRHEX = {
    "0603550406": "C",
    "060355040a": "O",
    "060355040b": "OU",
    "0603550403": "CN",
    "0603550405": "SN",
    "0603550408": "ST",
    "0603550407": "L"
},
X509.getPublicKeyFromCertPEM = function(e) {
    var t = X509.getPublicKeyInfoPropOfCertPEM(e);
    if ("2a864886f70d010101" == t.algoid) {
        var i = KEYUTIL.parsePublicRawRSAKeyHex(t.keyhex)
          , n = new RSAKey;
        return n.setPublic(i.n, i.e),
        n
    }
    if ("2a8648ce3d0201" == t.algoid) {
        var r = KJUR.crypto.OID.oidhex2name[t.algparam]
          , n = new KJUR.crypto.ECDSA({
            curve: r,
            info: t.keyhex
        });
        return n.setPublicKeyHex(t.keyhex),
        n
    }
    if ("2a8648ce380401" == t.algoid) {
        var o = ASN1HEX.getVbyList(t.algparam, 0, [0], "02")
          , a = ASN1HEX.getVbyList(t.algparam, 0, [1], "02")
          , s = ASN1HEX.getVbyList(t.algparam, 0, [2], "02")
          , l = ASN1HEX.getHexOfV_AtObj(t.keyhex, 0);
        l = l.substr(2);
        var n = new KJUR.crypto.DSA;
        return n.setPublic(new BigInteger(o,16), new BigInteger(a,16), new BigInteger(s,16), new BigInteger(l,16)),
        n
    }
    throw "unsupported key"
}
,
X509.getPublicKeyInfoPropOfCertPEM = function(e) {
    var t = {};
    t.algparam = null ;
    var i = X509.pemToHex(e)
      , n = ASN1HEX.getPosArrayOfChildren_AtObj(i, 0);
    if (3 != n.length)
        throw "malformed X.509 certificate PEM (code:001)";
    if ("30" != i.substr(n[0], 2))
        throw "malformed X.509 certificate PEM (code:002)";
    var r = ASN1HEX.getPosArrayOfChildren_AtObj(i, n[0]);
    if (r.length < 7)
        throw "malformed X.509 certificate PEM (code:003)";
    var o = ASN1HEX.getPosArrayOfChildren_AtObj(i, r[6]);
    if (2 != o.length)
        throw "malformed X.509 certificate PEM (code:004)";
    var a = ASN1HEX.getPosArrayOfChildren_AtObj(i, o[0]);
    if (2 != a.length)
        throw "malformed X.509 certificate PEM (code:005)";
    if (t.algoid = ASN1HEX.getHexOfV_AtObj(i, a[0]),
    "06" == i.substr(a[1], 2) ? t.algparam = ASN1HEX.getHexOfV_AtObj(i, a[1]) : "30" == i.substr(a[1], 2) && (t.algparam = ASN1HEX.getHexOfTLV_AtObj(i, a[1])),
    "03" != i.substr(o[1], 2))
        throw "malformed X.509 certificate PEM (code:006)";
    var s = ASN1HEX.getHexOfV_AtObj(i, o[1]);
    return t.keyhex = s.substr(2),
    t
}
,
"undefined" != typeof KJUR && KJUR || (KJUR = {}),
"undefined" != typeof KJUR.crypto && KJUR.crypto || (KJUR.crypto = {}),
KJUR.crypto.Util = new function() {
    this.DIGESTINFOHEAD = {
        sha1: "3021300906052b0e03021a05000414",
        sha224: "302d300d06096086480165030402040500041c",
        sha256: "3031300d060960864801650304020105000420",
        sha384: "3041300d060960864801650304020205000430",
        sha512: "3051300d060960864801650304020305000440",
        md2: "3020300c06082a864886f70d020205000410",
        md5: "3020300c06082a864886f70d020505000410",
        ripemd160: "3021300906052b2403020105000414"
    },
    this.DEFAULTPROVIDER = {
        md5: "cryptojs",
        sha1: "cryptojs",
        sha224: "cryptojs",
        sha256: "cryptojs",
        sha384: "cryptojs",
        sha512: "cryptojs",
        ripemd160: "cryptojs",
        hmacmd5: "cryptojs",
        hmacsha1: "cryptojs",
        hmacsha224: "cryptojs",
        hmacsha256: "cryptojs",
        hmacsha384: "cryptojs",
        hmacsha512: "cryptojs",
        hmacripemd160: "cryptojs",
        MD5withRSA: "cryptojs/jsrsa",
        SHA1withRSA: "cryptojs/jsrsa",
        SHA224withRSA: "cryptojs/jsrsa",
        SHA256withRSA: "cryptojs/jsrsa",
        SHA384withRSA: "cryptojs/jsrsa",
        SHA512withRSA: "cryptojs/jsrsa",
        RIPEMD160withRSA: "cryptojs/jsrsa",
        MD5withECDSA: "cryptojs/jsrsa",
        SHA1withECDSA: "cryptojs/jsrsa",
        SHA224withECDSA: "cryptojs/jsrsa",
        SHA256withECDSA: "cryptojs/jsrsa",
        SHA384withECDSA: "cryptojs/jsrsa",
        SHA512withECDSA: "cryptojs/jsrsa",
        RIPEMD160withECDSA: "cryptojs/jsrsa",
        SHA1withDSA: "cryptojs/jsrsa",
        SHA224withDSA: "cryptojs/jsrsa",
        SHA256withDSA: "cryptojs/jsrsa",
        MD5withRSAandMGF1: "cryptojs/jsrsa",
        SHA1withRSAandMGF1: "cryptojs/jsrsa",
        SHA224withRSAandMGF1: "cryptojs/jsrsa",
        SHA256withRSAandMGF1: "cryptojs/jsrsa",
        SHA384withRSAandMGF1: "cryptojs/jsrsa",
        SHA512withRSAandMGF1: "cryptojs/jsrsa",
        RIPEMD160withRSAandMGF1: "cryptojs/jsrsa"
    },
    this.CRYPTOJSMESSAGEDIGESTNAME = {
        md5: "CryptoJS.algo.MD5",
        sha1: "CryptoJS.algo.SHA1",
        sha224: "CryptoJS.algo.SHA224",
        sha256: "CryptoJS.algo.SHA256",
        sha384: "CryptoJS.algo.SHA384",
        sha512: "CryptoJS.algo.SHA512",
        ripemd160: "CryptoJS.algo.RIPEMD160"
    },
    this.getDigestInfoHex = function(e, t) {
        if ("undefined" == typeof this.DIGESTINFOHEAD[t])
            throw "alg not supported in Util.DIGESTINFOHEAD: " + t;
        return this.DIGESTINFOHEAD[t] + e
    }
    ,
    this.getPaddedDigestInfoHex = function(e, t, i) {
        var n = this.getDigestInfoHex(e, t)
          , r = i / 4;
        if (n.length + 22 > r)
            throw "key is too short for SigAlg: keylen=" + i + "," + t;
        for (var o = "0001", a = "00" + n, s = "", l = r - o.length - a.length, c = 0; l > c; c += 2)
            s += "ff";
        var d = o + s + a;
        return d
    }
    ,
    this.hashString = function(e, t) {
        var i = new KJUR.crypto.MessageDigest({
            alg: t
        });
        return i.digestString(e)
    }
    ,
    this.hashHex = function(e, t) {
        var i = new KJUR.crypto.MessageDigest({
            alg: t
        });
        return i.digestHex(e)
    }
    ,
    this.sha1 = function(e) {
        var t = new KJUR.crypto.MessageDigest({
            alg: "sha1",
            prov: "cryptojs"
        });
        return t.digestString(e)
    }
    ,
    this.sha256 = function(e) {
        var t = new KJUR.crypto.MessageDigest({
            alg: "sha256",
            prov: "cryptojs"
        });
        return t.digestString(e)
    }
    ,
    this.sha256Hex = function(e) {
        var t = new KJUR.crypto.MessageDigest({
            alg: "sha256",
            prov: "cryptojs"
        });
        return t.digestHex(e)
    }
    ,
    this.sha512 = function(e) {
        var t = new KJUR.crypto.MessageDigest({
            alg: "sha512",
            prov: "cryptojs"
        });
        return t.digestString(e)
    }
    ,
    this.sha512Hex = function(e) {
        var t = new KJUR.crypto.MessageDigest({
            alg: "sha512",
            prov: "cryptojs"
        });
        return t.digestHex(e)
    }
    ,
    this.md5 = function(e) {
        var t = new KJUR.crypto.MessageDigest({
            alg: "md5",
            prov: "cryptojs"
        });
        return t.digestString(e)
    }
    ,
    this.ripemd160 = function(e) {
        var t = new KJUR.crypto.MessageDigest({
            alg: "ripemd160",
            prov: "cryptojs"
        });
        return t.digestString(e)
    }
    ,
    this.getCryptoJSMDByName = function() {}
}
,
KJUR.crypto.MessageDigest = function(params) {
    var md = null
      , algName = null
      , provName = null ;
    this.setAlgAndProvider = function(alg, prov) {
        if (null != alg && void 0 === prov && (prov = KJUR.crypto.Util.DEFAULTPROVIDER[alg]),
        -1 != ":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(alg) && "cryptojs" == prov) {
            try {
                this.md = eval(KJUR.crypto.Util.CRYPTOJSMESSAGEDIGESTNAME[alg]).create()
            } catch (ex) {
                throw "setAlgAndProvider hash alg set fail alg=" + alg + "/" + ex
            }
            this.updateString = function(e) {
                this.md.update(e)
            }
            ,
            this.updateHex = function(e) {
                var t = CryptoJS.enc.Hex.parse(e);
                this.md.update(t)
            }
            ,
            this.digest = function() {
                var e = this.md.finalize();
                return e.toString(CryptoJS.enc.Hex)
            }
            ,
            this.digestString = function(e) {
                return this.updateString(e),
                this.digest()
            }
            ,
            this.digestHex = function(e) {
                return this.updateHex(e),
                this.digest()
            }
        }
        if (-1 != ":sha256:".indexOf(alg) && "sjcl" == prov) {
            try {
                this.md = new sjcl.hash.sha256
            } catch (ex) {
                throw "setAlgAndProvider hash alg set fail alg=" + alg + "/" + ex
            }
            this.updateString = function(e) {
                this.md.update(e)
            }
            ,
            this.updateHex = function(e) {
                var t = sjcl.codec.hex.toBits(e);
                this.md.update(t)
            }
            ,
            this.digest = function() {
                var e = this.md.finalize();
                return sjcl.codec.hex.fromBits(e)
            }
            ,
            this.digestString = function(e) {
                return this.updateString(e),
                this.digest()
            }
            ,
            this.digestHex = function(e) {
                return this.updateHex(e),
                this.digest()
            }
        }
    }
    ,
    this.updateString = function() {
        throw "updateString(str) not supported for this alg/prov: " + this.algName + "/" + this.provName
    }
    ,
    this.updateHex = function() {
        throw "updateHex(hex) not supported for this alg/prov: " + this.algName + "/" + this.provName
    }
    ,
    this.digest = function() {
        throw "digest() not supported for this alg/prov: " + this.algName + "/" + this.provName
    }
    ,
    this.digestString = function() {
        throw "digestString(str) not supported for this alg/prov: " + this.algName + "/" + this.provName
    }
    ,
    this.digestHex = function() {
        throw "digestHex(hex) not supported for this alg/prov: " + this.algName + "/" + this.provName
    }
    ,
    void 0 !== params && void 0 !== params.alg && (this.algName = params.alg,
    void 0 === params.prov && (this.provName = KJUR.crypto.Util.DEFAULTPROVIDER[this.algName]),
    this.setAlgAndProvider(this.algName, this.provName))
}
,
KJUR.crypto.Mac = function(params) {
    var mac = null
      , pass = null
      , algName = null
      , provName = null
      , algProv = null ;
    this.setAlgAndProvider = function(alg, prov) {
        if (null == alg && (alg = "hmacsha1"),
        alg = alg.toLowerCase(),
        "hmac" != alg.substr(0, 4))
            throw "setAlgAndProvider unsupported HMAC alg: " + alg;
        void 0 === prov && (prov = KJUR.crypto.Util.DEFAULTPROVIDER[alg]),
        this.algProv = alg + "/" + prov;
        var hashAlg = alg.substr(4);
        if (-1 != ":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(hashAlg) && "cryptojs" == prov) {
            try {
                var mdObj = eval(KJUR.crypto.Util.CRYPTOJSMESSAGEDIGESTNAME[hashAlg]);
                this.mac = CryptoJS.algo.HMAC.create(mdObj, this.pass)
            } catch (ex) {
                throw "setAlgAndProvider hash alg set fail hashAlg=" + hashAlg + "/" + ex
            }
            this.updateString = function(e) {
                this.mac.update(e)
            }
            ,
            this.updateHex = function(e) {
                var t = CryptoJS.enc.Hex.parse(e);
                this.mac.update(t)
            }
            ,
            this.doFinal = function() {
                var e = this.mac.finalize();
                return e.toString(CryptoJS.enc.Hex)
            }
            ,
            this.doFinalString = function(e) {
                return this.updateString(e),
                this.doFinal()
            }
            ,
            this.doFinalHex = function(e) {
                return this.updateHex(e),
                this.doFinal()
            }
        }
    }
    ,
    this.updateString = function() {
        throw "updateString(str) not supported for this alg/prov: " + this.algProv
    }
    ,
    this.updateHex = function() {
        throw "updateHex(hex) not supported for this alg/prov: " + this.algProv
    }
    ,
    this.doFinal = function() {
        throw "digest() not supported for this alg/prov: " + this.algProv
    }
    ,
    this.doFinalString = function() {
        throw "digestString(str) not supported for this alg/prov: " + this.algProv
    }
    ,
    this.doFinalHex = function() {
        throw "digestHex(hex) not supported for this alg/prov: " + this.algProv
    }
    ,
    void 0 !== params && (void 0 !== params.pass && (this.pass = params.pass),
    void 0 !== params.alg && (this.algName = params.alg,
    void 0 === params.prov && (this.provName = KJUR.crypto.Util.DEFAULTPROVIDER[this.algName]),
    this.setAlgAndProvider(this.algName, this.provName)))
}
,
KJUR.crypto.Signature = function(e) {
    var t = null ;
    if (this._setAlgNames = function() {
        this.algName.match(/^(.+)with(.+)$/) && (this.mdAlgName = RegExp.$1.toLowerCase(),
        this.pubkeyAlgName = RegExp.$2.toLowerCase())
    }
    ,
    this._zeroPaddingOfSignature = function(e, t) {
        for (var i = "", n = t / 4 - e.length, r = 0; n > r; r++)
            i += "0";
        return i + e
    }
    ,
    this.setAlgAndProvider = function(e, t) {
        if (this._setAlgNames(),
        "cryptojs/jsrsa" != t)
            throw "provider not supported: " + t;
        if (-1 != ":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(this.mdAlgName)) {
            try {
                this.md = new KJUR.crypto.MessageDigest({
                    alg: this.mdAlgName
                })
            } catch (i) {
                throw "setAlgAndProvider hash alg set fail alg=" + this.mdAlgName + "/" + i
            }
            this.init = function(e, t) {
                var i = null ;
                try {
                    i = void 0 === t ? KEYUTIL.getKey(e) : KEYUTIL.getKey(e, t)
                } catch (n) {
                    throw "init failed:" + n
                }
                if (i.isPrivate === !0)
                    this.prvKey = i,
                    this.state = "SIGN";
                else {
                    if (i.isPublic !== !0)
                        throw "init failed.:" + i;
                    this.pubKey = i,
                    this.state = "VERIFY"
                }
            }
            ,
            this.initSign = function(e) {
                "string" == typeof e.ecprvhex && "string" == typeof e.eccurvename ? (this.ecprvhex = e.ecprvhex,
                this.eccurvename = e.eccurvename) : this.prvKey = e,
                this.state = "SIGN"
            }
            ,
            this.initVerifyByPublicKey = function(e) {
                "string" == typeof e.ecpubhex && "string" == typeof e.eccurvename ? (this.ecpubhex = e.ecpubhex,
                this.eccurvename = e.eccurvename) : e instanceof KJUR.crypto.ECDSA ? this.pubKey = e : e instanceof RSAKey && (this.pubKey = e),
                this.state = "VERIFY"
            }
            ,
            this.initVerifyByCertificatePEM = function(e) {
                var t = new X509;
                t.readCertPEM(e),
                this.pubKey = t.subjectPublicKeyRSA,
                this.state = "VERIFY"
            }
            ,
            this.updateString = function(e) {
                this.md.updateString(e)
            }
            ,
            this.updateHex = function(e) {
                this.md.updateHex(e)
            }
            ,
            this.sign = function() {
                if (this.sHashHex = this.md.digest(),
                "undefined" != typeof this.ecprvhex && "undefined" != typeof this.eccurvename) {
                    var e = new KJUR.crypto.ECDSA({
                        curve: this.eccurvename
                    });
                    this.hSign = e.signHex(this.sHashHex, this.ecprvhex)
                } else if ("rsaandmgf1" == this.pubkeyAlgName)
                    this.hSign = this.prvKey.signWithMessageHashPSS(this.sHashHex, this.mdAlgName, this.pssSaltLen);
                else if ("rsa" == this.pubkeyAlgName)
                    this.hSign = this.prvKey.signWithMessageHash(this.sHashHex, this.mdAlgName);
                else if (this.prvKey instanceof KJUR.crypto.ECDSA)
                    this.hSign = this.prvKey.signWithMessageHash(this.sHashHex);
                else {
                    if (!(this.prvKey instanceof KJUR.crypto.DSA))
                        throw "Signature: unsupported public key alg: " + this.pubkeyAlgName;
                    this.hSign = this.prvKey.signWithMessageHash(this.sHashHex)
                }
                return this.hSign
            }
            ,
            this.signString = function(e) {
                this.updateString(e),
                this.sign()
            }
            ,
            this.signHex = function(e) {
                this.updateHex(e),
                this.sign()
            }
            ,
            this.verify = function(e) {
                if (this.sHashHex = this.md.digest(),
                "undefined" != typeof this.ecpubhex && "undefined" != typeof this.eccurvename) {
                    var t = new KJUR.crypto.ECDSA({
                        curve: this.eccurvename
                    });
                    return t.verifyHex(this.sHashHex, e, this.ecpubhex)
                }
                if ("rsaandmgf1" == this.pubkeyAlgName)
                    return this.pubKey.verifyWithMessageHashPSS(this.sHashHex, e, this.mdAlgName, this.pssSaltLen);
                if ("rsa" == this.pubkeyAlgName)
                    return this.pubKey.verifyWithMessageHash(this.sHashHex, e);
                if (this.pubKey instanceof KJUR.crypto.ECDSA)
                    return this.pubKey.verifyWithMessageHash(this.sHashHex, e);
                if (this.pubKey instanceof KJUR.crypto.DSA)
                    return this.pubKey.verifyWithMessageHash(this.sHashHex, e);
                throw "Signature: unsupported public key alg: " + this.pubkeyAlgName
            }
        }
    }
    ,
    this.init = function() {
        throw "init(key, pass) not supported for this alg:prov=" + this.algProvName
    }
    ,
    this.initVerifyByPublicKey = function() {
        throw "initVerifyByPublicKey(rsaPubKeyy) not supported for this alg:prov=" + this.algProvName
    }
    ,
    this.initVerifyByCertificatePEM = function() {
        throw "initVerifyByCertificatePEM(certPEM) not supported for this alg:prov=" + this.algProvName
    }
    ,
    this.initSign = function() {
        throw "initSign(prvKey) not supported for this alg:prov=" + this.algProvName
    }
    ,
    this.updateString = function() {
        throw "updateString(str) not supported for this alg:prov=" + this.algProvName
    }
    ,
    this.updateHex = function() {
        throw "updateHex(hex) not supported for this alg:prov=" + this.algProvName
    }
    ,
    this.sign = function() {
        throw "sign() not supported for this alg:prov=" + this.algProvName
    }
    ,
    this.signString = function() {
        throw "digestString(str) not supported for this alg:prov=" + this.algProvName
    }
    ,
    this.signHex = function() {
        throw "digestHex(hex) not supported for this alg:prov=" + this.algProvName
    }
    ,
    this.verify = function() {
        throw "verify(hSigVal) not supported for this alg:prov=" + this.algProvName
    }
    ,
    this.initParams = e,
    void 0 !== e && (void 0 !== e.alg && (this.algName = e.alg,
    this.provName = void 0 === e.prov ? KJUR.crypto.Util.DEFAULTPROVIDER[this.algName] : e.prov,
    this.algProvName = this.algName + ":" + this.provName,
    this.setAlgAndProvider(this.algName, this.provName),
    this._setAlgNames()),
    void 0 !== e.psssaltlen && (this.pssSaltLen = e.psssaltlen),
    void 0 !== e.prvkeypem)) {
        if (void 0 !== e.prvkeypas)
            throw "both prvkeypem and prvkeypas parameters not supported";
        try {
            var t = new RSAKey;
            t.readPrivateKeyFromPEMString(e.prvkeypem),
            this.initSign(t)
        } catch (i) {
            throw "fatal error to load pem private key: " + i
        }
    }
}
,
KJUR.crypto.OID = new function() {
    this.oidhex2name = {
        "2a864886f70d010101": "rsaEncryption",
        "2a8648ce3d0201": "ecPublicKey",
        "2a8648ce380401": "dsa",
        "2a8648ce3d030107": "secp256r1",
        "2b8104001f": "secp192k1",
        "2b81040021": "secp224r1",
        "2b8104000a": "secp256k1",
        "2b81040023": "secp521r1",
        "2b81040022": "secp384r1",
        "2a8648ce380403": "SHA1withDSA",
        "608648016503040301": "SHA224withDSA",
        "608648016503040302": "SHA256withDSA"
    }
}
,
String.prototype.score = function(e, t) {
    if (this == e)
        return 1;
    if ("" == e)
        return 0;
    var i, n, r, o, a = 0, s = this, l = s.toLowerCase(), c = s.length, d = e.toLowerCase(), h = e.length, u = 0, p = 1;
    if (t && (o = 1 - t),
    t)
        for (var f = 0; h > f; ++f)
            r = l.indexOf(d[f], u),
            -1 !== r ? (u === r ? i = .7 : (i = .1,
            " " === s[r - 1] && (i += .8)),
            s[r] === e[f] && (i += .1),
            a += i,
            u = r + 1) : p += o;
    else
        for (var f = 0; h > f; ++f) {
            if (r = l.indexOf(d[f], u),
            -1 === r)
                return 0;
            u === r ? i = .7 : (i = .1,
            " " === s[r - 1] && (i += .8)),
            s[r] === e[f] && (i += .1),
            a += i,
            u = r + 1
        }
    return n = .5 * (a / c + a / h) / p,
    d[0] === l[0] && .85 > n && (n += .15),
    n
}
,
function(e, t, i, n) {
    function r(t, r) {
        var o = r !== n && r.localdoc !== n ? r.localdoc : i;
        this.w = e(o),
        this.el = e(t),
        this.options = e.extend({}, s, r),
        this.init()
    }
    var o = t.is_mobile && !t.is_playerapp && "ontouchstart"in i
      , a = function() {
        var e = i.createElement("div")
          , n = i.documentElement;
        if (!("pointerEvents"in e.style))
            return !1;
        e.style.pointerEvents = "auto",
        e.style.pointerEvents = "x",
        n.appendChild(e);
        var r = t.getComputedStyle && "auto" === t.getComputedStyle(e, "").pointerEvents;
        return n.removeChild(e),
        !!r
    }()
      , s = {
        listNodeName: "ol",
        itemNodeName: "li",
        rootClass: "dd",
        listClass: "dd-list",
        itemClass: "dd-item",
        dragClass: "dd-dragel",
        handleClass: "dd-sortablehandle",
        collapsedClass: "dd-collapsed",
        placeClass: "dd-placeholder",
        noDragClass: "dd-nodrag",
        emptyClass: "dd-empty",
        expandBtnHTML: '<button data-action="expand" type="button">Expand</button>',
        collapseBtnHTML: '<button data-action="collapse" type="button">Collapse</button>',
        group: 0,
        maxDepth: 5,
        allowNestedFolders: !0,
        threshold: 20,
        itemFolderClass: "dd-folder",
        dropOutsideListHandler: null ,
        invisPlaceClass: "dd-invisplaceholder"
    };
    r.prototype = {
        init: function() {
            var i = this;
            i.reset(),
            i.el.data("nestable-group", this.options.group),
            i.placeEl = e('<div class="' + i.options.placeClass + '"/>'),
            i.invisPlaceEl = e("<div class='" + i.options.invisPlaceClass + "'/>"),
            e.each(this.el.find(i.options.itemNodeName), function(t, n) {
                i.setParent(e(n))
            }),
            i.el.on("click", "button", function(t) {
                if (!i.dragEl) {
                    var n = e(t.currentTarget)
                      , r = n.data("action")
                      , o = n.parent(i.options.itemNodeName);
                    "collapse" === r && i.collapseItem(o),
                    "expand" === r && i.expandItem(o),
                    t.preventDefault()
                }
            });
            var n, r = 0, a = 0, s = !1, l = function(t) {
                if (t.view.document === i.w[0]) {
                    var o = e(t.target);
                    if (!o.hasClass(i.options.handleClass)) {
                        if (o.closest("." + i.options.noDragClass).length)
                            return;
                        o = o.closest("." + i.options.handleClass)
                    }
                    o.length && !i.dragEl && (i.isTouch = /^touch/.test(t.type),
                    i.isTouch && 1 !== t.touches.length || (t.preventDefault(),
                    n = e(t.target).closest(i.options.itemNodeName),
                    r = t.touches ? t.touches[0].pageX : t.pageX,
                    a = t.touches ? t.touches[0].pageY : t.pageY,
                    s = !0))
                }
            }
            , c = function(e) {
                if (s) {
                    var t = e.touches ? e.touches[0].pageX : e.pageX
                      , o = e.touches ? e.touches[0].pageY : e.pageY
                      , l = Math.abs(t - r) + Math.abs(o - a);
                    return l > 10 && (i.dragStart(e.touches ? e.touches[0] : e, n),
                    s = !1),
                    void e.preventDefault()
                }
                i.dragEl && (e.preventDefault(),
                i.dragMove(e.touches ? e.touches[0] : e))
            }
            , d = function(e) {
                i.dragEl && (e.preventDefault(),
                i.dragStop(e.touches ? e.touches[0] : e)),
                s = !1
            }
            ;
            o ? (i.el[0].addEventListener("touchstart", l, !1),
            t.addEventListener("touchmove", c, !1),
            t.addEventListener("touchend", d, !1),
            t.addEventListener("touchcancel", d, !1)) : (i.el.on("mousedown", l),
            i.w.on("mousemove", c),
            i.w.on("mouseup", d))
        },
        serialize: function() {
            var t, i = 0, r = this;
            return step = function(t, i) {
                var o = []
                  , a = t.children(r.options.itemNodeName);
                return a.each(function() {
                    var t, a = e(this), s = a.children(r.options.listNodeName);
                    return a.hasClass("dd-item-dummy") ? !0 : (a.hasClass("dd-folder") ? (t = {},
                    t.i = step(s, i + 1),
                    t.n = e.trim(a.find("> .dd-content .folder-title").text()),
                    t.id = a.attr("data-globalfolderid") !== n && "undefined" !== a.attr("data-globalfolderid") ? a.attr("data-globalfolderid") : generateUUID(),
                    a.find(".playlistcontrols").length > 0 && (t.s = a.find(".playstyle").attr("data-val"))) : t = a.attr("data-itemid"),
                    void (null !== t && o.push(t)))
                }),
                o
            }
            ,
            t = step(r.el.find(r.options.listNodeName).first(), i)
        },
        serialise: function() {
            return this.serialize()
        },
        reset: function() {
            this.mouse = {
                offsetX: 0,
                offsetY: 0,
                startX: 0,
                startY: 0,
                lastX: 0,
                lastY: 0,
                nowX: 0,
                nowY: 0,
                distX: 0,
                distY: 0,
                dirAx: 0,
                dirX: 0,
                dirY: 0,
                lastDirX: 0,
                lastDirY: 0,
                distAxX: 0,
                distAxY: 0
            },
            this.isTouch = !1,
            this.moving = !1,
            this.dragEl = null ,
            this.dragRootEl = null ,
            this.dragDepth = 0,
            this.hasNewRoot = !1,
            this.pointEl = null
        },
        expandItem: function(e) {
            e.removeClass(this.options.collapsedClass),
            e.children('[data-action="expand"]').hide(),
            e.children('[data-action="collapse"]').show(),
            e.children(this.options.listNodeName).show(),
            this.el.trigger("folderstatuschange")
        },
        collapseItem: function(e) {
            var t = e.children(this.options.listNodeName);
            t.length && (e.addClass(this.options.collapsedClass),
            e.children('[data-action="collapse"]').hide(),
            e.children('[data-action="expand"]').show(),
            e.children(this.options.listNodeName).hide()),
            this.el.trigger("folderstatuschange")
        },
        expandAll: function() {
            var t = this;
            t.el.find(t.options.itemNodeName).each(function() {
                t.expandItem(e(this))
            })
        },
        collapseAll: function() {
            var t = this;
            t.el.find(t.options.itemNodeName).each(function() {
                t.collapseItem(e(this))
            })
        },
        setParent: function(e) {
            e.children('[data-action="expand"]').hide()
        },
        unsetParent: function(e) {
            e.removeClass(this.options.collapsedClass),
            e.children(this.options.listNodeName).remove()
        },
        dragStart: function(t, i) {
            this.el.addClass("dd-dragging");
            var r = this.mouse
              , o = e(t.target);
            i || (i = o.closest(this.options.itemNodeName)),
            i.is(".library-item, .libraryfolder") && (i.parents("#recentuploads").length > 0 ? (e(i).after(i.clone()),
            e(i[0]).attr("data-oldparent", "recentuploads")) : i.parents(".libraryfolder").length > 0 ? e(i[0]).attr("data-oldparent", e(i).parent().closest(".libraryfolder").attr("data-folderid")) : e(i[0]).attr("data-oldparent", "root"),
            e(i[0]).attr("data-oldindex", i.index())),
            (i.hasClass("library-item") || i.hasClass("libraryfolder") || i.hasClass("recentupload")) && (e("#recentuploads").addClass("externaldrag nestable-nodrop"),
            i.hasClass("recentupload") && i.removeClass("recentupload"),
            i.hasClass("dd-folder") && 1 != i.attr("data-content") && (0 === i.find(".dd-list").length && i.append("<ol class='dd-list'></ol>"),
            i.children(".dd-list").append("<li class='dd-item dd-item-dummy'><div class='dd-content'></div></li>")),
            _.each(e("#userlibrary .dd-folder[data-content='true']"), function(t) {
                var i = e(t);
                0 === i.find("li").length && (0 === i.find(".dd-list").length && i.append("<ol class='dd-list'></ol>"),
                i.children(".dd-list").append("<li class='dd-item dd-item-dummy'><div class='dd-content'></div></li>"))
            })),
            0 === e("#userlibrary > .dd-list > li").length && e("#userlibrary > .dd-list").append("<li class='dd-item dd-folder libraryfolder dd-item-dummy' data-folderid='psuedoplaceholder'></li>"),
            r.offsetX = t.offsetX !== n ? t.offsetX : t.pageX - o.offset().left,
            r.offsetY = t.offsetY !== n ? t.offsetY : t.pageY - o.offset().top,
            r.startX = r.lastX = t.pageX,
            r.startY = r.lastY = t.pageY,
            this.dragRootEl = this.el,
            this.dragEl = e(this.w[0].createElement(this.options.listNodeName)).addClass(this.options.listClass + " " + this.options.dragClass),
            this.dragEl.css("width", i.width()),
            i.after(this.placeEl),
            i.after(this.invisPlaceEl),
            i[0].parentNode.removeChild(i[0]),
            i.appendTo(this.dragEl),
            this.placeEl.css("height", i.height()),
            e(this.w[0].body).append(this.dragEl),
            this.dragEl.css({
                left: t.pageX - r.offsetX,
                top: t.pageY - r.offsetY
            });
            var a, s, l = this.dragEl.find(this.options.itemNodeName);
            for (a = 0; a < l.length; a++)
                s = e(l[a]).parents(this.options.listNodeName).length,
                s > this.dragDepth && (this.dragDepth = s)
        },
        dragStop: function(i) {
            this.el.removeClass("dd-dragging");
            var n = this.pointEl.parents("." + this.options.rootClass)
              , r = this.dragEl.children(this.options.itemNodeName).first();
            0 === n.length ? (this.options.dropOutsideListHandler && this.options.dropOutsideListHandler(i, this.pointEl, r),
            this.placeEl.remove(),
            r && r.length > 0 ? (r[0].parentNode.removeChild(r[0]),
            this.invisPlaceEl.replaceWith(r)) : this.invisPlaceEl.remove()) : (r && r.length > 0 ? (r[0].parentNode.removeChild(r[0]),
            this.placeEl.replaceWith(r)) : this.placeEl.remove(),
            this.invisPlaceEl.remove(),
            this.el.trigger("change", r),
            this.hasNewRoot && this.dragRootEl.trigger("change", r)),
            this.dragEl.remove(),
            this.reset(),
            e("#recentuploads").hasClass("externaldrag") && e("#recentuploads").removeClass("externaldrag nestable-nodrop"),
            "recentuploads" === r.attr("data-oldparent") && r.parents("#recentuploads").length > 0 && r.remove(),
            "recentuploads" === r.attr("data-oldparent") && t.currentPlayer.get("recentuploadsfilter") === !0 && 0 != n.length ? e("#recentuploads").find("*[data-imageid=" + r.attr("data-imageid") + "]").remove() : e("#recentuploads").find("*[data-imageid=" + r.attr("data-imageid") + "]").draggable({
                handle: ".namecontainer",
                revert: !0,
                revertDuration: 0,
                helper: "clone",
                appendTo: "body",
                start: function() {
                    e("#imagedialog #libraryfolderroot").addClass("externaldrag")
                },
                stop: function() {
                    e("#imagedialog #libraryfolderroot").removeClass("externaldrag")
                }
            }).addTouch(),
            _.each(e("#userlibrary .dd-item-dummy"), function(e) {
                e.remove()
            })
        },
        dragMove: function(i) {
            var n, r, o, s, l, c = this.options, d = this.mouse;
            this.dragEl.css({
                left: i.pageX - d.offsetX,
                top: i.pageY - d.offsetY
            }),
            d.lastX = d.nowX,
            d.lastY = d.nowY,
            d.nowX = i.pageX,
            d.nowY = i.pageY,
            d.distX = d.nowX - d.lastX,
            d.distY = d.nowY - d.lastY,
            d.lastDirX = d.dirX,
            d.lastDirY = d.dirY,
            d.dirX = 0 === d.distX ? 0 : d.distX > 0 ? 1 : -1,
            d.dirY = 0 === d.distY ? 0 : d.distY > 0 ? 1 : -1;
            var h = Math.abs(d.distX) > Math.abs(d.distY) ? 1 : 0;
            if (!d.moving)
                return d.dirAx = h,
                void (d.moving = !0);
            if (d.dirAx !== h ? (d.distAxX = 0,
            d.distAxY = 0) : (d.distAxX += Math.abs(d.distX),
            0 !== d.dirX && d.dirX !== d.lastDirX && (d.distAxX = 0),
            d.distAxY += Math.abs(d.distY),
            0 !== d.dirY && d.dirY !== d.lastDirY && (d.distAxY = 0)),
            d.dirAx = h,
            d.dirAx && d.distAxX >= c.threshold) {
                if (d.distAxX = 0,
                o = this.placeEl.prev(c.itemNodeName),
                d.distX > 0 && o.length && !o.hasClass(c.collapsedClass) && o.hasClass(c.itemFolderClass)) {
                    if (n = o.find(c.listNodeName).last(),
                    l = this.placeEl.parents(c.listNodeName).length,
                    curDragItem = this.dragEl.find(".dd-item"),
                    !c.allowNestedFolders && curDragItem.hasClass("dd-folder"))
                        return;
                    (!curDragItem.hasClass("dd-folder") && l + this.dragDepth <= c.maxDepth || curDragItem.hasClass("dd-folder") && l + this.dragDepth <= c.maxDepth) && (n.length ? (n = o.children(c.listNodeName).last(),
                    n.append(this.placeEl)) : (n = e("<" + c.listNodeName + "/>").addClass(c.listClass),
                    n.append(this.placeEl),
                    o.append(n),
                    this.setParent(o)))
                }
                d.distX < 0 && (s = this.placeEl.next(c.itemNodeName),
                s.length || (r = this.placeEl.parent(),
                this.placeEl.closest(c.itemNodeName).after(this.placeEl),
                r.children().length || this.unsetParent(r.parent())))
            }
            var u = !1;
            if (a || (this.dragEl[0].style.visibility = "hidden"),
            this.pointEl = e(this.w[0].elementFromPoint(i.pageX - this.w[0].body.scrollLeft, i.pageY - (t.pageYOffset || this.w[0].documentElement.scrollTop))),
            a || (this.dragEl[0].style.visibility = "visible"),
            this.pointEl.hasClass(c.handleClass) ? this.pointEl = this.pointEl.parent(c.itemNodeName) : this.pointEl.hasClass("dd-content") ? this.pointEl = this.pointEl.parent() : this.pointEl.hasClass("namecontainer") && (this.pointEl = this.pointEl.parent().parent().parent()),
            this.pointEl.hasClass(c.emptyClass))
                u = !0;
            else if (!this.pointEl.length || !this.pointEl.hasClass(c.itemClass))
                return;
            var p = this.pointEl.closest("." + c.rootClass)
              , f = this.dragRootEl.data("nestable-id") !== p.data("nestable-id");
            if (!d.dirAx || f || u) {
                if (f && c.group !== p.data("nestable-group"))
                    return;
                if (l = this.dragDepth - 1 + this.pointEl.parents(c.listNodeName).length,
                curDragItem = this.dragEl.find(".dd-item"),
                !curDragItem.hasClass("dd-folder") && l > c.maxDepth || curDragItem.hasClass("dd-folder") && (l > c.maxDepth || 0 == c.allowNestedFolders && l > 2))
                    return;
                var g = i.pageY < this.pointEl.offset().top + this.pointEl.height() / 2;
                r = this.placeEl.parent(),
                u ? (n = e(this.w[0].createElement(c.listNodeName)).addClass(c.listClass),
                n.append(this.placeEl),
                this.pointEl.replaceWith(n)) : g || this.pointEl.hasClass("dd-item-dummy") ? this.pointEl.before(this.placeEl) : this.pointEl.after(this.placeEl),
                r.children().length || this.unsetParent(r.parent()),
                this.dragRootEl.find(c.itemNodeName).length || this.dragRootEl.append('<div class="' + c.emptyClass + '"/>'),
                f && (this.dragRootEl = p,
                this.hasNewRoot = this.el[0] !== this.dragRootEl[0])
            }
        }
    },
    e.fn.nestable = function(t) {
        var i = this
          , n = this;
        return i.each(function() {
            var i = e(this).data("nestable");
            i ? "string" == typeof t && "function" == typeof i[t] && (n = i[t]()) : (e(this).data("nestable", new r(this,t)),
            e(this).data("nestable-id", (new Date).getTime()))
        }),
        n || i
    }
}(window.jQuery || window.Zepto, window, document),
function(e, t) {
    "object" == typeof exports && exports ? t(exports) : "function" == typeof define && define.amd ? define(["exports"], t) : t(e.Mustache = {})
}(this, function(e) {
    function t(e) {
        return "function" == typeof e
    }
    function i(e) {
        return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
    }
    function n(e, t) {
        return f.call(e, t)
    }
    function r(e) {
        return !n(g, e)
    }
    function o(e) {
        return String(e).replace(/[&<>"'\/]/g, function(e) {
            return m[e]
        })
    }
    function a(t, n) {
        function o() {
            if (E && !_)
                for (; m.length; )
                    delete g[m.pop()];
            else
                m = [];
            E = !1,
            _ = !1
        }
        function a(e) {
            if ("string" == typeof e && (e = e.split(y, 2)),
            !p(e) || 2 !== e.length)
                throw new Error("Invalid tags: " + e);
            d = new RegExp(i(e[0]) + "\\s*"),
            h = new RegExp("\\s*" + i(e[1])),
            u = new RegExp("\\s*" + i("}" + e[1]))
        }
        if (!t)
            return [];
        var d, h, u, f = [], g = [], m = [], E = !1, _ = !1;
        a(n || e.tags);
        for (var T, C, R, S, k, M, A = new c(t); !A.eos(); ) {
            if (T = A.pos,
            R = A.scanUntil(d))
                for (var H = 0, P = R.length; P > H; ++H)
                    S = R.charAt(H),
                    r(S) ? m.push(g.length) : _ = !0,
                    g.push(["text", S, T, T + 1]),
                    T += 1,
                    "\n" === S && o();
            if (!A.scan(d))
                break;
            if (E = !0,
            C = A.scan(x) || "name",
            A.scan(v),
            "=" === C ? (R = A.scanUntil(b),
            A.scan(b),
            A.scanUntil(h)) : "{" === C ? (R = A.scanUntil(u),
            A.scan(w),
            A.scanUntil(h),
            C = "&") : R = A.scanUntil(h),
            !A.scan(h))
                throw new Error("Unclosed tag at " + A.pos);
            if (k = [C, R, T, A.pos],
            g.push(k),
            "#" === C || "^" === C)
                f.push(k);
            else if ("/" === C) {
                if (M = f.pop(),
                !M)
                    throw new Error('Unopened section "' + R + '" at ' + T);
                if (M[1] !== R)
                    throw new Error('Unclosed section "' + M[1] + '" at ' + T)
            } else
                "name" === C || "{" === C || "&" === C ? _ = !0 : "=" === C && a(R)
        }
        if (M = f.pop())
            throw new Error('Unclosed section "' + M[1] + '" at ' + A.pos);
        return l(s(g))
    }
    function s(e) {
        for (var t, i, n = [], r = 0, o = e.length; o > r; ++r)
            t = e[r],
            t && ("text" === t[0] && i && "text" === i[0] ? (i[1] += t[1],
            i[3] = t[3]) : (n.push(t),
            i = t));
        return n
    }
    function l(e) {
        for (var t, i, n = [], r = n, o = [], a = 0, s = e.length; s > a; ++a)
            switch (t = e[a],
            t[0]) {
            case "#":
            case "^":
                r.push(t),
                o.push(t),
                r = t[4] = [];
                break;
            case "/":
                i = o.pop(),
                i[5] = t[2],
                r = o.length > 0 ? o[o.length - 1][4] : n;
                break;
            default:
                r.push(t)
            }
        return n
    }
    function c(e) {
        this.string = e,
        this.tail = e,
        this.pos = 0
    }
    function d(e, t) {
        this.view = null == e ? {} : e,
        this.cache = {
            ".": this.view
        },
        this.parent = t
    }
    function h() {
        this.cache = {}
    }
    var u = Object.prototype.toString
      , p = Array.isArray || function(e) {
        return "[object Array]" === u.call(e)
    }
      , f = RegExp.prototype.test
      , g = /\S/
      , m = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;",
        "/": "&#x2F;"
    }
      , v = /\s*/
      , y = /\s+/
      , b = /\s*=/
      , w = /\s*\}/
      , x = /#|\^|\/|>|\{|&|=|!/;
    c.prototype.eos = function() {
        return "" === this.tail
    }
    ,
    c.prototype.scan = function(e) {
        var t = this.tail.match(e);
        if (!t || 0 !== t.index)
            return "";
        var i = t[0];
        return this.tail = this.tail.substring(i.length),
        this.pos += i.length,
        i
    }
    ,
    c.prototype.scanUntil = function(e) {
        var t, i = this.tail.search(e);
        switch (i) {
        case -1:
            t = this.tail,
            this.tail = "";
            break;
        case 0:
            t = "";
            break;
        default:
            t = this.tail.substring(0, i),
            this.tail = this.tail.substring(i)
        }
        return this.pos += t.length,
        t
    }
    ,
    d.prototype.push = function(e) {
        return new d(e,this)
    }
    ,
    d.prototype.lookup = function(e) {
        var i, n = this.cache;
        if (e in n)
            i = n[e];
        else {
            for (var r, o, a = this; a; ) {
                if (e.indexOf(".") > 0)
                    for (i = a.view,
                    r = e.split("."),
                    o = 0; null != i && o < r.length; )
                        i = i[r[o++]];
                else
                    "object" == typeof a.view && (i = a.view[e]);
                if (null != i)
                    break;
                a = a.parent
            }
            n[e] = i
        }
        return t(i) && (i = i.call(this.view)),
        i
    }
    ,
    h.prototype.clearCache = function() {
        this.cache = {}
    }
    ,
    h.prototype.parse = function(e, t) {
        var i = this.cache
          , n = i[e];
        return null == n && (n = i[e] = a(e, t)),
        n
    }
    ,
    h.prototype.render = function(e, t, i) {
        var n = this.parse(e)
          , r = t instanceof d ? t : new d(t);
        return this.renderTokens(n, r, i, e)
    }
    ,
    h.prototype.renderTokens = function(e, i, n, r) {
        function o(e) {
            return c.render(e, i, n)
        }
        for (var a, s, l = "", c = this, d = 0, h = e.length; h > d; ++d)
            switch (a = e[d],
            a[0]) {
            case "#":
                var u = (a[1] + "").split(" ");
                if ("()" === u[0].substring(u[0].length - 2, u[0].length) ? (s = i.lookup(u[0]),
                u.splice(0, 1)) : s = i.lookup(a[1]),
                !s)
                    continue;if (p(s))
                    for (var f = 0, g = s.length; g > f; ++f)
                        l += this.renderTokens(a[4], i.push(s[f]), n, r);
                else if ("object" == typeof s || "string" == typeof s)
                    l += this.renderTokens(a[4], i.push(s), n, r);
                else if (t(s)) {
                    if ("string" != typeof r)
                        throw new Error("Cannot use higher-order sections without the original template");
                    s = s.call(i.view, r.slice(a[3], a[5]), o, u),
                    null != s && (l += s)
                } else
                    l += this.renderTokens(a[4], i, n, r);
                break;
            case "^":
                s = i.lookup(a[1]),
                (!s || p(s) && 0 === s.length) && (l += this.renderTokens(a[4], i, n, r));
                break;
            case ">":
                if (!n)
                    continue;s = t(n) ? n(a[1]) : n[a[1]],
                null != s && (l += this.renderTokens(this.parse(s), i, n, s));
                break;
            case "&":
                s = i.lookup(a[1]),
                null != s && (l += s);
                break;
            case "name":
                s = i.lookup(a[1]),
                null != s && (l += s);
                break;
            case "text":
                l += a[1]
            }
        return l
    }
    ,
    e.name = "mustache.js",
    e.version = "1.0.0",
    e.tags = ["{{", "}}"];
    var E = new h;
    e.clearCache = function() {
        return E.clearCache()
    }
    ,
    e.parse = function(e, t) {
        return E.parse(e, t)
    }
    ,
    e.render = function(e, t, i) {
        return E.render(e, t, i)
    }
    ,
    e.to_html = function(i, n, r, o) {
        var a = e.render(i, n, r);
        return t(o) ? void o(a) : a
    }
    ,
    e.escape = o,
    e.Scanner = c,
    e.Context = d,
    e.Writer = h
}),
function() {
    window.Markdown = {
        parse: function(e) {
            {
                var t = e
                  , i = []
                  , n = [];
                -1 != t.indexOf("\r\n") ? "\r\n" : -1 != t.indexOf("\n") ? "\n" : ""
            }
            return t = t.replace(/{{{([\s\S]*?)}}}/g, function(e) {
                return i.push(e.substring(3, e.length - 3)),
                "{{{}}}"
            }),
            t = t.replace(new RegExp("<pre>([\\s\\S]*?)</pre>","gi"), function(e) {
                return n.push(e.substring(5, e.length - 6)),
                "<pre></pre>"
            }),
            t = t.replace(/\*\*(.*?)\*\*/g, "<strong>$1</strong>"),
            t = t.replace(/\*(.*?)\*/g, "<em>$1</em>"),
            t = t.replace(/``(.*?)``/g, "<code>$1</code>"),
            t = t.replace(/\[([^\]]+)\]\(([^)]+(\.png|\.gif|\.jpg|\.jpeg))\)/g, '<a href="$2"><img src="$2" alt="$1" /></a>'),
            t = t.replace(/\[([^\]]+)\]\(([^)]+)\)/g, '<a href="$2">$1</a>'),
            t = t.replace(new RegExp("<pre></pre>","g"), function() {
                return "<pre>" + n.shift() + "</pre>"
            }),
            t = t.replace(/{{{}}}/g, function() {
                return i.shift()
            })
        }
    }
}(),
function() {
    function e(e) {
        return function() {
            return e
        }
    }
    function t(e) {
        var t = "Array" === e && ri.isArray || function(t, i) {
            return (i || hi.call(t)) === "[object " + e + "]"
        }
        ;
        return mi[e] = t
    }
    function i(e, t) {
        function i(i) {
            return g(i) ? hi.call(i) === "[object " + t + "]" : typeof i === e
        }
        return mi[t] = i
    }
    function n(e) {
        e.SugarMethods || (l(e, "SugarMethods", {}),
        r(e, !1, !0, {
            extend: function(t, i, n) {
                r(e, !1 !== n, i, t)
            },
            sugarRestore: function() {
                return a(this, e, arguments, function(e, t, i) {
                    l(e, t, i.method)
                })
            },
            sugarRevert: function() {
                return a(this, e, arguments, function(e, t, i) {
                    i.existed ? l(e, t, i.original) : delete e[t]
                })
            }
        }))
    }
    function r(e, t, i, r) {
        var o = t ? e.prototype : e;
        n(e),
        y(r, function(n, r) {
            var a = o[n]
              , c = f(o, n);
            Ci(i) && a && (r = s(a, r, i)),
            !1 === i && a || l(o, n, r),
            e.SugarMethods[n] = {
                method: r,
                existed: c,
                original: a,
                instance: t
            }
        })
    }
    function o(e, t, i, n, o) {
        var a = {};
        n = xi(n) ? n.split(",") : n,
        n.forEach(function(e, t) {
            o(a, e, t)
        }),
        r(e, t, i, a)
    }
    function a(e, t, i, n) {
        var r = 0 === i.length
          , o = c(i)
          , a = !1;
        return y(t.SugarMethods, function(t, i) {
            (r || -1 !== o.indexOf(t)) && (a = !0,
            n(i.instance ? e.prototype : e, t, i))
        }),
        a
    }
    function s(e, t, i) {
        return function() {
            return i.apply(this, arguments) ? t.apply(this, arguments) : e.apply(this, arguments)
        }
    }
    function l(e, t, i) {
        pi ? ni.defineProperty(e, t, {
            value: i,
            configurable: !0,
            enumerable: !1,
            writable: !0
        }) : e[t] = i
    }
    function c(e, t, i) {
        var n = [];
        i = i || 0;
        var r;
        for (r = e.length; r > i; i++)
            n.push(e[i]),
            t && t.call(e, e[i], i);
        return n
    }
    function d(e, t, i) {
        var n = e[i || 0];
        Ei(n) && (e = n,
        i = 0),
        c(e, t, i)
    }
    function h(e) {
        if (!e || !e.call)
            throw new TypeError("Callback is not callable")
    }
    function u(e) {
        return void 0 !== e
    }
    function p(e) {
        return void 0 === e
    }
    function f(e, t) {
        return !!e && ui.call(e, t)
    }
    function g(e) {
        return !!e && ("object" == typeof e || fi && Ti(e))
    }
    function m(e) {
        var t = typeof e;
        return null == e || "string" === t || "number" === t || "boolean" === t
    }
    function v(e, t) {
        t = t || hi.call(e);
        try {
            if (e && e.constructor && !f(e, "constructor") && !f(e.constructor.prototype, "isPrototypeOf"))
                return !1
        } catch (i) {
            return !1
        }
        return !!e && "[object Object]" === t && "hasOwnProperty"in e
    }
    function y(e, t) {
        for (var i in e)
            if (f(e, i) && !1 === t.call(e, i, e[i], e))
                break
    }
    function b(e, t) {
        for (var i = 0; e > i; i++)
            t(i)
    }
    function w(e, t) {
        return y(t, function(i) {
            e[i] = t[i]
        }),
        e
    }
    function x(e) {
        if (m(e) && (e = ni(e)),
        gi && xi(e))
            for (var t, i = e, n = 0; t = i.charAt(n); )
                i[n++] = t;
        return e
    }
    function E(e) {
        w(this, x(e))
    }
    function _(e, t, i) {
        var n = ki(10, Si(t || 0));
        return i = i || Hi,
        0 > t && (n = 1 / n),
        i(e * n) / n
    }
    function T() {
        return "	\n\f\r \xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u2028\u2029\u3000\ufeff"
    }
    function C(e, t) {
        var i = "";
        for (e = e.toString(); t > 0; )
            1 & t && (i += e),
            (t >>= 1) && (e += e);
        return i
    }
    function R(e, t) {
        var i, n;
        return i = e.replace(Ri, function(e) {
            return e = ji[e],
            e === Fi && (n = !0),
            e
        }),
        n ? parseFloat(i) : parseInt(i, t || 10)
    }
    function S(e, t, i, n) {
        return n = Si(e).toString(n || 10),
        n = C("0", t - n.replace(/\.\d+/, "").length) + n,
        (i || 0 > e) && (n = (0 > e ? "-" : "+") + n),
        n
    }
    function k(e) {
        if (e >= 11 && 13 >= e)
            return "th";
        switch (e % 10) {
        case 1:
            return "st";
        case 2:
            return "nd";
        case 3:
            return "rd";
        default:
            return "th"
        }
    }
    function M(e, t) {
        function i(e, i) {
            (e || -1 < t.indexOf(i)) && (n += i)
        }
        var n = "";
        return t = t || "",
        i(e.multiline, "m"),
        i(e.ignoreCase, "i"),
        i(e.global, "g"),
        i(e.u, "y"),
        n
    }
    function A(e) {
        return xi(e) || (e = si(e)),
        e.replace(/([\\/\'*+?|()\[\]{}.^$])/g, "\\$1")
    }
    function H(e, t) {
        return e["get" + (e._utc ? "UTC" : "") + t]()
    }
    function P(e, t, i) {
        return e["set" + (e._utc && "ISOWeek" != t ? "UTC" : "") + t](i)
    }
    function O(e, t) {
        var i, n, r, o, a, s, l, c = typeof e;
        if ("string" === c)
            return e;
        if (r = hi.call(e),
        i = v(e, r),
        n = Ei(e, r),
        null != e && i || n) {
            if (t || (t = []),
            1 < t.length)
                for (s = t.length; s--; )
                    if (t[s] === e)
                        return "CYC";
            for (t.push(e),
            i = e.valueOf() + si(e.constructor),
            o = n ? e : ni.keys(e).sort(),
            s = 0,
            l = o.length; l > s; s++)
                a = n ? s : o[s],
                i += a + O(e[a], t);
            t.pop()
        } else
            i = -1 / 0 === 1 / e ? "-0" : si(e && e.valueOf ? e.valueOf() : e);
        return c + r + i
    }
    function D(e, t) {
        return e === t ? 0 !== e || 1 / e === 1 / t : $(e) && $(t) ? O(e) === O(t) : !1
    }
    function $(e) {
        var t = hi.call(e);
        return vi.test(t) || v(e, t)
    }
    function L(e, t, i) {
        var n, r = e.length, o = t.length, a = !1 !== t[o - 1];
        return o > (a ? 1 : 2) ? (n = [],
        c(t, function(t) {
            return bi(t) ? !1 : void n.push(I(e, r, t, a, i))
        }),
        n) : I(e, r, t[0], a, i)
    }
    function I(e, t, i, n, r) {
        return n && (i %= t,
        0 > i && (i = t + i)),
        r ? e.charAt(i) : e[i]
    }
    function F(e, t) {
        o(t, !0, !1, e, function(e, t) {
            e[t + ("equal" === t ? "s" : "")] = function() {
                return ni[t].apply(null , [this].concat(c(arguments)))
            }
        })
    }
    function B(e, t, i, n) {
        var r = e.length
          , o = -1 == n
          , a = o ? r - 1 : 0;
        for (i = isNaN(i) ? a : parseInt(i >> 0),
        0 > i && (i = r + i),
        (!o && 0 > i || o && i >= r) && (i = a); o && i >= 0 || !o && r > i; ) {
            if (e[i] === t)
                return i;
            i += n
        }
        return -1
    }
    function j(e, t, i, n) {
        var r = e.length
          , o = 0
          , a = u(i);
        if (h(t),
        0 == r && !a)
            throw new TypeError("Reduce called on empty array with no initial value");
        for (a || (i = e[n ? r - 1 : o],
        o++); r > o; )
            a = n ? r - o - 1 : o,
            a in e && (i = t(i, e[a], a, e)),
            o++;
        return i
    }
    function N(e) {
        if (0 === e.length)
            throw new TypeError("First argument must be defined")
    }
    function z(e) {
        return e = oi(e),
        function(t) {
            return e.test(t)
        }
    }
    function U(e) {
        var t = e.getTime();
        return function(e) {
            return !(!e || !e.getTime) && e.getTime() === t
        }
    }
    function V(e) {
        return function(t, i, n) {
            return t === e || e.call(this, t, i, n)
        }
    }
    function W(e) {
        return function(t, i, n) {
            return t === e || e.call(n, i, t, n)
        }
    }
    function G(e, t) {
        var i = {};
        return function(n, r, o) {
            var a;
            if (!g(n))
                return !1;
            for (a in e)
                if (i[a] = i[a] || X(e[a], t),
                !1 === i[a].call(o, n[a], r, o))
                    return !1;
            return !0
        }
    }
    function q(e) {
        return function(t) {
            return t === e || D(t, e)
        }
    }
    function X(e, t) {
        if (!m(e)) {
            if (Ti(e))
                return z(e);
            if (_i(e))
                return U(e);
            if (Ci(e))
                return t ? W(e) : V(e);
            if (v(e))
                return G(e, t)
        }
        return q(e)
    }
    function Y(e, t, i, n) {
        return t ? t.apply ? t.apply(i, n || []) : Ci(e[t]) ? e[t].call(e) : e[t] : e
    }
    function J(e, t, i, n) {
        var r = +e.length;
        for (0 > i && (i = e.length + i),
        i = isNaN(i) ? 0 : i,
        !0 === n && (r += i); r > i; ) {
            if (n = i % e.length,
            !(n in e)) {
                K(e, t, i);
                break
            }
            if (!1 === t.call(e, e[n], n, e))
                break;
            i++
        }
    }
    function K(e, t, i) {
        var n, r = [];
        for (n in e)
            n in e && n >>> 0 == n && 4294967295 != n && n >= i && r.push(parseInt(n));
        r.sort().each(function(i) {
            return t.call(e, e[i], i, e)
        })
    }
    function Z(e, t, i, n, r, o) {
        var a, s, l;
        return 0 < e.length && (l = X(t),
        J(e, function(t, i) {
            return l.call(o, t, i, e) ? (a = t,
            s = i,
            !1) : void 0
        }, i, n)),
        r ? s : a
    }
    function Q(e, t) {
        var i, n = [], r = {};
        return J(e, function(o, a) {
            i = t ? Y(o, t, e, [o, a, e]) : o,
            rt(r, i) || n.push(o)
        }),
        n
    }
    function et(e, t, i) {
        var n = []
          , r = {};
        return t.each(function(e) {
            rt(r, e)
        }),
        e.each(function(e) {
            var t = O(e)
              , o = !$(e);
            if (nt(r, t, e, o) !== i) {
                var a = 0;
                if (o)
                    for (t = r[t]; a < t.length; )
                        t[a] === e ? t.splice(a, 1) : a += 1;
                else
                    delete r[t];
                n.push(e)
            }
        }),
        n
    }
    function tt(e, t, i) {
        t = t || 1 / 0,
        i = i || 0;
        var n = [];
        return J(e, function(e) {
            Ei(e) && t > i ? n = n.concat(tt(e, t, i + 1)) : n.push(e)
        }),
        n
    }
    function it(e) {
        var t = [];
        return c(e, function(e) {
            t = t.concat(e)
        }),
        t
    }
    function nt(e, t, i, n) {
        var r = t in e;
        return n && (e[t] || (e[t] = []),
        r = -1 !== e[t].indexOf(i)),
        r
    }
    function rt(e, t) {
        var i = O(t)
          , n = !$(t)
          , r = nt(e, i, t, n);
        return n ? e[i].push(t) : e[i] = t,
        r
    }
    function ot(e, t, i, n) {
        var r, o, a, s = [], l = "max" === i, c = "min" === i, d = ri.isArray(e);
        for (r in e)
            if (e.hasOwnProperty(r)) {
                if (i = e[r],
                a = Y(i, t, e, d ? [i, parseInt(r), e] : []),
                p(a))
                    throw new TypeError("Cannot compare with undefined");
                a === o ? s.push(i) : (p(o) || l && a > o || c && o > a) && (s = [i],
                o = a)
            }
        return d || (s = tt(s, 1)),
        n ? s : s[0]
    }
    function at(e, t) {
        var i, n, r, o, a = 0, s = 0;
        i = ri[Vi],
        n = ri[Wi];
        var l = ri[Gi]
          , c = ri[Ui]
          , d = ri[qi];
        e = st(e, i, n),
        t = st(t, i, n);
        do
            i = e.charAt(a),
            r = l[i] || i,
            i = t.charAt(a),
            o = l[i] || i,
            i = r ? c.indexOf(r) : null ,
            n = o ? c.indexOf(o) : null ,
            -1 === i || -1 === n ? (i = e.charCodeAt(a) || null ,
            n = t.charCodeAt(a) || null ,
            d && (i >= Di && $i >= i || i >= Li && Ii >= i) && (n >= Di && $i >= n || n >= Li && Ii >= n) && (i = R(e.slice(a)),
            n = R(t.slice(a)))) : (r = r !== e.charAt(a),
            o = o !== t.charAt(a),
            r !== o && 0 === s && (s = r - o)),
            a += 1;
        while (null != i && null != n && i === n);return i === n ? s : i - n
    }
    function st(e, t, i) {
        return xi(e) || (e = si(e)),
        i && (e = e.toLowerCase()),
        t && (e = e.replace(t, "")),
        e
    }
    function lt(e, t) {
        o(ni, !1, !0, e, function(e, i) {
            e[i] = function(e, n, r) {
                var o, a = ni.keys(x(e));
                return t || (o = X(n, !0)),
                r = ri.prototype[i].call(a, function(i) {
                    var r = e[i];
                    return t ? Y(r, n, e, [i, r, e]) : o(r, i, e)
                }, r),
                Ei(r) && (r = r.reduce(function(t, i) {
                    return t[i] = e[i],
                    t
                }, {})),
                r
            }
        }),
        F(e, E)
    }
    function ct(e) {
        w(this, e),
        this.g = sn.concat()
    }
    function dt(e, t, i) {
        var n, r, o = t[0], a = t[1], s = t[2];
        return t = e[i] || e.relative,
        Ci(t) ? t.call(e, o, a, s, i) : (r = e.units[8 * (e.plural && o > 1 ? 1 : 0) + a] || e.units[a],
        e.capitalizeUnit && (r = vt(r)),
        n = e.modifiers.filter(function(e) {
            return "sign" == e.name && e.value == (s > 0 ? 1 : -1)
        })[0],
        t.replace(/\{(.*?)\}/g, function(e, t) {
            switch (t) {
            case "num":
                return o;
            case "unit":
                return r;
            case "sign":
                return n.src
            }
        }))
    }
    function ht(e, t) {
        return t = t || e.code,
        "en" === t || "en-US" === t ? !0 : e.variant
    }
    function ut(e, t) {
        return t.replace(oi(e.num, "g"), function(t) {
            return pt(e, t) || ""
        })
    }
    function pt(e, t) {
        var i;
        return wi(t) ? t : t && -1 !== (i = e.numbers.indexOf(t)) ? (i + 1) % 10 : 1
    }
    function ft(e, t) {
        var i;
        if (xi(e) || (e = ""),
        i = hn[e] || hn[e.slice(0, 2)],
        !1 === t && !i)
            throw new TypeError("Invalid locale.");
        return i || Qi
    }
    function gt(e, t) {
        function i(e) {
            var t = s[e];
            xi(t) ? s[e] = t.split(",") : t || (s[e] = [])
        }
        function n(e, t) {
            e = e.split("+").map(function(e) {
                return e.replace(/(.+):(.+)$/, function(e, t, i) {
                    return i.split("|").map(function(e) {
                        return t + e
                    }).join("|")
                })
            }).join("|"),
            e.split("|").forEach(t)
        }
        function r(e, t, i) {
            var r = [];
            s[e].forEach(function(e, o) {
                t && (e += "+" + e.slice(0, 3)),
                n(e, function(e, t) {
                    r[t * i + o] = e.toLowerCase()
                })
            }),
            s[e] = r
        }
        function o(e, t, i) {
            return e = "\\d{" + e + "," + t + "}",
            i && (e += "|(?:" + yt(s.numbers) + ")+"),
            e
        }
        function a(e, t) {
            s[e] = s[e] || t
        }
        var s, l;
        return s = new ct(t),
        i("modifiers"),
        "months weekdays units numbers articles tokens timeMarker ampm timeSuffixes dateParse timeParse".split(" ").forEach(i),
        l = !s.monthSuffix,
        r("months", l, 12),
        r("weekdays", l, 7),
        r("units", !1, 8),
        r("numbers", !1, 10),
        a("code", e),
        a("date", o(1, 2, s.digitDate)),
        a("year", "'\\d{2}|" + o(4, 4)),
        a("num", function() {
            var e = ["-?\\d+"].concat(s.articles);
            return s.numbers && (e = e.concat(s.numbers)),
            yt(e)
        }()),
        function() {
            var e = [];
            s.i = {},
            s.modifiers.push({
                name: "day",
                src: "yesterday",
                value: -1
            }),
            s.modifiers.push({
                name: "day",
                src: "today",
                value: 0
            }),
            s.modifiers.push({
                name: "day",
                src: "tomorrow",
                value: 1
            }),
            s.modifiers.forEach(function(t) {
                var i = t.name;
                n(t.src, function(n) {
                    var r = s[i];
                    s.i[n] = t,
                    e.push({
                        name: i,
                        src: n,
                        value: t.value
                    }),
                    s[i] = r ? r + "|" + n : n
                })
            }),
            s.day += "|" + yt(s.weekdays),
            s.modifiers = e
        }(),
        s.monthSuffix && (s.month = o(1, 2),
        s.months = "1 2 3 4 5 6 7 8 9 10 11 12".split(" ").map(function(e) {
            return e + s.monthSuffix
        })),
        s.full_month = o(1, 2) + "|" + yt(s.months),
        0 < s.timeSuffixes.length && s.addFormat(It(s), !1, rn),
        s.addFormat("{day}", !0),
        s.addFormat("{month}" + (s.monthSuffix || "")),
        s.addFormat("{year}" + (s.yearSuffix || "")),
        s.timeParse.forEach(function(e) {
            s.addFormat(e, !0)
        }),
        s.dateParse.forEach(function(e) {
            s.addFormat(e)
        }),
        hn[e] = s
    }
    function mt(e, t, i, n) {
        e.g.unshift({
            r: n,
            locale: e,
            q: oi("^" + t + "$", "i"),
            to: i
        })
    }
    function vt(e) {
        return e.slice(0, 1).toUpperCase() + e.slice(1)
    }
    function yt(e) {
        return e.filter(function(e) {
            return !!e
        }).join("|")
    }
    function bt() {
        var e = ai.SugarNewDate;
        return e ? e() : new ai
    }
    function wt(e, t) {
        var i;
        return g(e[0]) ? e : wi(e[0]) && !wi(e[1]) ? [e[0]] : xi(e[0]) && t ? [xt(e[0]), e[1]] : (i = {},
        tn.forEach(function(t, n) {
            i[t.name] = e[n]
        }),
        [i])
    }
    function xt(e) {
        var t, i = {};
        return (e = e.match(/^(\d+)?\s?(\w+?)s?$/i)) && (p(t) && (t = parseInt(e[1]) || 1),
        i[e[2].toLowerCase()] = t),
        i
    }
    function Et(e, t, i) {
        var n;
        for (p(i) && (i = nn.length),
        t = t || 0; i > t && (n = nn[t],
        !1 !== e(n.name, n, t)); t++)
            ;
    }
    function _t(e, t) {
        var i, n, r = {};
        return t.forEach(function(t, o) {
            i = e[o + 1],
            p(i) || "" === i || ("year" === t && (r.t = i.replace(/'/, "")),
            n = parseFloat(i.replace(/'/, "").replace(/,/, ".")),
            r[t] = isNaN(n) ? i.toLowerCase() : n)
        }),
        r
    }
    function Tt(e) {
        return e = e.trim().replace(/^just (?=now)|\.+$/i, ""),
        Ct(e)
    }
    function Ct(e) {
        return e.replace(en, function(e, t, i) {
            var n, r, o = 0, a = 1;
            return t ? e : (i.split("").reverse().forEach(function(e) {
                e = an[e];
                var t = e > 9;
                t ? (n && (o += a),
                a *= e / (r || 1),
                r = e) : (!1 === n && (a *= 10),
                o += a * e),
                n = t
            }),
            n && (o += a),
            o)
        })
    }
    function Rt(e, t, i, n) {
        function r(e) {
            p.push(e)
        }
        function o() {
            p.forEach(function(e) {
                e.call()
            })
        }
        function a() {
            var e = c.getWeekday();
            c.setWeekday(7 * (m.num - 1) + (e > w ? w + 7 : w))
        }
        function s() {
            var e = f.i[m.edge];
            Et(function(e) {
                return u(m[e]) ? (v = e,
                !1) : void 0
            }, 4),
            "year" === v ? m.e = "month" : ("month" === v || "week" === v) && (m.e = "day"),
            c[(0 > e.value ? "endOf" : "beginningOf") + vt(v)](),
            -2 === e.value && c.reset()
        }
        function l() {
            var e;
            Et(function(t, i, n) {
                if ("day" === t && (t = "date"),
                u(m[t])) {
                    if (n >= b)
                        return c.setTime(0 / 0),
                        !1;
                    e = e || {},
                    e[t] = m[t],
                    delete m[t]
                }
            }),
            e && r(function() {
                c.set(e, !0)
            })
        }
        var c, d, h, p, f, m, v, b, w, x, E;
        return c = bt(),
        p = [],
        c.utc(n),
        _i(e) ? c.utc(e.isUTC()).setTime(e.getTime()) : wi(e) ? c.setTime(e) : g(e) ? (c.set(e, !0),
        m = e) : xi(e) && (h = ft(t),
        e = Tt(e),
        h && y(h.o ? [h.o].concat(h.g) : h.g, function(i, n) {
            var o = e.match(n.q);
            return o ? (f = n.locale,
            m = _t(o, n.to),
            f.o = n,
            m.utc && c.utc(),
            m.timestamp ? (m = m.timestamp,
            !1) : (n.r && !xi(m.month) && (xi(m.date) || ht(h, t)) && (E = m.month,
            m.month = m.date,
            m.date = E),
            m.year && 2 === m.t.length && (m.year = 100 * Hi(H(bt(), "FullYear") / 100) - 100 * Hi(m.year / 100) + m.year),
            m.month && (m.month = f.getMonth(m.month),
            m.shift && !m.unit && (m.unit = f.units[7])),
            m.weekday && m.date ? delete m.weekday : m.weekday && (m.weekday = f.getWeekday(m.weekday),
            m.shift && !m.unit && (m.unit = f.units[5])),
            m.day && (E = f.i[m.day]) ? (m.day = E.value,
            c.reset(),
            d = !0) : m.day && -1 < (w = f.getWeekday(m.day)) && (delete m.day,
            m.num && m.month ? (r(a),
            m.day = 1) : m.weekday = w),
            m.date && !wi(m.date) && (m.date = ut(f, m.date)),
            m.ampm && m.ampm === f.ampm[1] && 12 > m.hour ? m.hour += 12 : m.ampm === f.ampm[0] && 12 === m.hour && (m.hour = 0),
            ("offset_hours"in m || "offset_minutes"in m) && (c.utc(),
            m.offset_minutes = m.offset_minutes || 0,
            m.offset_minutes += 60 * m.offset_hours,
            "-" === m.offset_sign && (m.offset_minutes *= -1),
            m.minute -= m.offset_minutes),
            m.unit && (d = !0,
            x = pt(f, m.num),
            b = f.units.indexOf(m.unit) % 8,
            v = Zi.units[b],
            l(),
            m.shift && (x *= (E = f.i[m.shift]) ? E.value : 0),
            m.sign && (E = f.i[m.sign]) && (x *= E.value),
            u(m.weekday) && (c.set({
                weekday: m.weekday
            }, !0),
            delete m.weekday),
            m[v] = (m[v] || 0) + x),
            m.edge && r(s),
            "-" === m.year_sign && (m.year *= -1),
            Et(function(e, t, i) {
                t = m[e];
                var n = t % 1;
                n && (m[nn[i - 1].name] = Hi(n * ("second" === e ? 1e3 : 60)),
                m[e] = Ai(t))
            }, 1, 4),
            !1)) : void 0
        }),
        m ? d ? c.advance(m) : (c._utc && c.reset(),
        Lt(c, m, !0, !1, i)) : ("now" !== e && (c = new ai(e)),
        n && c.addMinutes(-c.getTimezoneOffset())),
        o(),
        c.utc(!1)),
        {
            c: c,
            set: m
        }
    }
    function St(e) {
        var t, i = Si(e), n = i, r = 0;
        return Et(function(e, o, a) {
            t = Ai(_(i / o.b(), 1)),
            t >= 1 && (n = t,
            r = a)
        }, 1),
        [n, r, e]
    }
    function kt(e) {
        var t = St(e.millisecondsFromNow());
        return (6 === t[1] || 5 === t[1] && 4 === t[0] && e.daysFromNow() >= bt().daysInMonth()) && (t[0] = Si(e.monthsFromNow()),
        t[1] = 6),
        t
    }
    function Mt(e, t, i) {
        function n(e, i) {
            var n = H(e, "Month");
            return ft(i).months[n + 12 * t]
        }
        At(e, n, i),
        At(vt(e), n, i, 1)
    }
    function At(e, t, i, n) {
        cn[e] = function(e, r) {
            var o = t(e, r);
            return i && (o = o.slice(0, i)),
            n && (o = o.slice(0, n).toUpperCase() + o.slice(n)),
            o
        }
    }
    function Ht(e, t, i) {
        cn[e] = t,
        cn[e + e] = function(e, i) {
            return S(t(e, i), 2)
        }
        ,
        i && (cn[e + e + e] = function(e, i) {
            return S(t(e, i), 3)
        }
        ,
        cn[e + e + e + e] = function(e, i) {
            return S(t(e, i), 4)
        }
        )
    }
    function Pt(e) {
        var t = e.match(/(\{\w+\})|[^{}]+/g);
        ln[e] = t.map(function(e) {
            return e.replace(/\{(\w+)\}/, function(t, i) {
                return e = cn[i] || i,
                i
            }),
            e
        })
    }
    function Ot(e, t, i, n) {
        var r;
        if (!e.isValid())
            return "Invalid Date";
        if (Date[t] ? t = Date[t] : Ci(t) && (r = kt(e),
        t = t.apply(e, r.concat(ft(n)))),
        !t && i)
            return r = r || kt(e),
            0 === r[1] && (r[1] = 1,
            r[0] = 1),
            e = ft(n),
            dt(e, r, 0 < r[2] ? "future" : "past");
        t = t || "long",
        ("short" === t || "long" === t || "full" === t) && (t = ft(n)[t]),
        ln[t] || Pt(t);
        var o, a;
        for (r = "",
        t = ln[t],
        o = 0,
        i = t.length; i > o; o++)
            a = t[o],
            r += Ci(a) ? a(e, n) : a;
        return r
    }
    function Dt(e, t, i, n, r) {
        var o, a, s, l = 0, c = 0, d = 0;
        return o = Rt(t, i, null , r),
        n > 0 && (c = d = n,
        a = !0),
        o.c.isValid() ? (o.set && o.set.e && (dn.forEach(function(t) {
            t.name === o.set.e && (l = t.b(o.c, e - o.c) - 1)
        }),
        t = vt(o.set.e),
        (o.set.edge || o.set.shift) && o.c["beginningOf" + t](),
        "month" === o.set.e && (s = o.c.clone()["endOf" + t]().getTime()),
        !a && o.set.sign && "millisecond" != o.set.e && (c = 50,
        d = -50)),
        a = e.getTime(),
        t = o.c.getTime(),
        s = $t(e, t, s || t + l),
        a >= t - c && s + d >= a) : !1
    }
    function $t(e, t, i) {
        return t = new ai(t),
        e = new ai(i).utc(e.isUTC()),
        23 !== H(e, "Hours") && (t = t.getTimezoneOffset(),
        e = e.getTimezoneOffset(),
        t !== e && (i += (e - t).minutes())),
        i
    }
    function Lt(e, t, i, n, r) {
        function o(e) {
            return u(t[e]) ? t[e] : t[e + "s"]
        }
        function a(e) {
            return u(o(e))
        }
        var s;
        if (wi(t) && n)
            t = {
                milliseconds: t
            };
        else if (wi(t))
            return e.setTime(t),
            e;
        u(t.date) && (t.day = t.date),
        Et(function(n, r, o) {
            var l = "day" === n;
            return a(n) || l && a("weekday") ? (t.e = n,
            s = +o,
            !1) : void (!i || "week" === n || l && a("week") || P(e, r.method, l ? 1 : 0))
        }),
        dn.forEach(function(i) {
            var r = i.name;
            i = i.method;
            var s;
            s = o(r),
            p(s) || (n ? ("week" === r && (s = (t.day || 0) + 7 * s,
            i = "Date"),
            s = s * n + H(e, i)) : "month" === r && a("day") && P(e, "Date", 15),
            P(e, i, s),
            n && "month" === r && (r = s,
            0 > r && (r = r % 12 + 12),
            r % 12 != H(e, "Month") && P(e, "Date", 0)))
        }),
        n || a("day") || !a("weekday") || e.setWeekday(o("weekday"));
        var l;
        e: {
            switch (r) {
            case -1:
                l = e > bt();
                break e;
            case 1:
                l = e < bt();
                break e
            }
            l = void 0
        }
        return l && Et(function(t, i) {
            return (i.k || "week" === t && a("weekday")) && !(a(t) || "day" === t && a("weekday")) ? (e[i.j](r),
            !1) : void 0
        }, s + 1),
        e
    }
    function It(e, t) {
        var i, n = on, r = {
            h: 0,
            m: 1,
            s: 2
        };
        return e = e || Zi,
        n.replace(/{([a-z])}/g, function(n, o) {
            var a = []
              , s = "h" === o
              , l = s && !t;
            return "t" === o ? e.ampm.join("|") : (s && a.push(":"),
            (i = e.timeSuffixes[r[o]]) && a.push(i + "\\s*"),
            0 === a.length ? "" : "(?:" + a.join("|") + ")" + (l ? "" : "?"))
        })
    }
    function Ft(e, t, i) {
        var n, r;
        return wi(e[1]) ? n = wt(e)[0] : (n = e[0],
        r = e[1]),
        Rt(n, r, t, i).c
    }
    function Bt(e, t) {
        function i() {
            return Hi(this * t)
        }
        function n() {
            return Ft(arguments)[e.j](this)
        }
        function r() {
            return Ft(arguments)[e.j](-this)
        }
        var o = e.name
          , a = {};
        a[o] = i,
        a[o + "s"] = i,
        a[o + "Before"] = r,
        a[o + "sBefore"] = r,
        a[o + "Ago"] = r,
        a[o + "sAgo"] = r,
        a[o + "After"] = n,
        a[o + "sAfter"] = n,
        a[o + "FromNow"] = n,
        a[o + "sFromNow"] = n,
        li.extend(a)
    }
    function jt(e, t) {
        this.start = Nt(e),
        this.end = Nt(t)
    }
    function Nt(e) {
        return _i(e) ? new ai(e.getTime()) : null == e ? e : _i(e) ? e.getTime() : e.valueOf()
    }
    function zt(e) {
        return e = null == e ? e : _i(e) ? e.getTime() : e.valueOf(),
        !!e || 0 === e
    }
    function Ut(e, t) {
        var i, n, r, o;
        return wi(t) ? new ai(e.getTime() + t) : (i = t[0],
        n = t[1],
        r = H(e, n),
        o = new ai(e.getTime()),
        P(o, n, r + i),
        o)
    }
    function Vt(e, t) {
        return si.fromCharCode(e.charCodeAt(0) + t)
    }
    function Wt(e, t) {
        return e + t
    }
    function Gt(e, t, i, n, r) {
        1 / 0 !== t && (e.timers || (e.timers = []),
        wi(t) || (t = 1),
        e.n = !1,
        e.timers.push(setTimeout(function() {
            e.n || i.apply(n, r || [])
        }, t)))
    }
    function qt(e, t, i, n, r, o) {
        var a = e.toFixed(20)
          , s = a.search(/\./)
          , a = a.search(/[1-9]/)
          , s = s - a;
        return s > 0 && (s -= 1),
        r = Oi(Pi(Ai(s / 3), !1 === r ? i.length : r), -n),
        n = i.charAt(r + n - 1),
        -9 > s && (r = -3,
        t = Si(s) - 9,
        n = i.slice(0, 1)),
        i = o ? ki(2, 10 * r) : ki(10, 3 * r),
        _(e / i, t || 0).format() + n.trim()
    }
    function Xt(e, t, i, n) {
        var r, o, a;
        (o = t.match(/^(.+?)(\[.*\])$/)) ? (a = o[1],
        t = o[2].replace(/^\[|\]$/g, "").split("]["),
        t.forEach(function(t) {
            r = !t || t.match(/^\d+$/),
            !a && Ei(e) && (a = e.length),
            f(e, a) || (e[a] = r ? [] : {}),
            e = e[a],
            a = t
        }),
        !a && r && (a = e.length.toString()),
        Xt(e, a, i, n)) : e[t] = n && "true" === i ? !0 : n && "false" === i ? !1 : i
    }
    function Yt(e, t) {
        var i;
        return Ei(t) || g(t) && t.toString === hi ? (i = [],
        y(t, function(t, n) {
            e && (t = e + "[" + t + "]"),
            i.push(Yt(t, n))
        }),
        i.join("&")) : e ? Jt(e) + "=" + (_i(t) ? t.getTime() : Jt(t)) : ""
    }
    function Jt(e) {
        return e || !1 === e || 0 === e ? encodeURIComponent(e).replace(/%20/g, "+") : ""
    }
    function Kt(e, t, i) {
        var n, r = e instanceof E ? new E : {};
        return y(e, function(e, o) {
            n = !1,
            d(t, function(t) {
                (Ti(t) ? t.test(e) : g(t) ? t[e] === o : e === si(t)) && (n = !0)
            }, 1),
            n === i && (r[e] = o)
        }),
        r
    }
    function Zt(e) {
        if (e = +e,
        0 > e || 1 / 0 === e)
            throw new RangeError("Invalid number");
        return e
    }
    function Qt(e, t) {
        return C(u(t) ? t : " ", e)
    }
    function ei(e, t, i, n, r) {
        var o;
        if (e.length <= t)
            return e.toString();
        switch (n = p(n) ? "..." : n,
        i) {
        case "left":
            return e = r ? ti(e, t, !0) : e.slice(e.length - t),
            n + e;
        case "middle":
            return i = Mi(t / 2),
            o = Ai(t / 2),
            t = r ? ti(e, i) : e.slice(0, i),
            e = r ? ti(e, o, !0) : e.slice(e.length - o),
            t + n + e;
        default:
            return t = r ? ti(e, t) : e.slice(0, t),
            t + n
        }
    }
    function ti(e, t, i) {
        if (i)
            return ti(e.reverse(), t).reverse();
        i = oi("(?=[" + T() + "])");
        var n = 0;
        return e.split(i).filter(function(e) {
            return n += e.length,
            t >= n
        }).join("")
    }
    function ii(e, t, i) {
        return xi(t) && (t = e.indexOf(t),
        -1 === t && (t = i ? e.length : 0)),
        t
    }
    var ni = Object
      , ri = Array
      , oi = RegExp
      , ai = Date
      , si = String
      , li = Number
      , ci = Math
      , di = "undefined" != typeof global ? global : this
      , hi = ni.prototype.toString
      , ui = ni.prototype.hasOwnProperty
      , pi = ni.defineProperty && ni.defineProperties
      , fi = "function" == typeof oi()
      , gi = !("0"in new si("a"))
      , mi = {}
      , vi = /^\[object Date|Array|String|Number|RegExp|Boolean|Arguments\]$/
      , yi = "Boolean Number String Array Date RegExp Function".split(" ")
      , bi = i("boolean", yi[0])
      , wi = i("number", yi[1])
      , xi = i("string", yi[2])
      , Ei = t(yi[3])
      , _i = t(yi[4])
      , Ti = t(yi[5])
      , Ci = t(yi[6]);
    E.prototype.constructor = ni;
    var Ri, Si = ci.abs, ki = ci.pow, Mi = ci.ceil, Ai = ci.floor, Hi = ci.round, Pi = ci.min, Oi = ci.max, Di = 48, $i = 57, Li = 65296, Ii = 65305, Fi = ".", Bi = "", ji = {};
    n(ni),
    y(yi, function(e, t) {
        n(di[t])
    });
    var Ni, zi;
    for (zi = 0; 9 >= zi; zi++)
        Ni = si.fromCharCode(zi + Li),
        Bi += Ni,
        ji[Ni] = si.fromCharCode(zi + Di);
    ji[","] = "",
    ji["\uff0e"] = Fi,
    ji[Fi] = Fi,
    Ri = oi("[" + Bi + "\uff0e," + Fi + "]", "g"),
    r(ni, !1, !1, {
        keys: function(e) {
            var t = [];
            if (!g(e) && !Ti(e) && !Ci(e))
                throw new TypeError("Object required");
            return y(e, function(e) {
                t.push(e)
            }),
            t
        }
    }),
    r(ri, !1, !1, {
        isArray: function(e) {
            return Ei(e)
        }
    }),
    r(ri, !0, !1, {
        every: function(e, t) {
            var i = this.length
              , n = 0;
            for (N(arguments); i > n; ) {
                if (n in this && !e.call(t, this[n], n, this))
                    return !1;
                n++
            }
            return !0
        },
        some: function(e, t) {
            var i = this.length
              , n = 0;
            for (N(arguments); i > n; ) {
                if (n in this && e.call(t, this[n], n, this))
                    return !0;
                n++
            }
            return !1
        },
        map: function(e, t) {
            t = arguments[1];
            var i = this.length
              , n = 0
              , r = Array(i);
            for (N(arguments); i > n; )
                n in this && (r[n] = e.call(t, this[n], n, this)),
                n++;
            return r
        },
        filter: function(e) {
            var t = arguments[1]
              , i = this.length
              , n = 0
              , r = [];
            for (N(arguments); i > n; )
                n in this && e.call(t, this[n], n, this) && r.push(this[n]),
                n++;
            return r
        },
        indexOf: function(e, t) {
            return xi(this) ? this.indexOf(e, t) : B(this, e, t, 1)
        },
        lastIndexOf: function(e, t) {
            return xi(this) ? this.lastIndexOf(e, t) : B(this, e, t, -1)
        },
        forEach: function(e, t) {
            var i = this.length
              , n = 0;
            for (h(e); i > n; )
                n in this && e.call(t, this[n], n, this),
                n++
        },
        reduce: function(e, t) {
            return j(this, e, t)
        },
        reduceRight: function(e, t) {
            return j(this, e, t, !0)
        }
    }),
    r(Function, !0, !1, {
        bind: function(e) {
            var t, i = this, n = c(arguments, null , 1);
            if (!Ci(this))
                throw new TypeError("Function.prototype.bind called on a non-function");
            return t = function() {
                return i.apply(i.prototype && this instanceof i ? this : e, n.concat(c(arguments)))
            }
            ,
            t.prototype = this.prototype,
            t
        }
    }),
    r(ai, !1, !1, {
        now: function() {
            return (new ai).getTime()
        }
    }),
    function() {
        var e = T().match(/^\s+$/);
        try {
            si.prototype.trim.call([1])
        } catch (t) {
            e = !1
        }
        r(si, !0, !e, {
            trim: function() {
                return this.toString().trimLeft().trimRight()
            },
            trimLeft: function() {
                return this.replace(oi("^[" + T() + "]+"), "")
            },
            trimRight: function() {
                return this.replace(oi("[" + T() + "]+$"), "")
            }
        })
    }(),
    function() {
        var e = new ai(ai.UTC(1999, 11, 31))
          , e = e.toISOString && "1999-12-31T00:00:00.000Z" === e.toISOString();
        o(ai, !0, !e, "toISOString,toJSON", function(e, t) {
            e[t] = function() {
                return S(this.getUTCFullYear(), 4) + "-" + S(this.getUTCMonth() + 1, 2) + "-" + S(this.getUTCDate(), 2) + "T" + S(this.getUTCHours(), 2) + ":" + S(this.getUTCMinutes(), 2) + ":" + S(this.getUTCSeconds(), 2) + "." + S(this.getUTCMilliseconds(), 3) + "Z"
            }
        })
    }();
    var Ui = "AlphanumericSortOrder"
      , Vi = "AlphanumericSortIgnore"
      , Wi = "AlphanumericSortIgnoreCase"
      , Gi = "AlphanumericSortEquivalents"
      , qi = "AlphanumericSortNatural";
    r(ri, !1, !0, {
        create: function() {
            var e = [];
            return c(arguments, function(t) {
                (!m(t) && "length"in t && ("[object Arguments]" === hi.call(t) || t.callee) || !m(t) && "length"in t && !xi(t) && !v(t)) && (t = ri.prototype.slice.call(t, 0)),
                e = e.concat(t)
            }),
            e
        }
    }),
    r(ri, !0, !1, {
        find: function(e, t) {
            return h(e),
            Z(this, e, 0, !1, !1, t)
        },
        findIndex: function(e, t) {
            var i;
            return h(e),
            i = Z(this, e, 0, !1, !0, t),
            p(i) ? -1 : i
        }
    }),
    r(ri, !0, !0, {
        findFrom: function(e, t, i) {
            return Z(this, e, t, i)
        },
        findIndexFrom: function(e, t, i) {
            return t = Z(this, e, t, i, !0),
            p(t) ? -1 : t
        },
        findAll: function(e, t, i) {
            var n, r = [];
            return 0 < this.length && (n = X(e),
            J(this, function(e, t, i) {
                n(e, t, i) && r.push(e)
            }, t, i)),
            r
        },
        count: function(e) {
            return p(e) ? this.length : this.findAll(e).length
        },
        removeAt: function(e, t) {
            return p(e) ? this : (p(t) && (t = e),
            this.splice(e, t - e + 1),
            this)
        },
        include: function(e, t) {
            return this.clone().add(e, t)
        },
        exclude: function() {
            return ri.prototype.remove.apply(this.clone(), arguments)
        },
        clone: function() {
            return w([], this)
        },
        unique: function(e) {
            return Q(this, e)
        },
        flatten: function(e) {
            return tt(this, e)
        },
        union: function() {
            return Q(this.concat(it(arguments)))
        },
        intersect: function() {
            return et(this, it(arguments), !1)
        },
        subtract: function() {
            return et(this, it(arguments), !0)
        },
        at: function() {
            return L(this, arguments)
        },
        first: function(e) {
            return p(e) ? this[0] : (0 > e && (e = 0),
            this.slice(0, e))
        },
        last: function(e) {
            return p(e) ? this[this.length - 1] : this.slice(0 > this.length - e ? 0 : this.length - e)
        },
        from: function(e) {
            return this.slice(e)
        },
        to: function(e) {
            return p(e) && (e = this.length),
            this.slice(0, e)
        },
        min: function(e, t) {
            return ot(this, e, "min", t)
        },
        max: function(e, t) {
            return ot(this, e, "max", t)
        },
        least: function(e, t) {
            return ot(this.groupBy.apply(this, [e]), "length", "min", t)
        },
        most: function(e, t) {
            return ot(this.groupBy.apply(this, [e]), "length", "max", t)
        },
        sum: function(e) {
            return e = e ? this.map(e) : this,
            0 < e.length ? e.reduce(function(e, t) {
                return e + t
            }) : 0
        },
        average: function(e) {
            return e = e ? this.map(e) : this,
            0 < e.length ? e.sum() / e.length : 0
        },
        inGroups: function(e, t) {
            var i = 1 < arguments.length
              , n = this
              , r = []
              , o = Mi(this.length / e);
            return b(e, function(e) {
                e *= o;
                var a = n.slice(e, e + o);
                i && a.length < o && b(o - a.length, function() {
                    a = a.add(t)
                }),
                r.push(a)
            }),
            r
        },
        inGroupsOf: function(e, t) {
            var i, n = [], r = this.length, o = this;
            return 0 === r || 0 === e ? o : (p(e) && (e = 1),
            p(t) && (t = null ),
            b(Mi(r / e), function(r) {
                for (i = o.slice(e * r, e * r + e); i.length < e; )
                    i.push(t);
                n.push(i)
            }),
            n)
        },
        isEmpty: function() {
            return 0 == this.compact().length
        },
        sortBy: function(e, t) {
            var i = this.clone();
            return i.sort(function(n, r) {
                var o, a;
                return o = Y(n, e, i, [n]),
                a = Y(r, e, i, [r]),
                (xi(o) && xi(a) ? at(o, a) : a > o ? -1 : o > a ? 1 : 0) * (t ? -1 : 1)
            }),
            i
        },
        randomize: function() {
            for (var e, t, i = this.concat(), n = i.length; n; )
                e = ci.random() * n | 0,
                t = i[--n],
                i[n] = i[e],
                i[e] = t;
            return i
        },
        zip: function() {
            var e = c(arguments);
            return this.map(function(t, i) {
                return [t].concat(e.map(function(e) {
                    return i in e ? e[i] : null
                }))
            })
        },
        sample: function(e) {
            var t = this.randomize();
            return 0 < arguments.length ? t.slice(0, e) : t[0]
        },
        each: function(e, t, i) {
            return J(this, e, t, i),
            this
        },
        add: function(e, t) {
            return (!wi(li(t)) || isNaN(t)) && (t = this.length),
            ri.prototype.splice.apply(this, [t, 0].concat(e)),
            this
        },
        remove: function() {
            var e = this;
            return c(arguments, function(t) {
                var i = 0;
                for (t = X(t); i < e.length; )
                    t(e[i], i, e) ? e.splice(i, 1) : i++
            }),
            e
        },
        compact: function(e) {
            var t = [];
            return J(this, function(i) {
                Ei(i) ? t.push(i.compact()) : e && i ? t.push(i) : e || null == i || i.valueOf() !== i.valueOf() || t.push(i)
            }),
            t
        },
        groupBy: function(e, t) {
            var i, n = this, r = {};
            return J(n, function(t, o) {
                i = Y(t, e, n, [t, o, n]),
                r[i] || (r[i] = []),
                r[i].push(t)
            }),
            t && y(r, t),
            r
        },
        none: function() {
            return !this.any.apply(this, arguments)
        }
    }),
    r(ri, !0, !0, {
        all: ri.prototype.every,
        any: ri.prototype.some,
        insert: ri.prototype.add
    }),
    r(ni, !1, !0, {
        map: function(e, t) {
            var i, n, r = {};
            for (i in e)
                f(e, i) && (n = e[i],
                r[i] = Y(n, t, e, [i, n, e]));
            return r
        },
        reduce: function(e) {
            var t = ni.keys(x(e)).map(function(t) {
                return e[t]
            });
            return t.reduce.apply(t, c(arguments, null , 1))
        },
        each: function(e, t) {
            return h(t),
            y(e, t),
            e
        },
        size: function(e) {
            return ni.keys(x(e)).length
        }
    });
    var Xi = "any all none count find findAll isEmpty".split(" ")
      , Yi = "sum average min max least most".split(" ")
      , Ji = ["map", "reduce", "size"]
      , Ki = Xi.concat(Yi).concat(Ji);
    !function() {
        function e() {
            var e = arguments;
            return 0 < e.length && !Ci(e[0])
        }
        var t = ri.prototype.map;
        o(ri, !0, e, "every,all,some,filter,any,none,find,findIndex", function(e, t) {
            var i = ri.prototype[t];
            e[t] = function(e) {
                var t = X(e);
                return i.call(this, function(e, i) {
                    return t(e, i, this)
                })
            }
        }),
        r(ri, !0, e, {
            map: function(e) {
                return t.call(this, function(t, i) {
                    return Y(t, e, this, [t, i, this])
                })
            }
        })
    }(),
    function() {
        ri[Ui] = "A\xc1\xc0\xc2\xc3\u0104BC\u0106\u010c\xc7D\u010e\xd0E\xc9\xc8\u011a\xca\xcb\u0118FG\u011eH\u0131I\xcd\xcc\u0130\xce\xcfJKL\u0141MN\u0143\u0147\xd1O\xd3\xd2\xd4PQR\u0158S\u015a\u0160\u015eT\u0164U\xda\xd9\u016e\xdb\xdcVWXY\xddZ\u0179\u017b\u017d\xde\xc6\u0152\xd8\xd5\xc5\xc4\xd6".split("").map(function(e) {
            return e + e.toLowerCase()
        }).join("");
        var e = {};
        J("A\xc1\xc0\xc2\xc3\xc4 C\xc7 E\xc9\xc8\xca\xcb I\xcd\xcc\u0130\xce\xcf O\xd3\xd2\xd4\xd5\xd6 S\xdf U\xda\xd9\xdb\xdc".split(" "), function(t) {
            var i = t.charAt(0);
            J(t.slice(1).split(""), function(t) {
                e[t] = i,
                e[t.toLowerCase()] = i.toLowerCase()
            })
        }),
        ri[qi] = !0,
        ri[Wi] = !0,
        ri[Gi] = e
    }(),
    lt(Xi),
    lt(Yi, !0),
    F(Ji, E),
    ri.AlphanumericSort = at;
    var Zi, Qi, en, tn, nn, rn = "ampm hour minute second ampm utc offset_sign offset_hours offset_minutes ampm".split(" "), on = "({t})?\\s*(\\d{1,2}(?:[,.]\\d+)?)(?:{h}([0-5]\\d(?:[,.]\\d+)?)?{m}(?::?([0-5]\\d(?:[,.]\\d+)?){s})?\\s*(?:({t})|(Z)|(?:([+-])(\\d{2,2})(?::?(\\d{2,2}))?)?)?|\\s*({t}))", an = {}, sn = [], ln = {}, cn = {
        yyyy: function(e) {
            return H(e, "FullYear")
        },
        yy: function(e) {
            return H(e, "FullYear") % 100
        },
        ord: function(e) {
            return e = H(e, "Date"),
            e + k(e)
        },
        tz: function(e) {
            return e.getUTCOffset()
        },
        isotz: function(e) {
            return e.getUTCOffset(!0)
        },
        Z: function(e) {
            return e.getUTCOffset()
        },
        ZZ: function(e) {
            return e.getUTCOffset().replace(/(\d{2})$/, ":$1")
        }
    }, dn = [{
        name: "year",
        method: "FullYear",
        k: !0,
        b: function(e) {
            return 864e5 * (365 + (e ? e.isLeapYear() ? 1 : 0 : .25))
        }
    }, {
        name: "month",
        error: .919,
        method: "Month",
        k: !0,
        b: function(e, t) {
            var i, n = 30.4375;
            return e && (i = e.daysInMonth(),
            t <= i.days() && (n = i)),
            864e5 * n
        }
    }, {
        name: "week",
        method: "ISOWeek",
        b: e(6048e5)
    }, {
        name: "day",
        error: .958,
        method: "Date",
        k: !0,
        b: e(864e5)
    }, {
        name: "hour",
        method: "Hours",
        b: e(36e5)
    }, {
        name: "minute",
        method: "Minutes",
        b: e(6e4)
    }, {
        name: "second",
        method: "Seconds",
        b: e(1e3)
    }, {
        name: "millisecond",
        method: "Milliseconds",
        b: e(1)
    }], hn = {};
    ct.prototype = {
        getMonth: function(e) {
            return wi(e) ? e - 1 : this.months.indexOf(e) % 12
        },
        getWeekday: function(e) {
            return this.weekdays.indexOf(e) % 7
        },
        addFormat: function(e, t, i, n, r) {
            var o, a = i || [], s = this;
            e = e.replace(/\s+/g, "[,. ]*"),
            e = e.replace(/\{([^,]+?)\}/g, function(e, t) {
                var n, r, o, l = t.match(/\?$/);
                o = t.match(/^(\d+)\??$/);
                var c = t.match(/(\d)(?:-(\d))?/)
                  , d = t.replace(/[^a-z]+$/, "");
                return o ? n = s.tokens[o[1]] : s[d] ? n = s[d] : s[d + "s"] && (n = s[d + "s"],
                c && (r = [],
                n.forEach(function(e, t) {
                    var i = t % (s.units ? 8 : n.length);
                    i >= c[1] && i <= (c[2] || c[1]) && r.push(e)
                }),
                n = r),
                n = yt(n)),
                o ? o = "(?:" + n + ")" : (i || a.push(d),
                o = "(" + n + ")"),
                l && (o += "?"),
                o
            }),
            t ? (t = It(s, r),
            r = ["t", "[\\s\\u3000]"].concat(s.timeMarker),
            o = e.match(/\\d\{\d,\d\}\)+\??$/),
            mt(s, "(?:" + t + ")[,\\s\\u3000]+?" + e, rn.concat(a), n),
            mt(s, e + "(?:[,\\s]*(?:" + r.join("|") + (o ? "+" : "*") + ")" + t + ")?", a.concat(rn), n)) : mt(s, e, a, n)
        }
    },
    r(ai, !1, !0, {
        create: function() {
            return Ft(arguments)
        },
        past: function() {
            return Ft(arguments, -1)
        },
        future: function() {
            return Ft(arguments, 1)
        },
        addLocale: function(e, t) {
            return gt(e, t)
        },
        setLocale: function(e) {
            var t = ft(e, !1);
            return Qi = t,
            e && e != t.code && (t.code = e),
            t
        },
        getLocale: function(e) {
            return e ? ft(e, !1) : Qi
        },
        addFormat: function(e, t, i) {
            mt(ft(i), e, t)
        }
    }),
    r(ai, !0, !0, {
        set: function() {
            var e = wt(arguments);
            return Lt(this, e[0], e[1])
        },
        setWeekday: function(e) {
            return p(e) ? void 0 : P(this, "Date", H(this, "Date") + e - H(this, "Day"))
        },
        setISOWeek: function(e) {
            var t = H(this, "Day") || 7;
            return p(e) ? void 0 : (this.set({
                month: 0,
                date: 4
            }),
            this.set({
                weekday: 1
            }),
            e > 1 && this.addWeeks(e - 1),
            1 !== t && this.advance({
                days: t - 1
            }),
            this.getTime())
        },
        getISOWeek: function() {
            var e;
            e = this.clone();
            var t = H(e, "Day") || 7;
            return e.addDays(4 - t).reset(),
            1 + Ai(e.daysSince(e.clone().beginningOfYear()) / 7)
        },
        beginningOfISOWeek: function() {
            var e = this.getDay();
            return 0 === e ? e = -6 : 1 !== e && (e = 1),
            this.setWeekday(e),
            this.reset()
        },
        endOfISOWeek: function() {
            return 0 !== this.getDay() && this.setWeekday(7),
            this.endOfDay()
        },
        getUTCOffset: function(e) {
            var t = this._utc ? 0 : this.getTimezoneOffset()
              , i = !0 === e ? ":" : "";
            return !t && e ? "Z" : S(Ai(-t / 60), 2, !0) + i + S(Si(t % 60), 2)
        },
        utc: function(e) {
            return l(this, "_utc", !0 === e || 0 === arguments.length),
            this
        },
        isUTC: function() {
            return !!this._utc || 0 === this.getTimezoneOffset()
        },
        advance: function() {
            var e = wt(arguments, !0);
            return Lt(this, e[0], e[1], 1)
        },
        rewind: function() {
            var e = wt(arguments, !0);
            return Lt(this, e[0], e[1], -1)
        },
        isValid: function() {
            return !isNaN(this.getTime())
        },
        isAfter: function(e, t) {
            return this.getTime() > ai.create(e).getTime() - (t || 0)
        },
        isBefore: function(e, t) {
            return this.getTime() < ai.create(e).getTime() + (t || 0)
        },
        isBetween: function(e, t, i) {
            var n = this.getTime();
            e = ai.create(e).getTime();
            var r = ai.create(t).getTime();
            return t = Pi(e, r),
            e = Oi(e, r),
            i = i || 0,
            n > t - i && e + i > n
        },
        isLeapYear: function() {
            var e = H(this, "FullYear");
            return 0 === e % 4 && 0 !== e % 100 || 0 === e % 400
        },
        daysInMonth: function() {
            return 32 - H(new ai(H(this, "FullYear"),H(this, "Month"),32), "Date")
        },
        format: function(e, t) {
            return Ot(this, e, !1, t)
        },
        relative: function(e, t) {
            return xi(e) && (t = e,
            e = null ),
            Ot(this, e, !0, t)
        },
        is: function(e, t, i) {
            var n, r;
            if (this.isValid()) {
                if (xi(e))
                    switch (e = e.trim().toLowerCase(),
                    r = this.clone().utc(i),
                    !0) {
                    case "future" === e:
                        return this.getTime() > bt().getTime();
                    case "past" === e:
                        return this.getTime() < bt().getTime();
                    case "weekday" === e:
                        return 0 < H(r, "Day") && 6 > H(r, "Day");
                    case "weekend" === e:
                        return 0 === H(r, "Day") || 6 === H(r, "Day");
                    case -1 < (n = Zi.weekdays.indexOf(e) % 7):
                        return H(r, "Day") === n;
                    case -1 < (n = Zi.months.indexOf(e) % 12):
                        return H(r, "Month") === n
                    }
                return Dt(this, e, null , t, i)
            }
        },
        reset: function(e) {
            var t, i = {};
            return e = e || "hours",
            "date" === e && (e = "days"),
            t = dn.some(function(t) {
                return e === t.name || e === t.name + "s"
            }),
            i[e] = e.match(/^days?/) ? 1 : 0,
            t ? this.set(i, !0) : this
        },
        clone: function() {
            var e = new ai(this.getTime());
            return e.utc(!!this._utc),
            e
        }
    }),
    r(ai, !0, !0, {
        iso: function() {
            return this.toISOString()
        },
        getWeekday: ai.prototype.getDay,
        getUTCWeekday: ai.prototype.getUTCDay
    }),
    r(li, !0, !0, {
        duration: function(e) {
            return e = ft(e),
            dt(e, St(this), "duration")
        }
    }),
    Zi = Qi = ai.addLocale("en", {
        plural: !0,
        timeMarker: "at",
        ampm: "am,pm",
        months: "January,February,March,April,May,June,July,August,September,October,November,December",
        weekdays: "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday",
        units: "millisecond:|s,second:|s,minute:|s,hour:|s,day:|s,week:|s,month:|s,year:|s",
        numbers: "one,two,three,four,five,six,seven,eight,nine,ten",
        articles: "a,an,the",
        tokens: "the,st|nd|rd|th,of",
        "short": "{Month} {d}, {yyyy}",
        "long": "{Month} {d}, {yyyy} {h}:{mm}{tt}",
        full: "{Weekday} {Month} {d}, {yyyy} {h}:{mm}:{ss}{tt}",
        past: "{num} {unit} {sign}",
        future: "{num} {unit} {sign}",
        duration: "{num} {unit}",
        modifiers: [{
            name: "sign",
            src: "ago|before",
            value: -1
        }, {
            name: "sign",
            src: "from now|after|from|in|later",
            value: 1
        }, {
            name: "edge",
            src: "last day",
            value: -2
        }, {
            name: "edge",
            src: "end",
            value: -1
        }, {
            name: "edge",
            src: "first day|beginning",
            value: 1
        }, {
            name: "shift",
            src: "last",
            value: -1
        }, {
            name: "shift",
            src: "the|this",
            value: 0
        }, {
            name: "shift",
            src: "next",
            value: 1
        }],
        dateParse: ["{month} {year}", "{shift} {unit=5-7}", "{0?} {date}{1}", "{0?} {edge} of {shift?} {unit=4-7?}{month?}{year?}"],
        timeParse: "{num} {unit} {sign};{sign} {num} {unit};{0} {num}{1} {day} of {month} {year?};{weekday?} {month} {date}{1?} {year?};{date} {month} {year};{date} {month};{shift} {weekday};{shift} week {weekday};{weekday} {2?} {shift} week;{num} {unit=4-5} {sign} {day};{0?} {date}{1} of {month};{0?}{month?} {date?}{1?} of {shift} {unit=6-7}".split(";")
    }),
    nn = dn.concat().reverse(),
    tn = dn.concat(),
    tn.splice(2, 1),
    o(ai, !0, !0, dn, function(e, t, i) {
        function n(e) {
            e /= l;
            var i = e % 1
              , n = t.error || .999;
            return i && Si(i % 1) > n && (e = Hi(e)),
            0 > e ? Mi(e) : Ai(e)
        }
        var r, o, a = t.name, s = vt(a), l = t.b();
        t.j = "add" + s + "s",
        r = function(e, t) {
            return n(this.getTime() - ai.create(e, t).getTime())
        }
        ,
        o = function(e, t) {
            return n(ai.create(e, t).getTime() - this.getTime())
        }
        ,
        e[a + "sAgo"] = o,
        e[a + "sUntil"] = o,
        e[a + "sSince"] = r,
        e[a + "sFromNow"] = r,
        e[t.j] = function(e, t) {
            var i = {};
            return i[a] = e,
            this.advance(i, t)
        }
        ,
        Bt(t, l),
        3 > i && ["Last", "This", "Next"].forEach(function(t) {
            e["is" + t + s] = function() {
                return Dt(this, t + " " + a, "en")
            }
        }),
        4 > i && (e["beginningOf" + s] = function() {
            var e = {};
            switch (a) {
            case "year":
                e.year = H(this, "FullYear");
                break;
            case "month":
                e.month = H(this, "Month");
                break;
            case "day":
                e.day = H(this, "Date");
                break;
            case "week":
                e.weekday = 0
            }
            return this.set(e, !0)
        }
        ,
        e["endOf" + s] = function() {
            var e = {
                hours: 23,
                minutes: 59,
                seconds: 59,
                milliseconds: 999
            };
            switch (a) {
            case "year":
                e.month = 11,
                e.day = 31;
                break;
            case "month":
                e.day = this.daysInMonth();
                break;
            case "week":
                e.weekday = 6
            }
            return this.set(e, !0)
        }
        )
    }),
    Zi.addFormat("([+-])?(\\d{4,4})[-.]?{full_month}[-.]?(\\d{1,2})?", !0, ["year_sign", "year", "month", "date"], !1, !0),
    Zi.addFormat("(\\d{1,2})[-.\\/]{full_month}(?:[-.\\/](\\d{2,4}))?", !0, ["date", "month", "year"], !0),
    Zi.addFormat("{full_month}[-.](\\d{4,4})", !1, ["month", "year"]),
    Zi.addFormat("\\/Date\\((\\d+(?:[+-]\\d{4,4})?)\\)\\/", !1, ["timestamp"]),
    Zi.addFormat(It(Zi), !1, rn),
    sn = Zi.g.slice(0, 7).reverse(),
    Zi.g = Zi.g.slice(7).concat(sn),
    Ht("f", function(e) {
        return H(e, "Milliseconds")
    }, !0),
    Ht("s", function(e) {
        return H(e, "Seconds")
    }),
    Ht("m", function(e) {
        return H(e, "Minutes")
    }),
    Ht("h", function(e) {
        return H(e, "Hours") % 12 || 12
    }),
    Ht("H", function(e) {
        return H(e, "Hours")
    }),
    Ht("d", function(e) {
        return H(e, "Date")
    }),
    Ht("M", function(e) {
        return H(e, "Month") + 1
    }),
    function() {
        function e(e, t) {
            var i = H(e, "Hours");
            return ft(t).ampm[Ai(i / 12)] || ""
        }
        At("t", e, 1),
        At("tt", e),
        At("T", e, 1, 1),
        At("TT", e, null , 2)
    }(),
    function() {
        function e(e, t) {
            var i = H(e, "Day");
            return ft(t).weekdays[i]
        }
        At("dow", e, 3),
        At("Dow", e, 3, 1),
        At("weekday", e),
        At("Weekday", e, null , 1)
    }(),
    Mt("mon", 0, 3),
    Mt("month", 0),
    Mt("month2", 1),
    Mt("month3", 2),
    cn.ms = cn.f,
    cn.milliseconds = cn.f,
    cn.seconds = cn.s,
    cn.minutes = cn.m,
    cn.hours = cn.h,
    cn["24hr"] = cn.H,
    cn["12hr"] = cn.h,
    cn.date = cn.d,
    cn.day = cn.d,
    cn.year = cn.yyyy,
    o(ai, !0, !0, "short,long,full", function(e, t) {
        e[t] = function(e) {
            return Ot(this, t, !1, e)
        }
    }),
    "\u3007\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u4e03\u516b\u4e5d\u5341\u767e\u5343\u4e07".split("").forEach(function(e, t) {
        t > 9 && (t = ki(10, t - 9)),
        an[e] = t
    }),
    w(an, ji),
    en = oi("([\u671f\u9031\u5468])?([\u3007\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u4e03\u516b\u4e5d\u5341\u767e\u5343\u4e07" + Bi + "]+)(?!\u6628)", "g"),
    function() {
        var e = Zi.weekdays.slice(0, 7)
          , t = Zi.months.slice(0, 12);
        o(ai, !0, !0, "today yesterday tomorrow weekday weekend future past".split(" ").concat(e).concat(t), function(e, t) {
            e["is" + vt(t)] = function(e) {
                return this.is(t, 0, e)
            }
        })
    }(),
    ai.utc || (ai.utc = {
        create: function() {
            return Ft(arguments, 0, !0)
        },
        past: function() {
            return Ft(arguments, -1, !0)
        },
        future: function() {
            return Ft(arguments, 1, !0)
        }
    }),
    r(ai, !1, !0, {
        RFC1123: "{Dow}, {dd} {Mon} {yyyy} {HH}:{mm}:{ss} {tz}",
        RFC1036: "{Weekday}, {dd}-{Mon}-{yy} {HH}:{mm}:{ss} {tz}",
        ISO8601_DATE: "{yyyy}-{MM}-{dd}",
        ISO8601_DATETIME: "{yyyy}-{MM}-{dd}T{HH}:{mm}:{ss}.{fff}{isotz}"
    }),
    jt.prototype.toString = function() {
        return this.isValid() ? this.start + ".." + this.end : "Invalid Range"
    }
    ,
    r(jt, !0, !0, {
        isValid: function() {
            return zt(this.start) && zt(this.end) && typeof this.start == typeof this.end
        },
        span: function() {
            return this.isValid() ? Si((xi(this.end) ? this.end.charCodeAt(0) : this.end) - (xi(this.start) ? this.start.charCodeAt(0) : this.start)) + 1 : 0 / 0
        },
        contains: function(e) {
            return null == e ? !1 : e.start && e.end ? e.start >= this.start && e.start <= this.end && e.end >= this.start && e.end <= this.end : e >= this.start && e <= this.end
        },
        every: function(e, t) {
            var i, n = this.start, r = this.end, o = n > r, a = n, s = 0, l = [];
            for (Ci(e) && (t = e,
            e = null ),
            e = e || 1,
            wi(n) ? i = Wt : xi(n) ? i = Vt : _i(n) && (i = e,
            wi(i) ? e = i : (n = i.toLowerCase().match(/^(\d+)?\s?(\w+?)s?$/i),
            i = parseInt(n[1]) || 1,
            n = n[2].slice(0, 1).toUpperCase() + n[2].slice(1),
            n.match(/hour|minute|second/i) ? n += "s" : "Year" === n ? n = "FullYear" : "Day" === n && (n = "Date"),
            e = [i, n]),
            i = Ut),
            o && e > 0 && (e *= -1); o ? a >= r : r >= a; )
                l.push(a),
                t && t(a, s),
                a = i(a, e),
                s++;
            return l
        },
        union: function(e) {
            return new jt(this.start < e.start ? this.start : e.start,this.end > e.end ? this.end : e.end)
        },
        intersect: function(e) {
            return e.start > this.end || e.end < this.start ? new jt(0 / 0,0 / 0) : new jt(this.start > e.start ? this.start : e.start,this.end < e.end ? this.end : e.end)
        },
        clone: function() {
            return new jt(this.start,this.end)
        },
        clamp: function(e) {
            var t = this.start
              , i = this.end
              , n = t > i ? i : t
              , t = t > i ? t : i;
            return Nt(n > e ? n : e > t ? t : e)
        }
    }),
    [li, si, ai].forEach(function(e) {
        r(e, !1, !0, {
            range: function(t, i) {
                return e.create && (t = e.create(t),
                i = e.create(i)),
                new jt(t,i)
            }
        })
    }),
    r(li, !0, !0, {
        upto: function(e, t, i) {
            return li.range(this, e).every(i, t)
        },
        clamp: function(e, t) {
            return new jt(e,t).clamp(this)
        },
        cap: function(e) {
            return this.clamp(void 0, e)
        }
    }),
    r(li, !0, !0, {
        downto: li.prototype.upto
    }),
    r(ri, !1, function(e) {
        return e instanceof jt
    }, {
        create: function(e) {
            return e.every()
        }
    }),
    r(Function, !0, !0, {
        lazy: function(e, t, i) {
            function n() {
                return c.length < i - (d && t ? 1 : 0) && c.push([this, arguments]),
                d || (d = !0,
                t ? r() : Gt(n, o, r)),
                s
            }
            var r, o, a, s, l = this, c = [], d = !1;
            return e = e || 1,
            i = i || 1 / 0,
            o = Mi(e),
            a = Hi(o / e) || 1,
            r = function() {
                var e, t = c.length;
                if (0 != t) {
                    for (e = Oi(t - a, 0); t > e; )
                        s = Function.prototype.apply.apply(l, c.shift()),
                        t--;
                    Gt(n, o, function() {
                        d = !1,
                        r()
                    })
                }
            }
            ,
            n
        },
        throttle: function(e) {
            return this.lazy(e, !0, 1)
        },
        debounce: function(e) {
            function t() {
                t.cancel(),
                Gt(t, e, i, this, arguments)
            }
            var i = this;
            return t
        },
        delay: function(e) {
            var t = c(arguments, null , 1);
            return Gt(this, e, this, this, t),
            this
        },
        every: function(e) {
            function t() {
                i.apply(i, n),
                Gt(i, e, t)
            }
            var i = this
              , n = arguments
              , n = 1 < n.length ? c(n, null , 1) : [];
            return Gt(i, e, t),
            i
        },
        cancel: function() {
            var e, t = this.timers;
            if (Ei(t))
                for (; e = t.shift(); )
                    clearTimeout(e);
            return this.n = !0,
            this
        },
        after: function(e) {
            var t = this
              , i = 0
              , n = [];
            if (wi(e)) {
                if (0 === e)
                    return t.call(),
                    t
            } else
                e = 1;
            return function() {
                var r;
                return n.push(c(arguments)),
                i++,
                i == e ? (r = t.call(this, n),
                i = 0,
                n = [],
                r) : void 0
            }
        },
        once: function() {
            return this.throttle(1 / 0, !0)
        },
        fill: function() {
            var e = this
              , t = c(arguments);
            return function() {
                var i = c(arguments);
                return t.forEach(function(e, t) {
                    (null != e || t >= i.length) && i.splice(t, 0, e)
                }),
                e.apply(this, i)
            }
        }
    }),
    r(li, !1, !0, {
        random: function(e, t) {
            var i, n;
            return 1 == arguments.length && (t = e,
            e = 0),
            i = Pi(e || 0, p(t) ? 1 : t),
            n = Oi(e || 0, p(t) ? 1 : t) + 1,
            Ai(ci.random() * (n - i) + i)
        }
    }),
    r(li, !0, !0, {
        log: function(e) {
            return ci.log(this) / (e ? ci.log(e) : 1)
        },
        abbr: function(e) {
            return qt(this, e, "kmbt", 0, 4)
        },
        metric: function(e, t) {
            return qt(this, e, "n\u03bcm kMGTPE", 4, p(t) ? 1 : t)
        },
        bytes: function(e, t) {
            return qt(this, e, "kMGTPE", 0, p(t) ? 4 : t, !0) + "B"
        },
        isInteger: function() {
            return 0 == this % 1
        },
        isOdd: function() {
            return !isNaN(this) && !this.isMultipleOf(2)
        },
        isEven: function() {
            return this.isMultipleOf(2)
        },
        isMultipleOf: function(e) {
            return 0 === this % e
        },
        format: function(e, t, i) {
            var n, r, o, a = "";
            for (p(t) && (t = ","),
            p(i) && (i = "."),
            n = (wi(e) ? _(this, e || 0).toFixed(Oi(e, 0)) : this.toString()).replace(/^-/, "").split("."),
            r = n[0],
            o = n[1],
            n = r.length; n > 0; n -= 3)
                n < r.length && (a = t + a),
                a = r.slice(Oi(0, n - 3), n) + a;
            return o && (a += i + C("0", (e || 0) - o.length) + o),
            (0 > this ? "-" : "") + a
        },
        hex: function(e) {
            return this.pad(e || 1, !1, 16)
        },
        times: function(e) {
            if (e)
                for (var t = 0; this > t; t++)
                    e.call(this, t);
            return this.toNumber()
        },
        chr: function() {
            return si.fromCharCode(this)
        },
        pad: function(e, t, i) {
            return S(this, e, t, i)
        },
        ordinalize: function() {
            var e = Si(this)
              , e = parseInt(e.toString().slice(-2));
            return this + k(e)
        },
        toNumber: function() {
            return parseFloat(this, 10)
        }
    }),
    function() {
        function e(e) {
            return function(t) {
                return t ? _(this, t, e) : e(this)
            }
        }
        r(li, !0, !0, {
            ceil: e(Mi),
            round: e(Hi),
            floor: e(Ai)
        }),
        o(li, !0, !0, "abs,pow,sin,asin,cos,acos,tan,atan,exp,pow,sqrt", function(e, t) {
            e[t] = function(e, i) {
                return ci[t](this, e, i)
            }
        })
    }();
    var un = ["isObject", "isNaN"]
      , pn = "keys values select reject each merge clone equal watch tap has toQueryString".split(" ");
    r(ni, !1, !0, {
        watch: function(e, t, i) {
            if (pi) {
                var n = e[t];
                ni.defineProperty(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    get: function() {
                        return n
                    },
                    set: function(r) {
                        n = i.call(e, t, n, r)
                    }
                })
            }
        }
    }),
    r(ni, !1, function() {
        return 1 < arguments.length
    }, {
        keys: function(e, t) {
            var i = ni.keys(e);
            return i.forEach(function(i) {
                t.call(e, i, e[i])
            }),
            i
        }
    }),
    r(ni, !1, !0, {
        isObject: function(e) {
            return v(e)
        },
        isNaN: function(e) {
            return wi(e) && e.valueOf() !== e.valueOf()
        },
        equal: function(e, t) {
            return D(e, t)
        },
        extended: function(e) {
            return new E(e)
        },
        merge: function(e, t, i, n) {
            var r, o, a, s, l, c, d;
            if (e && "string" != typeof t)
                for (r in t)
                    if (f(t, r) && e) {
                        if (s = t[r],
                        l = e[r],
                        c = u(l),
                        o = g(s),
                        a = g(l),
                        d = c && !1 === n ? l : s,
                        c && Ci(n) && (d = n.call(t, r, l, s)),
                        i && (o || a))
                            if (_i(s))
                                d = new ai(s.getTime());
                            else {
                                if (!Ti(s)) {
                                    a || (e[r] = ri.isArray(s) ? [] : {}),
                                    ni.merge(e[r], s, i, n);
                                    continue
                                }
                                d = new oi(s.source,M(s))
                            }
                        e[r] = d
                    }
            return e
        },
        values: function(e, t) {
            var i = [];
            return y(e, function(n, r) {
                i.push(r),
                t && t.call(e, r)
            }),
            i
        },
        clone: function(e, t) {
            var i;
            if (!g(e))
                return e;
            if (i = hi.call(e),
            _i(e, i) && e.clone)
                return e.clone();
            if (_i(e, i) || Ti(e, i))
                return new e.constructor(e);
            if (e instanceof E)
                i = new E;
            else if (Ei(e, i))
                i = [];
            else {
                if (!v(e, i))
                    throw new TypeError("Clone must be a basic data type.");
                i = {}
            }
            return ni.merge(i, e, t)
        },
        fromQueryString: function(e, t) {
            var i = ni.extended();
            return e = e && e.toString ? e.toString() : "",
            e.replace(/^.*?\?/, "").split("&").forEach(function(e) {
                e = e.split("="),
                2 === e.length && Xt(i, e[0], decodeURIComponent(e[1]), t)
            }),
            i
        },
        toQueryString: function(e, t) {
            return Yt(t, e)
        },
        tap: function(e, t) {
            var i = t;
            return Ci(t) || (i = function() {
                t && e[t]()
            }
            ),
            i.call(e, e),
            e
        },
        has: function(e, t) {
            return f(e, t)
        },
        select: function(e) {
            return Kt(e, arguments, !0)
        },
        reject: function(e) {
            return Kt(e, arguments, !1)
        }
    }),
    o(ni, !1, !0, yi, function(e, t) {
        var i = "is" + t;
        un.push(i),
        e[i] = mi[t]
    }),
    r(ni, !1, function() {
        return 0 === arguments.length
    }, {
        extend: function() {
            var e = un.concat(pn);
            "undefined" != typeof Ki && (e = e.concat(Ki)),
            F(e, ni)
        }
    }),
    F(pn, E),
    r(oi, !1, !0, {
        escape: function(e) {
            return A(e)
        }
    }),
    r(oi, !0, !0, {
        getFlags: function() {
            return M(this)
        },
        setFlags: function(e) {
            return oi(this.source, e)
        },
        addFlag: function(e) {
            return this.setFlags(M(this, e))
        },
        removeFlag: function(e) {
            return this.setFlags(M(this).replace(e, ""))
        }
    });
    var fn, gn;
    r(si, !0, !1, {
        repeat: function(e) {
            return e = Zt(e),
            C(this, e)
        }
    }),
    r(si, !0, function(e) {
        return Ti(e) || 2 < arguments.length
    }, {
        startsWith: function(e) {
            var t = arguments
              , i = t[1]
              , t = t[2]
              , n = this;
            return i && (n = n.slice(i)),
            p(t) && (t = !0),
            i = Ti(e) ? e.source.replace("^", "") : A(e),
            oi("^" + i, t ? "" : "i").test(n)
        },
        endsWith: function(e) {
            var t = arguments
              , i = t[1]
              , t = t[2]
              , n = this;
            return u(i) && (n = n.slice(0, i)),
            p(t) && (t = !0),
            i = Ti(e) ? e.source.replace("$", "") : A(e),
            oi(i + "$", t ? "" : "i").test(n)
        }
    }),
    r(si, !0, !0, {
        escapeRegExp: function() {
            return A(this)
        },
        escapeURL: function(e) {
            return e ? encodeURIComponent(this) : encodeURI(this)
        },
        unescapeURL: function(e) {
            return e ? decodeURI(this) : decodeURIComponent(this)
        },
        escapeHTML: function() {
            return this.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&apos;").replace(/\//g, "&#x2f;")
        },
        unescapeHTML: function() {
            return this.replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&quot;/g, '"').replace(/&apos;/g, "'").replace(/&#x2f;/g, "/").replace(/&amp;/g, "&")
        },
        encodeBase64: function() {
            return fn(unescape(encodeURIComponent(this)))
        },
        decodeBase64: function() {
            return decodeURIComponent(escape(gn(this)))
        },
        each: function(e, t) {
            var i, n, r;
            if (Ci(e) ? (t = e,
            e = /[\s\S]/g) : e ? xi(e) ? e = oi(A(e), "gi") : Ti(e) && (e = oi(e.source, M(e, "g"))) : e = /[\s\S]/g,
            i = this.match(e) || [],
            t)
                for (n = 0,
                r = i.length; r > n; n++)
                    i[n] = t.call(this, i[n], n, i) || i[n];
            return i
        },
        shift: function(e) {
            var t = "";
            return e = e || 0,
            this.codes(function(i) {
                t += si.fromCharCode(i + e)
            }),
            t
        },
        codes: function(e) {
            var t, i, n = [];
            for (t = 0,
            i = this.length; i > t; t++) {
                var r = this.charCodeAt(t);
                n.push(r),
                e && e.call(this, r, t)
            }
            return n
        },
        chars: function(e) {
            return this.each(e)
        },
        words: function(e) {
            return this.trim().each(/\S+/g, e)
        },
        lines: function(e) {
            return this.trim().each(/^.*$/gm, e)
        },
        paragraphs: function(e) {
            var t = this.trim().split(/[\r\n]{2,}/);
            return t = t.map(function(t) {
                if (e)
                    var i = e.call(t);
                return i ? i : t
            })
        },
        isBlank: function() {
            return 0 === this.trim().length
        },
        has: function(e) {
            return -1 !== this.search(Ti(e) ? e : A(e))
        },
        add: function(e, t) {
            return t = p(t) ? this.length : t,
            this.slice(0, t) + e + this.slice(t)
        },
        remove: function(e) {
            return this.replace(e, "")
        },
        reverse: function() {
            return this.split("").reverse().join("")
        },
        compact: function() {
            return this.trim().replace(/([\r\n\s\u3000])+/g, function(e, t) {
                return "\u3000" === t ? t : " "
            })
        },
        at: function() {
            return L(this, arguments, !0)
        },
        from: function(e) {
            return this.slice(ii(this, e, !0))
        },
        to: function(e) {
            return p(e) && (e = this.length),
            this.slice(0, ii(this, e))
        },
        dasherize: function() {
            return this.underscore().replace(/_/g, "-")
        },
        underscore: function() {
            return this.replace(/[-\s]+/g, "_").replace(si.Inflector && si.Inflector.acronymRegExp, function(e, t) {
                return (t > 0 ? "_" : "") + e.toLowerCase()
            }).replace(/([A-Z\d]+)([A-Z][a-z])/g, "$1_$2").replace(/([a-z\d])([A-Z])/g, "$1_$2").toLowerCase()
        },
        camelize: function(e) {
            return this.underscore().replace(/(^|_)([^_]+)/g, function(t, i, n, r) {
                return t = (t = si.Inflector) && t.acronyms[n],
                t = xi(t) ? t : void 0,
                r = !1 !== e || r > 0,
                t ? r ? t : t.toLowerCase() : r ? n.capitalize() : n
            })
        },
        spacify: function() {
            return this.underscore().replace(/_/g, " ")
        },
        stripTags: function() {
            var e = this;
            return d(0 < arguments.length ? arguments : [""], function(t) {
                e = e.replace(oi("</?" + A(t) + "[^<>]*>", "gi"), "")
            }),
            e
        },
        removeTags: function() {
            var e = this;
            return d(0 < arguments.length ? arguments : ["\\S+"], function(t) {
                t = oi("<(" + t + ")[^<>]*(?:\\/>|>.*?<\\/\\1>)", "gi"),
                e = e.replace(t, "")
            }),
            e
        },
        truncate: function(e, t, i) {
            return ei(this, e, t, i)
        },
        truncateOnWord: function(e, t, i) {
            return ei(this, e, t, i, !0)
        },
        pad: function(e, t) {
            var i, n;
            return e = Zt(e),
            i = Oi(0, e - this.length) / 2,
            n = Ai(i),
            i = Mi(i),
            Qt(n, t) + this + Qt(i, t)
        },
        padLeft: function(e, t) {
            return e = Zt(e),
            Qt(Oi(0, e - this.length), t) + this
        },
        padRight: function(e, t) {
            return e = Zt(e),
            this + Qt(Oi(0, e - this.length), t)
        },
        first: function(e) {
            return p(e) && (e = 1),
            this.substr(0, e)
        },
        last: function(e) {
            return p(e) && (e = 1),
            this.substr(0 > this.length - e ? 0 : this.length - e)
        },
        toNumber: function(e) {
            return R(this, e)
        },
        capitalize: function(e) {
            var t;
            return this.toLowerCase().replace(e ? /[^']/g : /^\S/, function(e) {
                var i, n = e.toUpperCase();
                return i = t ? e : n,
                t = n !== e,
                i
            })
        },
        assign: function() {
            var e = {};
            return d(arguments, function(t, i) {
                g(t) ? w(e, t) : e[i + 1] = t
            }),
            this.replace(/\{([^{]+?)\}/g, function(t, i) {
                return f(e, i) ? e[i] : t
            })
        }
    }),
    r(si, !0, !0, {
        insert: si.prototype.add
    }),
    function(e) {
        if (di.btoa)
            fn = di.btoa,
            gn = di.atob;
        else {
            var t = /[^A-Za-z0-9\+\/\=]/g;
            fn = function(t) {
                var i, n, r, o, a, s, l = "", c = 0;
                do
                    i = t.charCodeAt(c++),
                    n = t.charCodeAt(c++),
                    r = t.charCodeAt(c++),
                    o = i >> 2,
                    i = (3 & i) << 4 | n >> 4,
                    a = (15 & n) << 2 | r >> 6,
                    s = 63 & r,
                    isNaN(n) ? a = s = 64 : isNaN(r) && (s = 64),
                    l = l + e.charAt(o) + e.charAt(i) + e.charAt(a) + e.charAt(s);
                while (c < t.length);return l
            }
            ,
            gn = function(i) {
                var n, r, o, a, s, l = "", c = 0;
                if (i.match(t))
                    throw Error("String contains invalid base64 characters");
                i = i.replace(/[^A-Za-z0-9\+\/\=]/g, "");
                do
                    n = e.indexOf(i.charAt(c++)),
                    r = e.indexOf(i.charAt(c++)),
                    a = e.indexOf(i.charAt(c++)),
                    s = e.indexOf(i.charAt(c++)),
                    n = n << 2 | r >> 4,
                    r = (15 & r) << 4 | a >> 2,
                    o = (3 & a) << 6 | s,
                    l += si.fromCharCode(n),
                    64 != a && (l += si.fromCharCode(r)),
                    64 != s && (l += si.fromCharCode(o));
                while (c < i.length);return l
            }
        }
    }("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=")
}(),
!function() {
    function e(t, i, n) {
        var r = e.resolve(t);
        if (null == r) {
            n = n || t,
            i = i || "root";
            var o = new Error('Failed to require "' + n + '" from "' + i + '"');
            throw o.path = n,
            o.parent = i,
            o.require = !0,
            o
        }
        var a = e.modules[r];
        if (!a._resolving && !a.exports) {
            var s = {};
            s.exports = {},
            s.client = s.component = !0,
            a._resolving = !0,
            a.call(this, s.exports, e.relative(r), s),
            delete a._resolving,
            a.exports = s.exports
        }
        return a.exports
    }
    e.modules = {},
    e.aliases = {},
    e.resolve = function(t) {
        "/" === t.charAt(0) && (t = t.slice(1));
        for (var i = [t, t + ".js", t + ".json", t + "/index.js", t + "/index.json"], n = 0; n < i.length; n++) {
            var t = i[n];
            if (e.modules.hasOwnProperty(t))
                return t;
            if (e.aliases.hasOwnProperty(t))
                return e.aliases[t]
        }
    }
    ,
    e.normalize = function(e, t) {
        var i = [];
        if ("." != t.charAt(0))
            return t;
        e = e.split("/"),
        t = t.split("/");
        for (var n = 0; n < t.length; ++n)
            ".." == t[n] ? e.pop() : "." != t[n] && "" != t[n] && i.push(t[n]);
        return e.concat(i).join("/")
    }
    ,
    e.register = function(t, i) {
        e.modules[t] = i
    }
    ,
    e.alias = function(t, i) {
        if (!e.modules.hasOwnProperty(t))
            throw new Error('Failed to alias "' + t + '", it does not exist');
        e.aliases[i] = t
    }
    ,
    e.relative = function(t) {
        function i(e, t) {
            for (var i = e.length; i--; )
                if (e[i] === t)
                    return i;
            return -1
        }
        function n(i) {
            var r = n.resolve(i);
            return e(r, t, i)
        }
        var r = e.normalize(t, "..");
        return n.resolve = function(n) {
            var o = n.charAt(0);
            if ("/" == o)
                return n.slice(1);
            if ("." == o)
                return e.normalize(r, n);
            var a = t.split("/")
              , s = i(a, "deps") + 1;
            return s || (s = 0),
            n = a.slice(0, s + 1).join("/") + "/deps/" + n
        }
        ,
        n.exists = function(t) {
            return e.modules.hasOwnProperty(n.resolve(t))
        }
        ,
        n
    }
    ,
    e.register("darsain-event/index.js", function(e) {
        "use strict";
        e.bind = window.addEventListener ? function(e, t, i, n) {
            return e.addEventListener(t, i, n || !1),
            i
        }
        : function(e, t, i) {
            var n = t + i;
            return e[n] = e[n] || function() {
                var t = window.event;
                t.target = t.srcElement,
                t.preventDefault = function() {
                    t.returnValue = !1
                }
                ,
                t.stopPropagation = function() {
                    t.cancelBubble = !0
                }
                ,
                i.call(e, t)
            }
            ,
            e.attachEvent("on" + t, e[n]),
            i
        }
        ,
        e.unbind = window.removeEventListener ? function(e, t, i, n) {
            return e.removeEventListener(t, i, n || !1),
            i
        }
        : function(e, t, i) {
            var n = t + i;
            e.detachEvent("on" + t, e[n]);
            try {
                delete e[n]
            } catch (r) {
                e[n] = void 0
            }
            return i
        }
    }),
    e.register("darsain-position/index.js", function(e, t, i) {
        "use strict";
        function n(e, t) {
            for (var i in t)
                e[i] = t[i];
            return e
        }
        function r(e) {
            return e && null != e.setInterval
        }
        function o(e) {
            var t = a.pageYOffset || l.scrollTop
              , i = a.pageXOffset || l.scrollLeft
              , o = {
                left: 0,
                right: 0,
                top: 0,
                bottom: 0,
                width: 0,
                height: 0
            };
            if (r(e))
                o.width = a.innerWidth || l.clientWidth,
                o.height = a.innerHeight || l.clientHeight;
            else {
                if (!l.contains(e) || null == e.getBoundingClientRect)
                    return o;
                n(o, e.getBoundingClientRect()),
                o.width = o.right - o.left,
                o.height = o.bottom - o.top
            }
            return o.top = o.top + t - l.clientTop,
            o.left = o.left + i - l.clientLeft,
            o.right = o.left + o.width,
            o.bottom = o.top + o.height,
            o
        }
        i.exports = o;
        var a = window
          , s = a.document
          , l = s.documentElement
    }),
    e.register("component-classes/index.js", function(e, t, i) {
        function n(e) {
            if (!e)
                throw new Error("A DOM element reference is required");
            this.el = e,
            this.list = e.classList
        }
        var r = t("indexof")
          , o = /\s+/
          , a = Object.prototype.toString;
        i.exports = function(e) {
            return new n(e)
        }
        ,
        n.prototype.add = function(e) {
            if (this.list)
                return this.list.add(e),
                this;
            var t = this.array()
              , i = r(t, e);
            return ~i || t.push(e),
            this.el.className = t.join(" "),
            this
        }
        ,
        n.prototype.remove = function(e) {
            if ("[object RegExp]" == a.call(e))
                return this.removeMatching(e);
            if (this.list)
                return this.list.remove(e),
                this;
            var t = this.array()
              , i = r(t, e);
            return ~i && t.splice(i, 1),
            this.el.className = t.join(" "),
            this
        }
        ,
        n.prototype.removeMatching = function(e) {
            for (var t = this.array(), i = 0; i < t.length; i++)
                e.test(t[i]) && this.remove(t[i]);
            return this
        }
        ,
        n.prototype.toggle = function(e) {
            return this.list ? (this.list.toggle(e),
            this) : (this.has(e) ? this.remove(e) : this.add(e),
            this)
        }
        ,
        n.prototype.array = function() {
            var e = this.el.className.replace(/^\s+|\s+$/g, "")
              , t = e.split(o);
            return "" === t[0] && t.shift(),
            t
        }
        ,
        n.prototype.has = n.prototype.contains = function(e) {
            return this.list ? this.list.contains(e) : !!~r(this.array(), e)
        }
    }),
    e.register("component-indexof/index.js", function(e, t, i) {
        i.exports = function(e, t) {
            if (e.indexOf)
                return e.indexOf(t);
            for (var i = 0; i < e.length; ++i)
                if (e[i] === t)
                    return i;
            return -1
        }
    }),
    e.register("tooltip/index.js", function(e, t, i) {
        "use strict";
        function n(e, t) {
            for (var i in t)
                e[i] = t[i];
            return e
        }
        function r(e) {
            return 0 | Math.round(String(e).replace(/[^\-0-9.]/g, ""))
        }
        function o(e) {
            var t = String(m(e, o.propName))
              , i = t.match(/([0-9.]+)([ms]{1,2})/);
            return i && (t = Number(i[1]),
            "s" === i[2] && (t *= 1e3)),
            0 | t
        }
        function a(e, t) {
            return this instanceof a ? (this.hidden = 1,
            this.options = n(g(a.defaults), t),
            this._createElement(),
            void this.content(e)) : new a(e,t)
        }
        var s = t("event")
          , l = t("classes")
          , c = t("indexof")
          , d = t("position")
          , h = window
          , u = h.document
          , p = u.body
          , f = ["top", "bottom"];
        i.exports = a;
        var g = Object.create || function() {
            function e() {}
            return function(t) {
                return e.prototype = t,
                new e
            }
        }()
          , m = h.getComputedStyle ? function(e, t) {
            return h.getComputedStyle(e, null )[t]
        }
        : function(e, t) {
            return e.currentStyle[t]
        }
        ;
        o.propName = function() {
            for (var e = u.createElement("div"), t = ["transitionDuration", "webkitTransitionDuration"], i = "1s", n = 0; n < t.length; n++)
                if (e.style[t[n]] = i,
                e.style[t[n]] === i)
                    return t[n]
        }(),
        a.prototype._createElement = function() {
            this.element = u.createElement("div"),
            this.classes = l(this.element),
            this.classes.add(this.options.baseClass);
            for (var e, t = 0; t < a.classTypes.length; t++)
                e = a.classTypes[t] + "Class",
                this.options[e] && this.classes.add(this.options[e])
        }
        ,
        a.prototype.type = function(e) {
            return this.changeClassType("type", e)
        }
        ,
        a.prototype.effect = function(e) {
            return this.changeClassType("effect", e)
        }
        ,
        a.prototype.changeClassType = function(e, t) {
            return e += "Class",
            this.options[e] && this.classes.remove(this.options[e]),
            this.options[e] = t,
            t && this.classes.add(t),
            this
        }
        ,
        a.prototype.updateSize = function() {
            return this.hidden && (this.element.style.visibility = "hidden",
            p.appendChild(this.element)),
            this.width = this.element.offsetWidth,
            this.height = this.element.offsetHeight,
            null == this.spacing && (this.spacing = null != this.options.spacing ? this.options.spacing : r(m(this.element, "top"))),
            this.hidden ? (p.removeChild(this.element),
            this.element.style.visibility = "") : this.position(),
            this
        }
        ,
        a.prototype.content = function(e) {
            return "object" == typeof e ? (this.element.innerHTML = "",
            this.element.appendChild(e)) : this.element.innerHTML = e,
            this.updateSize(),
            this
        }
        ,
        a.prototype.place = function(e) {
            return this.options.place = e,
            this.hidden || this.position(),
            this
        }
        ,
        a.prototype.attach = function(e) {
            return this.attachedTo = e,
            this.hidden || this.position(),
            this
        }
        ,
        a.prototype.detach = function() {
            return this.hide(),
            this.attachedTo = null ,
            this
        }
        ,
        a.prototype._pickPlace = function(e) {
            if (!this.options.auto)
                return this.options.place;
            var t = d(h)
              , i = this.options.place.split("-")
              , n = this.spacing;
            if (~c(f, i[0]))
                switch (e.top - this.height - n <= t.top ? i[0] = "bottom" : e.bottom + this.height + n >= t.bottom && (i[0] = "top"),
                i[1]) {
                case "left":
                    e.right - this.width <= t.left && (i[1] = "right");
                    break;
                case "right":
                    e.left + this.width >= t.right && (i[1] = "left");
                    break;
                default:
                    e.left + e.width / 2 + this.width / 2 >= t.right ? i[1] = "left" : e.right - e.width / 2 - this.width / 2 <= t.left && (i[1] = "right")
                }
            else
                switch (e.left - this.width - n <= t.left ? i[0] = "right" : e.right + this.width + n >= t.right && (i[0] = "left"),
                i[1]) {
                case "top":
                    e.bottom - this.height <= t.top && (i[1] = "bottom");
                    break;
                case "bottom":
                    e.top + this.height >= t.bottom && (i[1] = "top");
                    break;
                default:
                    e.top + e.height / 2 + this.height / 2 >= t.bottom ? i[1] = "top" : e.bottom - e.height / 2 - this.height / 2 <= t.top && (i[1] = "bottom")
                }
            return i.join("-")
        }
        ,
        a.prototype.position = function(e, t) {
            this.attachedTo && (e = this.attachedTo),
            null == e && this._p ? (e = this._p[0],
            t = this._p[1]) : this._p = arguments;
            var i = "number" == typeof e ? {
                left: 0 | e,
                right: 0 | e,
                top: 0 | t,
                bottom: 0 | t,
                width: 0,
                height: 0
            } : d(e)
              , n = this.spacing
              , r = this._pickPlace(i);
            r !== this.curPlace && (this.curPlace && this.classes.remove(this.curPlace),
            this.classes.add(r),
            this.curPlace = r);
            var o, a;
            switch (this.curPlace) {
            case "top":
                o = i.top - this.height - n,
                a = i.left + i.width / 2 - this.width / 2;
                break;
            case "top-left":
                o = i.top - this.height - n,
                a = i.right - this.width;
                break;
            case "top-right":
                o = i.top - this.height - n,
                a = i.left;
                break;
            case "bottom":
                o = i.bottom + n,
                a = i.left + i.width / 2 - this.width / 2;
                break;
            case "bottom-left":
                o = i.bottom + n,
                a = i.right - this.width;
                break;
            case "bottom-right":
                o = i.bottom + n,
                a = i.left;
                break;
            case "left":
                o = i.top + i.height / 2 - this.height / 2,
                a = i.left - this.width - n;
                break;
            case "left-top":
                o = i.bottom - this.height,
                a = i.left - this.width - n;
                break;
            case "left-bottom":
                o = i.top,
                a = i.left - this.width - n;
                break;
            case "right":
                o = i.top + i.height / 2 - this.height / 2,
                a = i.right + n;
                break;
            case "right-top":
                o = i.bottom - this.height,
                a = i.right + n;
                break;
            case "right-bottom":
                o = i.top,
                a = i.right + n
            }
            return this.element.style.top = Math.round(o) + "px",
            this.element.style.left = Math.round(a) + "px",
            this
        }
        ,
        a.prototype.show = function(e, t) {
            return e = this.attachedTo ? this.attachedTo : e,
            clearTimeout(this.aIndex),
            null != e && this.position(e, t),
            this.hidden && (this.hidden = 0,
            p.appendChild(this.element)),
            this.attachedTo && this._aware(),
            this.options.inClass && (this.options.effectClass && void this.element.clientHeight,
            this.classes.add(this.options.inClass)),
            this
        }
        ,
        a.prototype.hide = function() {
            if (!this.hidden) {
                var e = this
                  , t = 0;
                return this.options.inClass && (this.classes.remove(this.options.inClass),
                this.options.effectClass && (t = o(this.element))),
                this.attachedTo && this._unaware(),
                clearTimeout(this.aIndex),
                this.aIndex = setTimeout(function() {
                    e.aIndex = 0,
                    p.removeChild(e.element),
                    e.hidden = 1
                }, t),
                this
            }
        }
        ,
        a.prototype.toggle = function(e, t) {
            return this[this.hidden ? "show" : "hide"](e, t)
        }
        ,
        a.prototype.destroy = function() {
            clearTimeout(this.aIndex),
            this._unaware(),
            this.hidden || p.removeChild(this.element),
            this.element = this.options = null
        }
        ,
        a.prototype._aware = function() {
            var e = c(a.winAware, this);
            ~e || a.winAware.push(this)
        }
        ,
        a.prototype._unaware = function() {
            var e = c(a.winAware, this);
            ~e && a.winAware.splice(e, 1)
        }
        ,
        a.reposition = function() {
            function e() {
                !i && a.winAware.length && (i = n(t, 17))
            }
            function t() {
                i = 0;
                for (var e, t = 0, n = a.winAware.length; n > t; t++)
                    e = a.winAware[t],
                    e.position()
            }
            var i, n = window.requestAnimationFrame || window.webkitRequestAnimationFrame || function(e) {
                return setTimeout(e, 17)
            }
            ;
            return e
        }(),
        a.winAware = [],
        s.bind(window, "resize", a.reposition),
        s.bind(window, "scroll", a.reposition),
        a.classTypes = ["type", "effect"],
        a.defaults = {
            baseClass: "tooltip",
            typeClass: null ,
            effectClass: null ,
            inClass: "in",
            place: "top",
            spacing: null ,
            auto: 0
        }
    }),
    e.alias("darsain-event/index.js", "tooltip/deps/event/index.js"),
    e.alias("darsain-event/index.js", "event/index.js"),
    e.alias("darsain-position/index.js", "tooltip/deps/position/index.js"),
    e.alias("darsain-position/index.js", "position/index.js"),
    e.alias("component-classes/index.js", "tooltip/deps/classes/index.js"),
    e.alias("component-classes/index.js", "classes/index.js"),
    e.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js"),
    e.alias("component-indexof/index.js", "tooltip/deps/indexof/index.js"),
    e.alias("component-indexof/index.js", "indexof/index.js"),
    "object" == typeof exports ? module.exports = e("tooltip") : "function" == typeof define && define.amd ? define(function() {
        return e("tooltip")
    }) : this.Tooltip = e("tooltip")
}(),
function() {
    var e, t, i, n = function(e, t) {
        return function() {
            return e.apply(t, arguments)
        }
    }
    ;
    e = function() {
        function e() {
            this.translate = n(this.translate, this),
            this.data = {
                values: {},
                contexts: []
            },
            this.globalContext = {}
        }
        return e.prototype.translate = function(e, t, i, n, r) {
            var o, a, s, l;
            return null == r && (r = this.globalContext),
            s = function(e) {
                var t;
                return t = typeof e,
                "function" === t || "object" === t && !!e
            }
            ,
            s(t) ? (o = null ,
            l = null ,
            a = t,
            r = i || this.globalContext) : "number" == typeof t ? (o = null ,
            l = t,
            a = i,
            r = n || this.globalContext) : (o = t,
            "number" == typeof i ? (l = i,
            a = n,
            r = r) : (l = null ,
            a = i,
            r = n || this.globalContext)),
            s(e) ? (s(e.i18n) && (e = e.i18n),
            this.translateHash(e, r)) : this.translateText(e, l, a, r, o)
        }
        ,
        e.prototype.add = function(e) {
            var t, i, n, r, o, a, s, l;
            if (null != e.values) {
                a = e.values;
                for (i in a)
                    n = a[i],
                    this.data.values[i] = n
            }
            if (null != e.contexts) {
                for (s = e.contexts,
                l = [],
                r = 0,
                o = s.length; o > r; r++)
                    t = s[r],
                    l.push(this.data.contexts.push(t));
                return l
            }
        }
        ,
        e.prototype.setContext = function(e, t) {
            return this.globalContext[e] = t
        }
        ,
        e.prototype.clearContext = function(e) {
            return this.lobalContext[e] = null
        }
        ,
        e.prototype.reset = function() {
            return this.data = {
                values: {},
                contexts: []
            },
            this.globalContext = {}
        }
        ,
        e.prototype.resetData = function() {
            return this.data = {
                values: {},
                contexts: []
            }
        }
        ,
        e.prototype.resetContext = function() {
            return this.globalContext = {}
        }
        ,
        e.prototype.translateHash = function(e, t) {
            var i, n;
            for (i in e)
                n = e[i],
                "string" == typeof n && (e[i] = this.translateText(n, null , null , t));
            return e
        }
        ,
        e.prototype.translateText = function(e, t, i, n, r) {
            var o, a;
            return null == n && (n = this.globalContext),
            null == this.data ? this.useOriginalText(r || e, t, i) : (o = this.getContextData(this.data, n),
            null != o && (a = this.findTranslation(e, t, i, o.values, r)),
            null == a && (a = this.findTranslation(e, t, i, this.data.values, r)),
            null == a ? this.useOriginalText(r || e, t, i) : a)
        }
        ,
        e.prototype.findTranslation = function(e, t, i, n) {
            var r, o, a, s, l;
            if (a = n[e],
            null == a)
                return null ;
            if (null == t) {
                if ("string" == typeof a)
                    return this.applyFormatting(a, t, i)
            } else if (a instanceof Array || a.length)
                for (s = 0,
                l = a.length; l > s; s++)
                    if (o = a[s],
                    (t >= o[0] || null === o[0]) && (t <= o[1] || null === o[1]))
                        return r = this.applyFormatting(o[2].replace("-%n", String(-t)), t, i),
                        this.applyFormatting(r.replace("%n", String(t)), t, i);
            return null
        }
        ,
        e.prototype.getContextData = function(e, t) {
            var i, n, r, o, a, s, l, c;
            if (null == e.contexts)
                return null ;
            for (l = e.contexts,
            a = 0,
            s = l.length; s > a; a++) {
                i = l[a],
                n = !0,
                c = i.matches;
                for (r in c)
                    o = c[r],
                    n = n && o === t[r];
                if (n)
                    return i
            }
            return null
        }
        ,
        e.prototype.useOriginalText = function(e, t, i) {
            return null == t ? this.applyFormatting(e, t, i) : this.applyFormatting(e.replace("%n", String(t)), t, i)
        }
        ,
        e.prototype.applyFormatting = function(e, t, i) {
            var n, r;
            for (n in i)
                r = new RegExp("%{" + n + "}","g"),
                e = e.replace(r, i[n]);
            return e
        }
        ,
        e
    }(),
    i = new e,
    t = i.translate,
    t.translator = i,
    t.create = function(i) {
        var n;
        return n = new e,
        null != i && n.add(i),
        n.translate.create = t.create,
        n.translate
    }
    ,
    ("undefined" != typeof module && null !== module ? module.exports = t : void 0) || (this.i18n = t)
}
.call(this),
function(e) {
    if ("object" == typeof exports && "undefined" != typeof module)
        module.exports = e();
    else if ("function" == typeof define && define.amd)
        define([], e);
    else {
        var t;
        t = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this,
        t.SimpleWebRTC = e()
    }
}(function() {
    var e;
    return function t(e, i, n) {
        function r(a, s) {
            if (!i[a]) {
                if (!e[a]) {
                    var l = "function" == typeof require && require;
                    if (!s && l)
                        return l(a, !0);
                    if (o)
                        return o(a, !0);
                    var c = new Error("Cannot find module '" + a + "'");
                    throw c.code = "MODULE_NOT_FOUND",
                    c
                }
                var d = i[a] = {
                    exports: {}
                };
                e[a][0].call(d.exports, function(t) {
                    var i = e[a][1][t];
                    return r(i ? i : t)
                }, d, d.exports, t, e, i, n)
            }
            return i[a].exports
        }
        for (var o = "function" == typeof require && require, a = 0; a < n.length; a++)
            r(n[a]);
        return r
    }({
        1: [function(e, t) {
            function i(e, t, i) {
                function r(e, n) {
                    if (r.count <= 0)
                        throw new Error("after called too many times");
                    --r.count,
                    e ? (o = !0,
                    t(e),
                    t = i) : 0 !== r.count || o || t(null , n)
                }
                var o = !1;
                return i = i || n,
                r.count = e,
                0 === e ? t() : r
            }
            function n() {}
            t.exports = i
        }
        , {}],
        2: [function(e, t) {
            t.exports = function(e, t, i) {
                var n = e.byteLength;
                if (t = t || 0,
                i = i || n,
                e.slice)
                    return e.slice(t, i);
                if (0 > t && (t += n),
                0 > i && (i += n),
                i > n && (i = n),
                t >= n || t >= i || 0 === n)
                    return new ArrayBuffer(0);
                for (var r = new Uint8Array(e), o = new Uint8Array(i - t), a = t, s = 0; i > a; a++,
                s++)
                    o[s] = r[a];
                return o.buffer
            }
        }
        , {}],
        3: [function(e, t) {
            e("webrtc-adapter");
            t.exports = function(e, t, i) {
                var n, r = (window.URL,
                t), o = {
                    autoplay: !0,
                    mirror: !1,
                    muted: !1,
                    audio: !1,
                    disableContextMenu: !1
                };
                if (i)
                    for (n in i)
                        o[n] = i[n];
                return r ? "audio" === r.tagName.toLowerCase() && (o.audio = !0) : r = document.createElement(o.audio ? "audio" : "video"),
                o.disableContextMenu && (r.oncontextmenu = function(e) {
                    e.preventDefault()
                }
                ),
                o.autoplay && (r.autoplay = "autoplay"),
                o.muted && (r.muted = !0),
                !o.audio && o.mirror && ["", "moz", "webkit", "o", "ms"].forEach(function(e) {
                    var t = e ? e + "Transform" : "transform";
                    r.style[t] = "scaleX(-1)"
                }),
                r.srcObject = e,
                r
            }
        }
        , {
            "webrtc-adapter": 68
        }],
        4: [function(e, t) {
            function i(e) {
                e = e || {},
                this.ms = e.min || 100,
                this.max = e.max || 1e4,
                this.factor = e.factor || 2,
                this.jitter = e.jitter > 0 && e.jitter <= 1 ? e.jitter : 0,
                this.attempts = 0
            }
            t.exports = i,
            i.prototype.duration = function() {
                var e = this.ms * Math.pow(this.factor, this.attempts++);
                if (this.jitter) {
                    var t = Math.random()
                      , i = Math.floor(t * this.jitter * e);
                    e = 0 == (1 & Math.floor(10 * t)) ? e - i : e + i
                }
                return 0 | Math.min(e, this.max)
            }
            ,
            i.prototype.reset = function() {
                this.attempts = 0
            }
            ,
            i.prototype.setMin = function(e) {
                this.ms = e
            }
            ,
            i.prototype.setMax = function(e) {
                this.max = e
            }
            ,
            i.prototype.setJitter = function(e) {
                this.jitter = e
            }
        }
        , {}],
        5: [function(e, t, i) {
            !function(e) {
                "use strict";
                i.encode = function(t) {
                    var i, n = new Uint8Array(t), r = n.length, o = "";
                    for (i = 0; r > i; i += 3)
                        o += e[n[i] >> 2],
                        o += e[(3 & n[i]) << 4 | n[i + 1] >> 4],
                        o += e[(15 & n[i + 1]) << 2 | n[i + 2] >> 6],
                        o += e[63 & n[i + 2]];
                    return r % 3 === 2 ? o = o.substring(0, o.length - 1) + "=" : r % 3 === 1 && (o = o.substring(0, o.length - 2) + "=="),
                    o
                }
                ,
                i.decode = function(t) {
                    var i, n, r, o, a, s = .75 * t.length, l = t.length, c = 0;
                    "=" === t[t.length - 1] && (s--,
                    "=" === t[t.length - 2] && s--);
                    var d = new ArrayBuffer(s)
                      , h = new Uint8Array(d);
                    for (i = 0; l > i; i += 4)
                        n = e.indexOf(t[i]),
                        r = e.indexOf(t[i + 1]),
                        o = e.indexOf(t[i + 2]),
                        a = e.indexOf(t[i + 3]),
                        h[c++] = n << 2 | r >> 4,
                        h[c++] = (15 & r) << 4 | o >> 2,
                        h[c++] = (3 & o) << 6 | 63 & a;
                    return d
                }
            }("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/")
        }
        , {}],
        6: [function(e, t) {
            (function(e) {
                function i(e) {
                    for (var t = 0; t < e.length; t++) {
                        var i = e[t];
                        if (i.buffer instanceof ArrayBuffer) {
                            var n = i.buffer;
                            if (i.byteLength !== n.byteLength) {
                                var r = new Uint8Array(i.byteLength);
                                r.set(new Uint8Array(n,i.byteOffset,i.byteLength)),
                                n = r.buffer
                            }
                            e[t] = n
                        }
                    }
                }
                function n(e, t) {
                    t = t || {};
                    var n = new o;
                    i(e);
                    for (var r = 0; r < e.length; r++)
                        n.append(e[r]);
                    return t.type ? n.getBlob(t.type) : n.getBlob()
                }
                function r(e, t) {
                    return i(e),
                    new Blob(e,t || {})
                }
                var o = e.BlobBuilder || e.WebKitBlobBuilder || e.MSBlobBuilder || e.MozBlobBuilder
                  , a = function() {
                    try {
                        var e = new Blob(["hi"]);
                        return 2 === e.size
                    } catch (t) {
                        return !1
                    }
                }()
                  , s = a && function() {
                    try {
                        var e = new Blob([new Uint8Array([1, 2])]);
                        return 2 === e.size
                    } catch (t) {
                        return !1
                    }
                }()
                  , l = o && o.prototype.append && o.prototype.getBlob;
                t.exports = function() {
                    return a ? s ? e.Blob : r : l ? n : void 0
                }()
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {}],
        7: [function(e, t) {
            var i = [].slice;
            t.exports = function(e, t) {
                if ("string" == typeof t && (t = e[t]),
                "function" != typeof t)
                    throw new Error("bind() requires a function");
                var n = i.call(arguments, 2);
                return function() {
                    return t.apply(e, n.concat(i.call(arguments)))
                }
            }
        }
        , {}],
        8: [function(e, t) {
            function i(e) {
                return e ? n(e) : void 0
            }
            function n(e) {
                for (var t in i.prototype)
                    e[t] = i.prototype[t];
                return e
            }
            t.exports = i,
            i.prototype.on = i.prototype.addEventListener = function(e, t) {
                return this._callbacks = this._callbacks || {},
                (this._callbacks[e] = this._callbacks[e] || []).push(t),
                this
            }
            ,
            i.prototype.once = function(e, t) {
                function i() {
                    n.off(e, i),
                    t.apply(this, arguments)
                }
                var n = this;
                return this._callbacks = this._callbacks || {},
                i.fn = t,
                this.on(e, i),
                this
            }
            ,
            i.prototype.off = i.prototype.removeListener = i.prototype.removeAllListeners = i.prototype.removeEventListener = function(e, t) {
                if (this._callbacks = this._callbacks || {},
                0 == arguments.length)
                    return this._callbacks = {},
                    this;
                var i = this._callbacks[e];
                if (!i)
                    return this;
                if (1 == arguments.length)
                    return delete this._callbacks[e],
                    this;
                for (var n, r = 0; r < i.length; r++)
                    if (n = i[r],
                    n === t || n.fn === t) {
                        i.splice(r, 1);
                        break
                    }
                return this
            }
            ,
            i.prototype.emit = function(e) {
                this._callbacks = this._callbacks || {};
                var t = [].slice.call(arguments, 1)
                  , i = this._callbacks[e];
                if (i) {
                    i = i.slice(0);
                    for (var n = 0, r = i.length; r > n; ++n)
                        i[n].apply(this, t)
                }
                return this
            }
            ,
            i.prototype.listeners = function(e) {
                return this._callbacks = this._callbacks || {},
                this._callbacks[e] || []
            }
            ,
            i.prototype.hasListeners = function(e) {
                return !!this.listeners(e).length
            }
        }
        , {}],
        9: [function(e, t) {
            t.exports = function(e, t) {
                var i = function() {}
                ;
                i.prototype = t.prototype,
                e.prototype = new i,
                e.prototype.constructor = e
            }
        }
        , {}],
        10: [function(e, t) {
            function i(e) {
                return i.enabled(e) ? function(t) {
                    t = n(t);
                    var r = new Date
                      , o = r - (i[e] || r);
                    i[e] = r,
                    t = e + " " + t + " +" + i.humanize(o),
                    window.console && console.log && Function.prototype.apply.call(console.log, console, arguments)
                }
                : function() {}
            }
            function n(e) {
                return e instanceof Error ? e.stack || e.message : e
            }
            t.exports = i,
            i.names = [],
            i.skips = [],
            i.enable = function(e) {
                try {
                    localStorage.debug = e
                } catch (t) {}
                for (var n = (e || "").split(/[\s,]+/), r = n.length, o = 0; r > o; o++)
                    e = n[o].replace("*", ".*?"),
                    "-" === e[0] ? i.skips.push(new RegExp("^" + e.substr(1) + "$")) : i.names.push(new RegExp("^" + e + "$"))
            }
            ,
            i.disable = function() {
                i.enable("")
            }
            ,
            i.humanize = function(e) {
                var t = 1e3
                  , i = 6e4
                  , n = 60 * i;
                return e >= n ? (e / n).toFixed(1) + "h" : e >= i ? (e / i).toFixed(1) + "m" : e >= t ? (e / t | 0) + "s" : e + "ms"
            }
            ,
            i.enabled = function(e) {
                for (var t = 0, n = i.skips.length; n > t; t++)
                    if (i.skips[t].test(e))
                        return !1;
                for (var t = 0, n = i.names.length; n > t; t++)
                    if (i.names[t].test(e))
                        return !0;
                return !1
            }
            ;
            try {
                window.localStorage && i.enable(localStorage.debug)
            } catch (r) {}
        }
        , {}],
        11: [function(e, t) {
            t.exports = e("./lib/")
        }
        , {
            "./lib/": 12
        }],
        12: [function(e, t) {
            t.exports = e("./socket"),
            t.exports.parser = e("engine.io-parser")
        }
        , {
            "./socket": 13,
            "engine.io-parser": 24
        }],
        13: [function(e, t) {
            (function(i) {
                function n(e, t) {
                    if (!(this instanceof n))
                        return new n(e,t);
                    if (t = t || {},
                    e && "object" == typeof e && (t = e,
                    e = null ),
                    e && (e = d(e),
                    t.host = e.host,
                    t.secure = "https" == e.protocol || "wss" == e.protocol,
                    t.port = e.port,
                    e.query && (t.query = e.query)),
                    this.secure = null != t.secure ? t.secure : i.location && "https:" == location.protocol,
                    t.host) {
                        var r = t.host.split(":");
                        t.hostname = r.shift(),
                        r.length ? t.port = r.pop() : t.port || (t.port = this.secure ? "443" : "80")
                    }
                    this.agent = t.agent || !1,
                    this.hostname = t.hostname || (i.location ? location.hostname : "localhost"),
                    this.port = t.port || (i.location && location.port ? location.port : this.secure ? 443 : 80),
                    this.query = t.query || {},
                    "string" == typeof this.query && (this.query = u.decode(this.query)),
                    this.upgrade = !1 !== t.upgrade,
                    this.path = (t.path || "/engine.io").replace(/\/$/, "") + "/",
                    this.forceJSONP = !!t.forceJSONP,
                    this.jsonp = !1 !== t.jsonp,
                    this.forceBase64 = !!t.forceBase64,
                    this.enablesXDR = !!t.enablesXDR,
                    this.timestampParam = t.timestampParam || "t",
                    this.timestampRequests = t.timestampRequests,
                    this.transports = t.transports || ["polling", "websocket"],
                    this.readyState = "",
                    this.writeBuffer = [],
                    this.callbackBuffer = [],
                    this.policyPort = t.policyPort || 843,
                    this.rememberUpgrade = t.rememberUpgrade || !1,
                    this.binaryType = null ,
                    this.onlyBinaryUpgrades = t.onlyBinaryUpgrades,
                    this.pfx = t.pfx || null ,
                    this.key = t.key || null ,
                    this.passphrase = t.passphrase || null ,
                    this.cert = t.cert || null ,
                    this.ca = t.ca || null ,
                    this.ciphers = t.ciphers || null ,
                    this.rejectUnauthorized = t.rejectUnauthorized || null ,
                    this.open()
                }
                function r(e) {
                    var t = {};
                    for (var i in e)
                        e.hasOwnProperty(i) && (t[i] = e[i]);
                    return t
                }
                var o = e("./transports")
                  , a = e("component-emitter")
                  , s = e("debug")("engine.io-client:socket")
                  , l = e("indexof")
                  , c = e("engine.io-parser")
                  , d = e("parseuri")
                  , h = e("parsejson")
                  , u = e("parseqs");
                t.exports = n,
                n.priorWebsocketSuccess = !1,
                a(n.prototype),
                n.protocol = c.protocol,
                n.Socket = n,
                n.Transport = e("./transport"),
                n.transports = e("./transports"),
                n.parser = e("engine.io-parser"),
                n.prototype.createTransport = function(e) {
                    s('creating transport "%s"', e);
                    var t = r(this.query);
                    t.EIO = c.protocol,
                    t.transport = e,
                    this.id && (t.sid = this.id);
                    var i = new o[e]({
                        agent: this.agent,
                        hostname: this.hostname,
                        port: this.port,
                        secure: this.secure,
                        path: this.path,
                        query: t,
                        forceJSONP: this.forceJSONP,
                        jsonp: this.jsonp,
                        forceBase64: this.forceBase64,
                        enablesXDR: this.enablesXDR,
                        timestampRequests: this.timestampRequests,
                        timestampParam: this.timestampParam,
                        policyPort: this.policyPort,
                        socket: this,
                        pfx: this.pfx,
                        key: this.key,
                        passphrase: this.passphrase,
                        cert: this.cert,
                        ca: this.ca,
                        ciphers: this.ciphers,
                        rejectUnauthorized: this.rejectUnauthorized
                    });
                    return i
                }
                ,
                n.prototype.open = function() {
                    var e;
                    if (this.rememberUpgrade && n.priorWebsocketSuccess && -1 != this.transports.indexOf("websocket"))
                        e = "websocket";
                    else {
                        if (0 == this.transports.length) {
                            var t = this;
                            return void setTimeout(function() {
                                t.emit("error", "No transports available")
                            }, 0)
                        }
                        e = this.transports[0]
                    }
                    this.readyState = "opening";
                    var e;
                    try {
                        e = this.createTransport(e)
                    } catch (i) {
                        return this.transports.shift(),
                        void this.open()
                    }
                    e.open(),
                    this.setTransport(e)
                }
                ,
                n.prototype.setTransport = function(e) {
                    s("setting transport %s", e.name);
                    var t = this;
                    this.transport && (s("clearing existing transport %s", this.transport.name),
                    this.transport.removeAllListeners()),
                    this.transport = e,
                    e.on("drain", function() {
                        t.onDrain()
                    }).on("packet", function(e) {
                        t.onPacket(e)
                    }).on("error", function(e) {
                        t.onError(e)
                    }).on("close", function() {
                        t.onClose("transport close")
                    })
                }
                ,
                n.prototype.probe = function(e) {
                    function t() {
                        if (u.onlyBinaryUpgrades) {
                            var t = !this.supportsBinary && u.transport.supportsBinary;
                            h = h || t
                        }
                        h || (s('probe transport "%s" opened', e),
                        d.send([{
                            type: "ping",
                            data: "probe"
                        }]),
                        d.once("packet", function(t) {
                            if (!h)
                                if ("pong" == t.type && "probe" == t.data) {
                                    if (s('probe transport "%s" pong', e),
                                    u.upgrading = !0,
                                    u.emit("upgrading", d),
                                    !d)
                                        return;
                                    n.priorWebsocketSuccess = "websocket" == d.name,
                                    s('pausing current transport "%s"', u.transport.name),
                                    u.transport.pause(function() {
                                        h || "closed" != u.readyState && (s("changing transport and sending upgrade packet"),
                                        c(),
                                        u.setTransport(d),
                                        d.send([{
                                            type: "upgrade"
                                        }]),
                                        u.emit("upgrade", d),
                                        d = null ,
                                        u.upgrading = !1,
                                        u.flush())
                                    })
                                } else {
                                    s('probe transport "%s" failed', e);
                                    var i = new Error("probe error");
                                    i.transport = d.name,
                                    u.emit("upgradeError", i)
                                }
                        }))
                    }
                    function i() {
                        h || (h = !0,
                        c(),
                        d.close(),
                        d = null )
                    }
                    function r(t) {
                        var n = new Error("probe error: " + t);
                        n.transport = d.name,
                        i(),
                        s('probe transport "%s" failed because of error: %s', e, t),
                        u.emit("upgradeError", n)
                    }
                    function o() {
                        r("transport closed")
                    }
                    function a() {
                        r("socket closed")
                    }
                    function l(e) {
                        d && e.name != d.name && (s('"%s" works - aborting "%s"', e.name, d.name),
                        i())
                    }
                    function c() {
                        d.removeListener("open", t),
                        d.removeListener("error", r),
                        d.removeListener("close", o),
                        u.removeListener("close", a),
                        u.removeListener("upgrading", l)
                    }
                    s('probing transport "%s"', e);
                    var d = this.createTransport(e, {
                        probe: 1
                    })
                      , h = !1
                      , u = this;
                    n.priorWebsocketSuccess = !1,
                    d.once("open", t),
                    d.once("error", r),
                    d.once("close", o),
                    this.once("close", a),
                    this.once("upgrading", l),
                    d.open()
                }
                ,
                n.prototype.onOpen = function() {
                    if (s("socket open"),
                    this.readyState = "open",
                    n.priorWebsocketSuccess = "websocket" == this.transport.name,
                    this.emit("open"),
                    this.flush(),
                    "open" == this.readyState && this.upgrade && this.transport.pause) {
                        s("starting upgrade probes");
                        for (var e = 0, t = this.upgrades.length; t > e; e++)
                            this.probe(this.upgrades[e])
                    }
                }
                ,
                n.prototype.onPacket = function(e) {
                    if ("opening" == this.readyState || "open" == this.readyState)
                        switch (s('socket receive: type "%s", data "%s"', e.type, e.data),
                        this.emit("packet", e),
                        this.emit("heartbeat"),
                        e.type) {
                        case "open":
                            this.onHandshake(h(e.data));
                            break;
                        case "pong":
                            this.setPing();
                            break;
                        case "error":
                            var t = new Error("server error");
                            t.code = e.data,
                            this.emit("error", t);
                            break;
                        case "message":
                            this.emit("data", e.data),
                            this.emit("message", e.data)
                        }
                    else
                        s('packet received with socket readyState "%s"', this.readyState)
                }
                ,
                n.prototype.onHandshake = function(e) {
                    this.emit("handshake", e),
                    this.id = e.sid,
                    this.transport.query.sid = e.sid,
                    this.upgrades = this.filterUpgrades(e.upgrades),
                    this.pingInterval = e.pingInterval,
                    this.pingTimeout = e.pingTimeout,
                    this.onOpen(),
                    "closed" != this.readyState && (this.setPing(),
                    this.removeListener("heartbeat", this.onHeartbeat),
                    this.on("heartbeat", this.onHeartbeat))
                }
                ,
                n.prototype.onHeartbeat = function(e) {
                    clearTimeout(this.pingTimeoutTimer);
                    var t = this;
                    t.pingTimeoutTimer = setTimeout(function() {
                        "closed" != t.readyState && t.onClose("ping timeout")
                    }, e || t.pingInterval + t.pingTimeout)
                }
                ,
                n.prototype.setPing = function() {
                    var e = this;
                    clearTimeout(e.pingIntervalTimer),
                    e.pingIntervalTimer = setTimeout(function() {
                        s("writing ping packet - expecting pong within %sms", e.pingTimeout),
                        e.ping(),
                        e.onHeartbeat(e.pingTimeout)
                    }, e.pingInterval)
                }
                ,
                n.prototype.ping = function() {
                    this.sendPacket("ping")
                }
                ,
                n.prototype.onDrain = function() {
                    for (var e = 0; e < this.prevBufferLen; e++)
                        this.callbackBuffer[e] && this.callbackBuffer[e]();
                    this.writeBuffer.splice(0, this.prevBufferLen),
                    this.callbackBuffer.splice(0, this.prevBufferLen),
                    this.prevBufferLen = 0,
                    0 == this.writeBuffer.length ? this.emit("drain") : this.flush()
                }
                ,
                n.prototype.flush = function() {
                    "closed" != this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length && (s("flushing %d packets in socket", this.writeBuffer.length),
                    this.transport.send(this.writeBuffer),
                    this.prevBufferLen = this.writeBuffer.length,
                    this.emit("flush"))
                }
                ,
                n.prototype.write = n.prototype.send = function(e, t) {
                    return this.sendPacket("message", e, t),
                    this
                }
                ,
                n.prototype.sendPacket = function(e, t, i) {
                    if ("closing" != this.readyState && "closed" != this.readyState) {
                        var n = {
                            type: e,
                            data: t
                        };
                        this.emit("packetCreate", n),
                        this.writeBuffer.push(n),
                        this.callbackBuffer.push(i),
                        this.flush()
                    }
                }
                ,
                n.prototype.close = function() {
                    function e() {
                        n.onClose("forced close"),
                        s("socket closing - telling transport to close"),
                        n.transport.close()
                    }
                    function t() {
                        n.removeListener("upgrade", t),
                        n.removeListener("upgradeError", t),
                        e()
                    }
                    function i() {
                        n.once("upgrade", t),
                        n.once("upgradeError", t)
                    }
                    if ("opening" == this.readyState || "open" == this.readyState) {
                        this.readyState = "closing";
                        var n = this;
                        this.writeBuffer.length ? this.once("drain", function() {
                            this.upgrading ? i() : e()
                        }) : this.upgrading ? i() : e()
                    }
                    return this
                }
                ,
                n.prototype.onError = function(e) {
                    s("socket error %j", e),
                    n.priorWebsocketSuccess = !1,
                    this.emit("error", e),
                    this.onClose("transport error", e)
                }
                ,
                n.prototype.onClose = function(e, t) {
                    if ("opening" == this.readyState || "open" == this.readyState || "closing" == this.readyState) {
                        s('socket close with reason: "%s"', e);
                        var i = this;
                        clearTimeout(this.pingIntervalTimer),
                        clearTimeout(this.pingTimeoutTimer),
                        setTimeout(function() {
                            i.writeBuffer = [],
                            i.callbackBuffer = [],
                            i.prevBufferLen = 0
                        }, 0),
                        this.transport.removeAllListeners("close"),
                        this.transport.close(),
                        this.transport.removeAllListeners(),
                        this.readyState = "closed",
                        this.id = null ,
                        this.emit("close", e, t)
                    }
                }
                ,
                n.prototype.filterUpgrades = function(e) {
                    for (var t = [], i = 0, n = e.length; n > i; i++)
                        ~l(this.transports, e[i]) && t.push(e[i]);
                    return t
                }
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {
            "./transport": 14,
            "./transports": 15,
            "component-emitter": 8,
            debug: 21,
            "engine.io-parser": 24,
            indexof: 33,
            parsejson: 43,
            parseqs: 44,
            parseuri: 23
        }],
        14: [function(e, t) {
            function i(e) {
                this.path = e.path,
                this.hostname = e.hostname,
                this.port = e.port,
                this.secure = e.secure,
                this.query = e.query,
                this.timestampParam = e.timestampParam,
                this.timestampRequests = e.timestampRequests,
                this.readyState = "",
                this.agent = e.agent || !1,
                this.socket = e.socket,
                this.enablesXDR = e.enablesXDR,
                this.pfx = e.pfx,
                this.key = e.key,
                this.passphrase = e.passphrase,
                this.cert = e.cert,
                this.ca = e.ca,
                this.ciphers = e.ciphers,
                this.rejectUnauthorized = e.rejectUnauthorized
            }
            var n = e("engine.io-parser")
              , r = e("component-emitter");
            t.exports = i,
            r(i.prototype),
            i.timestamps = 0,
            i.prototype.onError = function(e, t) {
                var i = new Error(e);
                return i.type = "TransportError",
                i.description = t,
                this.emit("error", i),
                this
            }
            ,
            i.prototype.open = function() {
                return ("closed" == this.readyState || "" == this.readyState) && (this.readyState = "opening",
                this.doOpen()),
                this
            }
            ,
            i.prototype.close = function() {
                return ("opening" == this.readyState || "open" == this.readyState) && (this.doClose(),
                this.onClose()),
                this
            }
            ,
            i.prototype.send = function(e) {
                if ("open" != this.readyState)
                    throw new Error("Transport not open");
                this.write(e)
            }
            ,
            i.prototype.onOpen = function() {
                this.readyState = "open",
                this.writable = !0,
                this.emit("open")
            }
            ,
            i.prototype.onData = function(e) {
                var t = n.decodePacket(e, this.socket.binaryType);
                this.onPacket(t)
            }
            ,
            i.prototype.onPacket = function(e) {
                this.emit("packet", e)
            }
            ,
            i.prototype.onClose = function() {
                this.readyState = "closed",
                this.emit("close")
            }
        }
        , {
            "component-emitter": 8,
            "engine.io-parser": 24
        }],
        15: [function(e, t, i) {
            (function(t) {
                function n(e) {
                    var i, n = !1, s = !1, l = !1 !== e.jsonp;
                    if (t.location) {
                        var c = "https:" == location.protocol
                          , d = location.port;
                        d || (d = c ? 443 : 80),
                        n = e.hostname != location.hostname || d != e.port,
                        s = e.secure != c
                    }
                    if (e.xdomain = n,
                    e.xscheme = s,
                    i = new r(e),
                    "open"in i && !e.forceJSONP)
                        return new o(e);
                    if (!l)
                        throw new Error("JSONP disabled");
                    return new a(e)
                }
                var r = e("xmlhttprequest")
                  , o = e("./polling-xhr")
                  , a = e("./polling-jsonp")
                  , s = e("./websocket");
                i.polling = n,
                i.websocket = s
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {
            "./polling-jsonp": 16,
            "./polling-xhr": 17,
            "./websocket": 19,
            xmlhttprequest: 20
        }],
        16: [function(e, t) {
            (function(i) {
                function n() {}
                function r(e) {
                    o.call(this, e),
                    this.query = this.query || {},
                    s || (i.___eio || (i.___eio = []),
                    s = i.___eio),
                    this.index = s.length;
                    var t = this;
                    s.push(function(e) {
                        t.onData(e)
                    }),
                    this.query.j = this.index,
                    i.document && i.addEventListener && i.addEventListener("beforeunload", function() {
                        t.script && (t.script.onerror = n)
                    }, !1)
                }
                var o = e("./polling")
                  , a = e("component-inherit");
                t.exports = r;
                var s, l = /\n/g, c = /\\n/g;
                a(r, o),
                r.prototype.supportsBinary = !1,
                r.prototype.doClose = function() {
                    this.script && (this.script.parentNode.removeChild(this.script),
                    this.script = null ),
                    this.form && (this.form.parentNode.removeChild(this.form),
                    this.form = null ,
                    this.iframe = null ),
                    o.prototype.doClose.call(this)
                }
                ,
                r.prototype.doPoll = function() {
                    var e = this
                      , t = document.createElement("script");
                    this.script && (this.script.parentNode.removeChild(this.script),
                    this.script = null ),
                    t.async = !0,
                    t.src = this.uri(),
                    t.onerror = function(t) {
                        e.onError("jsonp poll error", t)
                    }
                    ;
                    var i = document.getElementsByTagName("script")[0];
                    i.parentNode.insertBefore(t, i),
                    this.script = t;
                    var n = "undefined" != typeof navigator && /gecko/i.test(navigator.userAgent);
                    n && setTimeout(function() {
                        var e = document.createElement("iframe");
                        document.body.appendChild(e),
                        document.body.removeChild(e)
                    }, 100)
                }
                ,
                r.prototype.doWrite = function(e, t) {
                    function i() {
                        n(),
                        t()
                    }
                    function n() {
                        if (r.iframe)
                            try {
                                r.form.removeChild(r.iframe)
                            } catch (e) {
                                r.onError("jsonp polling iframe removal error", e)
                            }
                        try {
                            var t = '<iframe src="javascript:0" name="' + r.iframeId + '">';
                            o = document.createElement(t)
                        } catch (e) {
                            o = document.createElement("iframe"),
                            o.name = r.iframeId,
                            o.src = "javascript:0"
                        }
                        o.id = r.iframeId,
                        r.form.appendChild(o),
                        r.iframe = o
                    }
                    var r = this;
                    if (!this.form) {
                        var o, a = document.createElement("form"), s = document.createElement("textarea"), d = this.iframeId = "eio_iframe_" + this.index;
                        a.className = "socketio",
                        a.style.position = "absolute",
                        a.style.top = "-1000px",
                        a.style.left = "-1000px",
                        a.target = d,
                        a.method = "POST",
                        a.setAttribute("accept-charset", "utf-8"),
                        s.name = "d",
                        a.appendChild(s),
                        document.body.appendChild(a),
                        this.form = a,
                        this.area = s
                    }
                    this.form.action = this.uri(),
                    n(),
                    e = e.replace(c, "\\\n"),
                    this.area.value = e.replace(l, "\\n");
                    try {
                        this.form.submit()
                    } catch (h) {}
                    this.iframe.attachEvent ? this.iframe.onreadystatechange = function() {
                        "complete" == r.iframe.readyState && i()
                    }
                    : this.iframe.onload = i
                }
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {
            "./polling": 18,
            "component-inherit": 9
        }],
        17: [function(e, t) {
            (function(i) {
                function n() {}
                function r(e) {
                    if (l.call(this, e),
                    i.location) {
                        var t = "https:" == location.protocol
                          , n = location.port;
                        n || (n = t ? 443 : 80),
                        this.xd = e.hostname != i.location.hostname || n != e.port,
                        this.xs = e.secure != t
                    }
                }
                function o(e) {
                    this.method = e.method || "GET",
                    this.uri = e.uri,
                    this.xd = !!e.xd,
                    this.xs = !!e.xs,
                    this.async = !1 !== e.async,
                    this.data = void 0 != e.data ? e.data : null ,
                    this.agent = e.agent,
                    this.isBinary = e.isBinary,
                    this.supportsBinary = e.supportsBinary,
                    this.enablesXDR = e.enablesXDR,
                    this.pfx = e.pfx,
                    this.key = e.key,
                    this.passphrase = e.passphrase,
                    this.cert = e.cert,
                    this.ca = e.ca,
                    this.ciphers = e.ciphers,
                    this.rejectUnauthorized = e.rejectUnauthorized,
                    this.create()
                }
                function a() {
                    for (var e in o.requests)
                        o.requests.hasOwnProperty(e) && o.requests[e].abort()
                }
                var s = e("xmlhttprequest")
                  , l = e("./polling")
                  , c = e("component-emitter")
                  , d = e("component-inherit")
                  , h = e("debug")("engine.io-client:polling-xhr");
                t.exports = r,
                t.exports.Request = o,
                d(r, l),
                r.prototype.supportsBinary = !0,
                r.prototype.request = function(e) {
                    return e = e || {},
                    e.uri = this.uri(),
                    e.xd = this.xd,
                    e.xs = this.xs,
                    e.agent = this.agent || !1,
                    e.supportsBinary = this.supportsBinary,
                    e.enablesXDR = this.enablesXDR,
                    e.pfx = this.pfx,
                    e.key = this.key,
                    e.passphrase = this.passphrase,
                    e.cert = this.cert,
                    e.ca = this.ca,
                    e.ciphers = this.ciphers,
                    e.rejectUnauthorized = this.rejectUnauthorized,
                    new o(e)
                }
                ,
                r.prototype.doWrite = function(e, t) {
                    var i = "string" != typeof e && void 0 !== e
                      , n = this.request({
                        method: "POST",
                        data: e,
                        isBinary: i
                    })
                      , r = this;
                    n.on("success", t),
                    n.on("error", function(e) {
                        r.onError("xhr post error", e)
                    }),
                    this.sendXhr = n
                }
                ,
                r.prototype.doPoll = function() {
                    h("xhr poll");
                    var e = this.request()
                      , t = this;
                    e.on("data", function(e) {
                        t.onData(e)
                    }),
                    e.on("error", function(e) {
                        t.onError("xhr poll error", e)
                    }),
                    this.pollXhr = e
                }
                ,
                c(o.prototype),
                o.prototype.create = function() {
                    var e = {
                        agent: this.agent,
                        xdomain: this.xd,
                        xscheme: this.xs,
                        enablesXDR: this.enablesXDR
                    };
                    e.pfx = this.pfx,
                    e.key = this.key,
                    e.passphrase = this.passphrase,
                    e.cert = this.cert,
                    e.ca = this.ca,
                    e.ciphers = this.ciphers,
                    e.rejectUnauthorized = this.rejectUnauthorized;
                    var t = this.xhr = new s(e)
                      , n = this;
                    try {
                        if (h("xhr open %s: %s", this.method, this.uri),
                        t.open(this.method, this.uri, this.async),
                        this.supportsBinary && (t.responseType = "arraybuffer"),
                        "POST" == this.method)
                            try {
                                this.isBinary ? t.setRequestHeader("Content-type", "application/octet-stream") : t.setRequestHeader("Content-type", "text/plain;charset=UTF-8")
                            } catch (r) {}
                        "withCredentials"in t && (t.withCredentials = !0),
                        this.hasXDR() ? (t.onload = function() {
                            n.onLoad()
                        }
                        ,
                        t.onerror = function() {
                            n.onError(t.responseText)
                        }
                        ) : t.onreadystatechange = function() {
                            4 == t.readyState && (200 == t.status || 1223 == t.status ? n.onLoad() : setTimeout(function() {
                                n.onError(t.status)
                            }, 0))
                        }
                        ,
                        h("xhr data %s", this.data),
                        t.send(this.data)
                    } catch (r) {
                        return void setTimeout(function() {
                            n.onError(r)
                        }, 0)
                    }
                    i.document && (this.index = o.requestsCount++,
                    o.requests[this.index] = this)
                }
                ,
                o.prototype.onSuccess = function() {
                    this.emit("success"),
                    this.cleanup()
                }
                ,
                o.prototype.onData = function(e) {
                    this.emit("data", e),
                    this.onSuccess()
                }
                ,
                o.prototype.onError = function(e) {
                    this.emit("error", e),
                    this.cleanup(!0)
                }
                ,
                o.prototype.cleanup = function(e) {
                    if ("undefined" != typeof this.xhr && null !== this.xhr) {
                        if (this.hasXDR() ? this.xhr.onload = this.xhr.onerror = n : this.xhr.onreadystatechange = n,
                        e)
                            try {
                                this.xhr.abort()
                            } catch (t) {}
                        i.document && delete o.requests[this.index],
                        this.xhr = null
                    }
                }
                ,
                o.prototype.onLoad = function() {
                    var e;
                    try {
                        var t;
                        try {
                            t = this.xhr.getResponseHeader("Content-Type").split(";")[0]
                        } catch (i) {}
                        e = "application/octet-stream" === t ? this.xhr.response : this.supportsBinary ? "ok" : this.xhr.responseText
                    } catch (i) {
                        this.onError(i)
                    }
                    null != e && this.onData(e)
                }
                ,
                o.prototype.hasXDR = function() {
                    return "undefined" != typeof i.XDomainRequest && !this.xs && this.enablesXDR
                }
                ,
                o.prototype.abort = function() {
                    this.cleanup()
                }
                ,
                i.document && (o.requestsCount = 0,
                o.requests = {},
                i.attachEvent ? i.attachEvent("onunload", a) : i.addEventListener && i.addEventListener("beforeunload", a, !1))
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {
            "./polling": 18,
            "component-emitter": 8,
            "component-inherit": 9,
            debug: 21,
            xmlhttprequest: 20
        }],
        18: [function(e, t) {
            function i(e) {
                var t = e && e.forceBase64;
                (!l || t) && (this.supportsBinary = !1),
                n.call(this, e)
            }
            var n = e("../transport")
              , r = e("parseqs")
              , o = e("engine.io-parser")
              , a = e("component-inherit")
              , s = e("debug")("engine.io-client:polling");
            t.exports = i;
            var l = function() {
                var t = e("xmlhttprequest")
                  , i = new t({
                    xdomain: !1
                });
                return null != i.responseType
            }();
            a(i, n),
            i.prototype.name = "polling",
            i.prototype.doOpen = function() {
                this.poll()
            }
            ,
            i.prototype.pause = function(e) {
                function t() {
                    s("paused"),
                    i.readyState = "paused",
                    e()
                }
                var i = this;
                if (this.readyState = "pausing",
                this.polling || !this.writable) {
                    var n = 0;
                    this.polling && (s("we are currently polling - waiting to pause"),
                    n++,
                    this.once("pollComplete", function() {
                        s("pre-pause polling complete"),
                        --n || t()
                    })),
                    this.writable || (s("we are currently writing - waiting to pause"),
                    n++,
                    this.once("drain", function() {
                        s("pre-pause writing complete"),
                        --n || t()
                    }))
                } else
                    t()
            }
            ,
            i.prototype.poll = function() {
                s("polling"),
                this.polling = !0,
                this.doPoll(),
                this.emit("poll")
            }
            ,
            i.prototype.onData = function(e) {
                var t = this;
                s("polling got data %s", e);
                var i = function(e) {
                    return "opening" == t.readyState && t.onOpen(),
                    "close" == e.type ? (t.onClose(),
                    !1) : void t.onPacket(e)
                }
                ;
                o.decodePayload(e, this.socket.binaryType, i),
                "closed" != this.readyState && (this.polling = !1,
                this.emit("pollComplete"),
                "open" == this.readyState ? this.poll() : s('ignoring poll - transport state "%s"', this.readyState))
            }
            ,
            i.prototype.doClose = function() {
                function e() {
                    s("writing close packet"),
                    t.write([{
                        type: "close"
                    }])
                }
                var t = this;
                "open" == this.readyState ? (s("transport open - closing"),
                e()) : (s("transport not open - deferring close"),
                this.once("open", e))
            }
            ,
            i.prototype.write = function(e) {
                var t = this;
                this.writable = !1;
                var i = function() {
                    t.writable = !0,
                    t.emit("drain")
                }
                  , t = this;
                o.encodePayload(e, this.supportsBinary, function(e) {
                    t.doWrite(e, i)
                })
            }
            ,
            i.prototype.uri = function() {
                var e = this.query || {}
                  , t = this.secure ? "https" : "http"
                  , i = "";
                return !1 !== this.timestampRequests && (e[this.timestampParam] = +new Date + "-" + n.timestamps++),
                this.supportsBinary || e.sid || (e.b64 = 1),
                e = r.encode(e),
                this.port && ("https" == t && 443 != this.port || "http" == t && 80 != this.port) && (i = ":" + this.port),
                e.length && (e = "?" + e),
                t + "://" + this.hostname + i + this.path + e
            }
        }
        , {
            "../transport": 14,
            "component-inherit": 9,
            debug: 21,
            "engine.io-parser": 24,
            parseqs: 44,
            xmlhttprequest: 20
        }],
        19: [function(e, t) {
            function i(e) {
                var t = e && e.forceBase64;
                t && (this.supportsBinary = !1),
                n.call(this, e)
            }
            var n = e("../transport")
              , r = e("engine.io-parser")
              , o = e("parseqs")
              , a = e("component-inherit")
              , s = e("debug")("engine.io-client:websocket")
              , l = e("ws");
            t.exports = i,
            a(i, n),
            i.prototype.name = "websocket",
            i.prototype.supportsBinary = !0,
            i.prototype.doOpen = function() {
                if (this.check()) {
                    var e = this.uri()
                      , t = void 0
                      , i = {
                        agent: this.agent
                    };
                    i.pfx = this.pfx,
                    i.key = this.key,
                    i.passphrase = this.passphrase,
                    i.cert = this.cert,
                    i.ca = this.ca,
                    i.ciphers = this.ciphers,
                    i.rejectUnauthorized = this.rejectUnauthorized,
                    this.ws = new l(e,t,i),
                    void 0 === this.ws.binaryType && (this.supportsBinary = !1),
                    this.ws.binaryType = "arraybuffer",
                    this.addEventListeners()
                }
            }
            ,
            i.prototype.addEventListeners = function() {
                var e = this;
                this.ws.onopen = function() {
                    e.onOpen()
                }
                ,
                this.ws.onclose = function() {
                    e.onClose()
                }
                ,
                this.ws.onmessage = function(t) {
                    e.onData(t.data)
                }
                ,
                this.ws.onerror = function(t) {
                    e.onError("websocket error", t)
                }
            }
            ,
            "undefined" != typeof navigator && /iPad|iPhone|iPod/i.test(navigator.userAgent) && (i.prototype.onData = function(e) {
                var t = this;
                setTimeout(function() {
                    n.prototype.onData.call(t, e)
                }, 0)
            }
            ),
            i.prototype.write = function(e) {
                function t() {
                    i.writable = !0,
                    i.emit("drain")
                }
                var i = this;
                this.writable = !1;
                for (var n = 0, o = e.length; o > n; n++)
                    r.encodePacket(e[n], this.supportsBinary, function(e) {
                        try {
                            i.ws.send(e)
                        } catch (t) {
                            s("websocket closed before onclose event")
                        }
                    });
                setTimeout(t, 0)
            }
            ,
            i.prototype.onClose = function() {
                n.prototype.onClose.call(this)
            }
            ,
            i.prototype.doClose = function() {
                "undefined" != typeof this.ws && this.ws.close()
            }
            ,
            i.prototype.uri = function() {
                var e = this.query || {}
                  , t = this.secure ? "wss" : "ws"
                  , i = "";
                return this.port && ("wss" == t && 443 != this.port || "ws" == t && 80 != this.port) && (i = ":" + this.port),
                this.timestampRequests && (e[this.timestampParam] = +new Date),
                this.supportsBinary || (e.b64 = 1),
                e = o.encode(e),
                e.length && (e = "?" + e),
                t + "://" + this.hostname + i + this.path + e
            }
            ,
            i.prototype.check = function() {
                return !(!l || "__initialize"in l && this.name === i.prototype.name)
            }
        }
        , {
            "../transport": 14,
            "component-inherit": 9,
            debug: 21,
            "engine.io-parser": 24,
            parseqs: 44,
            ws: 79
        }],
        20: [function(e, t) {
            var i = e("has-cors");
            t.exports = function(e) {
                var t = e.xdomain
                  , n = e.xscheme
                  , r = e.enablesXDR;
                try {
                    if ("undefined" != typeof XMLHttpRequest && (!t || i))
                        return new XMLHttpRequest
                } catch (o) {}
                try {
                    if ("undefined" != typeof XDomainRequest && !n && r)
                        return new XDomainRequest
                } catch (o) {}
                if (!t)
                    try {
                        return new ActiveXObject("Microsoft.XMLHTTP")
                    } catch (o) {}
            }
        }
        , {
            "has-cors": 32
        }],
        21: [function(e, t, i) {
            function n() {
                return "WebkitAppearance"in document.documentElement.style || window.console && (console.firebug || console.exception && console.table) || navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31
            }
            function r() {
                var e = arguments
                  , t = this.useColors;
                if (e[0] = (t ? "%c" : "") + this.namespace + (t ? " %c" : " ") + e[0] + (t ? "%c " : " ") + "+" + i.humanize(this.diff),
                !t)
                    return e;
                var n = "color: " + this.color;
                e = [e[0], n, "color: inherit"].concat(Array.prototype.slice.call(e, 1));
                var r = 0
                  , o = 0;
                return e[0].replace(/%[a-z%]/g, function(e) {
                    "%%" !== e && (r++,
                    "%c" === e && (o = r))
                }),
                e.splice(o, 0, n),
                e
            }
            function o() {
                return "object" == typeof console && "function" == typeof console.log && Function.prototype.apply.call(console.log, console, arguments)
            }
            function a(e) {
                try {
                    null == e ? localStorage.removeItem("debug") : localStorage.debug = e
                } catch (t) {}
            }
            function s() {
                var e;
                try {
                    e = localStorage.debug
                } catch (t) {}
                return e
            }
            i = t.exports = e("./debug"),
            i.log = o,
            i.formatArgs = r,
            i.save = a,
            i.load = s,
            i.useColors = n,
            i.colors = ["lightseagreen", "forestgreen", "goldenrod", "dodgerblue", "darkorchid", "crimson"],
            i.formatters.j = function(e) {
                return JSON.stringify(e)
            }
            ,
            i.enable(s())
        }
        , {
            "./debug": 22
        }],
        22: [function(e, t, i) {
            function n() {
                return i.colors[d++ % i.colors.length]
            }
            function r(e) {
                function t() {}
                function r() {
                    var e = r
                      , t = +new Date
                      , o = t - (c || t);
                    e.diff = o,
                    e.prev = c,
                    e.curr = t,
                    c = t,
                    null == e.useColors && (e.useColors = i.useColors()),
                    null == e.color && e.useColors && (e.color = n());
                    var a = Array.prototype.slice.call(arguments);
                    a[0] = i.coerce(a[0]),
                    "string" != typeof a[0] && (a = ["%o"].concat(a));
                    var s = 0;
                    a[0] = a[0].replace(/%([a-z%])/g, function(t, n) {
                        if ("%%" === t)
                            return t;
                        s++;
                        var r = i.formatters[n];
                        if ("function" == typeof r) {
                            var o = a[s];
                            t = r.call(e, o),
                            a.splice(s, 1),
                            s--
                        }
                        return t
                    }),
                    "function" == typeof i.formatArgs && (a = i.formatArgs.apply(e, a));
                    var l = r.log || i.log || console.log.bind(console);
                    l.apply(e, a)
                }
                t.enabled = !1,
                r.enabled = !0;
                var o = i.enabled(e) ? r : t;
                return o.namespace = e,
                o
            }
            function o(e) {
                i.save(e);
                for (var t = (e || "").split(/[\s,]+/), n = t.length, r = 0; n > r; r++)
                    t[r] && (e = t[r].replace(/\*/g, ".*?"),
                    "-" === e[0] ? i.skips.push(new RegExp("^" + e.substr(1) + "$")) : i.names.push(new RegExp("^" + e + "$")))
            }
            function a() {
                i.enable("")
            }
            function s(e) {
                var t, n;
                for (t = 0,
                n = i.skips.length; n > t; t++)
                    if (i.skips[t].test(e))
                        return !1;
                for (t = 0,
                n = i.names.length; n > t; t++)
                    if (i.names[t].test(e))
                        return !0;
                return !1
            }
            function l(e) {
                return e instanceof Error ? e.stack || e.message : e
            }
            i = t.exports = r,
            i.coerce = l,
            i.disable = a,
            i.enable = o,
            i.enabled = s,
            i.humanize = e("ms"),
            i.names = [],
            i.skips = [],
            i.formatters = {};
            var c, d = 0
        }
        , {
            ms: 41
        }],
        23: [function(e, t) {
            var i = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
              , n = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];
            t.exports = function(e) {
                var t = e
                  , r = e.indexOf("[")
                  , o = e.indexOf("]");
                -1 != r && -1 != o && (e = e.substring(0, r) + e.substring(r, o).replace(/:/g, ";") + e.substring(o, e.length));
                for (var a = i.exec(e || ""), s = {}, l = 14; l--; )
                    s[n[l]] = a[l] || "";
                return -1 != r && -1 != o && (s.source = t,
                s.host = s.host.substring(1, s.host.length - 1).replace(/;/g, ":"),
                s.authority = s.authority.replace("[", "").replace("]", "").replace(/;/g, ":"),
                s.ipv6uri = !0),
                s
            }
        }
        , {}],
        24: [function(e, t, i) {
            (function(t) {
                function n(e, t) {
                    var n = "b" + i.packets[e.type] + e.data.data;
                    return t(n)
                }
                function r(e, t, n) {
                    if (!t)
                        return i.encodeBase64Packet(e, n);
                    var r = e.data
                      , o = new Uint8Array(r)
                      , a = new Uint8Array(1 + r.byteLength);
                    a[0] = v[e.type];
                    for (var s = 0; s < o.length; s++)
                        a[s + 1] = o[s];
                    return n(a.buffer)
                }
                function o(e, t, n) {
                    if (!t)
                        return i.encodeBase64Packet(e, n);
                    var r = new FileReader;
                    return r.onload = function() {
                        e.data = r.result,
                        i.encodePacket(e, t, !0, n)
                    }
                    ,
                    r.readAsArrayBuffer(e.data)
                }
                function a(e, t, n) {
                    if (!t)
                        return i.encodeBase64Packet(e, n);
                    if (m)
                        return o(e, t, n);
                    var r = new Uint8Array(1);
                    r[0] = v[e.type];
                    var a = new w([r.buffer, e.data]);
                    return n(a)
                }
                function s(e, t, i) {
                    for (var n = new Array(e.length), r = u(e.length, i), o = function(e, i, r) {
                        t(i, function(t, i) {
                            n[e] = i,
                            r(t, n)
                        })
                    }
                    , a = 0; a < e.length; a++)
                        o(a, e[a], r)
                }
                var l = e("./keys")
                  , c = e("has-binary")
                  , d = e("arraybuffer.slice")
                  , h = e("base64-arraybuffer")
                  , u = e("after")
                  , p = e("utf8")
                  , f = navigator.userAgent.match(/Android/i)
                  , g = /PhantomJS/i.test(navigator.userAgent)
                  , m = f || g;
                i.protocol = 3;
                var v = i.packets = {
                    open: 0,
                    close: 1,
                    ping: 2,
                    pong: 3,
                    message: 4,
                    upgrade: 5,
                    noop: 6
                }
                  , y = l(v)
                  , b = {
                    type: "error",
                    data: "parser error"
                }
                  , w = e("blob");
                i.encodePacket = function(e, i, o, s) {
                    "function" == typeof i && (s = i,
                    i = !1),
                    "function" == typeof o && (s = o,
                    o = null );
                    var l = void 0 === e.data ? void 0 : e.data.buffer || e.data;
                    if (t.ArrayBuffer && l instanceof ArrayBuffer)
                        return r(e, i, s);
                    if (w && l instanceof t.Blob)
                        return a(e, i, s);
                    if (l && l.base64)
                        return n(e, s);
                    var c = v[e.type];
                    return void 0 !== e.data && (c += o ? p.encode(String(e.data)) : String(e.data)),
                    s("" + c)
                }
                ,
                i.encodeBase64Packet = function(e, n) {
                    var r = "b" + i.packets[e.type];
                    if (w && e.data instanceof w) {
                        var o = new FileReader;
                        return o.onload = function() {
                            var e = o.result.split(",")[1];
                            n(r + e)
                        }
                        ,
                        o.readAsDataURL(e.data)
                    }
                    var a;
                    try {
                        a = String.fromCharCode.apply(null , new Uint8Array(e.data))
                    } catch (s) {
                        for (var l = new Uint8Array(e.data), c = new Array(l.length), d = 0; d < l.length; d++)
                            c[d] = l[d];
                        a = String.fromCharCode.apply(null , c)
                    }
                    return r += t.btoa(a),
                    n(r)
                }
                ,
                i.decodePacket = function(e, t, n) {
                    if ("string" == typeof e || void 0 === e) {
                        if ("b" == e.charAt(0))
                            return i.decodeBase64Packet(e.substr(1), t);
                        if (n)
                            try {
                                e = p.decode(e)
                            } catch (r) {
                                return b
                            }
                        var o = e.charAt(0);
                        return Number(o) == o && y[o] ? e.length > 1 ? {
                            type: y[o],
                            data: e.substring(1)
                        } : {
                            type: y[o]
                        } : b
                    }
                    var a = new Uint8Array(e)
                      , o = a[0]
                      , s = d(e, 1);
                    return w && "blob" === t && (s = new w([s])),
                    {
                        type: y[o],
                        data: s
                    }
                }
                ,
                i.decodeBase64Packet = function(e, i) {
                    var n = y[e.charAt(0)];
                    if (!t.ArrayBuffer)
                        return {
                            type: n,
                            data: {
                                base64: !0,
                                data: e.substr(1)
                            }
                        };
                    var r = h.decode(e.substr(1));
                    return "blob" === i && w && (r = new w([r])),
                    {
                        type: n,
                        data: r
                    }
                }
                ,
                i.encodePayload = function(e, t, n) {
                    function r(e) {
                        return e.length + ":" + e
                    }
                    function o(e, n) {
                        i.encodePacket(e, a ? t : !1, !0, function(e) {
                            n(null , r(e))
                        })
                    }
                    "function" == typeof t && (n = t,
                    t = null );
                    var a = c(e);
                    return t && a ? w && !m ? i.encodePayloadAsBlob(e, n) : i.encodePayloadAsArrayBuffer(e, n) : e.length ? void s(e, o, function(e, t) {
                        return n(t.join(""))
                    }) : n("0:")
                }
                ,
                i.decodePayload = function(e, t, n) {
                    if ("string" != typeof e)
                        return i.decodePayloadAsBinary(e, t, n);
                    "function" == typeof t && (n = t,
                    t = null );
                    var r;
                    if ("" == e)
                        return n(b, 0, 1);
                    for (var o, a, s = "", l = 0, c = e.length; c > l; l++) {
                        var d = e.charAt(l);
                        if (":" != d)
                            s += d;
                        else {
                            if ("" == s || s != (o = Number(s)))
                                return n(b, 0, 1);
                            if (a = e.substr(l + 1, o),
                            s != a.length)
                                return n(b, 0, 1);
                            if (a.length) {
                                if (r = i.decodePacket(a, t, !0),
                                b.type == r.type && b.data == r.data)
                                    return n(b, 0, 1);
                                var h = n(r, l + o, c);
                                if (!1 === h)
                                    return
                            }
                            l += o,
                            s = ""
                        }
                    }
                    return "" != s ? n(b, 0, 1) : void 0
                }
                ,
                i.encodePayloadAsArrayBuffer = function(e, t) {
                    function n(e, t) {
                        i.encodePacket(e, !0, !0, function(e) {
                            return t(null , e)
                        })
                    }
                    return e.length ? void s(e, n, function(e, i) {
                        var n = i.reduce(function(e, t) {
                            var i;
                            return i = "string" == typeof t ? t.length : t.byteLength,
                            e + i.toString().length + i + 2
                        }, 0)
                          , r = new Uint8Array(n)
                          , o = 0;
                        return i.forEach(function(e) {
                            var t = "string" == typeof e
                              , i = e;
                            if (t) {
                                for (var n = new Uint8Array(e.length), a = 0; a < e.length; a++)
                                    n[a] = e.charCodeAt(a);
                                i = n.buffer
                            }
                            r[o++] = t ? 0 : 1;
                            for (var s = i.byteLength.toString(), a = 0; a < s.length; a++)
                                r[o++] = parseInt(s[a]);
                            r[o++] = 255;
                            for (var n = new Uint8Array(i), a = 0; a < n.length; a++)
                                r[o++] = n[a]
                        }),
                        t(r.buffer)
                    }) : t(new ArrayBuffer(0))
                }
                ,
                i.encodePayloadAsBlob = function(e, t) {
                    function n(e, t) {
                        i.encodePacket(e, !0, !0, function(e) {
                            var i = new Uint8Array(1);
                            if (i[0] = 1,
                            "string" == typeof e) {
                                for (var n = new Uint8Array(e.length), r = 0; r < e.length; r++)
                                    n[r] = e.charCodeAt(r);
                                e = n.buffer,
                                i[0] = 0
                            }
                            for (var o = e instanceof ArrayBuffer ? e.byteLength : e.size, a = o.toString(), s = new Uint8Array(a.length + 1), r = 0; r < a.length; r++)
                                s[r] = parseInt(a[r]);
                            if (s[a.length] = 255,
                            w) {
                                var l = new w([i.buffer, s.buffer, e]);
                                t(null , l)
                            }
                        })
                    }
                    s(e, n, function(e, i) {
                        return t(new w(i))
                    })
                }
                ,
                i.decodePayloadAsBinary = function(e, t, n) {
                    "function" == typeof t && (n = t,
                    t = null );
                    for (var r = e, o = [], a = !1; r.byteLength > 0; ) {
                        for (var s = new Uint8Array(r), l = 0 === s[0], c = "", h = 1; 255 != s[h]; h++) {
                            if (c.length > 310) {
                                a = !0;
                                break
                            }
                            c += s[h]
                        }
                        if (a)
                            return n(b, 0, 1);
                        r = d(r, 2 + c.length),
                        c = parseInt(c);
                        var u = d(r, 0, c);
                        if (l)
                            try {
                                u = String.fromCharCode.apply(null , new Uint8Array(u))
                            } catch (p) {
                                var f = new Uint8Array(u);
                                u = "";
                                for (var h = 0; h < f.length; h++)
                                    u += String.fromCharCode(f[h])
                            }
                        o.push(u),
                        r = d(r, c)
                    }
                    var g = o.length;
                    o.forEach(function(e, r) {
                        n(i.decodePacket(e, t, !0), r, g)
                    })
                }
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {
            "./keys": 25,
            after: 1,
            "arraybuffer.slice": 2,
            "base64-arraybuffer": 5,
            blob: 6,
            "has-binary": 31,
            utf8: 65
        }],
        25: [function(e, t) {
            t.exports = Object.keys || function(e) {
                var t = []
                  , i = Object.prototype.hasOwnProperty;
                for (var n in e)
                    i.call(e, n) && t.push(n);
                return t
            }
        }
        , {}],
        26: [function(e, t) {
            function i(e) {
                r.call(this);
                var t = e || {};
                this.config = {
                    chunksize: 16384,
                    pacing: 0
                };
                var i;
                for (i in t)
                    this.config[i] = t[i];
                this.file = null ,
                this.channel = null
            }
            function n() {
                r.call(this),
                this.receiveBuffer = [],
                this.received = 0,
                this.metadata = {},
                this.channel = null
            }
            var r = e("wildemitter")
              , o = e("util");
            o.inherits(i, r),
            i.prototype.send = function(e, t) {
                var i = this;
                this.file = e,
                this.channel = t;
                var n = function(t) {
                    var r = new window.FileReader;
                    r.onload = function() {
                        return function(r) {
                            i.channel.send(r.target.result),
                            i.emit("progress", t, e.size, r.target.result),
                            e.size > t + r.target.result.byteLength ? window.setTimeout(n, i.config.pacing, t + i.config.chunksize) : (i.emit("progress", e.size, e.size, null ),
                            i.emit("sentFile"))
                        }
                    }(e);
                    var o = e.slice(t, t + i.config.chunksize);
                    r.readAsArrayBuffer(o)
                }
                ;
                window.setTimeout(n, 0, 0)
            }
            ,
            o.inherits(n, r),
            n.prototype.receive = function(e, t) {
                var i = this;
                e && (this.metadata = e),
                this.channel = t,
                t.binaryType = "arraybuffer",
                this.channel.onmessage = function(e) {
                    var t = e.data.byteLength;
                    i.received += t,
                    i.receiveBuffer.push(e.data),
                    i.emit("progress", i.received, i.metadata.size, e.data),
                    i.received === i.metadata.size ? (i.emit("receivedFile", new window.Blob(i.receiveBuffer), i.metadata),
                    i.receiveBuffer = []) : i.received > i.metadata.size && (console.error("received more than expected, discarding..."),
                    i.receiveBuffer = [])
                }
            }
            ,
            t.exports = {},
            t.exports.support = "undefined" != typeof window && window && window.File && window.FileReader && window.Blob,
            t.exports.Sender = i,
            t.exports.Receiver = n
        }
        , {
            util: 67,
            wildemitter: 78
        }],
        27: [function(e, t) {
            var i = e("getusermedia")
              , n = {};
            t.exports = function(e, t) {
                var r, o = 2 === arguments.length, a = o ? t : e;
                if ("undefined" == typeof window || "http:" === window.location.protocol)
                    return r = new Error("NavigatorUserMediaError"),
                    r.name = "HTTPS_REQUIRED",
                    a(r);
                if (window.navigator.userAgent.match("Chrome")) {
                    var s = parseInt(window.navigator.userAgent.match(/Chrome\/(.*) /)[1], 10)
                      , l = 33
                      , c = !window.chrome.webstore;
                    if (window.navigator.userAgent.match("Linux") && (l = 35),
                    sessionStorage.getScreenMediaJSExtensionId)
                        chrome.runtime.sendMessage(sessionStorage.getScreenMediaJSExtensionId, {
                            type: "getScreen",
                            id: 1
                        }, null , function(t) {
                            if (t && "" !== t.sourceId)
                                e = o && e || {
                                    audio: !1,
                                    video: {
                                        mandatory: {
                                            chromeMediaSource: "desktop",
                                            maxWidth: window.screen.width,
                                            maxHeight: window.screen.height,
                                            maxFrameRate: 3
                                        }
                                    }
                                },
                                e.video.mandatory.chromeMediaSourceId = t.sourceId,
                                i(e, a);
                            else {
                                var n = new Error("NavigatorUserMediaError");
                                n.name = "PERMISSION_DENIED",
                                a(n)
                            }
                        });
                    else if (window.cefGetScreenMedia)
                        window.cefGetScreenMedia(function(t) {
                            if (t)
                                e = o && e || {
                                    audio: !1,
                                    video: {
                                        mandatory: {
                                            chromeMediaSource: "desktop",
                                            maxWidth: window.screen.width,
                                            maxHeight: window.screen.height,
                                            maxFrameRate: 3
                                        },
                                        optional: [{
                                            googLeakyBucket: !0
                                        }, {
                                            googTemporalLayeredScreencast: !0
                                        }]
                                    }
                                },
                                e.video.mandatory.chromeMediaSourceId = t,
                                i(e, a);
                            else {
                                var n = new Error("cefGetScreenMediaError");
                                n.name = "CEF_GETSCREENMEDIA_CANCELED",
                                a(n)
                            }
                        });
                    else if (c || s >= 26 && l >= s)
                        e = o && e || {
                            video: {
                                mandatory: {
                                    googLeakyBucket: !0,
                                    maxWidth: window.screen.width,
                                    maxHeight: window.screen.height,
                                    maxFrameRate: 3,
                                    chromeMediaSource: "screen"
                                }
                            }
                        },
                        i(e, a);
                    else {
                        var d = window.setTimeout(function() {
                            return r = new Error("NavigatorUserMediaError"),
                            r.name = "EXTENSION_UNAVAILABLE",
                            a(r)
                        }, 1e3);
                        n[d] = [a, o ? e : null ],
                        window.postMessage({
                            type: "getScreen",
                            id: d
                        }, "*")
                    }
                } else if (window.navigator.userAgent.match("Firefox")) {
                    var h = parseInt(window.navigator.userAgent.match(/Firefox\/(.*)/)[1], 10);
                    h >= 33 ? (e = o && e || {
                        video: {
                            mozMediaSource: "window",
                            mediaSource: "window"
                        }
                    },
                    i(e, function(e, t) {
                        if (a(e, t),
                        !e)
                            var i = t.currentTime
                              , n = window.setInterval(function() {
                                t || window.clearInterval(n),
                                t.currentTime == i && (window.clearInterval(n),
                                t.onended && t.onended()),
                                i = t.currentTime
                            }, 500)
                    })) : (r = new Error("NavigatorUserMediaError"),
                    r.name = "EXTENSION_UNAVAILABLE")
                }
            }
            ,
            window.addEventListener("message", function(e) {
                if (e.origin == window.location.origin)
                    if ("gotScreen" == e.data.type && n[e.data.id]) {
                        var t = n[e.data.id]
                          , r = t[1]
                          , o = t[0];
                        if (delete n[e.data.id],
                        "" === e.data.sourceId) {
                            var a = new Error("NavigatorUserMediaError");
                            a.name = "PERMISSION_DENIED",
                            o(a)
                        } else
                            r = r || {
                                audio: !1,
                                video: {
                                    mandatory: {
                                        chromeMediaSource: "desktop",
                                        maxWidth: window.screen.width,
                                        maxHeight: window.screen.height,
                                        maxFrameRate: 3
                                    },
                                    optional: [{
                                        googLeakyBucket: !0
                                    }, {
                                        googTemporalLayeredScreencast: !0
                                    }]
                                }
                            },
                            r.video.mandatory.chromeMediaSourceId = e.data.sourceId,
                            i(r, o)
                    } else
                        "getScreenPending" == e.data.type && window.clearTimeout(e.data.id)
            })
        }
        , {
            getusermedia: 28
        }],
        28: [function(e, t) {
            e("webrtc-adapter");
            t.exports = function(e, t) {
                var i, n = 2 === arguments.length, r = {
                    video: !0,
                    audio: !0
                }, o = "PermissionDeniedError", a = "PERMISSION_DENIED", s = "ConstraintNotSatisfiedError";
                return n || (t = e,
                e = r),
                "undefined" != typeof navigator && navigator.getUserMedia ? e.audio || e.video ? (localStorage && "true" === localStorage.useFirefoxFakeDevice && (e.fake = !0),
                void navigator.mediaDevices.getUserMedia(e).then(function(e) {
                    t(null , e)
                }).catch(function(e) {
                    var i;
                    "string" == typeof e ? (i = new Error("MediaStreamError"),
                    i.name = e === o || e === a ? o : s) : (i = e,
                    i.name || (e.name = i[o] ? o : s)),
                    t(i)
                })) : (i = new Error("MediaStreamError"),
                i.name = "NoMediaRequestedError",
                setTimeout(function() {
                    t(i)
                }, 0)) : (i = new Error("MediaStreamError"),
                i.name = "NotSupportedError",
                setTimeout(function() {
                    t(i)
                }, 0))
            }
        }
        , {
            "webrtc-adapter": 68
        }],
        29: [function(e, t) {
            t.exports = function() {
                return this
            }()
        }
        , {}],
        30: [function(e, t) {
            function i(e, t) {
                var i = -1 / 0;
                e.getFloatFrequencyData(t);
                for (var n = 4, r = t.length; r > n; n++)
                    t[n] > i && t[n] < 0 && (i = t[n]);
                return i
            }
            var n = e("wildemitter")
              , r = window.AudioContext || window.webkitAudioContext
              , o = null ;
            t.exports = function(e, t) {
                var a = new n;
                if (!r)
                    return a;
                var t = t || {}
                  , s = t.smoothing || .1
                  , l = t.interval || 50
                  , c = t.threshold
                  , d = t.play
                  , h = t.history || 10
                  , u = !0;
                o || (o = new r);
                var p, f, g;
                g = o.createAnalyser(),
                g.fftSize = 512,
                g.smoothingTimeConstant = s,
                f = new Float32Array(g.fftSize),
                e.jquery && (e = e[0]),
                e instanceof HTMLAudioElement || e instanceof HTMLVideoElement ? (p = o.createMediaElementSource(e),
                "undefined" == typeof d && (d = !0),
                c = c || -50) : (p = o.createMediaStreamSource(e),
                c = c || -50),
                p.connect(g),
                d && g.connect(o.destination),
                a.speaking = !1,
                a.setThreshold = function(e) {
                    c = e
                }
                ,
                a.setInterval = function(e) {
                    l = e
                }
                ,
                a.stop = function() {
                    u = !1,
                    a.emit("volume_change", -100, c),
                    a.speaking && (a.speaking = !1,
                    a.emit("stopped_speaking"))
                }
                ,
                a.speakingHistory = [];
                for (var m = 0; h > m; m++)
                    a.speakingHistory.push(0);
                var v = function() {
                    setTimeout(function() {
                        if (u) {
                            var e = i(g, f);
                            a.emit("volume_change", e, c);
                            var t = 0;
                            if (e > c && !a.speaking) {
                                for (var n = a.speakingHistory.length - 3; n < a.speakingHistory.length; n++)
                                    t += a.speakingHistory[n];
                                t >= 2 && (a.speaking = !0,
                                a.emit("speaking"))
                            } else if (c > e && a.speaking) {
                                for (var n = 0; n < a.speakingHistory.length; n++)
                                    t += a.speakingHistory[n];
                                0 == t && (a.speaking = !1,
                                a.emit("stopped_speaking"))
                            }
                            a.speakingHistory.shift(),
                            a.speakingHistory.push(0 + (e > c)),
                            v()
                        }
                    }, l)
                }
                ;
                return v(),
                a
            }
        }
        , {
            wildemitter: 78
        }],
        31: [function(e, t) {
            (function(i) {
                function n(e) {
                    function t(e) {
                        if (!e)
                            return !1;
                        if (i.Buffer && i.Buffer.isBuffer(e) || i.ArrayBuffer && e instanceof ArrayBuffer || i.Blob && e instanceof Blob || i.File && e instanceof File)
                            return !0;
                        if (r(e)) {
                            for (var n = 0; n < e.length; n++)
                                if (t(e[n]))
                                    return !0
                        } else if (e && "object" == typeof e) {
                            e.toJSON && (e = e.toJSON());
                            for (var o in e)
                                if (Object.prototype.hasOwnProperty.call(e, o) && t(e[o]))
                                    return !0
                        }
                        return !1
                    }
                    return t(e)
                }
                var r = e("isarray");
                t.exports = n
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {
            isarray: 35
        }],
        32: [function(e, t) {
            var i = e("global");
            try {
                t.exports = "XMLHttpRequest"in i && "withCredentials"in new i.XMLHttpRequest
            } catch (n) {
                t.exports = !1
            }
        }
        , {
            global: 29
        }],
        33: [function(e, t) {
            var i = [].indexOf;
            t.exports = function(e, t) {
                if (i)
                    return e.indexOf(t);
                for (var n = 0; n < e.length; ++n)
                    if (e[n] === t)
                        return n;
                return -1
            }
        }
        , {}],
        34: [function(e, t) {
            t.exports = "function" == typeof Object.create ? function(e, t) {
                e.super_ = t,
                e.prototype = Object.create(t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                })
            }
            : function(e, t) {
                e.super_ = t;
                var i = function() {}
                ;
                i.prototype = t.prototype,
                e.prototype = new i,
                e.prototype.constructor = e
            }
        }
        , {}],
        35: [function(e, t) {
            t.exports = Array.isArray || function(e) {
                return "[object Array]" == Object.prototype.toString.call(e)
            }
        }
        , {}],
        36: [function(t, i, n) {
            !function(t) {
                function i(e) {
                    if (i[e] !== a)
                        return i[e];
                    var t;
                    if ("bug-string-char-index" == e)
                        t = "a" != "a"[0];
                    else if ("json" == e)
                        t = i("json-stringify") && i("json-parse");
                    else {
                        var n, r = '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';
                        if ("json-stringify" == e) {
                            var o = d.stringify
                              , l = "function" == typeof o && h;
                            if (l) {
                                (n = function() {
                                    return 1
                                }
                                ).toJSON = n;
                                try {
                                    l = "0" === o(0) && "0" === o(new Number) && '""' == o(new String) && o(s) === a && o(a) === a && o() === a && "1" === o(n) && "[1]" == o([n]) && "[null]" == o([a]) && "null" == o(null ) && "[null,null,null]" == o([a, s, null ]) && o({
                                        a: [n, !0, !1, null , "\x00\b\n\f\r	"]
                                    }) == r && "1" === o(null , n) && "[\n 1,\n 2\n]" == o([1, 2], null , 1) && '"-271821-04-20T00:00:00.000Z"' == o(new Date(-864e13)) && '"+275760-09-13T00:00:00.000Z"' == o(new Date(864e13)) && '"-000001-01-01T00:00:00.000Z"' == o(new Date(-621987552e5)) && '"1969-12-31T23:59:59.999Z"' == o(new Date(-1))
                                } catch (c) {
                                    l = !1
                                }
                            }
                            t = l
                        }
                        if ("json-parse" == e) {
                            var u = d.parse;
                            if ("function" == typeof u)
                                try {
                                    if (0 === u("0") && !u(!1)) {
                                        n = u(r);
                                        var p = 5 == n.a.length && 1 === n.a[0];
                                        if (p) {
                                            try {
                                                p = !u('"	"')
                                            } catch (c) {}
                                            if (p)
                                                try {
                                                    p = 1 !== u("01")
                                                } catch (c) {}
                                            if (p)
                                                try {
                                                    p = 1 !== u("1.")
                                                } catch (c) {}
                                        }
                                    }
                                } catch (c) {
                                    p = !1
                                }
                            t = p
                        }
                    }
                    return i[e] = !!t
                }
                var r, o, a, s = {}.toString, l = "function" == typeof e && e.amd, c = "object" == typeof JSON && JSON, d = "object" == typeof n && n && !n.nodeType && n;
                d && c ? (d.stringify = c.stringify,
                d.parse = c.parse) : d = t.JSON = c || {};
                var h = new Date(-0xc782b5b800cec);
                try {
                    h = -109252 == h.getUTCFullYear() && 0 === h.getUTCMonth() && 1 === h.getUTCDate() && 10 == h.getUTCHours() && 37 == h.getUTCMinutes() && 6 == h.getUTCSeconds() && 708 == h.getUTCMilliseconds()
                } catch (u) {}
                if (!i("json")) {
                    var p = "[object Function]"
                      , f = "[object Date]"
                      , g = "[object Number]"
                      , m = "[object String]"
                      , v = "[object Array]"
                      , y = "[object Boolean]"
                      , b = i("bug-string-char-index");
                    if (!h)
                        var w = Math.floor
                          , x = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]
                          , E = function(e, t) {
                            return x[t] + 365 * (e - 1970) + w((e - 1969 + (t = +(t > 1))) / 4) - w((e - 1901 + t) / 100) + w((e - 1601 + t) / 400)
                        }
                        ;
                    (r = {}.hasOwnProperty) || (r = function(e) {
                        var t, i = {};
                        return (i.__proto__ = null ,
                        i.__proto__ = {
                            toString: 1
                        },
                        i).toString != s ? r = function(e) {
                            var t = this.__proto__
                              , i = e in (this.__proto__ = null ,
                            this);
                            return this.__proto__ = t,
                            i
                        }
                        : (t = i.constructor,
                        r = function(e) {
                            var i = (this.constructor || t).prototype;
                            return e in this && !(e in i && this[e] === i[e])
                        }
                        ),
                        i = null ,
                        r.call(this, e)
                    }
                    );
                    var _ = {
                        "boolean": 1,
                        number: 1,
                        string: 1,
                        undefined: 1
                    }
                      , T = function(e, t) {
                        var i = typeof e[t];
                        return "object" == i ? !!e[t] : !_[i]
                    }
                    ;
                    if (o = function(e, t) {
                        var i, n, a, l = 0;
                        (i = function() {
                            this.valueOf = 0
                        }
                        ).prototype.valueOf = 0,
                        n = new i;
                        for (a in n)
                            r.call(n, a) && l++;
                        return i = n = null ,
                        l ? o = 2 == l ? function(e, t) {
                            var i, n = {}, o = s.call(e) == p;
                            for (i in e)
                                o && "prototype" == i || r.call(n, i) || !(n[i] = 1) || !r.call(e, i) || t(i)
                        }
                        : function(e, t) {
                            var i, n, o = s.call(e) == p;
                            for (i in e)
                                o && "prototype" == i || !r.call(e, i) || (n = "constructor" === i) || t(i);
                            (n || r.call(e, i = "constructor")) && t(i)
                        }
                        : (n = ["valueOf", "toString", "toLocaleString", "propertyIsEnumerable", "isPrototypeOf", "hasOwnProperty", "constructor"],
                        o = function(e, t) {
                            var i, o, a = s.call(e) == p, l = !a && "function" != typeof e.constructor && T(e, "hasOwnProperty") ? e.hasOwnProperty : r;
                            for (i in e)
                                a && "prototype" == i || !l.call(e, i) || t(i);
                            for (o = n.length; i = n[--o]; l.call(e, i) && t(i))
                                ;
                        }
                        ),
                        o(e, t)
                    }
                    ,
                    !i("json-stringify")) {
                        var C = {
                            92: "\\\\",
                            34: '\\"',
                            8: "\\b",
                            12: "\\f",
                            10: "\\n",
                            13: "\\r",
                            9: "\\t"
                        }
                          , R = "000000"
                          , S = function(e, t) {
                            return (R + (t || 0)).slice(-e)
                        }
                          , k = "\\u00"
                          , M = function(e) {
                            var t, i = '"', n = 0, r = e.length, o = r > 10 && b;
                            for (o && (t = e.split("")); r > n; n++) {
                                var a = e.charCodeAt(n);
                                switch (a) {
                                case 8:
                                case 9:
                                case 10:
                                case 12:
                                case 13:
                                case 34:
                                case 92:
                                    i += C[a];
                                    break;
                                default:
                                    if (32 > a) {
                                        i += k + S(2, a.toString(16));
                                        break
                                    }
                                    i += o ? t[n] : b ? e.charAt(n) : e[n]
                                }
                            }
                            return i + '"'
                        }
                          , A = function(e, t, i, n, l, c, d) {
                            var h, u, p, b, x, _, T, C, R, k, H, P, O, D, $, L;
                            try {
                                h = t[e]
                            } catch (I) {}
                            if ("object" == typeof h && h)
                                if (u = s.call(h),
                                u != f || r.call(h, "toJSON"))
                                    "function" == typeof h.toJSON && (u != g && u != m && u != v || r.call(h, "toJSON")) && (h = h.toJSON(e));
                                else if (h > -1 / 0 && 1 / 0 > h) {
                                    if (E) {
                                        for (x = w(h / 864e5),
                                        p = w(x / 365.2425) + 1970 - 1; E(p + 1, 0) <= x; p++)
                                            ;
                                        for (b = w((x - E(p, 0)) / 30.42); E(p, b + 1) <= x; b++)
                                            ;
                                        x = 1 + x - E(p, b),
                                        _ = (h % 864e5 + 864e5) % 864e5,
                                        T = w(_ / 36e5) % 24,
                                        C = w(_ / 6e4) % 60,
                                        R = w(_ / 1e3) % 60,
                                        k = _ % 1e3
                                    } else
                                        p = h.getUTCFullYear(),
                                        b = h.getUTCMonth(),
                                        x = h.getUTCDate(),
                                        T = h.getUTCHours(),
                                        C = h.getUTCMinutes(),
                                        R = h.getUTCSeconds(),
                                        k = h.getUTCMilliseconds();
                                    h = (0 >= p || p >= 1e4 ? (0 > p ? "-" : "+") + S(6, 0 > p ? -p : p) : S(4, p)) + "-" + S(2, b + 1) + "-" + S(2, x) + "T" + S(2, T) + ":" + S(2, C) + ":" + S(2, R) + "." + S(3, k) + "Z"
                                } else
                                    h = null ;
                            if (i && (h = i.call(t, e, h)),
                            null === h)
                                return "null";
                            if (u = s.call(h),
                            u == y)
                                return "" + h;
                            if (u == g)
                                return h > -1 / 0 && 1 / 0 > h ? "" + h : "null";
                            if (u == m)
                                return M("" + h);
                            if ("object" == typeof h) {
                                for (D = d.length; D--; )
                                    if (d[D] === h)
                                        throw TypeError();
                                if (d.push(h),
                                H = [],
                                $ = c,
                                c += l,
                                u == v) {
                                    for (O = 0,
                                    D = h.length; D > O; O++)
                                        P = A(O, h, i, n, l, c, d),
                                        H.push(P === a ? "null" : P);
                                    L = H.length ? l ? "[\n" + c + H.join(",\n" + c) + "\n" + $ + "]" : "[" + H.join(",") + "]" : "[]"
                                } else
                                    o(n || h, function(e) {
                                        var t = A(e, h, i, n, l, c, d);
                                        t !== a && H.push(M(e) + ":" + (l ? " " : "") + t)
                                    }),
                                    L = H.length ? l ? "{\n" + c + H.join(",\n" + c) + "\n" + $ + "}" : "{" + H.join(",") + "}" : "{}";
                                return d.pop(),
                                L
                            }
                        }
                        ;
                        d.stringify = function(e, t, i) {
                            var n, r, o, a;
                            if ("function" == typeof t || "object" == typeof t && t)
                                if ((a = s.call(t)) == p)
                                    r = t;
                                else if (a == v) {
                                    o = {};
                                    for (var l, c = 0, d = t.length; d > c; l = t[c++],
                                    a = s.call(l),
                                    (a == m || a == g) && (o[l] = 1))
                                        ;
                                }
                            if (i)
                                if ((a = s.call(i)) == g) {
                                    if ((i -= i % 1) > 0)
                                        for (n = "",
                                        i > 10 && (i = 10); n.length < i; n += " ")
                                            ;
                                } else
                                    a == m && (n = i.length <= 10 ? i : i.slice(0, 10));
                            return A("", (l = {},
                            l[""] = e,
                            l), r, o, n, "", [])
                        }
                    }
                    if (!i("json-parse")) {
                        var H, P, O = String.fromCharCode, D = {
                            92: "\\",
                            34: '"',
                            47: "/",
                            98: "\b",
                            116: "	",
                            110: "\n",
                            102: "\f",
                            114: "\r"
                        }, $ = function() {
                            throw H = P = null ,
                            SyntaxError()
                        }
                        , L = function() {
                            for (var e, t, i, n, r, o = P, a = o.length; a > H; )
                                switch (r = o.charCodeAt(H)) {
                                case 9:
                                case 10:
                                case 13:
                                case 32:
                                    H++;
                                    break;
                                case 123:
                                case 125:
                                case 91:
                                case 93:
                                case 58:
                                case 44:
                                    return e = b ? o.charAt(H) : o[H],
                                    H++,
                                    e;
                                case 34:
                                    for (e = "@",
                                    H++; a > H; )
                                        if (r = o.charCodeAt(H),
                                        32 > r)
                                            $();
                                        else if (92 == r)
                                            switch (r = o.charCodeAt(++H)) {
                                            case 92:
                                            case 34:
                                            case 47:
                                            case 98:
                                            case 116:
                                            case 110:
                                            case 102:
                                            case 114:
                                                e += D[r],
                                                H++;
                                                break;
                                            case 117:
                                                for (t = ++H,
                                                i = H + 4; i > H; H++)
                                                    r = o.charCodeAt(H),
                                                    r >= 48 && 57 >= r || r >= 97 && 102 >= r || r >= 65 && 70 >= r || $();
                                                e += O("0x" + o.slice(t, H));
                                                break;
                                            default:
                                                $()
                                            }
                                        else {
                                            if (34 == r)
                                                break;
                                            for (r = o.charCodeAt(H),
                                            t = H; r >= 32 && 92 != r && 34 != r; )
                                                r = o.charCodeAt(++H);
                                            e += o.slice(t, H)
                                        }
                                    if (34 == o.charCodeAt(H))
                                        return H++,
                                        e;
                                    $();
                                default:
                                    if (t = H,
                                    45 == r && (n = !0,
                                    r = o.charCodeAt(++H)),
                                    r >= 48 && 57 >= r) {
                                        for (48 == r && (r = o.charCodeAt(H + 1),
                                        r >= 48 && 57 >= r) && $(),
                                        n = !1; a > H && (r = o.charCodeAt(H),
                                        r >= 48 && 57 >= r); H++)
                                            ;
                                        if (46 == o.charCodeAt(H)) {
                                            for (i = ++H; a > i && (r = o.charCodeAt(i),
                                            r >= 48 && 57 >= r); i++)
                                                ;
                                            i == H && $(),
                                            H = i
                                        }
                                        if (r = o.charCodeAt(H),
                                        101 == r || 69 == r) {
                                            for (r = o.charCodeAt(++H),
                                            (43 == r || 45 == r) && H++,
                                            i = H; a > i && (r = o.charCodeAt(i),
                                            r >= 48 && 57 >= r); i++)
                                                ;
                                            i == H && $(),
                                            H = i
                                        }
                                        return +o.slice(t, H)
                                    }
                                    if (n && $(),
                                    "true" == o.slice(H, H + 4))
                                        return H += 4,
                                        !0;
                                    if ("false" == o.slice(H, H + 5))
                                        return H += 5,
                                        !1;
                                    if ("null" == o.slice(H, H + 4))
                                        return H += 4,
                                        null ;
                                    $()
                                }
                            return "$"
                        }
                        , I = function(e) {
                            var t, i;
                            if ("$" == e && $(),
                            "string" == typeof e) {
                                if ("@" == (b ? e.charAt(0) : e[0]))
                                    return e.slice(1);
                                if ("[" == e) {
                                    for (t = []; e = L(),
                                    "]" != e; i || (i = !0))
                                        i && ("," == e ? (e = L(),
                                        "]" == e && $()) : $()),
                                        "," == e && $(),
                                        t.push(I(e));
                                    return t
                                }
                                if ("{" == e) {
                                    for (t = {}; e = L(),
                                    "}" != e; i || (i = !0))
                                        i && ("," == e ? (e = L(),
                                        "}" == e && $()) : $()),
                                        ("," == e || "string" != typeof e || "@" != (b ? e.charAt(0) : e[0]) || ":" != L()) && $(),
                                        t[e.slice(1)] = I(L());
                                    return t
                                }
                                $()
                            }
                            return e
                        }
                        , F = function(e, t, i) {
                            var n = B(e, t, i);
                            n === a ? delete e[t] : e[t] = n
                        }
                        , B = function(e, t, i) {
                            var n, r = e[t];
                            if ("object" == typeof r && r)
                                if (s.call(r) == v)
                                    for (n = r.length; n--; )
                                        F(r, n, i);
                                else
                                    o(r, function(e) {
                                        F(r, e, i)
                                    });
                            return i.call(e, t, r)
                        }
                        ;
                        d.parse = function(e, t) {
                            var i, n;
                            return H = 0,
                            P = "" + e,
                            i = I(L()),
                            "$" != L() && $(),
                            H = P = null ,
                            t && s.call(t) == p ? B((n = {},
                            n[""] = i,
                            n), "", t) : i
                        }
                    }
                }
                l && e(function() {
                    return d
                })
            }(this)
        }
        , {}],
        37: [function(e, t) {
            function i(e) {
                l.call(this);
                var t, i = this.config = {
                    autoAdjustMic: !1,
                    detectSpeakingEvents: !1,
                    audioFallback: !1,
                    media: {
                        audio: !0,
                        video: !0
                    },
                    logger: d
                };
                for (t in e)
                    this.config[t] = e[t];
                this.logger = i.logger,
                this._log = this.logger.log.bind(this.logger, "LocalMedia:"),
                this._logerror = this.logger.error.bind(this.logger, "LocalMedia:"),
                this.screenSharingSupport = o.screenSharing,
                this.localStreams = [],
                this.localScreens = [],
                o.supportGetUserMedia || this._logerror("Your browser does not support local media capture.")
            }
            var n = e("util")
              , r = e("hark")
              , o = e("webrtcsupport")
              , a = e("getusermedia")
              , s = e("getscreenmedia")
              , l = e("wildemitter")
              , c = e("mediastream-gain")
              , d = e("mockconsole");
            n.inherits(i, l),
            i.prototype.start = function(e, t) {
                var i = this
                  , n = e || this.config.media;
                a(n, function(e, r) {
                    if (e) {
                        if (i.config.audioFallback && "DevicesNotFoundError" === e.name && n.video !== !1)
                            return n.video = !1,
                            void i.start(n, t)
                    } else
                        n.audio && i.config.detectSpeakingEvents && i.setupAudioMonitor(r, i.config.harkOptions),
                        i.localStreams.push(r),
                        i.config.autoAdjustMic && (i.gainController = new c(r),
                        i.setMicIfEnabled(.5)),
                        r.onended = function() {}
                        ,
                        i.emit("localStream", r);
                    return t ? t(e, r) : void 0
                })
            }
            ,
            i.prototype.stop = function(e) {
                var t = this;
                if (e) {
                    e.getTracks().forEach(function(e) {
                        e.stop()
                    });
                    var i = t.localStreams.indexOf(e);
                    i > -1 ? (t.emit("localStreamStopped", e),
                    t.localStreams = t.localStreams.splice(i, 1)) : (i = t.localScreens.indexOf(e),
                    i > -1 && (t.emit("localScreenStopped", e),
                    t.localScreens = t.localScreens.splice(i, 1)))
                } else
                    this.stopStreams(),
                    this.stopScreenShare()
            }
            ,
            i.prototype.stopStreams = function() {
                var e = this;
                this.audioMonitor && (this.audioMonitor.stop(),
                delete this.audioMonitor),
                this.localStreams.forEach(function(t) {
                    t.getTracks().forEach(function(e) {
                        e.stop()
                    }),
                    e.emit("localStreamStopped", t)
                }),
                this.localStreams = []
            }
            ,
            i.prototype.startScreenShare = function(e) {
                var t = this;
                s(function(i, n) {
                    return i || (t.localScreens.push(n),
                    n.onended = function() {
                        var e = t.localScreens.indexOf(n);
                        e > -1 && t.localScreens.splice(e, 1),
                        t.emit("localScreenStopped", n)
                    }
                    ,
                    t.emit("localScreen", n)),
                    e ? e(i, n) : void 0
                })
            }
            ,
            i.prototype.stopScreenShare = function(e) {
                var t = this;
                e ? (e.getTracks().forEach(function(e) {
                    e.stop()
                }),
                this.emit("localScreenStopped", e)) : (this.localScreens.forEach(function(e) {
                    e.getTracks().forEach(function(e) {
                        e.stop()
                    }),
                    t.emit("localScreenStopped", e)
                }),
                this.localScreens = [])
            }
            ,
            i.prototype.mute = function() {
                this._audioEnabled(!1),
                this.hardMuted = !0,
                this.emit("audioOff")
            }
            ,
            i.prototype.unmute = function() {
                this._audioEnabled(!0),
                this.hardMuted = !1,
                this.emit("audioOn")
            }
            ,
            i.prototype.setupAudioMonitor = function(e, t) {
                this._log("Setup audio");
                var i, n = this.audioMonitor = r(e, t), o = this;
                n.on("speaking", function() {
                    o.emit("speaking"),
                    o.hardMuted || o.setMicIfEnabled(1)
                }),
                n.on("stopped_speaking", function() {
                    i && clearTimeout(i),
                    i = setTimeout(function() {
                        o.emit("stoppedSpeaking"),
                        o.hardMuted || o.setMicIfEnabled(.5)
                    }, 1e3)
                }),
                n.on("volume_change", function(e, t) {
                    o.emit("volumeChange", e, t)
                })
            }
            ,
            i.prototype.setMicIfEnabled = function(e) {
                this.config.autoAdjustMic && this.gainController.setGain(e)
            }
            ,
            i.prototype.pauseVideo = function() {
                this._videoEnabled(!1),
                this.emit("videoOff")
            }
            ,
            i.prototype.resumeVideo = function() {
                this._videoEnabled(!0),
                this.emit("videoOn")
            }
            ,
            i.prototype.pause = function() {
                this.mute(),
                this.pauseVideo()
            }
            ,
            i.prototype.resume = function() {
                this.unmute(),
                this.resumeVideo()
            }
            ,
            i.prototype._audioEnabled = function(e) {
                this.setMicIfEnabled(e ? 1 : 0),
                this.localStreams.forEach(function(t) {
                    t.getAudioTracks().forEach(function(t) {
                        t.enabled = !!e
                    })
                })
            }
            ,
            i.prototype._videoEnabled = function(e) {
                this.localStreams.forEach(function(t) {
                    t.getVideoTracks().forEach(function(t) {
                        t.enabled = !!e
                    })
                })
            }
            ,
            i.prototype.isAudioEnabled = function() {
                var e = !0;
                return this.localStreams.forEach(function(t) {
                    t.getAudioTracks().forEach(function(t) {
                        e = e && t.enabled
                    })
                }),
                e
            }
            ,
            i.prototype.isVideoEnabled = function() {
                var e = !0;
                return this.localStreams.forEach(function(t) {
                    t.getVideoTracks().forEach(function(t) {
                        e = e && t.enabled
                    })
                }),
                e
            }
            ,
            i.prototype.startLocalMedia = i.prototype.start,
            i.prototype.stopLocalMedia = i.prototype.stop,
            Object.defineProperty(i.prototype, "localStream", {
                get: function() {
                    return this.localStreams.length > 0 ? this.localStreams[0] : null
                }
            }),
            Object.defineProperty(i.prototype, "localScreen", {
                get: function() {
                    return this.localScreens.length > 0 ? this.localScreens[0] : null
                }
            }),
            t.exports = i
        }
        , {
            getscreenmedia: 27,
            getusermedia: 28,
            hark: 30,
            "mediastream-gain": 38,
            mockconsole: 40,
            util: 67,
            webrtcsupport: 77,
            wildemitter: 78
        }],
        38: [function(e, t) {
            function i(e) {
                if (this.support = n.webAudio && n.mediaStream,
                this.gain = 1,
                this.support) {
                    var t = this.context = new n.AudioContext;
                    this.microphone = t.createMediaStreamSource(e),
                    this.gainFilter = t.createGain(),
                    this.destination = t.createMediaStreamDestination(),
                    this.outputStream = this.destination.stream,
                    this.microphone.connect(this.gainFilter),
                    this.gainFilter.connect(this.destination),
                    e.addTrack(this.outputStream.getAudioTracks()[0]),
                    e.removeTrack(e.getAudioTracks()[0])
                }
                this.stream = e
            }
            var n = e("webrtcsupport");
            i.prototype.setGain = function(e) {
                this.support && (this.gainFilter.gain.value = e,
                this.gain = e)
            }
            ,
            i.prototype.getGain = function() {
                return this.gain
            }
            ,
            i.prototype.off = function() {
                return this.setGain(0)
            }
            ,
            i.prototype.on = function() {
                this.setGain(1)
            }
            ,
            t.exports = i
        }
        , {
            webrtcsupport: 39
        }],
        39: [function(e, t) {
            var i, n;
            window.mozRTCPeerConnection || navigator.mozGetUserMedia ? (i = "moz",
            n = parseInt(navigator.userAgent.match(/Firefox\/([0-9]+)\./)[1], 10)) : (window.webkitRTCPeerConnection || navigator.webkitGetUserMedia) && (i = "webkit",
            n = navigator.userAgent.match(/Chrom(e|ium)/) && parseInt(navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./)[2], 10));
            var r = window.mozRTCPeerConnection || window.webkitRTCPeerConnection
              , o = window.mozRTCIceCandidate || window.RTCIceCandidate
              , a = window.mozRTCSessionDescription || window.RTCSessionDescription
              , s = window.webkitMediaStream || window.MediaStream
              , l = "https:" === window.location.protocol && ("webkit" === i && n >= 26 || "moz" === i && n >= 33)
              , c = window.AudioContext || window.webkitAudioContext
              , d = document.createElement("video")
              , h = d && d.canPlayType && "probably" === d.canPlayType('video/webm; codecs="vp8", vorbis')
              , u = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.msGetUserMedia || navigator.mozGetUserMedia;
            t.exports = {
                prefix: i,
                browserVersion: n,
                support: !!r && h && !!u,
                supportRTCPeerConnection: !!r,
                supportVp8: h,
                supportGetUserMedia: !!u,
                supportDataChannel: !!(r && r.prototype && r.prototype.createDataChannel),
                supportWebAudio: !(!c || !c.prototype.createMediaStreamSource),
                supportMediaStream: !(!s || !s.prototype.removeTrack),
                supportScreenSharing: !!l,
                dataChannel: !!(r && r.prototype && r.prototype.createDataChannel),
                webAudio: !(!c || !c.prototype.createMediaStreamSource),
                mediaStream: !(!s || !s.prototype.removeTrack),
                screenSharing: !!l,
                AudioContext: c,
                PeerConnection: r,
                SessionDescription: a,
                IceCandidate: o,
                MediaStream: s,
                getUserMedia: u
            }
        }
        , {}],
        40: [function(e, t) {
            for (var i = "assert,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profileEnd,time,timeEnd,trace,warn".split(","), n = i.length, r = function() {}
            , o = {}; n--; )
                o[i[n]] = r;
            t.exports = o
        }
        , {}],
        41: [function(e, t) {
            function i(e) {
                var t = /^((?:\d+)?\.?\d+) *(ms|seconds?|s|minutes?|m|hours?|h|days?|d|years?|y)?$/i.exec(e);
                if (t) {
                    var i = parseFloat(t[1])
                      , n = (t[2] || "ms").toLowerCase();
                    switch (n) {
                    case "years":
                    case "year":
                    case "y":
                        return i * d;
                    case "days":
                    case "day":
                    case "d":
                        return i * c;
                    case "hours":
                    case "hour":
                    case "h":
                        return i * l;
                    case "minutes":
                    case "minute":
                    case "m":
                        return i * s;
                    case "seconds":
                    case "second":
                    case "s":
                        return i * a;
                    case "ms":
                        return i
                    }
                }
            }
            function n(e) {
                return e >= c ? Math.round(e / c) + "d" : e >= l ? Math.round(e / l) + "h" : e >= s ? Math.round(e / s) + "m" : e >= a ? Math.round(e / a) + "s" : e + "ms"
            }
            function r(e) {
                return o(e, c, "day") || o(e, l, "hour") || o(e, s, "minute") || o(e, a, "second") || e + " ms"
            }
            function o(e, t, i) {
                return t > e ? void 0 : 1.5 * t > e ? Math.floor(e / t) + " " + i : Math.ceil(e / t) + " " + i + "s"
            }
            var a = 1e3
              , s = 60 * a
              , l = 60 * s
              , c = 24 * l
              , d = 365.25 * c;
            t.exports = function(e, t) {
                return t = t || {},
                "string" == typeof e ? i(e) : t.long ? r(e) : n(e)
            }
        }
        , {}],
        42: [function(e, t, i) {
            var n = Object.prototype.hasOwnProperty;
            i.keys = Object.keys || function(e) {
                var t = [];
                for (var i in e)
                    n.call(e, i) && t.push(i);
                return t
            }
            ,
            i.values = function(e) {
                var t = [];
                for (var i in e)
                    n.call(e, i) && t.push(e[i]);
                return t
            }
            ,
            i.merge = function(e, t) {
                for (var i in t)
                    n.call(t, i) && (e[i] = t[i]);
                return e
            }
            ,
            i.length = function(e) {
                return i.keys(e).length
            }
            ,
            i.isEmpty = function(e) {
                return 0 == i.length(e)
            }
        }
        , {}],
        43: [function(e, t) {
            (function(e) {
                var i = /^[\],:{}\s]*$/
                  , n = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g
                  , r = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g
                  , o = /(?:^|:|,)(?:\s*\[)+/g
                  , a = /^\s+/
                  , s = /\s+$/;
                t.exports = function(t) {
                    return "string" == typeof t && t ? (t = t.replace(a, "").replace(s, ""),
                    e.JSON && JSON.parse ? JSON.parse(t) : i.test(t.replace(n, "@").replace(r, "]").replace(o, "")) ? new Function("return " + t)() : void 0) : null
                }
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {}],
        44: [function(e, t, i) {
            i.encode = function(e) {
                var t = "";
                for (var i in e)
                    e.hasOwnProperty(i) && (t.length && (t += "&"),
                    t += encodeURIComponent(i) + "=" + encodeURIComponent(e[i]));
                return t
            }
            ,
            i.decode = function(e) {
                for (var t = {}, i = e.split("&"), n = 0, r = i.length; r > n; n++) {
                    var o = i[n].split("=");
                    t[decodeURIComponent(o[0])] = decodeURIComponent(o[1])
                }
                return t
            }
        }
        , {}],
        45: [function(e, t) {
            var i = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
              , n = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];
            t.exports = function(e) {
                for (var t = i.exec(e || ""), r = {}, o = 14; o--; )
                    r[n[o]] = t[o] || "";
                return r
            }
        }
        , {}],
        46: [function(e, t) {
            function i() {
                c && a && (c = !1,
                a.length ? l = a.concat(l) : d = -1,
                l.length && n())
            }
            function n() {
                if (!c) {
                    var e = setTimeout(i);
                    c = !0;
                    for (var t = l.length; t; ) {
                        for (a = l,
                        l = []; ++d < t; )
                            a && a[d].run();
                        d = -1,
                        t = l.length
                    }
                    a = null ,
                    c = !1,
                    clearTimeout(e)
                }
            }
            function r(e, t) {
                this.fun = e,
                this.array = t
            }
            function o() {}
            var a, s = t.exports = {}, l = [], c = !1, d = -1;
            s.nextTick = function(e) {
                var t = new Array(arguments.length - 1);
                if (arguments.length > 1)
                    for (var i = 1; i < arguments.length; i++)
                        t[i - 1] = arguments[i];
                l.push(new r(e,t)),
                1 !== l.length || c || setTimeout(n, 0)
            }
            ,
            r.prototype.run = function() {
                this.fun.apply(null , this.array)
            }
            ,
            s.title = "browser",
            s.browser = !0,
            s.env = {},
            s.argv = [],
            s.version = "",
            s.versions = {},
            s.on = o,
            s.addListener = o,
            s.once = o,
            s.off = o,
            s.removeListener = o,
            s.removeAllListeners = o,
            s.emit = o,
            s.binding = function() {
                throw new Error("process.binding is not supported")
            }
            ,
            s.cwd = function() {
                return "/"
            }
            ,
            s.chdir = function() {
                throw new Error("process.chdir is not supported")
            }
            ,
            s.umask = function() {
                return 0
            }
        }
        , {}],
        47: [function(e, t) {
            function i(e, t) {
                var i, n = this;
                o.call(this),
                e = e || {},
                e.iceServers = e.iceServers || [];
                var r = s.browserDetails.browser;
                this.enableChromeNativeSimulcast = !1,
                t && t.optional && "chrome" === r && null === navigator.appVersion.match(/Chromium\//) && t.optional.forEach(function(e) {
                    e.enableChromeNativeSimulcast && (n.enableChromeNativeSimulcast = !0)
                }),
                this.enableMultiStreamHacks = !1,
                t && t.optional && "chrome" === r && t.optional.forEach(function(e) {
                    e.enableMultiStreamHacks && (n.enableMultiStreamHacks = !0)
                }),
                this.restrictBandwidth = 0,
                t && t.optional && t.optional.forEach(function(e) {
                    e.andyetRestrictBandwidth && (n.restrictBandwidth = e.andyetRestrictBandwidth)
                }),
                this.batchIceCandidates = 0,
                t && t.optional && t.optional.forEach(function(e) {
                    e.andyetBatchIce && (n.batchIceCandidates = e.andyetBatchIce)
                }),
                this.batchedIceCandidates = [],
                t && t.optional && "chrome" === r && t.optional.forEach(function(e) {
                    e.andyetFasterICE && (n.eliminateDuplicateCandidates = e.andyetFasterICE)
                }),
                t && t.optional && t.optional.forEach(function(e) {
                    e.andyetDontSignalCandidates && (n.dontSignalCandidates = e.andyetDontSignalCandidates)
                }),
                this.assumeSetLocalSuccess = !1,
                t && t.optional && t.optional.forEach(function(e) {
                    e.andyetAssumeSetLocalSuccess && (n.assumeSetLocalSuccess = e.andyetAssumeSetLocalSuccess)
                }),
                "firefox" === r && t && t.optional && (this.wtFirefox = 0,
                t.optional.forEach(function(e) {
                    e.andyetFirefoxMakesMeSad && (n.wtFirefox = e.andyetFirefoxMakesMeSad,
                    n.wtFirefox > 0 && (n.firefoxcandidatebuffer = []))
                })),
                this.pc = new a(e,t),
                this.getLocalStreams = this.pc.getLocalStreams.bind(this.pc),
                this.getRemoteStreams = this.pc.getRemoteStreams.bind(this.pc),
                this.addStream = this.pc.addStream.bind(this.pc),
                this.removeStream = this.pc.removeStream.bind(this.pc),
                this.pc.on("*", function() {
                    n.emit.apply(n, arguments)
                }),
                this.pc.onremovestream = this.emit.bind(this, "removeStream"),
                this.pc.onaddstream = this.emit.bind(this, "addStream"),
                this.pc.onnegotiationneeded = this.emit.bind(this, "negotiationNeeded"),
                this.pc.oniceconnectionstatechange = this.emit.bind(this, "iceConnectionStateChange"),
                this.pc.onsignalingstatechange = this.emit.bind(this, "signalingStateChange"),
                this.pc.onicecandidate = this._onIce.bind(this),
                this.pc.ondatachannel = this._onDataChannel.bind(this),
                this.localDescription = {
                    contents: []
                },
                this.remoteDescription = {
                    contents: []
                },
                this.config = {
                    debug: !1,
                    sid: "",
                    isInitiator: !0,
                    sdpSessionID: Date.now(),
                    useJingle: !1
                },
                this.iceCredentials = {
                    local: {},
                    remote: {}
                };
                for (i in e)
                    this.config[i] = e[i];
                this.config.debug && this.on("*", function() {
                    var t = e.logger || console;
                    t.log("PeerConnection event:", arguments)
                }),
                this.hadLocalStunCandidate = !1,
                this.hadRemoteStunCandidate = !1,
                this.hadLocalRelayCandidate = !1,
                this.hadRemoteRelayCandidate = !1,
                this.hadLocalIPv6Candidate = !1,
                this.hadRemoteIPv6Candidate = !1,
                this._remoteDataChannels = [],
                this._localDataChannels = [],
                this._candidateBuffer = []
            }
            var n = e("util")
              , r = e("sdp-jingle-json")
              , o = e("wildemitter")
              , a = e("traceablepeerconnection")
              , s = e("webrtc-adapter");
            n.inherits(i, o),
            Object.defineProperty(i.prototype, "signalingState", {
                get: function() {
                    return this.pc.signalingState
                }
            }),
            Object.defineProperty(i.prototype, "iceConnectionState", {
                get: function() {
                    return this.pc.iceConnectionState
                }
            }),
            i.prototype._role = function() {
                return this.isInitiator ? "initiator" : "responder"
            }
            ,
            i.prototype.addStream = function(e) {
                this.localStream = e,
                this.pc.addStream(e)
            }
            ,
            i.prototype._checkLocalCandidate = function(e) {
                var t = r.toCandidateJSON(e);
                "srflx" == t.type ? this.hadLocalStunCandidate = !0 : "relay" == t.type && (this.hadLocalRelayCandidate = !0),
                -1 != t.ip.indexOf(":") && (this.hadLocalIPv6Candidate = !0)
            }
            ,
            i.prototype._checkRemoteCandidate = function(e) {
                var t = r.toCandidateJSON(e);
                "srflx" == t.type ? this.hadRemoteStunCandidate = !0 : "relay" == t.type && (this.hadRemoteRelayCandidate = !0),
                -1 != t.ip.indexOf(":") && (this.hadRemoteIPv6Candidate = !0)
            }
            ,
            i.prototype.processIce = function(e, t) {
                t = t || function() {}
                ;
                var i = this;
                if ("closed" === this.pc.signalingState)
                    return t();
                if (e.contents || e.jingle && e.jingle.contents) {
                    var n = this.remoteDescription.contents.map(function(e) {
                        return e.name
                    })
                      , o = e.contents || e.jingle.contents;
                    o.forEach(function(e) {
                        var o = e.transport || {}
                          , a = o.candidates || []
                          , s = n.indexOf(e.name)
                          , l = e.name
                          , c = i.remoteDescription.contents.find(function(t) {
                            return t.name === e.name
                        })
                          , d = function() {
                            a.forEach(function(e) {
                                var t = r.toCandidateSDP(e) + "\r\n";
                                i.pc.addIceCandidate(new RTCIceCandidate({
                                    candidate: t,
                                    sdpMLineIndex: s,
                                    sdpMid: l
                                }), function() {}, function(e) {
                                    i.emit("error", e)
                                }),
                                i._checkRemoteCandidate(t)
                            }),
                            t()
                        }
                        ;
                        if (i.iceCredentials.remote[e.name] && o.ufrag && i.iceCredentials.remote[e.name].ufrag !== o.ufrag)
                            if (c) {
                                c.transport.ufrag = o.ufrag,
                                c.transport.pwd = o.pwd;
                                var h = {
                                    type: "offer",
                                    jingle: i.remoteDescription
                                };
                                h.sdp = r.toSessionSDP(h.jingle, {
                                    sid: i.config.sdpSessionID,
                                    role: i._role(),
                                    direction: "incoming"
                                }),
                                i.pc.setRemoteDescription(new RTCSessionDescription(h), function() {
                                    d()
                                }, function(e) {
                                    i.emit("error", e)
                                })
                            } else
                                i.emit("error", "ice restart failed to find matching content");
                        else
                            d()
                    })
                } else {
                    if (e.candidate && 0 !== e.candidate.candidate.indexOf("a=") && (e.candidate.candidate = "a=" + e.candidate.candidate),
                    this.wtFirefox && null !== this.firefoxcandidatebuffer && this.pc.localDescription && "offer" === this.pc.localDescription.type)
                        return this.firefoxcandidatebuffer.push(e.candidate),
                        t();
                    i.pc.addIceCandidate(new RTCIceCandidate(e.candidate), function() {}, function(e) {
                        i.emit("error", e)
                    }),
                    i._checkRemoteCandidate(e.candidate.candidate),
                    t()
                }
            }
            ,
            i.prototype.offer = function(e, t) {
                var i = this
                  , n = 2 === arguments.length
                  , o = n && e ? e : {
                    offerToReceiveAudio: 1,
                    offerToReceiveVideo: 1
                };
                return t = n ? t : e,
                t = t || function() {}
                ,
                "closed" === this.pc.signalingState ? t("Already closed") : void this.pc.createOffer(function(e) {
                    var n = {
                        type: "offer",
                        sdp: e.sdp
                    };
                    i.assumeSetLocalSuccess && (i.emit("offer", n),
                    t(null , n)),
                    i._candidateBuffer = [],
                    i.pc.setLocalDescription(e, function() {
                        var o;
                        i.config.useJingle && (o = r.toSessionJSON(e.sdp, {
                            role: i._role(),
                            direction: "outgoing"
                        }),
                        o.sid = i.config.sid,
                        i.localDescription = o,
                        o.contents.forEach(function(e) {
                            var t = e.transport || {};
                            t.ufrag && (i.iceCredentials.local[e.name] = {
                                ufrag: t.ufrag,
                                pwd: t.pwd
                            })
                        }),
                        n.jingle = o),
                        n.sdp.split("\r\n").forEach(function(e) {
                            0 === e.indexOf("a=candidate:") && i._checkLocalCandidate(e)
                        }),
                        i.assumeSetLocalSuccess || (i.emit("offer", n),
                        t(null , n))
                    }, function(e) {
                        i.emit("error", e),
                        t(e)
                    })
                }, function(e) {
                    i.emit("error", e),
                    t(e)
                }, o)
            }
            ,
            i.prototype.handleOffer = function(e, t) {
                t = t || function() {}
                ;
                var i = this;
                if (e.type = "offer",
                e.jingle) {
                    if (this.enableChromeNativeSimulcast && e.jingle.contents.forEach(function(e) {
                        "video" === e.name && (e.application.googConferenceFlag = !0)
                    }),
                    this.enableMultiStreamHacks && e.jingle.contents.forEach(function(e) {
                        if ("video" === e.name) {
                            var t = e.application.sources || [];
                            (0 === t.length || "3735928559" !== t[0].ssrc) && (t.unshift({
                                ssrc: "3735928559",
                                parameters: [{
                                    key: "cname",
                                    value: "deadbeef"
                                }, {
                                    key: "msid",
                                    value: "mixyourfecintothis please"
                                }]
                            }),
                            e.application.sources = t)
                        }
                    }),
                    i.restrictBandwidth > 0 && e.jingle.contents.length >= 2 && "video" === e.jingle.contents[1].name) {
                        var n = e.jingle.contents[1]
                          , o = n.application && n.application.bandwidth && n.application.bandwidth.bandwidth;
                        o || (e.jingle.contents[1].application.bandwidth = {
                            type: "AS",
                            bandwidth: i.restrictBandwidth.toString()
                        },
                        e.sdp = r.toSessionSDP(e.jingle, {
                            sid: i.config.sdpSessionID,
                            role: i._role(),
                            direction: "outgoing"
                        }))
                    }
                    e.jingle.contents.forEach(function(e) {
                        var t = e.transport || {};
                        t.ufrag && (i.iceCredentials.remote[e.name] = {
                            ufrag: t.ufrag,
                            pwd: t.pwd
                        })
                    }),
                    e.sdp = r.toSessionSDP(e.jingle, {
                        sid: i.config.sdpSessionID,
                        role: i._role(),
                        direction: "incoming"
                    }),
                    i.remoteDescription = e.jingle
                }
                e.sdp.split("\r\n").forEach(function(e) {
                    0 === e.indexOf("a=candidate:") && i._checkRemoteCandidate(e)
                }),
                i.pc.setRemoteDescription(new RTCSessionDescription(e), function() {
                    t()
                }, t)
            }
            ,
            i.prototype.answerAudioOnly = function(e) {
                var t = {
                    mandatory: {
                        OfferToReceiveAudio: !0,
                        OfferToReceiveVideo: !1
                    }
                };
                this._answer(t, e)
            }
            ,
            i.prototype.answerBroadcastOnly = function(e) {
                var t = {
                    mandatory: {
                        OfferToReceiveAudio: !1,
                        OfferToReceiveVideo: !1
                    }
                };
                this._answer(t, e)
            }
            ,
            i.prototype.answer = function(e, t) {
                var i = 2 === arguments.length
                  , n = i ? t : e
                  , r = i && e ? e : {
                    mandatory: {
                        OfferToReceiveAudio: !0,
                        OfferToReceiveVideo: !0
                    }
                };
                this._answer(r, n)
            }
            ,
            i.prototype.handleAnswer = function(e, t) {
                t = t || function() {}
                ;
                var i = this;
                e.jingle && (e.sdp = r.toSessionSDP(e.jingle, {
                    sid: i.config.sdpSessionID,
                    role: i._role(),
                    direction: "incoming"
                }),
                i.remoteDescription = e.jingle,
                e.jingle.contents.forEach(function(e) {
                    var t = e.transport || {};
                    t.ufrag && (i.iceCredentials.remote[e.name] = {
                        ufrag: t.ufrag,
                        pwd: t.pwd
                    })
                })),
                e.sdp.split("\r\n").forEach(function(e) {
                    0 === e.indexOf("a=candidate:") && i._checkRemoteCandidate(e)
                }),
                i.pc.setRemoteDescription(new RTCSessionDescription(e), function() {
                    i.wtFirefox && window.setTimeout(function() {
                        i.firefoxcandidatebuffer.forEach(function(e) {
                            i.pc.addIceCandidate(new RTCIceCandidate(e), function() {}, function(e) {
                                i.emit("error", e)
                            }),
                            i._checkRemoteCandidate(e.candidate)
                        }),
                        i.firefoxcandidatebuffer = null
                    }, i.wtFirefox),
                    t(null )
                }, t)
            }
            ,
            i.prototype.close = function() {
                this.pc.close(),
                this._localDataChannels = [],
                this._remoteDataChannels = [],
                this.emit("close")
            }
            ,
            i.prototype._answer = function(e, t) {
                t = t || function() {}
                ;
                var i = this;
                if (!this.pc.remoteDescription)
                    throw new Error("remoteDescription not set");
                return "closed" === this.pc.signalingState ? t("Already closed") : void i.pc.createAnswer(function(e) {
                    var n = [];
                    if (i.enableChromeNativeSimulcast && (e.jingle = r.toSessionJSON(e.sdp, {
                        role: i._role(),
                        direction: "outgoing"
                    }),
                    e.jingle.contents.length >= 2 && "video" === e.jingle.contents[1].name)) {
                        var o = e.jingle.contents[1].application.sourceGroups || []
                          , a = !1;
                        if (o.forEach(function(e) {
                            "SIM" == e.semantics && (a = !0)
                        }),
                        !a && e.jingle.contents[1].application.sources.length) {
                            var s = JSON.parse(JSON.stringify(e.jingle.contents[1].application.sources[0]));
                            s.ssrc = "" + Math.floor(4294967295 * Math.random()),
                            e.jingle.contents[1].application.sources.push(s),
                            n.push(e.jingle.contents[1].application.sources[0].ssrc),
                            n.push(s.ssrc),
                            o.push({
                                semantics: "SIM",
                                sources: n
                            });
                            var l = JSON.parse(JSON.stringify(s));
                            l.ssrc = "" + Math.floor(4294967295 * Math.random()),
                            e.jingle.contents[1].application.sources.push(l),
                            o.push({
                                semantics: "FID",
                                sources: [s.ssrc, l.ssrc]
                            }),
                            e.jingle.contents[1].application.sourceGroups = o,
                            e.sdp = r.toSessionSDP(e.jingle, {
                                sid: i.config.sdpSessionID,
                                role: i._role(),
                                direction: "outgoing"
                            })
                        }
                    }
                    var c = {
                        type: "answer",
                        sdp: e.sdp
                    };
                    i.assumeSetLocalSuccess && (i.emit("answer", c),
                    t(null , c)),
                    i._candidateBuffer = [],
                    i.pc.setLocalDescription(e, function() {
                        if (i.config.useJingle) {
                            var n = r.toSessionJSON(e.sdp, {
                                role: i._role(),
                                direction: "outgoing"
                            });
                            n.sid = i.config.sid,
                            i.localDescription = n,
                            c.jingle = n
                        }
                        i.enableChromeNativeSimulcast && (c.jingle || (c.jingle = r.toSessionJSON(e.sdp, {
                            role: i._role(),
                            direction: "outgoing"
                        })),
                        c.jingle.contents[1].application.sources.forEach(function(e, t) {
                            e.parameters = e.parameters.map(function(e) {
                                return "msid" === e.key && (e.value += "-" + Math.floor(t / 2)),
                                e
                            })
                        }),
                        c.sdp = r.toSessionSDP(c.jingle, {
                            sid: i.sdpSessionID,
                            role: i._role(),
                            direction: "outgoing"
                        })),
                        c.sdp.split("\r\n").forEach(function(e) {
                            0 === e.indexOf("a=candidate:") && i._checkLocalCandidate(e)
                        }),
                        i.assumeSetLocalSuccess || (i.emit("answer", c),
                        t(null , c))
                    }, function(e) {
                        i.emit("error", e),
                        t(e)
                    })
                }, function(e) {
                    i.emit("error", e),
                    t(e)
                }, e)
            }
            ,
            i.prototype._onIce = function(e) {
                var t = this;
                if (e.candidate) {
                    if (this.dontSignalCandidates)
                        return;
                    var i = e.candidate
                      , n = {
                        candidate: {
                            candidate: i.candidate,
                            sdpMid: i.sdpMid,
                            sdpMLineIndex: i.sdpMLineIndex
                        }
                    };
                    this._checkLocalCandidate(i.candidate);
                    var o, a, s = r.toCandidateJSON(i.candidate);
                    if (this.eliminateDuplicateCandidates && "relay" === s.type && (o = this._candidateBuffer.filter(function(e) {
                        return "relay" === e.type
                    }).map(function(e) {
                        return e.foundation + ":" + e.component
                    }),
                    a = o.indexOf(s.foundation + ":" + s.component),
                    a > -1 && s.priority >> 24 >= o[a].priority >> 24))
                        return;
                    if ("max-bundle" === this.config.bundlePolicy && (o = this._candidateBuffer.filter(function(e) {
                        return s.type === e.type
                    }).map(function(e) {
                        return e.address + ":" + e.port
                    }),
                    a = o.indexOf(s.address + ":" + s.port),
                    a > -1))
                        return;
                    if ("require" === this.config.rtcpMuxPolicy && "2" === s.component)
                        return;
                    if (this._candidateBuffer.push(s),
                    t.config.useJingle) {
                        if (i.sdpMid || (i.sdpMid = t.pc.remoteDescription && "offer" === t.pc.remoteDescription.type ? t.remoteDescription.contents[i.sdpMLineIndex].name : t.localDescription.contents[i.sdpMLineIndex].name),
                        !t.iceCredentials.local[i.sdpMid]) {
                            var l = r.toSessionJSON(t.pc.localDescription.sdp, {
                                role: t._role(),
                                direction: "outgoing"
                            });
                            l.contents.forEach(function(e) {
                                var i = e.transport || {};
                                i.ufrag && (t.iceCredentials.local[e.name] = {
                                    ufrag: i.ufrag,
                                    pwd: i.pwd
                                })
                            })
                        }
                        if (n.jingle = {
                            contents: [{
                                name: i.sdpMid,
                                creator: t._role(),
                                transport: {
                                    transportType: "iceUdp",
                                    ufrag: t.iceCredentials.local[i.sdpMid].ufrag,
                                    pwd: t.iceCredentials.local[i.sdpMid].pwd,
                                    candidates: [s]
                                }
                            }]
                        },
                        t.batchIceCandidates > 0)
                            return 0 === t.batchedIceCandidates.length && window.setTimeout(function() {
                                var e = {};
                                t.batchedIceCandidates.forEach(function(t) {
                                    t = t.contents[0],
                                    e[t.name] || (e[t.name] = t),
                                    e[t.name].transport.candidates.push(t.transport.candidates[0])
                                });
                                var i = {
                                    jingle: {
                                        contents: []
                                    }
                                };
                                Object.keys(e).forEach(function(t) {
                                    i.jingle.contents.push(e[t])
                                }),
                                t.batchedIceCandidates = [],
                                t.emit("ice", i)
                            }, t.batchIceCandidates),
                            void t.batchedIceCandidates.push(n.jingle)
                    }
                    this.emit("ice", n)
                } else
                    this.emit("endOfCandidates")
            }
            ,
            i.prototype._onDataChannel = function(e) {
                var t = e.channel;
                this._remoteDataChannels.push(t),
                this.emit("addChannel", t)
            }
            ,
            i.prototype.createDataChannel = function(e, t) {
                var i = this.pc.createDataChannel(e, t);
                return this._localDataChannels.push(i),
                i
            }
            ,
            i.prototype.getStats = function(e) {
                this.pc.getStats(null , function(t) {
                    e(null , t)
                }, function(t) {
                    e(t)
                })
            }
            ,
            t.exports = i
        }
        , {
            "sdp-jingle-json": 48,
            traceablepeerconnection: 64,
            util: 67,
            "webrtc-adapter": 68,
            wildemitter: 78
        }],
        48: [function(e, t, i) {
            var n = e("./lib/tosdp")
              , r = e("./lib/tojson");
            i.toIncomingSDPOffer = function(e) {
                return n.toSessionSDP(e, {
                    role: "responder",
                    direction: "incoming"
                })
            }
            ,
            i.toOutgoingSDPOffer = function(e) {
                return n.toSessionSDP(e, {
                    role: "initiator",
                    direction: "outgoing"
                })
            }
            ,
            i.toIncomingSDPAnswer = function(e) {
                return n.toSessionSDP(e, {
                    role: "initiator",
                    direction: "incoming"
                })
            }
            ,
            i.toOutgoingSDPAnswer = function(e) {
                return n.toSessionSDP(e, {
                    role: "responder",
                    direction: "outgoing"
                })
            }
            ,
            i.toIncomingMediaSDPOffer = function(e) {
                return n.toMediaSDP(e, {
                    role: "responder",
                    direction: "incoming"
                })
            }
            ,
            i.toOutgoingMediaSDPOffer = function(e) {
                return n.toMediaSDP(e, {
                    role: "initiator",
                    direction: "outgoing"
                })
            }
            ,
            i.toIncomingMediaSDPAnswer = function(e) {
                return n.toMediaSDP(e, {
                    role: "initiator",
                    direction: "incoming"
                })
            }
            ,
            i.toOutgoingMediaSDPAnswer = function(e) {
                return n.toMediaSDP(e, {
                    role: "responder",
                    direction: "outgoing"
                })
            }
            ,
            i.toCandidateSDP = n.toCandidateSDP,
            i.toMediaSDP = n.toMediaSDP,
            i.toSessionSDP = n.toSessionSDP,
            i.toIncomingJSONOffer = function(e, t) {
                return r.toSessionJSON(e, {
                    role: "responder",
                    direction: "incoming",
                    creators: t
                })
            }
            ,
            i.toOutgoingJSONOffer = function(e, t) {
                return r.toSessionJSON(e, {
                    role: "initiator",
                    direction: "outgoing",
                    creators: t
                })
            }
            ,
            i.toIncomingJSONAnswer = function(e, t) {
                return r.toSessionJSON(e, {
                    role: "initiator",
                    direction: "incoming",
                    creators: t
                })
            }
            ,
            i.toOutgoingJSONAnswer = function(e, t) {
                return r.toSessionJSON(e, {
                    role: "responder",
                    direction: "outgoing",
                    creators: t
                })
            }
            ,
            i.toIncomingMediaJSONOffer = function(e, t) {
                return r.toMediaJSON(e, {
                    role: "responder",
                    direction: "incoming",
                    creator: t
                })
            }
            ,
            i.toOutgoingMediaJSONOffer = function(e, t) {
                return r.toMediaJSON(e, {
                    role: "initiator",
                    direction: "outgoing",
                    creator: t
                })
            }
            ,
            i.toIncomingMediaJSONAnswer = function(e, t) {
                return r.toMediaJSON(e, {
                    role: "initiator",
                    direction: "incoming",
                    creator: t
                })
            }
            ,
            i.toOutgoingMediaJSONAnswer = function(e, t) {
                return r.toMediaJSON(e, {
                    role: "responder",
                    direction: "outgoing",
                    creator: t
                })
            }
            ,
            i.toCandidateJSON = r.toCandidateJSON,
            i.toMediaJSON = r.toMediaJSON,
            i.toSessionJSON = r.toSessionJSON
        }
        , {
            "./lib/tojson": 51,
            "./lib/tosdp": 52
        }],
        49: [function(e, t, i) {
            i.lines = function(e) {
                return e.split("\r\n").filter(function(e) {
                    return e.length > 0
                })
            }
            ,
            i.findLine = function(e, t, i) {
                for (var n = e.length, r = 0; r < t.length; r++)
                    if (t[r].substr(0, n) === e)
                        return t[r];
                if (!i)
                    return !1;
                for (var o = 0; o < i.length; o++)
                    if (i[o].substr(0, n) === e)
                        return i[o];
                return !1
            }
            ,
            i.findLines = function(e, t, i) {
                for (var n = [], r = e.length, o = 0; o < t.length; o++)
                    t[o].substr(0, r) === e && n.push(t[o]);
                if (n.length || !i)
                    return n;
                for (var a = 0; a < i.length; a++)
                    i[a].substr(0, r) === e && n.push(i[a]);
                return n
            }
            ,
            i.mline = function(e) {
                for (var t = e.substr(2).split(" "), i = {
                    media: t[0],
                    port: t[1],
                    proto: t[2],
                    formats: []
                }, n = 3; n < t.length; n++)
                    t[n] && i.formats.push(t[n]);
                return i
            }
            ,
            i.rtpmap = function(e) {
                var t = e.substr(9).split(" ")
                  , i = {
                    id: t.shift()
                };
                return t = t[0].split("/"),
                i.name = t[0],
                i.clockrate = t[1],
                i.channels = 3 == t.length ? t[2] : "1",
                i
            }
            ,
            i.sctpmap = function(e) {
                var t = e.substr(10).split(" ")
                  , i = {
                    number: t.shift(),
                    protocol: t.shift(),
                    streams: t.shift()
                };
                return i
            }
            ,
            i.fmtp = function(e) {
                for (var t, i, n, r = e.substr(e.indexOf(" ") + 1).split(";"), o = [], a = 0; a < r.length; a++)
                    t = r[a].split("="),
                    i = t[0].trim(),
                    n = t[1],
                    i && n ? o.push({
                        key: i,
                        value: n
                    }) : i && o.push({
                        key: "",
                        value: i
                    });
                return o
            }
            ,
            i.crypto = function(e) {
                var t = e.substr(9).split(" ")
                  , i = {
                    tag: t[0],
                    cipherSuite: t[1],
                    keyParams: t[2],
                    sessionParams: t.slice(3).join(" ")
                };
                return i
            }
            ,
            i.fingerprint = function(e) {
                var t = e.substr(14).split(" ");
                return {
                    hash: t[0],
                    value: t[1]
                }
            }
            ,
            i.extmap = function(e) {
                var t = e.substr(9).split(" ")
                  , i = {}
                  , n = t.shift()
                  , r = n.indexOf("/");
                return r >= 0 ? (i.id = n.substr(0, r),
                i.senders = n.substr(r + 1)) : (i.id = n,
                i.senders = "sendrecv"),
                i.uri = t.shift() || "",
                i
            }
            ,
            i.rtcpfb = function(e) {
                var t = e.substr(10).split(" ")
                  , i = {};
                return i.id = t.shift(),
                i.type = t.shift(),
                "trr-int" === i.type ? i.value = t.shift() : i.subtype = t.shift() || "",
                i.parameters = t,
                i
            }
            ,
            i.candidate = function(e) {
                var t;
                t = 0 === e.indexOf("a=candidate:") ? e.substring(12).split(" ") : e.substring(10).split(" ");
                for (var i = {
                    foundation: t[0],
                    component: t[1],
                    protocol: t[2].toLowerCase(),
                    priority: t[3],
                    ip: t[4],
                    port: t[5],
                    type: t[7],
                    generation: "0"
                }, n = 8; n < t.length; n += 2)
                    "raddr" === t[n] ? i.relAddr = t[n + 1] : "rport" === t[n] ? i.relPort = t[n + 1] : "generation" === t[n] ? i.generation = t[n + 1] : "tcptype" === t[n] && (i.tcpType = t[n + 1]);
                return i.network = "1",
                i
            }
            ,
            i.sourceGroups = function(e) {
                for (var t = [], i = 0; i < e.length; i++) {
                    var n = e[i].substr(13).split(" ");
                    t.push({
                        semantics: n.shift(),
                        sources: n
                    })
                }
                return t
            }
            ,
            i.sources = function(e) {
                for (var t = [], i = {}, n = 0; n < e.length; n++) {
                    var r = e[n].substr(7).split(" ")
                      , o = r.shift();
                    if (!i[o]) {
                        var a = {
                            ssrc: o,
                            parameters: []
                        };
                        t.push(a),
                        i[o] = a
                    }
                    r = r.join(" ").split(":");
                    var s = r.shift()
                      , l = r.join(":") || null ;
                    i[o].parameters.push({
                        key: s,
                        value: l
                    })
                }
                return t
            }
            ,
            i.groups = function(e) {
                for (var t, i = [], n = 0; n < e.length; n++)
                    t = e[n].substr(8).split(" "),
                    i.push({
                        semantics: t.shift(),
                        contents: t
                    });
                return i
            }
            ,
            i.bandwidth = function(e) {
                var t = e.substr(2).split(":")
                  , i = {};
                return i.type = t.shift(),
                i.bandwidth = t.shift(),
                i
            }
            ,
            i.msid = function(e) {
                var t = e.substr(7)
                  , i = t.split(" ");
                return {
                    msid: t,
                    mslabel: i[0],
                    label: i[1]
                }
            }
        }
        , {}],
        50: [function(e, t) {
            t.exports = {
                initiator: {
                    incoming: {
                        initiator: "recvonly",
                        responder: "sendonly",
                        both: "sendrecv",
                        none: "inactive",
                        recvonly: "initiator",
                        sendonly: "responder",
                        sendrecv: "both",
                        inactive: "none"
                    },
                    outgoing: {
                        initiator: "sendonly",
                        responder: "recvonly",
                        both: "sendrecv",
                        none: "inactive",
                        recvonly: "responder",
                        sendonly: "initiator",
                        sendrecv: "both",
                        inactive: "none"
                    }
                },
                responder: {
                    incoming: {
                        initiator: "sendonly",
                        responder: "recvonly",
                        both: "sendrecv",
                        none: "inactive",
                        recvonly: "responder",
                        sendonly: "initiator",
                        sendrecv: "both",
                        inactive: "none"
                    },
                    outgoing: {
                        initiator: "recvonly",
                        responder: "sendonly",
                        both: "sendrecv",
                        none: "inactive",
                        recvonly: "initiator",
                        sendonly: "responder",
                        sendrecv: "both",
                        inactive: "none"
                    }
                }
            }
        }
        , {}],
        51: [function(e, t, i) {
            var n = e("./senders")
              , r = e("./parsers")
              , o = Math.random();
            i._setIdCounter = function(e) {
                o = e
            }
            ,
            i.toSessionJSON = function(e, t) {
                var n, o = t.creators || [], a = t.role || "initiator", s = t.direction || "outgoing", l = e.split("\r\nm=");
                for (n = 1; n < l.length; n++)
                    l[n] = "m=" + l[n],
                    n !== l.length - 1 && (l[n] += "\r\n");
                var c = l.shift() + "\r\n"
                  , d = r.lines(c)
                  , h = {}
                  , u = [];
                for (n = 0; n < l.length; n++)
                    u.push(i.toMediaJSON(l[n], c, {
                        role: a,
                        direction: s,
                        creator: o[n] || "initiator"
                    }));
                h.contents = u;
                var p = r.findLines("a=group:", d);
                return p.length && (h.groups = r.groups(p)),
                h
            }
            ,
            i.toMediaJSON = function(e, t, o) {
                var a = o.creator || "initiator"
                  , s = o.role || "initiator"
                  , l = o.direction || "outgoing"
                  , c = r.lines(e)
                  , d = r.lines(t)
                  , h = r.mline(c[0])
                  , u = {
                    creator: a,
                    name: h.media,
                    application: {
                        applicationType: "rtp",
                        media: h.media,
                        payloads: [],
                        encryption: [],
                        feedback: [],
                        headerExtensions: []
                    },
                    transport: {
                        transportType: "iceUdp",
                        candidates: [],
                        fingerprints: []
                    }
                };
                "application" == h.media && (u.application = {
                    applicationType: "datachannel"
                },
                u.transport.sctp = []);
                var p = u.application
                  , f = u.transport
                  , g = r.findLine("a=mid:", c);
                if (g && (u.name = g.substr(6)),
                r.findLine("a=sendrecv", c, d) ? u.senders = "both" : r.findLine("a=sendonly", c, d) ? u.senders = n[s][l].sendonly : r.findLine("a=recvonly", c, d) ? u.senders = n[s][l].recvonly : r.findLine("a=inactive", c, d) && (u.senders = "none"),
                "rtp" == p.applicationType) {
                    var m = r.findLine("b=", c);
                    m && (p.bandwidth = r.bandwidth(m));
                    var v = r.findLine("a=ssrc:", c);
                    v && (p.ssrc = v.substr(7).split(" ")[0]);
                    var y = r.findLines("a=rtpmap:", c);
                    y.forEach(function(e) {
                        var t = r.rtpmap(e);
                        t.parameters = [],
                        t.feedback = [];
                        var i = r.findLines("a=fmtp:" + t.id, c);
                        i.forEach(function(e) {
                            t.parameters = r.fmtp(e)
                        });
                        var n = r.findLines("a=rtcp-fb:" + t.id, c);
                        n.forEach(function(e) {
                            t.feedback.push(r.rtcpfb(e))
                        }),
                        p.payloads.push(t)
                    });
                    var b = r.findLines("a=crypto:", c, d);
                    b.forEach(function(e) {
                        p.encryption.push(r.crypto(e))
                    }),
                    r.findLine("a=rtcp-mux", c) && (p.mux = !0);
                    var w = r.findLines("a=rtcp-fb:*", c);
                    w.forEach(function(e) {
                        p.feedback.push(r.rtcpfb(e))
                    });
                    var x = r.findLines("a=extmap:", c);
                    x.forEach(function(e) {
                        var t = r.extmap(e);
                        t.senders = n[s][l][t.senders],
                        p.headerExtensions.push(t)
                    });
                    var E = r.findLines("a=ssrc-group:", c);
                    p.sourceGroups = r.sourceGroups(E || []);
                    var _ = r.findLines("a=ssrc:", c)
                      , T = p.sources = r.sources(_ || [])
                      , C = r.findLine("a=msid:", c);
                    if (C) {
                        var R = r.msid(C);
                        ["msid", "mslabel", "label"].forEach(function(e) {
                            for (var t = 0; t < T.length; t++) {
                                for (var i = !1, n = 0; n < T[t].parameters.length; n++)
                                    T[t].parameters[n].key === e && (i = !0);
                                i || T[t].parameters.push({
                                    key: e,
                                    value: R[e]
                                })
                            }
                        })
                    }
                    r.findLine("a=x-google-flag:conference", c, d) && (p.googConferenceFlag = !0)
                }
                var S = r.findLines("a=fingerprint:", c, d)
                  , k = r.findLine("a=setup:", c, d);
                S.forEach(function(e) {
                    var t = r.fingerprint(e);
                    k && (t.setup = k.substr(8)),
                    f.fingerprints.push(t)
                });
                var M = r.findLine("a=ice-ufrag:", c, d)
                  , A = r.findLine("a=ice-pwd:", c, d);
                if (M && A) {
                    f.ufrag = M.substr(12),
                    f.pwd = A.substr(10),
                    f.candidates = [];
                    var H = r.findLines("a=candidate:", c, d);
                    H.forEach(function(e) {
                        f.candidates.push(i.toCandidateJSON(e))
                    })
                }
                if ("datachannel" == p.applicationType) {
                    var P = r.findLines("a=sctpmap:", c);
                    P.forEach(function(e) {
                        var t = r.sctpmap(e);
                        f.sctp.push(t)
                    })
                }
                return u
            }
            ,
            i.toCandidateJSON = function(e) {
                var t = r.candidate(e.split("\r\n")[0]);
                return t.id = (o++).toString(36).substr(0, 12),
                t
            }
        }
        , {
            "./parsers": 49,
            "./senders": 50
        }],
        52: [function(e, t, i) {
            var n = e("./senders");
            i.toSessionSDP = function(e, t) {
                var n = (t.role || "initiator",
                t.direction || "outgoing",
                t.sid || e.sid || Date.now())
                  , r = t.time || Date.now()
                  , o = ["v=0", "o=- " + n + " " + r + " IN IP4 0.0.0.0", "s=-", "t=0 0"]
                  , a = e.contents || []
                  , s = !1;
                a.forEach(function(e) {
                    e.application.sources && e.application.sources.length && (s = !0)
                }),
                s && o.push("a=msid-semantic: WMS *");
                var l = e.groups || [];
                return l.forEach(function(e) {
                    o.push("a=group:" + e.semantics + " " + e.contents.join(" "))
                }),
                a.forEach(function(e) {
                    o.push(i.toMediaSDP(e, t))
                }),
                o.join("\r\n") + "\r\n"
            }
            ,
            i.toMediaSDP = function(e, t) {
                var r = []
                  , o = t.role || "initiator"
                  , a = t.direction || "outgoing"
                  , s = e.application
                  , l = e.transport
                  , c = s.payloads || []
                  , d = l && l.fingerprints || []
                  , h = [];
                if ("datachannel" == s.applicationType ? (h.push("application"),
                h.push("1"),
                h.push("DTLS/SCTP"),
                l.sctp && l.sctp.forEach(function(e) {
                    h.push(e.number)
                })) : (h.push(s.media),
                h.push("1"),
                h.push(d.length > 0 ? "UDP/TLS/RTP/SAVPF" : s.encryption && s.encryption.length > 0 ? "RTP/SAVPF" : "RTP/AVPF"),
                c.forEach(function(e) {
                    h.push(e.id)
                })),
                r.push("m=" + h.join(" ")),
                r.push("c=IN IP4 0.0.0.0"),
                s.bandwidth && s.bandwidth.type && s.bandwidth.bandwidth && r.push("b=" + s.bandwidth.type + ":" + s.bandwidth.bandwidth),
                "rtp" == s.applicationType && r.push("a=rtcp:1 IN IP4 0.0.0.0"),
                l) {
                    l.ufrag && r.push("a=ice-ufrag:" + l.ufrag),
                    l.pwd && r.push("a=ice-pwd:" + l.pwd);
                    var u = !1;
                    d.forEach(function(e) {
                        r.push("a=fingerprint:" + e.hash + " " + e.value),
                        e.setup && !u && r.push("a=setup:" + e.setup)
                    }),
                    l.sctp && l.sctp.forEach(function(e) {
                        r.push("a=sctpmap:" + e.number + " " + e.protocol + " " + e.streams)
                    })
                }
                "rtp" == s.applicationType && r.push("a=" + (n[o][a][e.senders] || "sendrecv")),
                r.push("a=mid:" + e.name),
                s.sources && s.sources.length && (s.sources[0].parameters || []).forEach(function(e) {
                    "msid" === e.key && r.push("a=msid:" + e.value)
                }),
                s.mux && r.push("a=rtcp-mux");
                var p = s.encryption || [];
                p.forEach(function(e) {
                    r.push("a=crypto:" + e.tag + " " + e.cipherSuite + " " + e.keyParams + (e.sessionParams ? " " + e.sessionParams : ""))
                }),
                s.googConferenceFlag && r.push("a=x-google-flag:conference"),
                c.forEach(function(e) {
                    var t = "a=rtpmap:" + e.id + " " + e.name + "/" + e.clockrate;
                    if (e.channels && "1" != e.channels && (t += "/" + e.channels),
                    r.push(t),
                    e.parameters && e.parameters.length) {
                        var i = ["a=fmtp:" + e.id]
                          , n = [];
                        e.parameters.forEach(function(e) {
                            n.push((e.key ? e.key + "=" : "") + e.value)
                        }),
                        i.push(n.join(";")),
                        r.push(i.join(" "))
                    }
                    e.feedback && e.feedback.forEach(function(t) {
                        r.push("trr-int" === t.type ? "a=rtcp-fb:" + e.id + " trr-int " + (t.value ? t.value : "0") : "a=rtcp-fb:" + e.id + " " + t.type + (t.subtype ? " " + t.subtype : ""))
                    })
                }),
                s.feedback && s.feedback.forEach(function(e) {
                    r.push("trr-int" === e.type ? "a=rtcp-fb:* trr-int " + (e.value ? e.value : "0") : "a=rtcp-fb:* " + e.type + (e.subtype ? " " + e.subtype : ""))
                });
                var f = s.headerExtensions || [];
                f.forEach(function(e) {
                    r.push("a=extmap:" + e.id + (e.senders ? "/" + n[o][a][e.senders] : "") + " " + e.uri)
                });
                var g = s.sourceGroups || [];
                g.forEach(function(e) {
                    r.push("a=ssrc-group:" + e.semantics + " " + e.sources.join(" "))
                });
                var m = s.sources || [];
                m.forEach(function(e) {
                    for (var t = 0; t < e.parameters.length; t++) {
                        var i = e.parameters[t];
                        r.push("a=ssrc:" + (e.ssrc || s.ssrc) + " " + i.key + (i.value ? ":" + i.value : ""))
                    }
                });
                var v = l.candidates || [];
                return v.forEach(function(e) {
                    r.push(i.toCandidateSDP(e))
                }),
                r.join("\r\n")
            }
            ,
            i.toCandidateSDP = function(e) {
                var t = [];
                t.push(e.foundation),
                t.push(e.component),
                t.push(e.protocol.toUpperCase()),
                t.push(e.priority),
                t.push(e.ip),
                t.push(e.port);
                var i = e.type;
                return t.push("typ"),
                t.push(i),
                ("srflx" === i || "prflx" === i || "relay" === i) && e.relAddr && e.relPort && (t.push("raddr"),
                t.push(e.relAddr),
                t.push("rport"),
                t.push(e.relPort)),
                e.tcpType && "TCP" == e.protocol.toUpperCase() && (t.push("tcptype"),
                t.push(e.tcpType)),
                t.push("generation"),
                t.push(e.generation || "0"),
                "a=candidate:" + t.join(" ")
            }
        }
        , {
            "./senders": 50
        }],
        53: [function(e, t) {
            "use strict";
            var i = {};
            i.generateIdentifier = function() {
                return Math.random().toString(36).substr(2, 10)
            }
            ,
            i.localCName = i.generateIdentifier(),
            i.splitLines = function(e) {
                return e.trim().split("\n").map(function(e) {
                    return e.trim()
                })
            }
            ,
            i.splitSections = function(e) {
                var t = e.split("\nm=");
                return t.map(function(e, t) {
                    return (t > 0 ? "m=" + e : e).trim() + "\r\n"
                })
            }
            ,
            i.matchPrefix = function(e, t) {
                return i.splitLines(e).filter(function(e) {
                    return 0 === e.indexOf(t)
                })
            }
            ,
            i.parseCandidate = function(e) {
                var t;
                t = 0 === e.indexOf("a=candidate:") ? e.substring(12).split(" ") : e.substring(10).split(" ");
                for (var i = {
                    foundation: t[0],
                    component: t[1],
                    protocol: t[2].toLowerCase(),
                    priority: parseInt(t[3], 10),
                    ip: t[4],
                    port: parseInt(t[5], 10),
                    type: t[7]
                }, n = 8; n < t.length; n += 2)
                    switch (t[n]) {
                    case "raddr":
                        i.relatedAddress = t[n + 1];
                        break;
                    case "rport":
                        i.relatedPort = parseInt(t[n + 1], 10);
                        break;
                    case "tcptype":
                        i.tcpType = t[n + 1]
                    }
                return i
            }
            ,
            i.writeCandidate = function(e) {
                var t = [];
                t.push(e.foundation),
                t.push(e.component),
                t.push(e.protocol.toUpperCase()),
                t.push(e.priority),
                t.push(e.ip),
                t.push(e.port);
                var i = e.type;
                return t.push("typ"),
                t.push(i),
                "host" !== i && e.relatedAddress && e.relatedPort && (t.push("raddr"),
                t.push(e.relatedAddress),
                t.push("rport"),
                t.push(e.relatedPort)),
                e.tcpType && "tcp" === e.protocol.toLowerCase() && (t.push("tcptype"),
                t.push(e.tcpType)),
                "candidate:" + t.join(" ")
            }
            ,
            i.parseRtpMap = function(e) {
                var t = e.substr(9).split(" ")
                  , i = {
                    payloadType: parseInt(t.shift(), 10)
                };
                return t = t[0].split("/"),
                i.name = t[0],
                i.clockRate = parseInt(t[1], 10),
                i.numChannels = 3 === t.length ? parseInt(t[2], 10) : 1,
                i
            }
            ,
            i.writeRtpMap = function(e) {
                var t = e.payloadType;
                return void 0 !== e.preferredPayloadType && (t = e.preferredPayloadType),
                "a=rtpmap:" + t + " " + e.name + "/" + e.clockRate + (1 !== e.numChannels ? "/" + e.numChannels : "") + "\r\n"
            }
            ,
            i.parseExtmap = function(e) {
                var t = e.substr(9).split(" ");
                return {
                    id: parseInt(t[0], 10),
                    uri: t[1]
                }
            }
            ,
            i.writeExtmap = function(e) {
                return "a=extmap:" + (e.id || e.preferredId) + " " + e.uri + "\r\n"
            }
            ,
            i.parseFmtp = function(e) {
                for (var t, i = {}, n = e.substr(e.indexOf(" ") + 1).split(";"), r = 0; r < n.length; r++)
                    t = n[r].trim().split("="),
                    i[t[0].trim()] = t[1];
                return i
            }
            ,
            i.writeFmtp = function(e) {
                var t = ""
                  , i = e.payloadType;
                if (void 0 !== e.preferredPayloadType && (i = e.preferredPayloadType),
                e.parameters && Object.keys(e.parameters).length) {
                    var n = [];
                    Object.keys(e.parameters).forEach(function(t) {
                        n.push(t + "=" + e.parameters[t])
                    }),
                    t += "a=fmtp:" + i + " " + n.join(";") + "\r\n"
                }
                return t
            }
            ,
            i.parseRtcpFb = function(e) {
                var t = e.substr(e.indexOf(" ") + 1).split(" ");
                return {
                    type: t.shift(),
                    parameter: t.join(" ")
                }
            }
            ,
            i.writeRtcpFb = function(e) {
                var t = ""
                  , i = e.payloadType;
                return void 0 !== e.preferredPayloadType && (i = e.preferredPayloadType),
                e.rtcpFeedback && e.rtcpFeedback.length && e.rtcpFeedback.forEach(function(e) {
                    t += "a=rtcp-fb:" + i + " " + e.type + (e.parameter && e.parameter.length ? " " + e.parameter : "") + "\r\n"
                }),
                t
            }
            ,
            i.parseSsrcMedia = function(e) {
                var t = e.indexOf(" ")
                  , i = {
                    ssrc: parseInt(e.substr(7, t - 7), 10)
                }
                  , n = e.indexOf(":", t);
                return n > -1 ? (i.attribute = e.substr(t + 1, n - t - 1),
                i.value = e.substr(n + 1)) : i.attribute = e.substr(t + 1),
                i
            }
            ,
            i.getDtlsParameters = function(e, t) {
                var n = i.splitLines(e);
                n = n.concat(i.splitLines(t));
                var r = n.filter(function(e) {
                    return 0 === e.indexOf("a=fingerprint:")
                })[0].substr(14)
                  , o = {
                    role: "auto",
                    fingerprints: [{
                        algorithm: r.split(" ")[0],
                        value: r.split(" ")[1]
                    }]
                };
                return o
            }
            ,
            i.writeDtlsParameters = function(e, t) {
                var i = "a=setup:" + t + "\r\n";
                return e.fingerprints.forEach(function(e) {
                    i += "a=fingerprint:" + e.algorithm + " " + e.value + "\r\n"
                }),
                i
            }
            ,
            i.getIceParameters = function(e, t) {
                var n = i.splitLines(e);
                n = n.concat(i.splitLines(t));
                var r = {
                    usernameFragment: n.filter(function(e) {
                        return 0 === e.indexOf("a=ice-ufrag:")
                    })[0].substr(12),
                    password: n.filter(function(e) {
                        return 0 === e.indexOf("a=ice-pwd:")
                    })[0].substr(10)
                };
                return r
            }
            ,
            i.writeIceParameters = function(e) {
                return "a=ice-ufrag:" + e.usernameFragment + "\r\na=ice-pwd:" + e.password + "\r\n"
            }
            ,
            i.parseRtpParameters = function(e) {
                for (var t = {
                    codecs: [],
                    headerExtensions: [],
                    fecMechanisms: [],
                    rtcp: []
                }, n = i.splitLines(e), r = n[0].split(" "), o = 3; o < r.length; o++) {
                    var a = r[o]
                      , s = i.matchPrefix(e, "a=rtpmap:" + a + " ")[0];
                    if (s) {
                        var l = i.parseRtpMap(s)
                          , c = i.matchPrefix(e, "a=fmtp:" + a + " ");
                        switch (l.parameters = c.length ? i.parseFmtp(c[0]) : {},
                        l.rtcpFeedback = i.matchPrefix(e, "a=rtcp-fb:" + a + " ").map(i.parseRtcpFb),
                        t.codecs.push(l),
                        l.name.toUpperCase()) {
                        case "RED":
                        case "ULPFEC":
                            t.fecMechanisms.push(l.name.toUpperCase())
                        }
                    }
                }
                return i.matchPrefix(e, "a=extmap:").forEach(function(e) {
                    t.headerExtensions.push(i.parseExtmap(e))
                }),
                t
            }
            ,
            i.writeRtpDescription = function(e, t) {
                var n = "";
                return n += "m=" + e + " ",
                n += t.codecs.length > 0 ? "9" : "0",
                n += " UDP/TLS/RTP/SAVPF ",
                n += t.codecs.map(function(e) {
                    return void 0 !== e.preferredPayloadType ? e.preferredPayloadType : e.payloadType
                }).join(" ") + "\r\n",
                n += "c=IN IP4 0.0.0.0\r\n",
                n += "a=rtcp:9 IN IP4 0.0.0.0\r\n",
                t.codecs.forEach(function(e) {
                    n += i.writeRtpMap(e),
                    n += i.writeFmtp(e),
                    n += i.writeRtcpFb(e)
                }),
                n += "a=rtcp-mux\r\n"
            }
            ,
            i.parseRtpEncodingParameters = function(e) {
                var t, n = [], r = i.parseRtpParameters(e), o = -1 !== r.fecMechanisms.indexOf("RED"), a = -1 !== r.fecMechanisms.indexOf("ULPFEC"), s = i.matchPrefix(e, "a=ssrc:").map(function(e) {
                    return i.parseSsrcMedia(e)
                }).filter(function(e) {
                    return "cname" === e.attribute
                }), l = s.length > 0 && s[0].ssrc, c = i.matchPrefix(e, "a=ssrc-group:FID").map(function(e) {
                    var t = e.split(" ");
                    return t.shift(),
                    t.map(function(e) {
                        return parseInt(e, 10)
                    })
                });
                c.length > 0 && c[0].length > 1 && c[0][0] === l && (t = c[0][1]),
                r.codecs.forEach(function(e) {
                    if ("RTX" === e.name.toUpperCase() && e.parameters.apt) {
                        var i = {
                            ssrc: l,
                            codecPayloadType: parseInt(e.parameters.apt, 10),
                            rtx: {
                                payloadType: e.payloadType,
                                ssrc: t
                            }
                        };
                        n.push(i),
                        o && (i = JSON.parse(JSON.stringify(i)),
                        i.fec = {
                            ssrc: t,
                            mechanism: a ? "red+ulpfec" : "red"
                        },
                        n.push(i))
                    }
                }),
                0 === n.length && l && n.push({
                    ssrc: l
                });
                var d = i.matchPrefix(e, "b=");
                return d.length && (0 === d[0].indexOf("b=TIAS:") ? d = parseInt(d[0].substr(7), 10) : 0 === d[0].indexOf("b=AS:") && (d = parseInt(d[0].substr(5), 10)),
                n.forEach(function(e) {
                    e.maxBitrate = d
                })),
                n
            }
            ,
            i.writeSessionBoilerplate = function() {
                return "v=0\r\no=thisisadapterortc 8169639915646943137 2 IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\n"
            }
            ,
            i.writeMediaSection = function(e, t, n, r) {
                var o = i.writeRtpDescription(e.kind, t);
                if (o += i.writeIceParameters(e.iceGatherer.getLocalParameters()),
                o += i.writeDtlsParameters(e.dtlsTransport.getLocalParameters(), "offer" === n ? "actpass" : "active"),
                o += "a=mid:" + e.mid + "\r\n",
                o += e.rtpSender && e.rtpReceiver ? "a=sendrecv\r\n" : e.rtpSender ? "a=sendonly\r\n" : e.rtpReceiver ? "a=recvonly\r\n" : "a=inactive\r\n",
                e.rtpSender) {
                    var a = "msid:" + r.id + " " + e.rtpSender.track.id + "\r\n";
                    o += "a=" + a,
                    o += "a=ssrc:" + e.sendEncodingParameters[0].ssrc + " " + a
                }
                return o += "a=ssrc:" + e.sendEncodingParameters[0].ssrc + " cname:" + i.localCName + "\r\n"
            }
            ,
            i.getDirection = function(e, t) {
                for (var n = i.splitLines(e), r = 0; r < n.length; r++)
                    switch (n[r]) {
                    case "a=sendrecv":
                    case "a=sendonly":
                    case "a=recvonly":
                    case "a=inactive":
                        return n[r].substr(2)
                    }
                return t ? i.getDirection(t) : "sendrecv"
            }
            ,
            t.exports = i
        }
        , {}],
        54: [function(e, t) {
            t.exports = e("./lib/")
        }
        , {
            "./lib/": 55
        }],
        55: [function(e, t, i) {
            function n(e, t) {
                "object" == typeof e && (t = e,
                e = void 0),
                t = t || {};
                var i, n = r(e), o = n.source, c = n.id;
                return t.forceNew || t["force new connection"] || !1 === t.multiplex ? (s("ignoring socket cache for %s", o),
                i = a(o, t)) : (l[c] || (s("new io instance for %s", o),
                l[c] = a(o, t)),
                i = l[c]),
                i.socket(n.path)
            }
            var r = e("./url")
              , o = e("socket.io-parser")
              , a = e("./manager")
              , s = e("debug")("socket.io-client");
            t.exports = i = n;
            var l = i.managers = {};
            i.protocol = o.protocol,
            i.connect = n,
            i.Manager = e("./manager"),
            i.Socket = e("./socket")
        }
        , {
            "./manager": 56,
            "./socket": 58,
            "./url": 59,
            debug: 10,
            "socket.io-parser": 61
        }],
        56: [function(e, t) {
            function i(e, t) {
                return this instanceof i ? (e && "object" == typeof e && (t = e,
                e = void 0),
                t = t || {},
                t.path = t.path || "/socket.io",
                this.nsps = {},
                this.subs = [],
                this.opts = t,
                this.reconnection(t.reconnection !== !1),
                this.reconnectionAttempts(t.reconnectionAttempts || 1 / 0),
                this.reconnectionDelay(t.reconnectionDelay || 1e3),
                this.reconnectionDelayMax(t.reconnectionDelayMax || 5e3),
                this.randomizationFactor(t.randomizationFactor || .5),
                this.backoff = new h({
                    min: this.reconnectionDelay(),
                    max: this.reconnectionDelayMax(),
                    jitter: this.randomizationFactor()
                }),
                this.timeout(null == t.timeout ? 2e4 : t.timeout),
                this.readyState = "closed",
                this.uri = e,
                this.connected = [],
                this.encoding = !1,
                this.packetBuffer = [],
                this.encoder = new a.Encoder,
                this.decoder = new a.Decoder,
                this.autoConnect = t.autoConnect !== !1,
                void (this.autoConnect && this.open())) : new i(e,t)
            }
            var n = (e("./url"),
            e("engine.io-client"))
              , r = e("./socket")
              , o = e("component-emitter")
              , a = e("socket.io-parser")
              , s = e("./on")
              , l = e("component-bind")
              , c = (e("object-component"),
            e("debug")("socket.io-client:manager"))
              , d = e("indexof")
              , h = e("backo2");
            t.exports = i,
            i.prototype.emitAll = function() {
                this.emit.apply(this, arguments);
                for (var e in this.nsps)
                    this.nsps[e].emit.apply(this.nsps[e], arguments)
            }
            ,
            i.prototype.updateSocketIds = function() {
                for (var e in this.nsps)
                    this.nsps[e].id = this.engine.id
            }
            ,
            o(i.prototype),
            i.prototype.reconnection = function(e) {
                return arguments.length ? (this._reconnection = !!e,
                this) : this._reconnection
            }
            ,
            i.prototype.reconnectionAttempts = function(e) {
                return arguments.length ? (this._reconnectionAttempts = e,
                this) : this._reconnectionAttempts
            }
            ,
            i.prototype.reconnectionDelay = function(e) {
                return arguments.length ? (this._reconnectionDelay = e,
                this.backoff && this.backoff.setMin(e),
                this) : this._reconnectionDelay
            }
            ,
            i.prototype.randomizationFactor = function(e) {
                return arguments.length ? (this._randomizationFactor = e,
                this.backoff && this.backoff.setJitter(e),
                this) : this._randomizationFactor
            }
            ,
            i.prototype.reconnectionDelayMax = function(e) {
                return arguments.length ? (this._reconnectionDelayMax = e,
                this.backoff && this.backoff.setMax(e),
                this) : this._reconnectionDelayMax
            }
            ,
            i.prototype.timeout = function(e) {
                return arguments.length ? (this._timeout = e,
                this) : this._timeout
            }
            ,
            i.prototype.maybeReconnectOnOpen = function() {
                !this.reconnecting && this._reconnection && 0 === this.backoff.attempts && this.reconnect()
            }
            ,
            i.prototype.open = i.prototype.connect = function(e) {
                if (c("readyState %s", this.readyState),
                ~this.readyState.indexOf("open"))
                    return this;
                c("opening %s", this.uri),
                this.engine = n(this.uri, this.opts);
                var t = this.engine
                  , i = this;
                this.readyState = "opening",
                this.skipReconnect = !1;
                var r = s(t, "open", function() {
                    i.onopen(),
                    e && e()
                })
                  , o = s(t, "error", function(t) {
                    if (c("connect_error"),
                    i.cleanup(),
                    i.readyState = "closed",
                    i.emitAll("connect_error", t),
                    e) {
                        var n = new Error("Connection error");
                        n.data = t,
                        e(n)
                    } else
                        i.maybeReconnectOnOpen()
                });
                if (!1 !== this._timeout) {
                    var a = this._timeout;
                    c("connect attempt will timeout after %d", a);
                    var l = setTimeout(function() {
                        c("connect attempt timed out after %d", a),
                        r.destroy(),
                        t.close(),
                        t.emit("error", "timeout"),
                        i.emitAll("connect_timeout", a)
                    }, a);
                    this.subs.push({
                        destroy: function() {
                            clearTimeout(l)
                        }
                    })
                }
                return this.subs.push(r),
                this.subs.push(o),
                this
            }
            ,
            i.prototype.onopen = function() {
                c("open"),
                this.cleanup(),
                this.readyState = "open",
                this.emit("open");
                var e = this.engine;
                this.subs.push(s(e, "data", l(this, "ondata"))),
                this.subs.push(s(this.decoder, "decoded", l(this, "ondecoded"))),
                this.subs.push(s(e, "error", l(this, "onerror"))),
                this.subs.push(s(e, "close", l(this, "onclose")))
            }
            ,
            i.prototype.ondata = function(e) {
                this.decoder.add(e)
            }
            ,
            i.prototype.ondecoded = function(e) {
                this.emit("packet", e)
            }
            ,
            i.prototype.onerror = function(e) {
                c("error", e),
                this.emitAll("error", e)
            }
            ,
            i.prototype.socket = function(e) {
                var t = this.nsps[e];
                if (!t) {
                    t = new r(this,e),
                    this.nsps[e] = t;
                    var i = this;
                    t.on("connect", function() {
                        t.id = i.engine.id,
                        ~d(i.connected, t) || i.connected.push(t)
                    })
                }
                return t
            }
            ,
            i.prototype.destroy = function(e) {
                var t = d(this.connected, e);
                ~t && this.connected.splice(t, 1),
                this.connected.length || this.close()
            }
            ,
            i.prototype.packet = function(e) {
                c("writing packet %j", e);
                var t = this;
                t.encoding ? t.packetBuffer.push(e) : (t.encoding = !0,
                this.encoder.encode(e, function(e) {
                    for (var i = 0; i < e.length; i++)
                        t.engine.write(e[i]);
                    t.encoding = !1,
                    t.processPacketQueue()
                }))
            }
            ,
            i.prototype.processPacketQueue = function() {
                if (this.packetBuffer.length > 0 && !this.encoding) {
                    var e = this.packetBuffer.shift();
                    this.packet(e)
                }
            }
            ,
            i.prototype.cleanup = function() {
                for (var e; e = this.subs.shift(); )
                    e.destroy();
                this.packetBuffer = [],
                this.encoding = !1,
                this.decoder.destroy()
            }
            ,
            i.prototype.close = i.prototype.disconnect = function() {
                this.skipReconnect = !0,
                this.backoff.reset(),
                this.readyState = "closed",
                this.engine && this.engine.close()
            }
            ,
            i.prototype.onclose = function(e) {
                c("close"),
                this.cleanup(),
                this.backoff.reset(),
                this.readyState = "closed",
                this.emit("close", e),
                this._reconnection && !this.skipReconnect && this.reconnect()
            }
            ,
            i.prototype.reconnect = function() {
                if (this.reconnecting || this.skipReconnect)
                    return this;
                var e = this;
                if (this.backoff.attempts >= this._reconnectionAttempts)
                    c("reconnect failed"),
                    this.backoff.reset(),
                    this.emitAll("reconnect_failed"),
                    this.reconnecting = !1;
                else {
                    var t = this.backoff.duration();
                    c("will wait %dms before reconnect attempt", t),
                    this.reconnecting = !0;
                    var i = setTimeout(function() {
                        e.skipReconnect || (c("attempting reconnect"),
                        e.emitAll("reconnect_attempt", e.backoff.attempts),
                        e.emitAll("reconnecting", e.backoff.attempts),
                        e.skipReconnect || e.open(function(t) {
                            t ? (c("reconnect attempt error"),
                            e.reconnecting = !1,
                            e.reconnect(),
                            e.emitAll("reconnect_error", t.data)) : (c("reconnect success"),
                            e.onreconnect())
                        }))
                    }, t);
                    this.subs.push({
                        destroy: function() {
                            clearTimeout(i)
                        }
                    })
                }
            }
            ,
            i.prototype.onreconnect = function() {
                var e = this.backoff.attempts;
                this.reconnecting = !1,
                this.backoff.reset(),
                this.updateSocketIds(),
                this.emitAll("reconnect", e)
            }
        }
        , {
            "./on": 57,
            "./socket": 58,
            "./url": 59,
            backo2: 4,
            "component-bind": 7,
            "component-emitter": 8,
            debug: 10,
            "engine.io-client": 11,
            indexof: 33,
            "object-component": 42,
            "socket.io-parser": 61
        }],
        57: [function(e, t) {
            function i(e, t, i) {
                return e.on(t, i),
                {
                    destroy: function() {
                        e.removeListener(t, i)
                    }
                }
            }
            t.exports = i
        }
        , {}],
        58: [function(e, t, i) {
            function n(e, t) {
                this.io = e,
                this.nsp = t,
                this.json = this,
                this.ids = 0,
                this.acks = {},
                this.io.autoConnect && this.open(),
                this.receiveBuffer = [],
                this.sendBuffer = [],
                this.connected = !1,
                this.disconnected = !0
            }
            var r = e("socket.io-parser")
              , o = e("component-emitter")
              , a = e("to-array")
              , s = e("./on")
              , l = e("component-bind")
              , c = e("debug")("socket.io-client:socket")
              , d = e("has-binary");
            t.exports = i = n;
            var h = {
                connect: 1,
                connect_error: 1,
                connect_timeout: 1,
                disconnect: 1,
                error: 1,
                reconnect: 1,
                reconnect_attempt: 1,
                reconnect_failed: 1,
                reconnect_error: 1,
                reconnecting: 1
            }
              , u = o.prototype.emit;
            o(n.prototype),
            n.prototype.subEvents = function() {
                if (!this.subs) {
                    var e = this.io;
                    this.subs = [s(e, "open", l(this, "onopen")), s(e, "packet", l(this, "onpacket")), s(e, "close", l(this, "onclose"))]
                }
            }
            ,
            n.prototype.open = n.prototype.connect = function() {
                return this.connected ? this : (this.subEvents(),
                this.io.open(),
                "open" == this.io.readyState && this.onopen(),
                this)
            }
            ,
            n.prototype.send = function() {
                var e = a(arguments);
                return e.unshift("message"),
                this.emit.apply(this, e),
                this
            }
            ,
            n.prototype.emit = function(e) {
                if (h.hasOwnProperty(e))
                    return u.apply(this, arguments),
                    this;
                var t = a(arguments)
                  , i = r.EVENT;
                d(t) && (i = r.BINARY_EVENT);
                var n = {
                    type: i,
                    data: t
                };
                return "function" == typeof t[t.length - 1] && (c("emitting packet with ack id %d", this.ids),
                this.acks[this.ids] = t.pop(),
                n.id = this.ids++),
                this.connected ? this.packet(n) : this.sendBuffer.push(n),
                this
            }
            ,
            n.prototype.packet = function(e) {
                e.nsp = this.nsp,
                this.io.packet(e)
            }
            ,
            n.prototype.onopen = function() {
                c("transport is open - connecting"),
                "/" != this.nsp && this.packet({
                    type: r.CONNECT
                })
            }
            ,
            n.prototype.onclose = function(e) {
                c("close (%s)", e),
                this.connected = !1,
                this.disconnected = !0,
                delete this.id,
                this.emit("disconnect", e)
            }
            ,
            n.prototype.onpacket = function(e) {
                if (e.nsp == this.nsp)
                    switch (e.type) {
                    case r.CONNECT:
                        this.onconnect();
                        break;
                    case r.EVENT:
                        this.onevent(e);
                        break;
                    case r.BINARY_EVENT:
                        this.onevent(e);
                        break;
                    case r.ACK:
                        this.onack(e);
                        break;
                    case r.BINARY_ACK:
                        this.onack(e);
                        break;
                    case r.DISCONNECT:
                        this.ondisconnect();
                        break;
                    case r.ERROR:
                        this.emit("error", e.data)
                    }
            }
            ,
            n.prototype.onevent = function(e) {
                var t = e.data || [];
                c("emitting event %j", t),
                null != e.id && (c("attaching ack callback to event"),
                t.push(this.ack(e.id))),
                this.connected ? u.apply(this, t) : this.receiveBuffer.push(t)
            }
            ,
            n.prototype.ack = function(e) {
                var t = this
                  , i = !1;
                return function() {
                    if (!i) {
                        i = !0;
                        var n = a(arguments);
                        c("sending ack %j", n);
                        var o = d(n) ? r.BINARY_ACK : r.ACK;
                        t.packet({
                            type: o,
                            id: e,
                            data: n
                        })
                    }
                }
            }
            ,
            n.prototype.onack = function(e) {
                c("calling ack %s with %j", e.id, e.data);
                var t = this.acks[e.id];
                t.apply(this, e.data),
                delete this.acks[e.id]
            }
            ,
            n.prototype.onconnect = function() {
                this.connected = !0,
                this.disconnected = !1,
                this.emit("connect"),
                this.emitBuffered()
            }
            ,
            n.prototype.emitBuffered = function() {
                var e;
                for (e = 0; e < this.receiveBuffer.length; e++)
                    u.apply(this, this.receiveBuffer[e]);
                for (this.receiveBuffer = [],
                e = 0; e < this.sendBuffer.length; e++)
                    this.packet(this.sendBuffer[e]);
                this.sendBuffer = []
            }
            ,
            n.prototype.ondisconnect = function() {
                c("server disconnect (%s)", this.nsp),
                this.destroy(),
                this.onclose("io server disconnect")
            }
            ,
            n.prototype.destroy = function() {
                if (this.subs) {
                    for (var e = 0; e < this.subs.length; e++)
                        this.subs[e].destroy();
                    this.subs = null
                }
                this.io.destroy(this)
            }
            ,
            n.prototype.close = n.prototype.disconnect = function() {
                return this.connected && (c("performing disconnect (%s)", this.nsp),
                this.packet({
                    type: r.DISCONNECT
                })),
                this.destroy(),
                this.connected && this.onclose("io client disconnect"),
                this
            }
        }
        , {
            "./on": 57,
            "component-bind": 7,
            "component-emitter": 8,
            debug: 10,
            "has-binary": 31,
            "socket.io-parser": 61,
            "to-array": 63
        }],
        59: [function(e, t) {
            (function(i) {
                function n(e, t) {
                    var n = e
                      , t = t || i.location;
                    return null == e && (e = t.protocol + "//" + t.host),
                    "string" == typeof e && ("/" == e.charAt(0) && (e = "/" == e.charAt(1) ? t.protocol + e : t.hostname + e),
                    /^(https?|wss?):\/\//.test(e) || (o("protocol-less url %s", e),
                    e = "undefined" != typeof t ? t.protocol + "//" + e : "https://" + e),
                    o("parse %s", e),
                    n = r(e)),
                    n.port || (/^(http|ws)$/.test(n.protocol) ? n.port = "80" : /^(http|ws)s$/.test(n.protocol) && (n.port = "443")),
                    n.path = n.path || "/",
                    n.id = n.protocol + "://" + n.host + ":" + n.port,
                    n.href = n.protocol + "://" + n.host + (t && t.port == n.port ? "" : ":" + n.port),
                    n
                }
                var r = e("parseuri")
                  , o = e("debug")("socket.io-client:url");
                t.exports = n
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {
            debug: 10,
            parseuri: 45
        }],
        60: [function(e, t, i) {
            (function(t) {
                var n = e("isarray")
                  , r = e("./is-buffer");
                i.deconstructPacket = function(e) {
                    function t(e) {
                        if (!e)
                            return e;
                        if (r(e)) {
                            var o = {
                                _placeholder: !0,
                                num: i.length
                            };
                            return i.push(e),
                            o
                        }
                        if (n(e)) {
                            for (var a = new Array(e.length), s = 0; s < e.length; s++)
                                a[s] = t(e[s]);
                            return a
                        }
                        if ("object" == typeof e && !(e instanceof Date)) {
                            var a = {};
                            for (var l in e)
                                a[l] = t(e[l]);
                            return a
                        }
                        return e
                    }
                    var i = []
                      , o = e.data
                      , a = e;
                    return a.data = t(o),
                    a.attachments = i.length,
                    {
                        packet: a,
                        buffers: i
                    }
                }
                ,
                i.reconstructPacket = function(e, t) {
                    function i(e) {
                        if (e && e._placeholder) {
                            var r = t[e.num];
                            return r
                        }
                        if (n(e)) {
                            for (var o = 0; o < e.length; o++)
                                e[o] = i(e[o]);
                            return e
                        }
                        if (e && "object" == typeof e) {
                            for (var a in e)
                                e[a] = i(e[a]);
                            return e
                        }
                        return e
                    }
                    return e.data = i(e.data),
                    e.attachments = void 0,
                    e
                }
                ,
                i.removeBlobs = function(e, i) {
                    function o(e, l, c) {
                        if (!e)
                            return e;
                        if (t.Blob && e instanceof Blob || t.File && e instanceof File) {
                            a++;
                            var d = new FileReader;
                            d.onload = function() {
                                c ? c[l] = this.result : s = this.result,
                                --a || i(s)
                            }
                            ,
                            d.readAsArrayBuffer(e)
                        } else if (n(e))
                            for (var h = 0; h < e.length; h++)
                                o(e[h], h, e);
                        else if (e && "object" == typeof e && !r(e))
                            for (var u in e)
                                o(e[u], u, e)
                    }
                    var a = 0
                      , s = e;
                    o(s),
                    a || i(s)
                }
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {
            "./is-buffer": 62,
            isarray: 35
        }],
        61: [function(e, t, i) {
            function n() {}
            function r(e) {
                var t = ""
                  , n = !1;
                return t += e.type,
                (i.BINARY_EVENT == e.type || i.BINARY_ACK == e.type) && (t += e.attachments,
                t += "-"),
                e.nsp && "/" != e.nsp && (n = !0,
                t += e.nsp),
                null != e.id && (n && (t += ",",
                n = !1),
                t += e.id),
                null != e.data && (n && (t += ","),
                t += h.stringify(e.data)),
                d("encoded %j as %s", e, t),
                t
            }
            function o(e, t) {
                function i(e) {
                    var i = p.deconstructPacket(e)
                      , n = r(i.packet)
                      , o = i.buffers;
                    o.unshift(n),
                    t(o)
                }
                p.removeBlobs(e, i)
            }
            function a() {
                this.reconstructor = null
            }
            function s(e) {
                var t = {}
                  , n = 0;
                if (t.type = Number(e.charAt(0)),
                null == i.types[t.type])
                    return c();
                if (i.BINARY_EVENT == t.type || i.BINARY_ACK == t.type) {
                    for (var r = ""; "-" != e.charAt(++n) && (r += e.charAt(n),
                    n != e.length); )
                        ;
                    if (r != Number(r) || "-" != e.charAt(n))
                        throw new Error("Illegal attachments");
                    t.attachments = Number(r)
                }
                if ("/" == e.charAt(n + 1))
                    for (t.nsp = ""; ++n; ) {
                        var o = e.charAt(n);
                        if ("," == o)
                            break;
                        if (t.nsp += o,
                        n == e.length)
                            break
                    }
                else
                    t.nsp = "/";
                var a = e.charAt(n + 1);
                if ("" !== a && Number(a) == a) {
                    for (t.id = ""; ++n; ) {
                        var o = e.charAt(n);
                        if (null == o || Number(o) != o) {
                            --n;
                            break
                        }
                        if (t.id += e.charAt(n),
                        n == e.length)
                            break
                    }
                    t.id = Number(t.id)
                }
                if (e.charAt(++n))
                    try {
                        t.data = h.parse(e.substr(n))
                    } catch (s) {
                        return c()
                    }
                return d("decoded %s as %j", e, t),
                t
            }
            function l(e) {
                this.reconPack = e,
                this.buffers = []
            }
            function c() {
                return {
                    type: i.ERROR,
                    data: "parser error"
                }
            }
            var d = e("debug")("socket.io-parser")
              , h = e("json3")
              , u = (e("isarray"),
            e("component-emitter"))
              , p = e("./binary")
              , f = e("./is-buffer");
            i.protocol = 4,
            i.types = ["CONNECT", "DISCONNECT", "EVENT", "BINARY_EVENT", "ACK", "BINARY_ACK", "ERROR"],
            i.CONNECT = 0,
            i.DISCONNECT = 1,
            i.EVENT = 2,
            i.ACK = 3,
            i.ERROR = 4,
            i.BINARY_EVENT = 5,
            i.BINARY_ACK = 6,
            i.Encoder = n,
            i.Decoder = a,
            n.prototype.encode = function(e, t) {
                if (d("encoding packet %j", e),
                i.BINARY_EVENT == e.type || i.BINARY_ACK == e.type)
                    o(e, t);
                else {
                    var n = r(e);
                    t([n])
                }
            }
            ,
            u(a.prototype),
            a.prototype.add = function(e) {
                var t;
                if ("string" == typeof e)
                    t = s(e),
                    i.BINARY_EVENT == t.type || i.BINARY_ACK == t.type ? (this.reconstructor = new l(t),
                    0 === this.reconstructor.reconPack.attachments && this.emit("decoded", t)) : this.emit("decoded", t);
                else {
                    if (!f(e) && !e.base64)
                        throw new Error("Unknown type: " + e);
                    if (!this.reconstructor)
                        throw new Error("got binary data when not reconstructing a packet");
                    t = this.reconstructor.takeBinaryData(e),
                    t && (this.reconstructor = null ,
                    this.emit("decoded", t))
                }
            }
            ,
            a.prototype.destroy = function() {
                this.reconstructor && this.reconstructor.finishedReconstruction()
            }
            ,
            l.prototype.takeBinaryData = function(e) {
                if (this.buffers.push(e),
                this.buffers.length == this.reconPack.attachments) {
                    var t = p.reconstructPacket(this.reconPack, this.buffers);
                    return this.finishedReconstruction(),
                    t
                }
                return null
            }
            ,
            l.prototype.finishedReconstruction = function() {
                this.reconPack = null ,
                this.buffers = []
            }
        }
        , {
            "./binary": 60,
            "./is-buffer": 62,
            "component-emitter": 8,
            debug: 10,
            isarray: 35,
            json3: 36
        }],
        62: [function(e, t) {
            (function(e) {
                function i(t) {
                    return e.Buffer && e.Buffer.isBuffer(t) || e.ArrayBuffer && t instanceof ArrayBuffer
                }
                t.exports = i
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {}],
        63: [function(e, t) {
            function i(e, t) {
                var i = [];
                t = t || 0;
                for (var n = t || 0; n < e.length; n++)
                    i[n - t] = e[n];
                return i
            }
            t.exports = i
        }
        , {}],
        64: [function(e, t) {
            function i(e) {
                return {
                    type: e.type,
                    sdp: e.sdp
                }
            }
            function n(e) {
                var t = {
                    label: e.id
                };
                return e.getAudioTracks().length && (t.audio = e.getAudioTracks().map(function(e) {
                    return e.id
                })),
                e.getVideoTracks().length && (t.video = e.getVideoTracks().map(function(e) {
                    return e.id
                })),
                t
            }
            function r(e, t) {
                var i = this;
                a.call(this),
                this.peerconnection = new window.RTCPeerConnection(e,t),
                this.trace = function(e, t) {
                    i.emit("PeerConnectionTrace", {
                        time: new Date,
                        type: e,
                        value: t || ""
                    })
                }
                ,
                this.onicecandidate = null ,
                this.peerconnection.onicecandidate = function(e) {
                    i.trace("onicecandidate", e.candidate),
                    null !== i.onicecandidate && i.onicecandidate(e)
                }
                ,
                this.onaddstream = null ,
                this.peerconnection.onaddstream = function(e) {
                    i.trace("onaddstream", n(e.stream)),
                    null !== i.onaddstream && i.onaddstream(e)
                }
                ,
                this.onremovestream = null ,
                this.peerconnection.onremovestream = function(e) {
                    i.trace("onremovestream", n(e.stream)),
                    null !== i.onremovestream && i.onremovestream(e)
                }
                ,
                this.onsignalingstatechange = null ,
                this.peerconnection.onsignalingstatechange = function(e) {
                    i.trace("onsignalingstatechange", i.signalingState),
                    null !== i.onsignalingstatechange && i.onsignalingstatechange(e)
                }
                ,
                this.oniceconnectionstatechange = null ,
                this.peerconnection.oniceconnectionstatechange = function(e) {
                    i.trace("oniceconnectionstatechange", i.iceConnectionState),
                    null !== i.oniceconnectionstatechange && i.oniceconnectionstatechange(e)
                }
                ,
                this.onnegotiationneeded = null ,
                this.peerconnection.onnegotiationneeded = function(e) {
                    i.trace("onnegotiationneeded"),
                    null !== i.onnegotiationneeded && i.onnegotiationneeded(e)
                }
                ,
                i.ondatachannel = null ,
                this.peerconnection.ondatachannel = function(e) {
                    i.trace("ondatachannel", e),
                    null !== i.ondatachannel && i.ondatachannel(e)
                }
                ,
                this.getLocalStreams = this.peerconnection.getLocalStreams.bind(this.peerconnection),
                this.getRemoteStreams = this.peerconnection.getRemoteStreams.bind(this.peerconnection)
            }
            var o = e("util")
              , a = (e("webrtc-adapter"),
            e("wildemitter"));
            o.inherits(r, a),
            ["signalingState", "iceConnectionState", "localDescription", "remoteDescription"].forEach(function(e) {
                Object.defineProperty(r.prototype, e, {
                    get: function() {
                        return this.peerconnection[e]
                    }
                })
            }),
            r.prototype.addStream = function(e) {
                this.trace("addStream", n(e)),
                this.peerconnection.addStream(e)
            }
            ,
            r.prototype.removeStream = function(e) {
                this.trace("removeStream", n(e)),
                this.peerconnection.removeStream(e)
            }
            ,
            r.prototype.createDataChannel = function(e, t) {
                return this.trace("createDataChannel", e, t),
                this.peerconnection.createDataChannel(e, t)
            }
            ,
            r.prototype.setLocalDescription = function(e, t, n) {
                var r = this;
                return this.trace("setLocalDescription", i(e)),
                this.peerconnection.setLocalDescription(e).then(function() {
                    r.trace("setLocalDescriptionOnSuccess"),
                    t && t()
                }, function(e) {
                    r.trace("setLocalDescriptionOnFailure", e),
                    n && n(e)
                })
            }
            ,
            r.prototype.setRemoteDescription = function(e, t, n) {
                var r = this;
                return this.trace("setRemoteDescription", i(e)),
                this.peerconnection.setRemoteDescription(e).then(function() {
                    r.trace("setRemoteDescriptionOnSuccess"),
                    t && t()
                }, function(e) {
                    r.trace("setRemoteDescriptionOnFailure", e),
                    n && n(e)
                })
            }
            ,
            r.prototype.close = function() {
                this.trace("stop"),
                "closed" != this.peerconnection.signalingState && this.peerconnection.close()
            }
            ,
            r.prototype.createOffer = function(e, t, n) {
                var r = this;
                return this.trace("createOffer", n),
                this.peerconnection.createOffer(n).then(function(t) {
                    r.trace("createOfferOnSuccess", i(t)),
                    e && e(t)
                }, function(e) {
                    r.trace("createOfferOnFailure", e),
                    t && t(e)
                })
            }
            ,
            r.prototype.createAnswer = function(e, t, n) {
                var r = this;
                return this.trace("createAnswer", n),
                this.peerconnection.createAnswer(n).then(function(t) {
                    r.trace("createAnswerOnSuccess", i(t)),
                    e && e(t)
                }, function(e) {
                    r.trace("createAnswerOnFailure", e),
                    t && t(e)
                })
            }
            ,
            r.prototype.addIceCandidate = function(e, t, i) {
                var n = this;
                return this.trace("addIceCandidate", e),
                this.peerconnection.addIceCandidate(e).then(function() {
                    t && t()
                }, function(e) {
                    n.trace("addIceCandidateOnFailure", e),
                    i && i(e)
                })
            }
            ,
            r.prototype.getStats = function() {
                this.peerconnection.getStats.apply(this.peerconnection, arguments)
            }
            ,
            t.exports = r
        }
        , {
            util: 67,
            "webrtc-adapter": 68,
            wildemitter: 78
        }],
        65: [function(t, i, n) {
            (function(t) {
                !function(r) {
                    function o(e) {
                        for (var t, i, n = [], r = 0, o = e.length; o > r; )
                            t = e.charCodeAt(r++),
                            t >= 55296 && 56319 >= t && o > r ? (i = e.charCodeAt(r++),
                            56320 == (64512 & i) ? n.push(((1023 & t) << 10) + (1023 & i) + 65536) : (n.push(t),
                            r--)) : n.push(t);
                        return n
                    }
                    function a(e) {
                        for (var t, i = e.length, n = -1, r = ""; ++n < i; )
                            t = e[n],
                            t > 65535 && (t -= 65536,
                            r += w(t >>> 10 & 1023 | 55296),
                            t = 56320 | 1023 & t),
                            r += w(t);
                        return r
                    }
                    function s(e) {
                        if (e >= 55296 && 57343 >= e)
                            throw Error("Lone surrogate U+" + e.toString(16).toUpperCase() + " is not a scalar value")
                    }
                    function l(e, t) {
                        return w(e >> t & 63 | 128)
                    }
                    function c(e) {
                        if (0 == (4294967168 & e))
                            return w(e);
                        var t = "";
                        return 0 == (4294965248 & e) ? t = w(e >> 6 & 31 | 192) : 0 == (4294901760 & e) ? (s(e),
                        t = w(e >> 12 & 15 | 224),
                        t += l(e, 6)) : 0 == (4292870144 & e) && (t = w(e >> 18 & 7 | 240),
                        t += l(e, 12),
                        t += l(e, 6)),
                        t += w(63 & e | 128)
                    }
                    function d(e) {
                        for (var t, i = o(e), n = i.length, r = -1, a = ""; ++r < n; )
                            t = i[r],
                            a += c(t);
                        return a
                    }
                    function h() {
                        if (b >= y)
                            throw Error("Invalid byte index");
                        var e = 255 & v[b];
                        if (b++,
                        128 == (192 & e))
                            return 63 & e;
                        throw Error("Invalid continuation byte")
                    }
                    function u() {
                        var e, t, i, n, r;
                        if (b > y)
                            throw Error("Invalid byte index");
                        if (b == y)
                            return !1;
                        if (e = 255 & v[b],
                        b++,
                        0 == (128 & e))
                            return e;
                        if (192 == (224 & e)) {
                            var t = h();
                            if (r = (31 & e) << 6 | t,
                            r >= 128)
                                return r;
                            throw Error("Invalid continuation byte")
                        }
                        if (224 == (240 & e)) {
                            if (t = h(),
                            i = h(),
                            r = (15 & e) << 12 | t << 6 | i,
                            r >= 2048)
                                return s(r),
                                r;
                            throw Error("Invalid continuation byte")
                        }
                        if (240 == (248 & e) && (t = h(),
                        i = h(),
                        n = h(),
                        r = (15 & e) << 18 | t << 12 | i << 6 | n,
                        r >= 65536 && 1114111 >= r))
                            return r;
                        throw Error("Invalid UTF-8 detected")
                    }
                    function p(e) {
                        v = o(e),
                        y = v.length,
                        b = 0;
                        for (var t, i = []; (t = u()) !== !1; )
                            i.push(t);
                        return a(i)
                    }
                    var f = "object" == typeof n && n
                      , g = "object" == typeof i && i && i.exports == f && i
                      , m = "object" == typeof t && t;
                    (m.global === m || m.window === m) && (r = m);
                    var v, y, b, w = String.fromCharCode, x = {
                        version: "2.0.0",
                        encode: d,
                        decode: p
                    };
                    if ("function" == typeof e && "object" == typeof e.amd && e.amd)
                        e(function() {
                            return x
                        });
                    else if (f && !f.nodeType)
                        if (g)
                            g.exports = x;
                        else {
                            var E = {}
                              , _ = E.hasOwnProperty;
                            for (var T in x)
                                _.call(x, T) && (f[T] = x[T])
                        }
                    else
                        r.utf8 = x
                }(this)
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {}],
        66: [function(e, t) {
            t.exports = function(e) {
                return e && "object" == typeof e && "function" == typeof e.copy && "function" == typeof e.fill && "function" == typeof e.readUInt8
            }
        }
        , {}],
        67: [function(e, t, i) {
            (function(t, n) {
                function r(e, t) {
                    var n = {
                        seen: [],
                        stylize: a
                    };
                    return arguments.length >= 3 && (n.depth = arguments[2]),
                    arguments.length >= 4 && (n.colors = arguments[3]),
                    g(t) ? n.showHidden = t : t && i._extend(n, t),
                    x(n.showHidden) && (n.showHidden = !1),
                    x(n.depth) && (n.depth = 2),
                    x(n.colors) && (n.colors = !1),
                    x(n.customInspect) && (n.customInspect = !0),
                    n.colors && (n.stylize = o),
                    l(n, e, n.depth)
                }
                function o(e, t) {
                    var i = r.styles[t];
                    return i ? "[" + r.colors[i][0] + "m" + e + "[" + r.colors[i][1] + "m" : e
                }
                function a(e) {
                    return e
                }
                function s(e) {
                    var t = {};
                    return e.forEach(function(e) {
                        t[e] = !0
                    }),
                    t
                }
                function l(e, t, n) {
                    if (e.customInspect && t && R(t.inspect) && t.inspect !== i.inspect && (!t.constructor || t.constructor.prototype !== t)) {
                        var r = t.inspect(n, e);
                        return b(r) || (r = l(e, r, n)),
                        r
                    }
                    var o = c(e, t);
                    if (o)
                        return o;
                    var a = Object.keys(t)
                      , g = s(a);
                    if (e.showHidden && (a = Object.getOwnPropertyNames(t)),
                    C(t) && (a.indexOf("message") >= 0 || a.indexOf("description") >= 0))
                        return d(t);
                    if (0 === a.length) {
                        if (R(t)) {
                            var m = t.name ? ": " + t.name : "";
                            return e.stylize("[Function" + m + "]", "special")
                        }
                        if (E(t))
                            return e.stylize(RegExp.prototype.toString.call(t), "regexp");
                        if (T(t))
                            return e.stylize(Date.prototype.toString.call(t), "date");
                        if (C(t))
                            return d(t)
                    }
                    var v = ""
                      , y = !1
                      , w = ["{", "}"];
                    if (f(t) && (y = !0,
                    w = ["[", "]"]),
                    R(t)) {
                        var x = t.name ? ": " + t.name : "";
                        v = " [Function" + x + "]"
                    }
                    if (E(t) && (v = " " + RegExp.prototype.toString.call(t)),
                    T(t) && (v = " " + Date.prototype.toUTCString.call(t)),
                    C(t) && (v = " " + d(t)),
                    0 === a.length && (!y || 0 == t.length))
                        return w[0] + v + w[1];
                    if (0 > n)
                        return E(t) ? e.stylize(RegExp.prototype.toString.call(t), "regexp") : e.stylize("[Object]", "special");
                    e.seen.push(t);
                    var _;
                    return _ = y ? h(e, t, n, g, a) : a.map(function(i) {
                        return u(e, t, n, g, i, y)
                    }),
                    e.seen.pop(),
                    p(_, v, w)
                }
                function c(e, t) {
                    if (x(t))
                        return e.stylize("undefined", "undefined");
                    if (b(t)) {
                        var i = "'" + JSON.stringify(t).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                        return e.stylize(i, "string")
                    }
                    return y(t) ? e.stylize("" + t, "number") : g(t) ? e.stylize("" + t, "boolean") : m(t) ? e.stylize("null", "null") : void 0
                }
                function d(e) {
                    return "[" + Error.prototype.toString.call(e) + "]"
                }
                function h(e, t, i, n, r) {
                    for (var o = [], a = 0, s = t.length; s > a; ++a)
                        o.push(H(t, String(a)) ? u(e, t, i, n, String(a), !0) : "");
                    return r.forEach(function(r) {
                        r.match(/^\d+$/) || o.push(u(e, t, i, n, r, !0))
                    }),
                    o
                }
                function u(e, t, i, n, r, o) {
                    var a, s, c;
                    if (c = Object.getOwnPropertyDescriptor(t, r) || {
                        value: t[r]
                    },
                    c.get ? s = c.set ? e.stylize("[Getter/Setter]", "special") : e.stylize("[Getter]", "special") : c.set && (s = e.stylize("[Setter]", "special")),
                    H(n, r) || (a = "[" + r + "]"),
                    s || (e.seen.indexOf(c.value) < 0 ? (s = m(i) ? l(e, c.value, null ) : l(e, c.value, i - 1),
                    s.indexOf("\n") > -1 && (s = o ? s.split("\n").map(function(e) {
                        return "  " + e
                    }).join("\n").substr(2) : "\n" + s.split("\n").map(function(e) {
                        return "   " + e
                    }).join("\n"))) : s = e.stylize("[Circular]", "special")),
                    x(a)) {
                        if (o && r.match(/^\d+$/))
                            return s;
                        a = JSON.stringify("" + r),
                        a.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (a = a.substr(1, a.length - 2),
                        a = e.stylize(a, "name")) : (a = a.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"),
                        a = e.stylize(a, "string"))
                    }
                    return a + ": " + s
                }
                function p(e, t, i) {
                    var n = 0
                      , r = e.reduce(function(e, t) {
                        return n++,
                        t.indexOf("\n") >= 0 && n++,
                        e + t.replace(/\u001b\[\d\d?m/g, "").length + 1
                    }, 0);
                    return r > 60 ? i[0] + ("" === t ? "" : t + "\n ") + " " + e.join(",\n  ") + " " + i[1] : i[0] + t + " " + e.join(", ") + " " + i[1]
                }
                function f(e) {
                    return Array.isArray(e)
                }
                function g(e) {
                    return "boolean" == typeof e
                }
                function m(e) {
                    return null === e
                }
                function v(e) {
                    return null == e
                }
                function y(e) {
                    return "number" == typeof e
                }
                function b(e) {
                    return "string" == typeof e
                }
                function w(e) {
                    return "symbol" == typeof e
                }
                function x(e) {
                    return void 0 === e
                }
                function E(e) {
                    return _(e) && "[object RegExp]" === k(e)
                }
                function _(e) {
                    return "object" == typeof e && null !== e
                }
                function T(e) {
                    return _(e) && "[object Date]" === k(e)
                }
                function C(e) {
                    return _(e) && ("[object Error]" === k(e) || e instanceof Error)
                }
                function R(e) {
                    return "function" == typeof e
                }
                function S(e) {
                    return null === e || "boolean" == typeof e || "number" == typeof e || "string" == typeof e || "symbol" == typeof e || "undefined" == typeof e
                }
                function k(e) {
                    return Object.prototype.toString.call(e)
                }
                function M(e) {
                    return 10 > e ? "0" + e.toString(10) : e.toString(10)
                }
                function A() {
                    var e = new Date
                      , t = [M(e.getHours()), M(e.getMinutes()), M(e.getSeconds())].join(":");
                    return [e.getDate(), $[e.getMonth()], t].join(" ")
                }
                function H(e, t) {
                    return Object.prototype.hasOwnProperty.call(e, t)
                }
                var P = /%[sdj%]/g;
                i.format = function(e) {
                    if (!b(e)) {
                        for (var t = [], i = 0; i < arguments.length; i++)
                            t.push(r(arguments[i]));
                        return t.join(" ")
                    }
                    for (var i = 1, n = arguments, o = n.length, a = String(e).replace(P, function(e) {
                        if ("%%" === e)
                            return "%";
                        if (i >= o)
                            return e;
                        switch (e) {
                        case "%s":
                            return String(n[i++]);
                        case "%d":
                            return Number(n[i++]);
                        case "%j":
                            try {
                                return JSON.stringify(n[i++])
                            } catch (t) {
                                return "[Circular]"
                            }
                        default:
                            return e
                        }
                    }), s = n[i]; o > i; s = n[++i])
                        a += m(s) || !_(s) ? " " + s : " " + r(s);
                    return a
                }
                ,
                i.deprecate = function(e, r) {
                    function o() {
                        if (!a) {
                            if (t.throwDeprecation)
                                throw new Error(r);
                            t.traceDeprecation ? console.trace(r) : console.error(r),
                            a = !0
                        }
                        return e.apply(this, arguments)
                    }
                    if (x(n.process))
                        return function() {
                            return i.deprecate(e, r).apply(this, arguments)
                        }
                        ;
                    if (t.noDeprecation === !0)
                        return e;
                    var a = !1;
                    return o
                }
                ;
                var O, D = {};
                i.debuglog = function(e) {
                    if (x(O) && (O = t.env.NODE_DEBUG || ""),
                    e = e.toUpperCase(),
                    !D[e])
                        if (new RegExp("\\b" + e + "\\b","i").test(O)) {
                            var n = t.pid;
                            D[e] = function() {
                                var t = i.format.apply(i, arguments);
                                console.error("%s %d: %s", e, n, t)
                            }
                        } else
                            D[e] = function() {}
                            ;
                    return D[e]
                }
                ,
                i.inspect = r,
                r.colors = {
                    bold: [1, 22],
                    italic: [3, 23],
                    underline: [4, 24],
                    inverse: [7, 27],
                    white: [37, 39],
                    grey: [90, 39],
                    black: [30, 39],
                    blue: [34, 39],
                    cyan: [36, 39],
                    green: [32, 39],
                    magenta: [35, 39],
                    red: [31, 39],
                    yellow: [33, 39]
                },
                r.styles = {
                    special: "cyan",
                    number: "yellow",
                    "boolean": "yellow",
                    undefined: "grey",
                    "null": "bold",
                    string: "green",
                    date: "magenta",
                    regexp: "red"
                },
                i.isArray = f,
                i.isBoolean = g,
                i.isNull = m,
                i.isNullOrUndefined = v,
                i.isNumber = y,
                i.isString = b,
                i.isSymbol = w,
                i.isUndefined = x,
                i.isRegExp = E,
                i.isObject = _,
                i.isDate = T,
                i.isError = C,
                i.isFunction = R,
                i.isPrimitive = S,
                i.isBuffer = e("./support/isBuffer");
                var $ = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
                i.log = function() {
                    console.log("%s - %s", A(), i.format.apply(i, arguments))
                }
                ,
                i.inherits = e("inherits"),
                i._extend = function(e, t) {
                    if (!t || !_(t))
                        return e;
                    for (var i = Object.keys(t), n = i.length; n--; )
                        e[i[n]] = t[i[n]];
                    return e
                }
            }
            ).call(this, e("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {
            "./support/isBuffer": 66,
            _process: 46,
            inherits: 34
        }],
        68: [function(e, t) {
            "use strict";
            !function() {
                var i = e("./utils").log
                  , n = e("./utils").browserDetails;
                t.exports.browserDetails = n,
                t.exports.extractVersion = e("./utils").extractVersion,
                t.exports.disableLog = e("./utils").disableLog;
                var r = e("./chrome/chrome_shim") || null
                  , o = e("./edge/edge_shim") || null
                  , a = e("./firefox/firefox_shim") || null
                  , s = e("./safari/safari_shim") || null ;
                switch (n.browser) {
                case "opera":
                case "chrome":
                    if (!r || !r.shimPeerConnection)
                        return void i("Chrome shim is not included in this adapter release.");
                    i("adapter.js shimming chrome."),
                    t.exports.browserShim = r,
                    r.shimGetUserMedia(),
                    r.shimMediaStream(),
                    r.shimSourceObject(),
                    r.shimPeerConnection(),
                    r.shimOnTrack();
                    break;
                case "firefox":
                    if (!a || !a.shimPeerConnection)
                        return void i("Firefox shim is not included in this adapter release.");
                    i("adapter.js shimming firefox."),
                    t.exports.browserShim = a,
                    a.shimGetUserMedia(),
                    a.shimSourceObject(),
                    a.shimPeerConnection(),
                    a.shimOnTrack();
                    break;
                case "edge":
                    if (!o || !o.shimPeerConnection)
                        return void i("MS edge shim is not included in this adapter release.");
                    i("adapter.js shimming edge."),
                    t.exports.browserShim = o,
                    o.shimGetUserMedia(),
                    o.shimPeerConnection();
                    break;
                case "safari":
                    if (!s)
                        return void i("Safari shim is not included in this adapter release.");
                    i("adapter.js shimming safari."),
                    t.exports.browserShim = s,
                    s.shimGetUserMedia();
                    break;
                default:
                    i("Unsupported browser!")
                }
            }()
        }
        , {
            "./chrome/chrome_shim": 69,
            "./edge/edge_shim": 71,
            "./firefox/firefox_shim": 73,
            "./safari/safari_shim": 75,
            "./utils": 76
        }],
        69: [function(e, t) {
            "use strict";
            var i = e("../utils.js").log
              , n = e("../utils.js").browserDetails
              , r = {
                shimMediaStream: function() {
                    window.MediaStream = window.MediaStream || window.webkitMediaStream
                },
                shimOnTrack: function() {
                    "object" != typeof window || !window.RTCPeerConnection || "ontrack"in window.RTCPeerConnection.prototype || Object.defineProperty(window.RTCPeerConnection.prototype, "ontrack", {
                        get: function() {
                            return this._ontrack
                        },
                        set: function(e) {
                            var t = this;
                            this._ontrack && (this.removeEventListener("track", this._ontrack),
                            this.removeEventListener("addstream", this._ontrackpoly)),
                            this.addEventListener("track", this._ontrack = e),
                            this.addEventListener("addstream", this._ontrackpoly = function(e) {
                                e.stream.addEventListener("addtrack", function(i) {
                                    var n = new Event("track");
                                    n.track = i.track,
                                    n.receiver = {
                                        track: i.track
                                    },
                                    n.streams = [e.stream],
                                    t.dispatchEvent(n)
                                }),
                                e.stream.getTracks().forEach(function(t) {
                                    var i = new Event("track");
                                    i.track = t,
                                    i.receiver = {
                                        track: t
                                    },
                                    i.streams = [e.stream],
                                    this.dispatchEvent(i)
                                }
                                .bind(this))
                            }
                            .bind(this))
                        }
                    })
                },
                shimSourceObject: function() {
                    "object" == typeof window && (!window.HTMLMediaElement || "srcObject"in window.HTMLMediaElement.prototype || Object.defineProperty(window.HTMLMediaElement.prototype, "srcObject", {
                        get: function() {
                            return this._srcObject
                        },
                        set: function(e) {
                            var t = this;
                            return this._srcObject = e,
                            this.src && URL.revokeObjectURL(this.src),
                            e ? (this.src = URL.createObjectURL(e),
                            e.addEventListener("addtrack", function() {
                                t.src && URL.revokeObjectURL(t.src),
                                t.src = URL.createObjectURL(e)
                            }),
                            void e.addEventListener("removetrack", function() {
                                t.src && URL.revokeObjectURL(t.src),
                                t.src = URL.createObjectURL(e)
                            })) : void (this.src = "")
                        }
                    }))
                },
                shimPeerConnection: function() {
                    window.RTCPeerConnection = function(e, t) {
                        i("PeerConnection"),
                        e && e.iceTransportPolicy && (e.iceTransports = e.iceTransportPolicy);
                        var n = new webkitRTCPeerConnection(e,t)
                          , r = n.getStats.bind(n);
                        return n.getStats = function(e, t, i) {
                            var n = this
                              , o = arguments;
                            if (arguments.length > 0 && "function" == typeof e)
                                return r(e, t);
                            var a = function(e) {
                                var t = {}
                                  , i = e.result();
                                return i.forEach(function(e) {
                                    var i = {
                                        id: e.id,
                                        timestamp: e.timestamp,
                                        type: e.type
                                    };
                                    e.names().forEach(function(t) {
                                        i[t] = e.stat(t)
                                    }),
                                    t[i.id] = i
                                }),
                                t
                            }
                              , s = function(e, t) {
                                var i = new Map(Object.keys(e).map(function(t) {
                                    return [t, e[t]]
                                }));
                                return t = t || e,
                                Object.keys(t).forEach(function(e) {
                                    i[e] = t[e]
                                }),
                                i
                            }
                            ;
                            if (arguments.length >= 2) {
                                var l = function(e) {
                                    o[1](s(a(e)))
                                }
                                ;
                                return r.apply(this, [l, arguments[0]])
                            }
                            return new Promise(function(t, i) {
                                1 === o.length && "object" == typeof e ? r.apply(n, [function(e) {
                                    t(s(a(e)))
                                }
                                , i]) : r.apply(n, [function(e) {
                                    t(s(a(e), e.result()))
                                }
                                , i])
                            }
                            ).then(t, i)
                        }
                        ,
                        n
                    }
                    ,
                    window.RTCPeerConnection.prototype = webkitRTCPeerConnection.prototype,
                    webkitRTCPeerConnection.generateCertificate && Object.defineProperty(window.RTCPeerConnection, "generateCertificate", {
                        get: function() {
                            return webkitRTCPeerConnection.generateCertificate
                        }
                    }),
                    n.version < 51 && (["createOffer", "createAnswer"].forEach(function(e) {
                        var t = webkitRTCPeerConnection.prototype[e];
                        webkitRTCPeerConnection.prototype[e] = function() {
                            var e = this;
                            if (arguments.length < 1 || 1 === arguments.length && "object" == typeof arguments[0]) {
                                var i = 1 === arguments.length ? arguments[0] : void 0;
                                return new Promise(function(n, r) {
                                    t.apply(e, [n, r, i])
                                }
                                )
                            }
                            return t.apply(this, arguments)
                        }
                    }),
                    ["setLocalDescription", "setRemoteDescription", "addIceCandidate"].forEach(function(e) {
                        var t = webkitRTCPeerConnection.prototype[e];
                        webkitRTCPeerConnection.prototype[e] = function() {
                            var e = arguments
                              , i = this
                              , n = new Promise(function(n, r) {
                                t.apply(i, [e[0], n, r])
                            }
                            );
                            return e.length < 2 ? n : n.then(function() {
                                e[1].apply(null , [])
                            }, function(t) {
                                e.length >= 3 && e[2].apply(null , [t])
                            })
                        }
                    }));
                    var e = RTCPeerConnection.prototype.addIceCandidate;
                    RTCPeerConnection.prototype.addIceCandidate = function() {
                        return null === arguments[0] ? Promise.resolve() : e.apply(this, arguments)
                    }
                    ,
                    ["setLocalDescription", "setRemoteDescription", "addIceCandidate"].forEach(function(e) {
                        var t = webkitRTCPeerConnection.prototype[e];
                        webkitRTCPeerConnection.prototype[e] = function() {
                            return arguments[0] = new ("addIceCandidate" === e ? RTCIceCandidate : RTCSessionDescription)(arguments[0]),
                            t.apply(this, arguments)
                        }
                    })
                },
                attachMediaStream: function(e, t) {
                    i("DEPRECATED, attachMediaStream will soon be removed."),
                    n.version >= 43 ? e.srcObject = t : "undefined" != typeof e.src ? e.src = URL.createObjectURL(t) : i("Error attaching stream to element.")
                },
                reattachMediaStream: function(e, t) {
                    i("DEPRECATED, reattachMediaStream will soon be removed."),
                    n.version >= 43 ? e.srcObject = t.srcObject : e.src = t.src
                }
            };
            t.exports = {
                shimMediaStream: r.shimMediaStream,
                shimOnTrack: r.shimOnTrack,
                shimSourceObject: r.shimSourceObject,
                shimPeerConnection: r.shimPeerConnection,
                shimGetUserMedia: e("./getusermedia"),
                attachMediaStream: r.attachMediaStream,
                reattachMediaStream: r.reattachMediaStream
            }
        }
        , {
            "../utils.js": 76,
            "./getusermedia": 70
        }],
        70: [function(e, t) {
            "use strict";
            var i = e("../utils.js").log;
            t.exports = function() {
                var e = function(e) {
                    if ("object" != typeof e || e.mandatory || e.optional)
                        return e;
                    var t = {};
                    return Object.keys(e).forEach(function(i) {
                        if ("require" !== i && "advanced" !== i && "mediaSource" !== i) {
                            var n = "object" == typeof e[i] ? e[i] : {
                                ideal: e[i]
                            };
                            void 0 !== n.exact && "number" == typeof n.exact && (n.min = n.max = n.exact);
                            var r = function(e, t) {
                                return e ? e + t.charAt(0).toUpperCase() + t.slice(1) : "deviceId" === t ? "sourceId" : t
                            }
                            ;
                            if (void 0 !== n.ideal) {
                                t.optional = t.optional || [];
                                var o = {};
                                "number" == typeof n.ideal ? (o[r("min", i)] = n.ideal,
                                t.optional.push(o),
                                o = {},
                                o[r("max", i)] = n.ideal,
                                t.optional.push(o)) : (o[r("", i)] = n.ideal,
                                t.optional.push(o))
                            }
                            void 0 !== n.exact && "number" != typeof n.exact ? (t.mandatory = t.mandatory || {},
                            t.mandatory[r("", i)] = n.exact) : ["min", "max"].forEach(function(e) {
                                void 0 !== n[e] && (t.mandatory = t.mandatory || {},
                                t.mandatory[r(e, i)] = n[e])
                            })
                        }
                    }),
                    e.advanced && (t.optional = (t.optional || []).concat(e.advanced)),
                    t
                }
                  , t = function(t, n) {
                    if (t = JSON.parse(JSON.stringify(t)),
                    t && t.audio && (t.audio = e(t.audio)),
                    t && "object" == typeof t.video) {
                        var r = t.video.facingMode;
                        if (r = r && ("object" == typeof r ? r : {
                            ideal: r
                        }),
                        !(!r || "user" !== r.exact && "environment" !== r.exact && "user" !== r.ideal && "environment" !== r.ideal || navigator.mediaDevices.getSupportedConstraints && navigator.mediaDevices.getSupportedConstraints().facingMode) && (delete t.video.facingMode,
                        "environment" === r.exact || "environment" === r.ideal))
                            return navigator.mediaDevices.enumerateDevices().then(function(o) {
                                o = o.filter(function(e) {
                                    return "videoinput" === e.kind
                                });
                                var a = o.find(function(e) {
                                    return -1 !== e.label.toLowerCase().indexOf("back")
                                }) || o.length && o[o.length - 1];
                                return a && (t.video.deviceId = r.exact ? {
                                    exact: a.deviceId
                                } : {
                                    ideal: a.deviceId
                                }),
                                t.video = e(t.video),
                                i("chrome: " + JSON.stringify(t)),
                                n(t)
                            });
                        t.video = e(t.video)
                    }
                    return i("chrome: " + JSON.stringify(t)),
                    n(t)
                }
                  , n = function(e) {
                    return {
                        name: {
                            PermissionDeniedError: "NotAllowedError",
                            ConstraintNotSatisfiedError: "OverconstrainedError"
                        }[e.name] || e.name,
                        message: e.message,
                        constraint: e.constraintName,
                        toString: function() {
                            return this.name + (this.message && ": ") + this.message
                        }
                    }
                }
                  , r = function(e, i, r) {
                    t(e, function(e) {
                        navigator.webkitGetUserMedia(e, i, function(e) {
                            r(n(e))
                        })
                    })
                }
                ;
                navigator.getUserMedia = r;
                var o = function(e) {
                    return new Promise(function(t, i) {
                        navigator.getUserMedia(e, t, i)
                    }
                    )
                }
                ;
                if (navigator.mediaDevices || (navigator.mediaDevices = {
                    getUserMedia: o,
                    enumerateDevices: function() {
                        return new Promise(function(e) {
                            var t = {
                                audio: "audioinput",
                                video: "videoinput"
                            };
                            return MediaStreamTrack.getSources(function(i) {
                                e(i.map(function(e) {
                                    return {
                                        label: e.label,
                                        kind: t[e.kind],
                                        deviceId: e.id,
                                        groupId: ""
                                    }
                                }))
                            })
                        }
                        )
                    }
                }),
                navigator.mediaDevices.getUserMedia) {
                    var a = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);
                    navigator.mediaDevices.getUserMedia = function(e) {
                        return t(e, function(e) {
                            return a(e).catch(function(e) {
                                return Promise.reject(n(e))
                            })
                        })
                    }
                } else
                    navigator.mediaDevices.getUserMedia = function(e) {
                        return o(e)
                    }
                    ;
                "undefined" == typeof navigator.mediaDevices.addEventListener && (navigator.mediaDevices.addEventListener = function() {
                    i("Dummy mediaDevices.addEventListener called.")
                }
                ),
                "undefined" == typeof navigator.mediaDevices.removeEventListener && (navigator.mediaDevices.removeEventListener = function() {
                    i("Dummy mediaDevices.removeEventListener called.")
                }
                )
            }
        }
        , {
            "../utils.js": 76
        }],
        71: [function(e, t) {
            "use strict";
            var i = e("sdp")
              , n = e("../utils").log
              , r = {
                shimPeerConnection: function() {
                    window.RTCIceGatherer && (window.RTCIceCandidate || (window.RTCIceCandidate = function(e) {
                        return e
                    }
                    ),
                    window.RTCSessionDescription || (window.RTCSessionDescription = function(e) {
                        return e
                    }
                    )),
                    window.RTCPeerConnection = function(e) {
                        var t = this
                          , i = document.createDocumentFragment();
                        if (["addEventListener", "removeEventListener", "dispatchEvent"].forEach(function(e) {
                            t[e] = i[e].bind(i)
                        }),
                        this.onicecandidate = null ,
                        this.onaddstream = null ,
                        this.ontrack = null ,
                        this.onremovestream = null ,
                        this.onsignalingstatechange = null ,
                        this.oniceconnectionstatechange = null ,
                        this.onnegotiationneeded = null ,
                        this.ondatachannel = null ,
                        this.localStreams = [],
                        this.remoteStreams = [],
                        this.getLocalStreams = function() {
                            return t.localStreams
                        }
                        ,
                        this.getRemoteStreams = function() {
                            return t.remoteStreams
                        }
                        ,
                        this.localDescription = new RTCSessionDescription({
                            type: "",
                            sdp: ""
                        }),
                        this.remoteDescription = new RTCSessionDescription({
                            type: "",
                            sdp: ""
                        }),
                        this.signalingState = "stable",
                        this.iceConnectionState = "new",
                        this.iceGatheringState = "new",
                        this.iceOptions = {
                            gatherPolicy: "all",
                            iceServers: []
                        },
                        e && e.iceTransportPolicy)
                            switch (e.iceTransportPolicy) {
                            case "all":
                            case "relay":
                                this.iceOptions.gatherPolicy = e.iceTransportPolicy;
                                break;
                            case "none":
                                throw new TypeError('iceTransportPolicy "none" not supported')
                            }
                        e && e.iceServers && (this.iceOptions.iceServers = e.iceServers.filter(function(e) {
                            return e && e.urls ? (e.urls = e.urls.filter(function(e) {
                                return 0 === e.indexOf("turn:") && -1 !== e.indexOf("transport=udp")
                            })[0],
                            !!e.urls) : !1
                        })),
                        this.transceivers = [],
                        this._localIceCandidatesBuffer = []
                    }
                    ,
                    window.RTCPeerConnection.prototype._emitBufferedCandidates = function() {
                        var e = this
                          , t = i.splitSections(e.localDescription.sdp);
                        this._localIceCandidatesBuffer.forEach(function(i) {
                            var n = !i.candidate || 0 === Object.keys(i.candidate).length;
                            if (n)
                                for (var r = 1; r < t.length; r++)
                                    -1 === t[r].indexOf("\r\na=end-of-candidates\r\n") && (t[r] += "a=end-of-candidates\r\n");
                            else
                                -1 === i.candidate.candidate.indexOf("typ endOfCandidates") && (t[i.candidate.sdpMLineIndex + 1] += "a=" + i.candidate.candidate + "\r\n");
                            if (e.localDescription.sdp = t.join(""),
                            e.dispatchEvent(i),
                            null !== e.onicecandidate && e.onicecandidate(i),
                            !i.candidate && "complete" !== e.iceGatheringState) {
                                var o = e.transceivers.every(function(e) {
                                    return e.iceGatherer && "completed" === e.iceGatherer.state
                                });
                                o && (e.iceGatheringState = "complete")
                            }
                        }),
                        this._localIceCandidatesBuffer = []
                    }
                    ,
                    window.RTCPeerConnection.prototype.addStream = function(e) {
                        this.localStreams.push(e.clone()),
                        this._maybeFireNegotiationNeeded()
                    }
                    ,
                    window.RTCPeerConnection.prototype.removeStream = function(e) {
                        var t = this.localStreams.indexOf(e);
                        t > -1 && (this.localStreams.splice(t, 1),
                        this._maybeFireNegotiationNeeded())
                    }
                    ,
                    window.RTCPeerConnection.prototype.getSenders = function() {
                        return this.transceivers.filter(function(e) {
                            return !!e.rtpSender
                        }).map(function(e) {
                            return e.rtpSender
                        })
                    }
                    ,
                    window.RTCPeerConnection.prototype.getReceivers = function() {
                        return this.transceivers.filter(function(e) {
                            return !!e.rtpReceiver
                        }).map(function(e) {
                            return e.rtpReceiver
                        })
                    }
                    ,
                    window.RTCPeerConnection.prototype._getCommonCapabilities = function(e, t) {
                        var i = {
                            codecs: [],
                            headerExtensions: [],
                            fecMechanisms: []
                        };
                        return e.codecs.forEach(function(e) {
                            for (var n = 0; n < t.codecs.length; n++) {
                                var r = t.codecs[n];
                                if (e.name.toLowerCase() === r.name.toLowerCase() && e.clockRate === r.clockRate && e.numChannels === r.numChannels) {
                                    i.codecs.push(r);
                                    break
                                }
                            }
                        }),
                        e.headerExtensions.forEach(function(e) {
                            for (var n = 0; n < t.headerExtensions.length; n++) {
                                var r = t.headerExtensions[n];
                                if (e.uri === r.uri) {
                                    i.headerExtensions.push(r);
                                    break
                                }
                            }
                        }),
                        i
                    }
                    ,
                    window.RTCPeerConnection.prototype._createIceAndDtlsTransports = function(e, t) {
                        var n = this
                          , r = new RTCIceGatherer(n.iceOptions)
                          , o = new RTCIceTransport(r);
                        r.onlocalcandidate = function(a) {
                            var s = new Event("icecandidate");
                            s.candidate = {
                                sdpMid: e,
                                sdpMLineIndex: t
                            };
                            var l = a.candidate
                              , c = !l || 0 === Object.keys(l).length;
                            c ? (void 0 === r.state && (r.state = "completed"),
                            s.candidate.candidate = "candidate:1 1 udp 1 0.0.0.0 9 typ endOfCandidates") : (l.component = "RTCP" === o.component ? 2 : 1,
                            s.candidate.candidate = i.writeCandidate(l));
                            var d = n.transceivers.every(function(e) {
                                return e.iceGatherer && "completed" === e.iceGatherer.state
                            });
                            switch (n.iceGatheringState) {
                            case "new":
                                n._localIceCandidatesBuffer.push(s),
                                c && d && n._localIceCandidatesBuffer.push(new Event("icecandidate"));
                                break;
                            case "gathering":
                                n._emitBufferedCandidates(),
                                n.dispatchEvent(s),
                                null !== n.onicecandidate && n.onicecandidate(s),
                                d && (n.dispatchEvent(new Event("icecandidate")),
                                null !== n.onicecandidate && n.onicecandidate(new Event("icecandidate")),
                                n.iceGatheringState = "complete");
                                break;
                            case "complete":
                            }
                        }
                        ,
                        o.onicestatechange = function() {
                            n._updateConnectionState()
                        }
                        ;
                        var a = new RTCDtlsTransport(o);
                        return a.ondtlsstatechange = function() {
                            n._updateConnectionState()
                        }
                        ,
                        a.onerror = function() {
                            a.state = "failed",
                            n._updateConnectionState()
                        }
                        ,
                        {
                            iceGatherer: r,
                            iceTransport: o,
                            dtlsTransport: a
                        }
                    }
                    ,
                    window.RTCPeerConnection.prototype._transceive = function(e, t, n) {
                        var r = this._getCommonCapabilities(e.localCapabilities, e.remoteCapabilities);
                        t && e.rtpSender && (r.encodings = e.sendEncodingParameters,
                        r.rtcp = {
                            cname: i.localCName
                        },
                        e.recvEncodingParameters.length && (r.rtcp.ssrc = e.recvEncodingParameters[0].ssrc),
                        e.rtpSender.send(r)),
                        n && e.rtpReceiver && (r.encodings = e.recvEncodingParameters,
                        r.rtcp = {
                            cname: e.cname
                        },
                        e.sendEncodingParameters.length && (r.rtcp.ssrc = e.sendEncodingParameters[0].ssrc),
                        e.rtpReceiver.receive(r))
                    }
                    ,
                    window.RTCPeerConnection.prototype.setLocalDescription = function(e) {
                        var t, n, r = this;
                        if ("offer" === e.type)
                            this._pendingOffer && (t = i.splitSections(e.sdp),
                            n = t.shift(),
                            t.forEach(function(e, t) {
                                var n = i.parseRtpParameters(e);
                                r._pendingOffer[t].localCapabilities = n
                            }),
                            this.transceivers = this._pendingOffer,
                            delete this._pendingOffer);
                        else if ("answer" === e.type) {
                            t = i.splitSections(r.remoteDescription.sdp),
                            n = t.shift();
                            var o = i.matchPrefix(n, "a=ice-lite").length > 0;
                            t.forEach(function(e, t) {
                                var a = r.transceivers[t]
                                  , s = a.iceGatherer
                                  , l = a.iceTransport
                                  , c = a.dtlsTransport
                                  , d = a.localCapabilities
                                  , h = a.remoteCapabilities
                                  , u = "0" === e.split("\n", 1)[0].split(" ", 2)[1];
                                if (!u) {
                                    var p = i.getIceParameters(e, n);
                                    if (o) {
                                        var f = i.matchPrefix(e, "a=candidate:").map(function(e) {
                                            return i.parseCandidate(e)
                                        }).filter(function(e) {
                                            return "1" === e.component
                                        });
                                        l.setRemoteCandidates(f)
                                    }
                                    l.start(s, p, o ? "controlling" : "controlled");
                                    var g = i.getDtlsParameters(e, n);
                                    o && (g.role = "server"),
                                    c.start(g);
                                    var m = r._getCommonCapabilities(d, h);
                                    r._transceive(a, m.codecs.length > 0, !1)
                                }
                            })
                        }
                        switch (this.localDescription = {
                            type: e.type,
                            sdp: e.sdp
                        },
                        e.type) {
                        case "offer":
                            this._updateSignalingState("have-local-offer");
                            break;
                        case "answer":
                            this._updateSignalingState("stable");
                            break;
                        default:
                            throw new TypeError('unsupported type "' + e.type + '"')
                        }
                        var a = arguments.length > 1 && "function" == typeof arguments[1];
                        if (a) {
                            var s = arguments[1];
                            window.setTimeout(function() {
                                s(),
                                "new" === r.iceGatheringState && (r.iceGatheringState = "gathering"),
                                r._emitBufferedCandidates()
                            }, 0)
                        }
                        var l = Promise.resolve();
                        return l.then(function() {
                            a || ("new" === r.iceGatheringState && (r.iceGatheringState = "gathering"),
                            window.setTimeout(r._emitBufferedCandidates.bind(r), 500))
                        }),
                        l
                    }
                    ,
                    window.RTCPeerConnection.prototype.setRemoteDescription = function(e) {
                        var t = this
                          , n = new MediaStream
                          , r = []
                          , o = i.splitSections(e.sdp)
                          , a = o.shift()
                          , s = i.matchPrefix(a, "a=ice-lite").length > 0;
                        switch (o.forEach(function(o, l) {
                            var c, d, h, u, p, f, g, m, v, y, b, w, x = i.splitLines(o), E = x[0].substr(2).split(" "), _ = E[0], T = "0" === E[1], C = i.getDirection(o, a), R = i.parseRtpParameters(o);
                            T || (b = i.getIceParameters(o, a),
                            w = i.getDtlsParameters(o, a),
                            w.role = "client"),
                            m = i.parseRtpEncodingParameters(o);
                            var S = i.matchPrefix(o, "a=mid:");
                            S = S.length ? S[0].substr(6) : i.generateIdentifier();
                            var k, M = i.matchPrefix(o, "a=ssrc:").map(function(e) {
                                return i.parseSsrcMedia(e)
                            }).filter(function(e) {
                                return "cname" === e.attribute
                            })[0];
                            M && (k = M.value);
                            var A = i.matchPrefix(o, "a=end-of-candidates").length > 0
                              , H = i.matchPrefix(o, "a=candidate:").map(function(e) {
                                return i.parseCandidate(e)
                            }).filter(function(e) {
                                return "1" === e.component
                            });
                            if ("offer" !== e.type || T)
                                "answer" !== e.type || T || (c = t.transceivers[l],
                                d = c.iceGatherer,
                                h = c.iceTransport,
                                u = c.dtlsTransport,
                                p = c.rtpSender,
                                f = c.rtpReceiver,
                                g = c.sendEncodingParameters,
                                v = c.localCapabilities,
                                t.transceivers[l].recvEncodingParameters = m,
                                t.transceivers[l].remoteCapabilities = R,
                                t.transceivers[l].cname = k,
                                (s || A) && h.setRemoteCandidates(H),
                                h.start(d, b, "controlling"),
                                u.start(w),
                                t._transceive(c, "sendrecv" === C || "recvonly" === C, "sendrecv" === C || "sendonly" === C),
                                !f || "sendrecv" !== C && "sendonly" !== C ? delete c.rtpReceiver : (y = f.track,
                                r.push([y, f]),
                                n.addTrack(y)));
                            else {
                                var P = t._createIceAndDtlsTransports(S, l);
                                if (A && P.iceTransport.setRemoteCandidates(H),
                                v = RTCRtpReceiver.getCapabilities(_),
                                g = [{
                                    ssrc: 1001 * (2 * l + 2)
                                }],
                                f = new RTCRtpReceiver(P.dtlsTransport,_),
                                y = f.track,
                                r.push([y, f]),
                                n.addTrack(y),
                                t.localStreams.length > 0 && t.localStreams[0].getTracks().length >= l) {
                                    var O = t.localStreams[0].getTracks()[l];
                                    p = new RTCRtpSender(O,P.dtlsTransport)
                                }
                                t.transceivers[l] = {
                                    iceGatherer: P.iceGatherer,
                                    iceTransport: P.iceTransport,
                                    dtlsTransport: P.dtlsTransport,
                                    localCapabilities: v,
                                    remoteCapabilities: R,
                                    rtpSender: p,
                                    rtpReceiver: f,
                                    kind: _,
                                    mid: S,
                                    cname: k,
                                    sendEncodingParameters: g,
                                    recvEncodingParameters: m
                                },
                                t._transceive(t.transceivers[l], !1, "sendrecv" === C || "sendonly" === C)
                            }
                        }),
                        this.remoteDescription = {
                            type: e.type,
                            sdp: e.sdp
                        },
                        e.type) {
                        case "offer":
                            this._updateSignalingState("have-remote-offer");
                            break;
                        case "answer":
                            this._updateSignalingState("stable");
                            break;
                        default:
                            throw new TypeError('unsupported type "' + e.type + '"')
                        }
                        return n.getTracks().length && (t.remoteStreams.push(n),
                        window.setTimeout(function() {
                            var e = new Event("addstream");
                            e.stream = n,
                            t.dispatchEvent(e),
                            null !== t.onaddstream && window.setTimeout(function() {
                                t.onaddstream(e)
                            }, 0),
                            r.forEach(function(i) {
                                var r = i[0]
                                  , o = i[1]
                                  , a = new Event("track");
                                a.track = r,
                                a.receiver = o,
                                a.streams = [n],
                                t.dispatchEvent(e),
                                null !== t.ontrack && window.setTimeout(function() {
                                    t.ontrack(a)
                                }, 0)
                            })
                        }, 0)),
                        arguments.length > 1 && "function" == typeof arguments[1] && window.setTimeout(arguments[1], 0),
                        Promise.resolve()
                    }
                    ,
                    window.RTCPeerConnection.prototype.close = function() {
                        this.transceivers.forEach(function(e) {
                            e.iceTransport && e.iceTransport.stop(),
                            e.dtlsTransport && e.dtlsTransport.stop(),
                            e.rtpSender && e.rtpSender.stop(),
                            e.rtpReceiver && e.rtpReceiver.stop()
                        }),
                        this._updateSignalingState("closed")
                    }
                    ,
                    window.RTCPeerConnection.prototype._updateSignalingState = function(e) {
                        this.signalingState = e;
                        var t = new Event("signalingstatechange");
                        this.dispatchEvent(t),
                        null !== this.onsignalingstatechange && this.onsignalingstatechange(t)
                    }
                    ,
                    window.RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {
                        var e = new Event("negotiationneeded");
                        this.dispatchEvent(e),
                        null !== this.onnegotiationneeded && this.onnegotiationneeded(e)
                    }
                    ,
                    window.RTCPeerConnection.prototype._updateConnectionState = function() {
                        var e, t = this, i = {
                            "new": 0,
                            closed: 0,
                            connecting: 0,
                            checking: 0,
                            connected: 0,
                            completed: 0,
                            failed: 0
                        };
                        if (this.transceivers.forEach(function(e) {
                            i[e.iceTransport.state]++,
                            i[e.dtlsTransport.state]++
                        }),
                        i.connected += i.completed,
                        e = "new",
                        i.failed > 0 ? e = "failed" : i.connecting > 0 || i.checking > 0 ? e = "connecting" : i.disconnected > 0 ? e = "disconnected" : i.new > 0 ? e = "new" : (i.connected > 0 || i.completed > 0) && (e = "connected"),
                        e !== t.iceConnectionState) {
                            t.iceConnectionState = e;
                            var n = new Event("iceconnectionstatechange");
                            this.dispatchEvent(n),
                            null !== this.oniceconnectionstatechange && this.oniceconnectionstatechange(n)
                        }
                    }
                    ,
                    window.RTCPeerConnection.prototype.createOffer = function() {
                        var e = this;
                        if (this._pendingOffer)
                            throw new Error("createOffer called while there is a pending offer.");
                        var t;
                        1 === arguments.length && "function" != typeof arguments[0] ? t = arguments[0] : 3 === arguments.length && (t = arguments[2]);
                        var n = []
                          , r = 0
                          , o = 0;
                        if (this.localStreams.length && (r = this.localStreams[0].getAudioTracks().length,
                        o = this.localStreams[0].getVideoTracks().length),
                        t) {
                            if (t.mandatory || t.optional)
                                throw new TypeError("Legacy mandatory/optional constraints not supported.");
                            void 0 !== t.offerToReceiveAudio && (r = t.offerToReceiveAudio),
                            void 0 !== t.offerToReceiveVideo && (o = t.offerToReceiveVideo)
                        }
                        for (this.localStreams.length && this.localStreams[0].getTracks().forEach(function(e) {
                            n.push({
                                kind: e.kind,
                                track: e,
                                wantReceive: "audio" === e.kind ? r > 0 : o > 0
                            }),
                            "audio" === e.kind ? r-- : "video" === e.kind && o--
                        }); r > 0 || o > 0; )
                            r > 0 && (n.push({
                                kind: "audio",
                                wantReceive: !0
                            }),
                            r--),
                            o > 0 && (n.push({
                                kind: "video",
                                wantReceive: !0
                            }),
                            o--);
                        var a = i.writeSessionBoilerplate()
                          , s = [];
                        n.forEach(function(t, n) {
                            var r, o, l = t.track, c = t.kind, d = i.generateIdentifier(), h = e._createIceAndDtlsTransports(d, n), u = RTCRtpSender.getCapabilities(c), p = [{
                                ssrc: 1001 * (2 * n + 1)
                            }];
                            l && (r = new RTCRtpSender(l,h.dtlsTransport)),
                            t.wantReceive && (o = new RTCRtpReceiver(h.dtlsTransport,c)),
                            s[n] = {
                                iceGatherer: h.iceGatherer,
                                iceTransport: h.iceTransport,
                                dtlsTransport: h.dtlsTransport,
                                localCapabilities: u,
                                remoteCapabilities: null ,
                                rtpSender: r,
                                rtpReceiver: o,
                                kind: c,
                                mid: d,
                                sendEncodingParameters: p,
                                recvEncodingParameters: null
                            };
                            var f = s[n];
                            a += i.writeMediaSection(f, f.localCapabilities, "offer", e.localStreams[0])
                        }),
                        this._pendingOffer = s;
                        var l = new RTCSessionDescription({
                            type: "offer",
                            sdp: a
                        });
                        return arguments.length && "function" == typeof arguments[0] && window.setTimeout(arguments[0], 0, l),
                        Promise.resolve(l)
                    }
                    ,
                    window.RTCPeerConnection.prototype.createAnswer = function() {
                        var e = this
                          , t = i.writeSessionBoilerplate();
                        this.transceivers.forEach(function(n) {
                            var r = e._getCommonCapabilities(n.localCapabilities, n.remoteCapabilities);
                            t += i.writeMediaSection(n, r, "answer", e.localStreams[0])
                        });
                        var n = new RTCSessionDescription({
                            type: "answer",
                            sdp: t
                        });
                        return arguments.length && "function" == typeof arguments[0] && window.setTimeout(arguments[0], 0, n),
                        Promise.resolve(n)
                    }
                    ,
                    window.RTCPeerConnection.prototype.addIceCandidate = function(e) {
                        if (null === e)
                            this.transceivers.forEach(function(e) {
                                e.iceTransport.addIceCandidate({})
                            });
                        else {
                            var t = e.sdpMLineIndex;
                            if (e.sdpMid)
                                for (var n = 0; n < this.transceivers.length; n++)
                                    if (this.transceivers[n].mid === e.sdpMid) {
                                        t = n;
                                        break
                                    }
                            var r = this.transceivers[t];
                            if (r) {
                                var o = Object.keys(e.candidate).length > 0 ? i.parseCandidate(e.candidate) : {};
                                if ("tcp" === o.protocol && 0 === o.port)
                                    return;
                                if ("1" !== o.component)
                                    return;
                                "endOfCandidates" === o.type && (o = {}),
                                r.iceTransport.addRemoteCandidate(o);
                                var a = i.splitSections(this.remoteDescription.sdp);
                                a[t + 1] += (o.type ? e.candidate.trim() : "a=end-of-candidates") + "\r\n",
                                this.remoteDescription.sdp = a.join("")
                            }
                        }
                        return arguments.length > 1 && "function" == typeof arguments[1] && window.setTimeout(arguments[1], 0),
                        Promise.resolve()
                    }
                    ,
                    window.RTCPeerConnection.prototype.getStats = function() {
                        var e = [];
                        this.transceivers.forEach(function(t) {
                            ["rtpSender", "rtpReceiver", "iceGatherer", "iceTransport", "dtlsTransport"].forEach(function(i) {
                                t[i] && e.push(t[i].getStats())
                            })
                        });
                        var t = arguments.length > 1 && "function" == typeof arguments[1] && arguments[1];
                        return new Promise(function(i) {
                            var n = new Map;
                            Promise.all(e).then(function(e) {
                                e.forEach(function(e) {
                                    Object.keys(e).forEach(function(t) {
                                        n.set(t, e[t]),
                                        n[t] = e[t]
                                    })
                                }),
                                t && window.setTimeout(t, 0, n),
                                i(n)
                            })
                        }
                        )
                    }
                },
                attachMediaStream: function(e, t) {
                    n("DEPRECATED, attachMediaStream will soon be removed."),
                    e.srcObject = t
                },
                reattachMediaStream: function(e, t) {
                    n("DEPRECATED, reattachMediaStream will soon be removed."),
                    e.srcObject = t.srcObject
                }
            };
            t.exports = {
                shimPeerConnection: r.shimPeerConnection,
                shimGetUserMedia: e("./getusermedia"),
                attachMediaStream: r.attachMediaStream,
                reattachMediaStream: r.reattachMediaStream
            }
        }
        , {
            "../utils": 76,
            "./getusermedia": 72,
            sdp: 53
        }],
        72: [function(e, t) {
            "use strict";
            t.exports = function() {
                var e = function(e) {
                    return {
                        name: {
                            PermissionDeniedError: "NotAllowedError"
                        }[e.name] || e.name,
                        message: e.message,
                        constraint: e.constraint,
                        toString: function() {
                            return this.name
                        }
                    }
                }
                  , t = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);
                navigator.mediaDevices.getUserMedia = function(i) {
                    return t(i).catch(function(t) {
                        return Promise.reject(e(t))
                    })
                }
            }
        }
        , {}],
        73: [function(e, t) {
            "use strict";
            var i = e("../utils").log
              , n = e("../utils").browserDetails
              , r = {
                shimOnTrack: function() {
                    "object" != typeof window || !window.RTCPeerConnection || "ontrack"in window.RTCPeerConnection.prototype || Object.defineProperty(window.RTCPeerConnection.prototype, "ontrack", {
                        get: function() {
                            return this._ontrack
                        },
                        set: function(e) {
                            this._ontrack && (this.removeEventListener("track", this._ontrack),
                            this.removeEventListener("addstream", this._ontrackpoly)),
                            this.addEventListener("track", this._ontrack = e),
                            this.addEventListener("addstream", this._ontrackpoly = function(e) {
                                e.stream.getTracks().forEach(function(t) {
                                    var i = new Event("track");
                                    i.track = t,
                                    i.receiver = {
                                        track: t
                                    },
                                    i.streams = [e.stream],
                                    this.dispatchEvent(i)
                                }
                                .bind(this))
                            }
                            .bind(this))
                        }
                    })
                },
                shimSourceObject: function() {
                    "object" == typeof window && (!window.HTMLMediaElement || "srcObject"in window.HTMLMediaElement.prototype || Object.defineProperty(window.HTMLMediaElement.prototype, "srcObject", {
                        get: function() {
                            return this.mozSrcObject
                        },
                        set: function(e) {
                            this.mozSrcObject = e
                        }
                    }))
                },
                shimPeerConnection: function() {
                    if ("object" == typeof window && (window.RTCPeerConnection || window.mozRTCPeerConnection)) {
                        window.RTCPeerConnection || (window.RTCPeerConnection = function(e, t) {
                            if (n.version < 38 && e && e.iceServers) {
                                for (var i = [], r = 0; r < e.iceServers.length; r++) {
                                    var o = e.iceServers[r];
                                    if (o.hasOwnProperty("urls"))
                                        for (var a = 0; a < o.urls.length; a++) {
                                            var s = {
                                                url: o.urls[a]
                                            };
                                            0 === o.urls[a].indexOf("turn") && (s.username = o.username,
                                            s.credential = o.credential),
                                            i.push(s)
                                        }
                                    else
                                        i.push(e.iceServers[r])
                                }
                                e.iceServers = i
                            }
                            return new mozRTCPeerConnection(e,t)
                        }
                        ,
                        window.RTCPeerConnection.prototype = mozRTCPeerConnection.prototype,
                        mozRTCPeerConnection.generateCertificate && Object.defineProperty(window.RTCPeerConnection, "generateCertificate", {
                            get: function() {
                                return mozRTCPeerConnection.generateCertificate
                            }
                        }),
                        window.RTCSessionDescription = mozRTCSessionDescription,
                        window.RTCIceCandidate = mozRTCIceCandidate),
                        ["setLocalDescription", "setRemoteDescription", "addIceCandidate"].forEach(function(e) {
                            var t = RTCPeerConnection.prototype[e];
                            RTCPeerConnection.prototype[e] = function() {
                                return arguments[0] = new ("addIceCandidate" === e ? RTCIceCandidate : RTCSessionDescription)(arguments[0]),
                                t.apply(this, arguments)
                            }
                        });
                        var e = RTCPeerConnection.prototype.addIceCandidate;
                        RTCPeerConnection.prototype.addIceCandidate = function() {
                            return null === arguments[0] ? Promise.resolve() : e.apply(this, arguments)
                        }
                        ;
                        var t = function(e) {
                            var t = new Map;
                            return Object.keys(e).forEach(function(i) {
                                t.set(i, e[i]),
                                t[i] = e[i]
                            }),
                            t
                        }
                          , i = RTCPeerConnection.prototype.getStats;
                        RTCPeerConnection.prototype.getStats = function(e, n, r) {
                            return i.apply(this, [e || null ]).then(function(e) {
                                return t(e)
                            }).then(n, r)
                        }
                    }
                },
                shimGetUserMedia: function() {
                    var e = function(e, t, r) {
                        var o = function(e) {
                            if ("object" != typeof e || e.require)
                                return e;
                            var t = [];
                            return Object.keys(e).forEach(function(i) {
                                if ("require" !== i && "advanced" !== i && "mediaSource" !== i) {
                                    var n = e[i] = "object" == typeof e[i] ? e[i] : {
                                        ideal: e[i]
                                    };
                                    if ((void 0 !== n.min || void 0 !== n.max || void 0 !== n.exact) && t.push(i),
                                    void 0 !== n.exact && ("number" == typeof n.exact ? n.min = n.max = n.exact : e[i] = n.exact,
                                    delete n.exact),
                                    void 0 !== n.ideal) {
                                        e.advanced = e.advanced || [];
                                        var r = {};
                                        r[i] = "number" == typeof n.ideal ? {
                                            min: n.ideal,
                                            max: n.ideal
                                        } : n.ideal,
                                        e.advanced.push(r),
                                        delete n.ideal,
                                        Object.keys(n).length || delete e[i]
                                    }
                                }
                            }),
                            t.length && (e.require = t),
                            e
                        }
                        ;
                        return e = JSON.parse(JSON.stringify(e)),
                        n.version < 38 && (i("spec: " + JSON.stringify(e)),
                        e.audio && (e.audio = o(e.audio)),
                        e.video && (e.video = o(e.video)),
                        i("ff37: " + JSON.stringify(e))),
                        navigator.mozGetUserMedia(e, t, r)
                    }
                    ;
                    navigator.getUserMedia = e;
                    var t = function(e) {
                        return new Promise(function(t, i) {
                            navigator.getUserMedia(e, t, i)
                        }
                        )
                    }
                    ;
                    if (navigator.mediaDevices || (navigator.mediaDevices = {
                        getUserMedia: t,
                        addEventListener: function() {},
                        removeEventListener: function() {}
                    }),
                    navigator.mediaDevices.enumerateDevices = navigator.mediaDevices.enumerateDevices || function() {
                        return new Promise(function(e) {
                            var t = [{
                                kind: "audioinput",
                                deviceId: "default",
                                label: "",
                                groupId: ""
                            }, {
                                kind: "videoinput",
                                deviceId: "default",
                                label: "",
                                groupId: ""
                            }];
                            e(t)
                        }
                        )
                    }
                    ,
                    n.version < 41) {
                        var r = navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);
                        navigator.mediaDevices.enumerateDevices = function() {
                            return r().then(void 0, function(e) {
                                if ("NotFoundError" === e.name)
                                    return [];
                                throw e
                            })
                        }
                    }
                },
                attachMediaStream: function(e, t) {
                    i("DEPRECATED, attachMediaStream will soon be removed."),
                    e.srcObject = t
                },
                reattachMediaStream: function(e, t) {
                    i("DEPRECATED, reattachMediaStream will soon be removed."),
                    e.srcObject = t.srcObject
                }
            };
            t.exports = {
                shimOnTrack: r.shimOnTrack,
                shimSourceObject: r.shimSourceObject,
                shimPeerConnection: r.shimPeerConnection,
                shimGetUserMedia: e("./getusermedia"),
                attachMediaStream: r.attachMediaStream,
                reattachMediaStream: r.reattachMediaStream
            }
        }
        , {
            "../utils": 76,
            "./getusermedia": 74
        }],
        74: [function(e, t) {
            "use strict";
            var i = e("../utils").log
              , n = e("../utils").browserDetails;
            t.exports = function() {
                var e = function(e) {
                    return {
                        name: {
                            SecurityError: "NotAllowedError",
                            PermissionDeniedError: "NotAllowedError"
                        }[e.name] || e.name,
                        message: {
                            "The operation is insecure.": "The request is not allowed by the user agent or the platform in the current context."
                        }[e.message] || e.message,
                        constraint: e.constraint,
                        toString: function() {
                            return this.name + (this.message && ": ") + this.message
                        }
                    }
                }
                  , t = function(t, r, o) {
                    var a = function(e) {
                        if ("object" != typeof e || e.require)
                            return e;
                        var t = [];
                        return Object.keys(e).forEach(function(i) {
                            if ("require" !== i && "advanced" !== i && "mediaSource" !== i) {
                                var n = e[i] = "object" == typeof e[i] ? e[i] : {
                                    ideal: e[i]
                                };
                                if ((void 0 !== n.min || void 0 !== n.max || void 0 !== n.exact) && t.push(i),
                                void 0 !== n.exact && ("number" == typeof n.exact ? n.min = n.max = n.exact : e[i] = n.exact,
                                delete n.exact),
                                void 0 !== n.ideal) {
                                    e.advanced = e.advanced || [];
                                    var r = {};
                                    r[i] = "number" == typeof n.ideal ? {
                                        min: n.ideal,
                                        max: n.ideal
                                    } : n.ideal,
                                    e.advanced.push(r),
                                    delete n.ideal,
                                    Object.keys(n).length || delete e[i]
                                }
                            }
                        }),
                        t.length && (e.require = t),
                        e
                    }
                    ;
                    return t = JSON.parse(JSON.stringify(t)),
                    n.version < 38 && (i("spec: " + JSON.stringify(t)),
                    t.audio && (t.audio = a(t.audio)),
                    t.video && (t.video = a(t.video)),
                    i("ff37: " + JSON.stringify(t))),
                    navigator.mozGetUserMedia(t, r, function(t) {
                        o(e(t))
                    })
                }
                ;
                navigator.getUserMedia = t;
                var r = function(e) {
                    return new Promise(function(t, i) {
                        navigator.getUserMedia(e, t, i)
                    }
                    )
                }
                ;
                if (navigator.mediaDevices || (navigator.mediaDevices = {
                    getUserMedia: r,
                    addEventListener: function() {},
                    removeEventListener: function() {}
                }),
                navigator.mediaDevices.enumerateDevices = navigator.mediaDevices.enumerateDevices || function() {
                    return new Promise(function(e) {
                        var t = [{
                            kind: "audioinput",
                            deviceId: "default",
                            label: "",
                            groupId: ""
                        }, {
                            kind: "videoinput",
                            deviceId: "default",
                            label: "",
                            groupId: ""
                        }];
                        e(t)
                    }
                    )
                }
                ,
                n.version < 41) {
                    var o = navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);
                    navigator.mediaDevices.enumerateDevices = function() {
                        return o().then(void 0, function(e) {
                            if ("NotFoundError" === e.name)
                                return [];
                            throw e
                        })
                    }
                }
                if (n.version < 49) {
                    var a = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);
                    navigator.mediaDevices.getUserMedia = function(t) {
                        return a(t).catch(function(t) {
                            return Promise.reject(e(t))
                        })
                    }
                }
            }
        }
        , {
            "../utils": 76
        }],
        75: [function(e, t) {
            "use strict";
            var i = {
                shimGetUserMedia: function() {
                    navigator.getUserMedia = navigator.webkitGetUserMedia
                }
            };
            t.exports = {
                shimGetUserMedia: i.shimGetUserMedia
            }
        }
        , {}],
        76: [function(e, t) {
            "use strict";
            var i = !0
              , n = {
                disableLog: function(e) {
                    return "boolean" != typeof e ? new Error("Argument type: " + typeof e + ". Please use a boolean.") : (i = e,
                    e ? "adapter.js logging disabled" : "adapter.js logging enabled")
                },
                log: function() {
                    if ("object" == typeof window) {
                        if (i)
                            return;
                        "undefined" != typeof console && "function" == typeof console.log && console.log.apply(console, arguments)
                    }
                },
                extractVersion: function(e, t, i) {
                    var n = e.match(t);
                    return n && n.length >= i && parseInt(n[i], 10)
                },
                detectBrowser: function() {
                    var e = {};
                    if (e.browser = null ,
                    e.version = null ,
                    e.minVersion = null ,
                    "undefined" == typeof window || !window.navigator)
                        return e.browser = "Not a browser.",
                        e;
                    if (navigator.mozGetUserMedia)
                        e.browser = "firefox",
                        e.version = this.extractVersion(navigator.userAgent, /Firefox\/([0-9]+)\./, 1),
                        e.minVersion = 31;
                    else if (navigator.webkitGetUserMedia)
                        if (window.webkitRTCPeerConnection)
                            e.browser = "chrome",
                            e.version = this.extractVersion(navigator.userAgent, /Chrom(e|ium)\/([0-9]+)\./, 2),
                            e.minVersion = 38;
                        else {
                            if (!navigator.userAgent.match(/Version\/(\d+).(\d+)/))
                                return e.browser = "Unsupported webkit-based browser with GUM support but no WebRTC support.",
                                e;
                            e.browser = "safari",
                            e.version = this.extractVersion(navigator.userAgent, /AppleWebKit\/([0-9]+)\./, 1),
                            e.minVersion = 602
                        }
                    else {
                        if (!navigator.mediaDevices || !navigator.userAgent.match(/Edge\/(\d+).(\d+)$/))
                            return e.browser = "Not a supported browser.",
                            e;
                        e.browser = "edge",
                        e.version = this.extractVersion(navigator.userAgent, /Edge\/(\d+).(\d+)$/, 2),
                        e.minVersion = 10547
                    }
                    return e.version < e.minVersion && n.log("Browser: " + e.browser + " Version: " + e.version + " < minimum supported version: " + e.minVersion + "\n some things might not work!"),
                    e
                }
            };
            t.exports = {
                log: n.log,
                disableLog: n.disableLog,
                browserDetails: n.detectBrowser(),
                extractVersion: n.extractVersion
            }
        }
        , {}],
        77: [function(e, t) {
            var i, n;
            window.mozRTCPeerConnection || navigator.mozGetUserMedia ? (i = "moz",
            n = parseInt(navigator.userAgent.match(/Firefox\/([0-9]+)\./)[1], 10)) : (window.webkitRTCPeerConnection || navigator.webkitGetUserMedia) && (i = "webkit",
            n = navigator.userAgent.match(/Chrom(e|ium)/) && parseInt(navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./)[2], 10));
            var r = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection
              , o = window.mozRTCIceCandidate || window.RTCIceCandidate
              , a = window.mozRTCSessionDescription || window.RTCSessionDescription
              , s = window.webkitMediaStream || window.MediaStream
              , l = "https:" === window.location.protocol && ("webkit" === i && n >= 26 || "moz" === i && n >= 33)
              , c = window.AudioContext || window.webkitAudioContext
              , d = document.createElement("video")
              , h = d && d.canPlayType && "probably" === d.canPlayType('video/webm; codecs="vp8", vorbis')
              , u = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.msGetUserMedia || navigator.mozGetUserMedia;
            t.exports = {
                prefix: i,
                browserVersion: n,
                support: !!r && !!u,
                supportRTCPeerConnection: !!r,
                supportVp8: h,
                supportGetUserMedia: !!u,
                supportDataChannel: !!(r && r.prototype && r.prototype.createDataChannel),
                supportWebAudio: !(!c || !c.prototype.createMediaStreamSource),
                supportMediaStream: !(!s || !s.prototype.removeTrack),
                supportScreenSharing: !!l,
                AudioContext: c,
                PeerConnection: r,
                SessionDescription: a,
                IceCandidate: o,
                MediaStream: s,
                getUserMedia: u
            }
        }
        , {}],
        78: [function(e, t) {
            function i() {}
            t.exports = i,
            i.mixin = function(e) {
                var t = e.prototype || e;
                t.isWildEmitter = !0,
                t.on = function(e) {
                    this.callbacks = this.callbacks || {};
                    var t = 3 === arguments.length
                      , i = t ? arguments[1] : void 0
                      , n = t ? arguments[2] : arguments[1];
                    return n._groupName = i,
                    (this.callbacks[e] = this.callbacks[e] || []).push(n),
                    this
                }
                ,
                t.once = function(e) {
                    function t() {
                        i.off(e, t),
                        o.apply(this, arguments)
                    }
                    var i = this
                      , n = 3 === arguments.length
                      , r = n ? arguments[1] : void 0
                      , o = n ? arguments[2] : arguments[1];
                    return this.on(e, r, t),
                    this
                }
                ,
                t.releaseGroup = function(e) {
                    this.callbacks = this.callbacks || {};
                    var t, i, n, r;
                    for (t in this.callbacks)
                        for (r = this.callbacks[t],
                        i = 0,
                        n = r.length; n > i; i++)
                            r[i]._groupName === e && (r.splice(i, 1),
                            i--,
                            n--);
                    return this
                }
                ,
                t.off = function(e, t) {
                    this.callbacks = this.callbacks || {};
                    var i, n = this.callbacks[e];
                    return n ? 1 === arguments.length ? (delete this.callbacks[e],
                    this) : (i = n.indexOf(t),
                    n.splice(i, 1),
                    0 === n.length && delete this.callbacks[e],
                    this) : this
                }
                ,
                t.emit = function(e) {
                    this.callbacks = this.callbacks || {};
                    var t, i, n, r = [].slice.call(arguments, 1), o = this.callbacks[e], a = this.getWildcardCallbacks(e);
                    if (o)
                        for (n = o.slice(),
                        t = 0,
                        i = n.length; i > t && n[t]; ++t)
                            n[t].apply(this, r);
                    if (a)
                        for (i = a.length,
                        n = a.slice(),
                        t = 0,
                        i = n.length; i > t && n[t]; ++t)
                            n[t].apply(this, [e].concat(r));
                    return this
                }
                ,
                t.getWildcardCallbacks = function(e) {
                    this.callbacks = this.callbacks || {};
                    var t, i, n = [];
                    for (t in this.callbacks)
                        i = t.split("*"),
                        ("*" === t || 2 === i.length && e.slice(0, i[0].length) === i[0]) && (n = n.concat(this.callbacks[t]));
                    return n
                }
            }
            ,
            i.mixin(i)
        }
        , {}],
        79: [function(e, t) {
            function i(e, t) {
                var i;
                return i = t ? new r(e,t) : new r(e)
            }
            var n = function() {
                return this
            }()
              , r = n.WebSocket || n.MozWebSocket;
            t.exports = r ? i : null ,
            r && (i.prototype = r.prototype)
        }
        , {}],
        80: [function(e, t) {
            function i(e) {
                var t = this;
                a.call(this),
                this.id = e.id,
                this.parent = e.parent,
                this.type = e.type || "video",
                this.oneway = e.oneway || !1,
                this.sharemyscreen = e.sharemyscreen || !1,
                this.browserPrefix = e.prefix,
                this.stream = e.stream,
                this.enableDataChannels = void 0 === e.enableDataChannels ? this.parent.config.enableDataChannels : e.enableDataChannels,
                this.receiveMedia = e.receiveMedia || this.parent.config.receiveMedia,
                this.channels = {},
                this.sid = e.sid || Date.now().toString(),
                this.pc = new o(this.parent.config.peerConnectionConfig,this.parent.config.peerConnectionConstraints),
                this.pc.on("ice", this.onIceCandidate.bind(this)),
                this.pc.on("endOfCandidates", function(e) {
                    t.send("endOfCandidates", e)
                }),
                this.pc.on("offer", function(e) {
                    t.parent.config.nick && (e.nick = t.parent.config.nick),
                    t.send("offer", e)
                }),
                this.pc.on("answer", function(e) {
                    t.parent.config.nick && (e.nick = t.parent.config.nick),
                    t.send("answer", e)
                }),
                this.pc.on("addStream", this.handleRemoteStreamAdded.bind(this)),
                this.pc.on("addChannel", this.handleDataChannelAdded.bind(this)),
                this.pc.on("removeStream", this.handleStreamRemoved.bind(this)),
                this.pc.on("negotiationNeeded", this.emit.bind(this, "negotiationNeeded")),
                this.pc.on("iceConnectionStateChange", this.emit.bind(this, "iceConnectionStateChange")),
                this.pc.on("iceConnectionStateChange", function() {
                    switch (t.pc.iceConnectionState) {
                    case "failed":
                        "offer" === t.pc.pc.peerconnection.localDescription.type && (t.parent.emit("iceFailed", t),
                        t.send("connectivityError"))
                    }
                }),
                this.pc.on("signalingStateChange", this.emit.bind(this, "signalingStateChange")),
                this.logger = this.parent.logger,
                "screen" === e.type ? this.parent.localScreen && this.sharemyscreen && (this.logger.log("adding local screen stream to peer connection"),
                this.pc.addStream(this.parent.localScreen),
                this.broadcaster = e.broadcaster) : this.parent.localStreams.forEach(function(e) {
                    t.pc.addStream(e)
                }),
                this.on("channelOpen", function(e) {
                    e.protocol === l && (e.onmessage = function(i) {
                        var n = JSON.parse(i.data)
                          , r = new s.Receiver;
                        r.receive(n, e),
                        t.emit("fileTransfer", n, r),
                        r.on("receivedFile", function() {
                            r.channel.close()
                        })
                    }
                    )
                }),
                this.on("*", function() {
                    t.parent.emit.apply(t.parent, arguments)
                })
            }
            var n = e("util")
              , r = e("webrtcsupport")
              , o = e("rtcpeerconnection")
              , a = e("wildemitter")
              , s = e("filetransfer")
              , l = "https://simplewebrtc.com/protocol/filetransfer#inband-v1";
            n.inherits(i, a),
            i.prototype.handleMessage = function(e) {
                var t = this;
                if (this.logger.log("getting", e.type, e),
                e.prefix && (this.browserPrefix = e.prefix),
                "offer" === e.type)
                    this.nick || (this.nick = e.payload.nick),
                    delete e.payload.nick,
                    this.pc.handleOffer(e.payload, function(e) {
                        e || t.pc.answer(function() {})
                    });
                else if ("answer" === e.type)
                    this.nick || (this.nick = e.payload.nick),
                    delete e.payload.nick,
                    this.pc.handleAnswer(e.payload);
                else if ("candidate" === e.type)
                    this.pc.processIce(e.payload);
                else if ("connectivityError" === e.type)
                    this.parent.emit("connectivityError", t);
                else if ("mute" === e.type)
                    this.parent.emit("mute", {
                        id: e.from,
                        name: e.payload.name
                    });
                else if ("unmute" === e.type)
                    this.parent.emit("unmute", {
                        id: e.from,
                        name: e.payload.name
                    });
                else if ("endOfCandidates" === e.type) {
                    var i = this.pc.pc.peerconnection.transceivers || [];
                    i.forEach(function(e) {
                        e.iceTransport && e.iceTransport.addRemoteCandidate({})
                    })
                }
            }
            ,
            i.prototype.send = function(e, t) {
                var i = {
                    to: this.id,
                    sid: this.sid,
                    broadcaster: this.broadcaster,
                    roomType: this.type,
                    type: e,
                    payload: t,
                    prefix: r.prefix
                };
                this.logger.log("sending", e, i),
                this.parent.emit("message", i)
            }
            ,
            i.prototype.sendDirectly = function(e, t, i) {
                var n = {
                    type: t,
                    payload: i
                };
                this.logger.log("sending via datachannel", e, t, n);
                var r = this.getDataChannel(e);
                return "open" != r.readyState ? !1 : (r.send(JSON.stringify(n)),
                !0)
            }
            ,
            i.prototype._observeDataChannel = function(e) {
                var t = this;
                e.onclose = this.emit.bind(this, "channelClose", e),
                e.onerror = this.emit.bind(this, "channelError", e),
                e.onmessage = function(i) {
                    t.emit("channelMessage", t, e.label, JSON.parse(i.data), e, i)
                }
                ,
                e.onopen = this.emit.bind(this, "channelOpen", e)
            }
            ,
            i.prototype.getDataChannel = function(e, t) {
                if (!r.supportDataChannel)
                    return this.emit("error", new Error("createDataChannel not supported"));
                var i = this.channels[e];
                return t || (t = {}),
                i ? i : (i = this.channels[e] = this.pc.createDataChannel(e, t),
                this._observeDataChannel(i),
                i)
            }
            ,
            i.prototype.onIceCandidate = function(e) {
                if (!this.closed)
                    if (e) {
                        var t = this.parent.config.peerConnectionConfig;
                        "moz" === r.prefix && t && t.iceTransports && e.candidate && e.candidate.candidate && e.candidate.candidate.indexOf(t.iceTransports) < 0 ? this.logger.log("Ignoring ice candidate not matching pcConfig iceTransports type: ", t.iceTransports) : this.send("candidate", e)
                    } else
                        this.logger.log("End of candidates.")
            }
            ,
            i.prototype.start = function() {
                this.enableDataChannels && this.getDataChannel("simplewebrtc"),
                this.pc.offer(this.receiveMedia, function() {})
            }
            ,
            i.prototype.icerestart = function() {
                var e = this.receiveMedia;
                e.mandatory.IceRestart = !0,
                this.pc.offer(e, function() {})
            }
            ,
            i.prototype.end = function() {
                this.closed || (this.pc.close(),
                this.handleStreamRemoved())
            }
            ,
            i.prototype.handleRemoteStreamAdded = function(e) {
                var t = this;
                this.stream ? this.logger.warn("Already have a remote stream") : (this.stream = e.stream,
                this.stream.onended = function() {
                    t.end()
                }
                ,
                this.parent.emit("peerStreamAdded", this))
            }
            ,
            i.prototype.handleStreamRemoved = function() {
                this.parent.peers.splice(this.parent.peers.indexOf(this), 1),
                this.closed = !0,
                this.parent.emit("peerStreamRemoved", this)
            }
            ,
            i.prototype.handleDataChannelAdded = function(e) {
                this.channels[e.label] = e,
                this._observeDataChannel(e)
            }
            ,
            i.prototype.sendFile = function(e) {
                var t = new s.Sender
                  , i = this.getDataChannel("filetransfer" + (new Date).getTime(), {
                    protocol: l
                });
                return i.onopen = function() {
                    i.send(JSON.stringify({
                        size: e.size,
                        name: e.name
                    })),
                    t.send(e, i)
                }
                ,
                i.onclose = function() {
                    console.log("sender received transfer"),
                    t.emit("complete")
                }
                ,
                t
            }
            ,
            t.exports = i
        }
        , {
            filetransfer: 26,
            rtcpeerconnection: 47,
            util: 67,
            webrtcsupport: 77,
            wildemitter: 78
        }],
        81: [function(e, t) {
            function i(e) {
                var t, i, c = this, d = e || {}, h = this.config = {
                    url: "https://sandbox.simplewebrtc.com:443/",
                    socketio: {},
                    connection: null ,
                    debug: !1,
                    localVideoEl: "",
                    remoteVideosEl: "",
                    enableDataChannels: !0,
                    autoRequestMedia: !1,
                    autoRemoveVideos: !0,
                    adjustPeerVolume: !1,
                    peerVolumeWhenSpeaking: .25,
                    media: {
                        video: !0,
                        audio: !0
                    },
                    receiveMedia: {
                        offerToReceiveAudio: 1,
                        offerToReceiveVideo: 1
                    },
                    localVideo: {
                        autoplay: !0,
                        mirror: !0,
                        muted: !0
                    }
                };
                this.logger = function() {
                    return e.debug ? e.logger || console : e.logger || s
                }();
                for (t in d)
                    this.config[t] = d[t];
                this.capabilities = o,
                r.call(this),
                i = this.connection = null === this.config.connection ? new l(this.config) : this.config.connection,
                i.on("connect", function() {
                    c.emit("connectionReady", i.getSessionid()),
                    c.sessionReady = !0,
                    c.testReadiness()
                }),
                i.on("message", function(e) {
                    var t, i = c.webrtc.getPeers(e.from, e.roomType);
                    "offer" === e.type ? (i.length && i.forEach(function(i) {
                        i.sid == e.sid && (t = i)
                    }),
                    t || (t = c.webrtc.createPeer({
                        id: e.from,
                        sid: e.sid,
                        type: e.roomType,
                        enableDataChannels: c.config.enableDataChannels && "screen" !== e.roomType,
                        sharemyscreen: "screen" === e.roomType && !e.broadcaster,
                        broadcaster: "screen" !== e.roomType || e.broadcaster ? null : c.connection.getSessionid()
                    }),
                    c.emit("createdPeer", t)),
                    t.handleMessage(e)) : i.length && i.forEach(function(t) {
                        e.sid ? t.sid === e.sid && t.handleMessage(e) : t.handleMessage(e)
                    })
                }),
                i.on("remove", function(e) {
                    e.id !== c.connection.getSessionid() && c.webrtc.removePeers(e.id, e.type)
                }),
                e.logger = this.logger,
                e.debug = !1,
                this.webrtc = new n(e),
                ["mute", "unmute", "pauseVideo", "resumeVideo", "pause", "resume", "sendToAll", "sendDirectlyToAll", "getPeers"].forEach(function(e) {
                    c[e] = c.webrtc[e].bind(c.webrtc)
                }),
                this.webrtc.on("*", function() {
                    c.emit.apply(c, arguments)
                }),
                h.debug && this.on("*", this.logger.log.bind(this.logger, "SimpleWebRTC event:")),
                this.webrtc.on("localStream", function() {
                    c.testReadiness()
                }),
                this.webrtc.on("message", function(e) {
                    c.connection.emit("message", e)
                }),
                this.webrtc.on("peerStreamAdded", this.handlePeerStreamAdded.bind(this)),
                this.webrtc.on("peerStreamRemoved", this.handlePeerStreamRemoved.bind(this)),
                this.config.adjustPeerVolume && (this.webrtc.on("speaking", this.setVolumeForAll.bind(this, this.config.peerVolumeWhenSpeaking)),
                this.webrtc.on("stoppedSpeaking", this.setVolumeForAll.bind(this, 1))),
                i.on("stunservers", function(e) {
                    c.webrtc.config.peerConnectionConfig.iceServers = e,
                    c.emit("stunservers", e)
                }),
                i.on("turnservers", function(e) {
                    c.webrtc.config.peerConnectionConfig.iceServers = c.webrtc.config.peerConnectionConfig.iceServers.concat(e),
                    c.emit("turnservers", e)
                }),
                this.webrtc.on("iceFailed", function() {}),
                this.webrtc.on("connectivityError", function() {}),
                this.webrtc.on("audioOn", function() {
                    c.webrtc.sendToAll("unmute", {
                        name: "audio"
                    })
                }),
                this.webrtc.on("audioOff", function() {
                    c.webrtc.sendToAll("mute", {
                        name: "audio"
                    })
                }),
                this.webrtc.on("videoOn", function() {
                    c.webrtc.sendToAll("unmute", {
                        name: "video"
                    })
                }),
                this.webrtc.on("videoOff", function() {
                    c.webrtc.sendToAll("mute", {
                        name: "video"
                    })
                }),
                this.webrtc.on("localScreen", function(e) {
                    var t = document.createElement("video")
                      , i = c.getRemoteVideoContainer();
                    t.oncontextmenu = function() {
                        return !1
                    }
                    ,
                    t.id = "localScreen",
                    a(e, t),
                    i && i.appendChild(t),
                    c.emit("localScreenAdded", t),
                    c.connection.emit("shareScreen"),
                    c.webrtc.peers.forEach(function(e) {
                        var t;
                        "video" === e.type && (t = c.webrtc.createPeer({
                            id: e.id,
                            type: "screen",
                            sharemyscreen: !0,
                            enableDataChannels: !1,
                            receiveMedia: {
                                offerToReceiveAudio: 0,
                                offerToReceiveVideo: 0
                            },
                            broadcaster: c.connection.getSessionid()
                        }),
                        c.emit("createdPeer", t),
                        t.start())
                    })
                }),
                this.webrtc.on("localScreenStopped", function() {
                    c.stopScreenShare()
                }),
                this.webrtc.on("channelMessage", function(e, t, i) {
                    "volume" == i.type && c.emit("remoteVolumeChange", e, i.volume)
                }),
                this.config.autoRequestMedia && this.startLocalVideo()
            }
            var n = e("./webrtc")
              , r = e("wildemitter")
              , o = e("webrtcsupport")
              , a = e("attachmediastream")
              , s = e("mockconsole")
              , l = e("./socketioconnection");
            i.prototype = Object.create(r.prototype, {
                constructor: {
                    value: i
                }
            }),
            i.prototype.leaveRoom = function() {
                if (this.roomName) {
                    for (this.connection.emit("leave"); this.webrtc.peers.length; )
                        this.webrtc.peers.shift().end();
                    this.getLocalScreen() && this.stopScreenShare(),
                    this.emit("leftRoom", this.roomName),
                    this.roomName = void 0
                }
            }
            ,
            i.prototype.disconnect = function() {
                this.connection.disconnect(),
                delete this.connection
            }
            ,
            i.prototype.handlePeerStreamAdded = function(e) {
                var t = this
                  , i = this.getRemoteVideoContainer()
                  , n = a(e.stream);
                e.videoEl = n,
                n.id = this.getDomId(e),
                i && i.appendChild(n),
                this.emit("videoAdded", n, e),
                window.setTimeout(function() {
                    t.webrtc.isAudioEnabled() || e.send("mute", {
                        name: "audio"
                    }),
                    t.webrtc.isVideoEnabled() || e.send("mute", {
                        name: "video"
                    })
                }, 250)
            }
            ,
            i.prototype.handlePeerStreamRemoved = function(e) {
                var t = this.getRemoteVideoContainer()
                  , i = e.videoEl;
                this.config.autoRemoveVideos && t && i && t.removeChild(i),
                i && this.emit("videoRemoved", i, e)
            }
            ,
            i.prototype.getDomId = function(e) {
                return [e.id, e.type, e.broadcaster ? "broadcasting" : "incoming"].join("_")
            }
            ,
            i.prototype.setVolumeForAll = function(e) {
                this.webrtc.peers.forEach(function(t) {
                    t.videoEl && (t.videoEl.volume = e)
                })
            }
            ,
            i.prototype.joinRoom = function(e, t) {
                var i = this;
                this.roomName = e,
                this.connection.emit("join", e, function(n, r) {
                    if (console.log("join CB", n, r),
                    n)
                        i.emit("error", n);
                    else {
                        var o, a, s, l;
                        for (o in r.clients) {
                            a = r.clients[o];
                            for (s in a)
                                a[s] && (l = i.webrtc.createPeer({
                                    id: o,
                                    type: s,
                                    enableDataChannels: i.config.enableDataChannels && "screen" !== s,
                                    receiveMedia: {
                                        offerToReceiveAudio: "screen" !== s && i.config.receiveMedia.offerToReceiveAudio ? 1 : 0,
                                        offerToReceiveVideo: i.config.receiveMedia.offerToReceiveVideo
                                    }
                                }),
                                i.emit("createdPeer", l),
                                l.start())
                        }
                    }
                    t && t(n, r),
                    i.emit("joinedRoom", e)
                })
            }
            ,
            i.prototype.getEl = function(e) {
                return "string" == typeof e ? document.getElementById(e) : e
            }
            ,
            i.prototype.startLocalVideo = function() {
                var e = this;
                this.webrtc.startLocalMedia(this.config.media, function(t, i) {
                    t ? e.emit("localMediaError", t) : a(i, e.getLocalVideoContainer(), e.config.localVideo)
                })
            }
            ,
            i.prototype.stopLocalVideo = function() {
                this.webrtc.stopLocalMedia()
            }
            ,
            i.prototype.getLocalVideoContainer = function() {
                var e = this.getEl(this.config.localVideoEl);
                if (e && "VIDEO" === e.tagName)
                    return e.oncontextmenu = function() {
                        return !1
                    }
                    ,
                    e;
                if (e) {
                    var t = document.createElement("video");
                    return t.oncontextmenu = function() {
                        return !1
                    }
                    ,
                    e.appendChild(t),
                    t
                }
            }
            ,
            i.prototype.getRemoteVideoContainer = function() {
                return this.getEl(this.config.remoteVideosEl)
            }
            ,
            i.prototype.shareScreen = function(e) {
                this.webrtc.startScreenShare(e)
            }
            ,
            i.prototype.getLocalScreen = function() {
                return this.webrtc.localScreen
            }
            ,
            i.prototype.stopScreenShare = function() {
                this.connection.emit("unshareScreen");
                var e = document.getElementById("localScreen")
                  , t = this.getRemoteVideoContainer()
                  , i = this.getLocalScreen();
                this.config.autoRemoveVideos && t && e && t.removeChild(e),
                e && this.emit("videoRemoved", e),
                i && i.getTracks().forEach(function(e) {
                    e.stop()
                }),
                this.webrtc.peers.forEach(function(e) {
                    e.broadcaster && e.end()
                })
            }
            ,
            i.prototype.testReadiness = function() {
                var e = this;
                this.sessionReady && (this.config.media.video || this.config.media.audio ? this.webrtc.localStreams.length > 0 && e.emit("readyToCall", e.connection.getSessionid()) : e.emit("readyToCall", e.connection.getSessionid()))
            }
            ,
            i.prototype.createRoom = function(e, t) {
                this.roomName = e,
                2 === arguments.length ? this.connection.emit("create", e, t) : this.connection.emit("create", e)
            }
            ,
            i.prototype.sendFile = function() {
                return o.dataChannel ? void 0 : this.emit("error", new Error("DataChannelNotSupported"))
            }
            ,
            t.exports = i
        }
        , {
            "./socketioconnection": 82,
            "./webrtc": 83,
            attachmediastream: 3,
            mockconsole: 40,
            webrtcsupport: 77,
            wildemitter: 78
        }],
        82: [function(e, t) {
            function i(e) {
                this.connection = n.connect(e.url, e.socketio)
            }
            var n = e("socket.io-client");
            i.prototype.on = function(e, t) {
                this.connection.on(e, t)
            }
            ,
            i.prototype.emit = function() {
                this.connection.emit.apply(this.connection, arguments)
            }
            ,
            i.prototype.getSessionid = function() {
                return this.connection.id
            }
            ,
            i.prototype.disconnect = function() {
                return this.connection.disconnect()
            }
            ,
            t.exports = i
        }
        , {
            "socket.io-client": 54
        }],
        83: [function(e, t) {
            function i(e) {
                {
                    var t, i = this, n = e || {};
                    this.config = {
                        debug: !1,
                        peerConnectionConfig: {
                            iceServers: [{
                                urls: "stun:stun.l.google.com:19302"
                            }]
                        },
                        peerConnectionConstraints: {
                            optional: []
                        },
                        receiveMedia: {
                            offerToReceiveAudio: 1,
                            offerToReceiveVideo: 1
                        },
                        enableDataChannels: !0
                    }
                }
                this.screenSharingSupport = r.screenSharing,
                this.logger = function() {
                    return e.debug ? e.logger || console : e.logger || o
                }();
                for (t in n)
                    this.config[t] = n[t];
                r.support || this.logger.error("Your browser doesn't seem to support WebRTC"),
                this.peers = [],
                a.call(this, this.config),
                this.on("speaking", function() {
                    i.hardMuted || i.peers.forEach(function(e) {
                        if (e.enableDataChannels) {
                            var t = e.getDataChannel("hark");
                            if ("open" != t.readyState)
                                return;
                            t.send(JSON.stringify({
                                type: "speaking"
                            }))
                        }
                    })
                }),
                this.on("stoppedSpeaking", function() {
                    i.hardMuted || i.peers.forEach(function(e) {
                        if (e.enableDataChannels) {
                            var t = e.getDataChannel("hark");
                            if ("open" != t.readyState)
                                return;
                            t.send(JSON.stringify({
                                type: "stoppedSpeaking"
                            }))
                        }
                    })
                }),
                this.on("volumeChange", function(e) {
                    i.hardMuted || i.peers.forEach(function(t) {
                        if (t.enableDataChannels) {
                            var i = t.getDataChannel("hark");
                            if ("open" != i.readyState)
                                return;
                            i.send(JSON.stringify({
                                type: "volume",
                                volume: e
                            }))
                        }
                    })
                }),
                this.config.debug && this.on("*", function(e, t, n) {
                    var r;
                    r = i.config.logger === o ? console : i.logger,
                    r.log("event:", e, t, n)
                })
            }
            var n = e("util")
              , r = e("webrtcsupport")
              , o = (e("wildemitter"),
            e("mockconsole"))
              , a = e("localmedia")
              , s = e("./peer");
            n.inherits(i, a),
            i.prototype.createPeer = function(e) {
                var t;
                return e.parent = this,
                t = new s(e),
                this.peers.push(t),
                t
            }
            ,
            i.prototype.removePeers = function(e, t) {
                this.getPeers(e, t).forEach(function(e) {
                    e.end()
                })
            }
            ,
            i.prototype.getPeers = function(e, t) {
                return this.peers.filter(function(i) {
                    return !(e && i.id !== e || t && i.type !== t)
                })
            }
            ,
            i.prototype.sendToAll = function(e, t) {
                this.peers.forEach(function(i) {
                    i.send(e, t)
                })
            }
            ,
            i.prototype.sendDirectlyToAll = function(e, t, i) {
                this.peers.forEach(function(n) {
                    n.enableDataChannels && n.sendDirectly(e, t, i)
                })
            }
            ,
            t.exports = i
        }
        , {
            "./peer": 80,
            localmedia: 37,
            mockconsole: 40,
            util: 67,
            webrtcsupport: 77,
            wildemitter: 78
        }]
    }, {}, [81])(81)
}),
function(e) {
    "use strict";
    "function" == typeof define && define.amd ? define(["jquery"], e) : "undefined" != typeof module && module.exports ? module.exports = e(require("jquery")) : e(jQuery)
}(function(e) {
    "use strict";
    function t(t) {
        return !t.nodeName || -1 !== e.inArray(t.nodeName.toLowerCase(), ["iframe", "#document", "html", "body"])
    }
    function i(t) {
        return e.isFunction(t) || e.isPlainObject(t) ? t : {
            top: t,
            left: t
        }
    }
    var n = e.scrollTo = function(t, i, n) {
        return e(window).scrollTo(t, i, n)
    }
    ;
    return n.defaults = {
        axis: "xy",
        duration: 0,
        limit: !0
    },
    e.fn.scrollTo = function(r, o, a) {
        "object" == typeof o && (a = o,
        o = 0),
        "function" == typeof a && (a = {
            onAfter: a
        }),
        "max" === r && (r = 9e9),
        a = e.extend({}, n.defaults, a),
        o = o || a.duration;
        var s = a.queue && a.axis.length > 1;
        return s && (o /= 2),
        a.offset = i(a.offset),
        a.over = i(a.over),
        this.each(function() {
            function l(t) {
                var i = e.extend({}, a, {
                    queue: !0,
                    duration: o,
                    complete: t && function() {
                        t.call(h, p, a)
                    }
                });
                u.animate(f, i)
            }
            if (null !== r) {
                var c, d = t(this), h = d ? this.contentWindow || window : this, u = e(h), p = r, f = {};
                switch (typeof p) {
                case "number":
                case "string":
                    if (/^([+-]=?)?\d+(\.\d+)?(px|%)?$/.test(p)) {
                        p = i(p);
                        break
                    }
                    p = d ? e(p) : e(p, h);
                case "object":
                    if (0 === p.length)
                        return;
                    (p.is || p.style) && (c = (p = e(p)).offset())
                }
                var g = e.isFunction(a.offset) && a.offset(h, p) || a.offset;
                e.each(a.axis.split(""), function(e, t) {
                    var i = "x" === t ? "Left" : "Top"
                      , r = i.toLowerCase()
                      , o = "scroll" + i
                      , m = u[o]()
                      , v = n.max(h, t);
                    if (c)
                        f[o] = c[r] + (d ? 0 : m - u.offset()[r]),
                        a.margin && (f[o] -= parseInt(p.css("margin" + i), 10) || 0,
                        f[o] -= parseInt(p.css("border" + i + "Width"), 10) || 0),
                        f[o] += g[r] || 0,
                        a.over[r] && (f[o] += p["x" === t ? "width" : "height"]() * a.over[r]);
                    else {
                        var y = p[r];
                        f[o] = y.slice && "%" === y.slice(-1) ? parseFloat(y) / 100 * v : y
                    }
                    a.limit && /^\d+$/.test(f[o]) && (f[o] = f[o] <= 0 ? 0 : Math.min(f[o], v)),
                    !e && a.axis.length > 1 && (m === f[o] ? f = {} : s && (l(a.onAfterFirst),
                    f = {}))
                }),
                l(a.onAfter)
            }
        })
    }
    ,
    n.max = function(i, n) {
        var r = "x" === n ? "Width" : "Height"
          , o = "scroll" + r;
        if (!t(i))
            return i[o] - e(i)[r.toLowerCase()]();
        var a = "client" + r
          , s = i.ownerDocument || i.document
          , l = s.documentElement
          , c = s.body;
        return Math.max(l[o], c[o]) - Math.min(l[a], c[a])
    }
    ,
    e.Tween.propHooks.scrollLeft = e.Tween.propHooks.scrollTop = {
        get: function(t) {
            return e(t.elem)[t.prop]()
        },
        set: function(t) {
            var i = this.get(t);
            if (t.options.interrupt && t._last && t._last !== i)
                return e(t.elem).stop();
            var n = Math.round(t.now);
            i !== n && (e(t.elem)[t.prop](n),
            t._last = this.get(t))
        }
    },
    n
}),
function() {
    function cParticle() {
        this.position = Vector.create(),
        this.direction = Vector.create(),
        this.size = 0,
        this.sizeSmall = 0,
        this.timeToLive = 0,
        this.colour = [],
        this.drawColour = "",
        this.deltaColour = [],
        this.sharpness = 0
    }
    function cParticleSystem() {
        this.maxParticles = 150,
        this.particles = [],
        this.active = !0,
        this.position = Vector.create(100, 100),
        this.positionRandom = Vector.create(10, 10),
        this.size = 45,
        this.sizeRandom = 15,
        this.speed = 5,
        this.speedRandom = 1.5,
        this.lifeSpan = 9,
        this.lifeSpanRandom = 7,
        this.angle = 0,
        this.angleRandom = 360,
        this.gravity = Vector.create(.01, .01),
        this.startColour = [250, 218, 68, 1],
        this.startColourRandom = [62, 60, 60, 0],
        this.endColour = [245, 35, 0, 0],
        this.endColourRandom = [60, 60, 60, 0],
        this.sharpness = 40,
        this.sharpnessRandom = 10,
        this.particleCount = 0,
        this.elapsedTime = 0,
        this.duration = -1,
        this.emissionRate = 0,
        this.emitCounter = 0,
        this.particleIndex = 0,
        this.init = function() {
            this.emissionRate = this.emissionRate || this.maxParticles / this.lifeSpan,
            this.emitCounter = 0
        }
        ,
        this.addParticle = function() {
            if (this.particleCount == this.maxParticles)
                return !1;
            var e = new cParticle;
            return this.initParticle(e),
            this.particles[this.particleCount] = e,
            this.particleCount++,
            !0
        }
        ,
        this.initParticle = function(e) {
            var t = function() {
                return 2 * Math.random() - 1
            }
            ;
            e.position.x = this.position.x + this.positionRandom.x * t(),
            e.position.y = this.position.y + this.positionRandom.y * t();
            var i = (this.angle + this.angleRandom * t()) * (Math.PI / 180)
              , n = Vector.create(Math.cos(i), Math.sin(i))
              , r = this.speed + this.speedRandom * t();
            e.direction = Vector.multiply(n, r),
            e.size = this.size + this.sizeRandom * t(),
            e.size = e.size < 0 ? 0 : ~~e.size,
            e.timeToLive = this.lifeSpan + this.lifeSpanRandom * t(),
            e.sharpness = this.sharpness + this.sharpnessRandom * t(),
            e.sharpness = e.sharpness > 100 ? 100 : e.sharpness < 0 ? 0 : e.sharpness,
            e.sizeSmall = ~~(e.size / 200 * e.sharpness);
            var o = [this.startColour[0] + this.startColourRandom[0] * t(), this.startColour[1] + this.startColourRandom[1] * t(), this.startColour[2] + this.startColourRandom[2] * t(), this.startColour[3] + this.startColourRandom[3] * t()]
              , a = [this.endColour[0] + this.endColourRandom[0] * t(), this.endColour[1] + this.endColourRandom[1] * t(), this.endColour[2] + this.endColourRandom[2] * t(), this.endColour[3] + this.endColourRandom[3] * t()];
            e.colour = o,
            e.deltaColour[0] = (a[0] - o[0]) / e.timeToLive,
            e.deltaColour[1] = (a[1] - o[1]) / e.timeToLive,
            e.deltaColour[2] = (a[2] - o[2]) / e.timeToLive,
            e.deltaColour[3] = (a[3] - o[3]) / e.timeToLive
        }
        ,
        this.update = function(e) {
            if (this.active && this.emissionRate > 0) {
                this.animatePosition && (this.animatePosition.x === this.position.x && this.animatePosition.y === this.position.y ? delete this.animatePosition : (this.position.x < this.animatePosition.x ? this.position.x += this.animatePosition.rateX : this.position.x > this.animatePosition.x && (this.position.x -= this.animatePosition.rateX),
                this.position.y < this.animatePosition.y ? this.position.y += this.animatePosition.rateY : this.position.y > this.animatePosition.y && (this.position.y -= this.animatePosition.rateY)));
                var t = 1 / this.emissionRate;
                for (this.emitCounter += e; this.particleCount < this.maxParticles && this.emitCounter > t; )
                    this.addParticle(),
                    this.emitCounter -= t;
                this.elapsedTime += e,
                -1 !== this.duration && this.duration < this.elapsedTime && this.stop()
            }
            for (this.particleIndex = 0; this.particleIndex < this.particleCount; ) {
                var i = this.particles[this.particleIndex];
                if (i.timeToLive > 0) {
                    i.direction = Vector.add(i.direction, this.gravity),
                    i.position = Vector.add(i.position, i.direction),
                    i.timeToLive -= e;
                    var n = i.colour[0] += i.deltaColour[0] * e
                      , r = i.colour[1] += i.deltaColour[1] * e
                      , o = i.colour[2] += i.deltaColour[2] * e
                      , a = i.colour[3] += i.deltaColour[3] * e
                      , n = n > 255 ? 255 : 0 > n ? 0 : ~~n
                      , r = r > 255 ? 255 : 0 > r ? 0 : ~~r
                      , o = o > 255 ? 255 : 0 > o ? 0 : ~~o
                      , a = a > 1 ? 1 : 0 > a ? 0 : a.toFixed(2);
                    i.drawColour = [n / 255, r / 255, o / 255, a],
                    this.particleIndex++
                } else
                    this.particleIndex != this.particleCount - 1 && (this.particles[this.particleIndex] = this.particles[this.particleCount - 1]),
                    this.particleCount--
            }
        }
        ,
        this.stop = function() {
            this.onDeath && (d20.fx.spawnFx(this.position.x + this.size / 2, this.position.y + this.size / 2, this.onDeath, "", null , !0),
            delete this.onDeath),
            this.active = !1,
            this.elapsedTime = 0,
            this.emitCounter = 0
        }
        ,
        this.render = function(e, t, i, n, r) {
            for (var o = 0, a = this.particleCount; a > o; o++) {
                var s = this.particles[o]
                  , l = s.size
                  , c = l >> 1
                  , d = ~~s.position.x - t
                  , h = ~~s.position.y - i;
                if (!(0 > d + c || 0 > h + c || d - c > n || h - c > r)) {
                    var u = e.createRadialGradient(d + c, h + c, s.sizeSmall, d + c, h + c, c);
                    u.addColorStop(0, s.drawColour),
                    u.addColorStop(1, s.drawColourTransparent),
                    e.fillStyle = u,
                    e.fillRect(d, h, l, l)
                }
            }
        }
        ,
        this.renderGl = function() {
            for (var e = 0, t = this.particleCount; t > e; e++) {
                var i = this.particles[e]
                  , n = i.size
                  , r = n >> 1
                  , o = ~~i.position.x
                  , a = ~~i.position.y;
                d20.canvas_overlay.gl.renderParticle([{
                    x: o,
                    y: a
                }, {
                    x: o + n,
                    y: a
                }, {
                    x: o + n,
                    y: a + n
                }, {
                    x: o,
                    y: a + n
                }], o + r, a + r, r, i.drawColour, i.sizeSmall)
            }
        }
    }
    function currentTime() {
        var e = ""
          , t = new Date
          , i = t.getHours();
        e = 12 > i ? "AM" : "PM",
        0 == i && (i = 12),
        i > 12 && (i -= 12);
        var n = t.getMinutes();
        if (10 > n)
            var r = "0" + n;
        else
            var r = n;
        return i + ":" + r + " " + e
    }
    function boundingBoxCollision(e, t) {
        return e.left = e.x,
        e.top = e.y,
        e.right = e.x + e.width,
        e.bottom = e.y + e.height,
        t.left = t.x,
        t.top = t.y,
        t.right = t.x + t.width,
        t.bottom = t.y + t.height,
        !(t.left > e.right || t.right < e.left || t.top > e.bottom || t.bottom < e.top)
    }
    function setMode(e) {
        console.log(e),
        "text" === e || "rect" === e || "polygon" === e || "path" === e || "pan" === e || "select" === e || "targeting" === e || "measure" === e || window.is_gm || (e = "select"),
        "text" == e ? $("#editor").addClass("texteditmode") : $("#editor").removeClass("texteditmode"),
        $("#floatingtoolbar li").removeClass("activebutton"),
        $("#" + e).addClass("activebutton"),
        "fog" == e.substring(0, 3) && $("#fogcontrols").addClass("activebutton"),
        "rect" == e && ($("#drawingtools").addClass("activebutton"),
        $("#drawingtools").removeClass("text path polygon").addClass("rect")),
        "text" == e && ($("#drawingtools").addClass("activebutton"),
        $("#drawingtools").removeClass("rect path polygon").addClass("text")),
        "path" == e && $("#drawingtools").addClass("activebutton").removeClass("text rect polygon").addClass("path"),
        "polygon" == e ? $("#drawingtools").addClass("activebutton").removeClass("text rect path").addClass("polygon") : d20.engine.finishCurrentPolygon(),
        "pan" !== e && "select" !== e && d20.engine.unselect(),
        "pan" == e ? ($("#select").addClass("pan").removeClass("select").addClass("activebutton"),
        d20.token_editor.removeRadialMenu(),
        $("#editor-wrapper").addClass("panning")) : $("#editor-wrapper").removeClass("panning"),
        "select" == e && $("#select").addClass("select").removeClass("pan").addClass("activebutton"),
        $("#floatingtoolbar .mode").hide(),
        ("text" == e || "select" == e) && $("#floatingtoolbar ." + e).show(),
        "gridalign" == e ? $("#gridaligninstructions").show() : "gridalign" === d20.engine.mode && $("#gridaligninstructions").hide(),
        "targeting" === e ? ($("#targetinginstructions").show(),
        $("#upperCanvas").addClass("targeting"),
        d20.engine.canvas.hoverCursor = "crosshair") : "targeting" === d20.engine.mode && ($("#targetinginstructions").hide(),
        $("#upperCanvas").removeClass("targeting"),
        d20.engine.nextTargetCallback && _.defer(function() {
            d20.engine.nextTargetCallback && d20.engine.nextTargetCallback(!1)
        }),
        d20.engine.canvas.hoverCursor = "move"),
        console.log("Switch mode to " + e),
        d20.engine.mode = e,
        d20.engine.canvas.isDrawingMode = "path" == e ? !0 : !1,
        "text" == e || "path" == e || "rect" == e || "polygon" == e || "fxtools" == e ? ($("#secondary-toolbar").show(),
        $("#secondary-toolbar .mode").hide(),
        $("#secondary-toolbar ." + e).show(),
        ("path" == e || "rect" == e || "polygon" == e) && ("objects" == window.currentEditingLayer ? ($("#path_strokecolor").val(window.currentPlayer.get("color")).trigger("change-silent"),
        $("#path_fillcolor").val("transparent").trigger("change-silent")) : "" === $("#path_strokecolor").val() && ($("#path_strokecolor").val("#000000").trigger("change-silent"),
        $("#path_fillcolor").val("transparent").trigger("change-silent")),
        d20.engine.canvas.freeDrawingBrush.color = $("#path_strokecolor").val(),
        d20.engine.canvas.freeDrawingBrush.fill = $("#path_fillcolor").val() || "transparent",
        $("#path_width").trigger("change")),
        "fxtools" == e && "" === $("#fxtools_color").val() && $("#fxtools_color").val("#a61c00").trigger("change-silent")) : $("#secondary-toolbar").hide(),
        $("#floatingtoolbar").trigger("blur")
    }
    function setFillColor(e) {
        var t = e.options[e.selectedIndex];
        svgeditor.set("fill", t.value),
        $("#fillcolor").removeClass().addClass(t.value + "Thing")
    }
    function setStrokeColor(e) {
        var t = e.options[e.selectedIndex];
        svgeditor.set("stroke", t.value),
        $("#strokecolor").removeClass().addClass(t.value + "Thing")
    }
    function setStrokeWidth(e) {
        var t = e.options[e.selectedIndex].value;
        svgeditor.set("stroke-width", parseInt(t))
    }
    function setStrokeOpacity(e) {
        var t = e.options[e.selectedIndex].value;
        svgeditor.set("stroke-opacity", parseFloat(t))
    }
    function setFillOpacity(e) {
        var t = e.options[e.selectedIndex].value;
        svgeditor.set("fill-opacity", parseFloat(t))
    }
    function getOptionByValue(e, t) {
        for (var i = 0; i < e.length; i++)
            if (e.options[i].value == t)
                return i;
        return -1
    }
    function save() {
        Backbone.execute_notify()
    }
    function onFillColorChange(e) {
        var t = e.srcElement || e.originalTarget;
        setFillColor(t)
    }
    function onFillOpacityChange(e) {
        var t = e.srcElement || e.originalTarget;
        setFillOpacity(t)
    }
    function onStrokeColorChange(e) {
        var t = e.srcElement || e.originalTarget;
        setStrokeColor(t)
    }
    function onStrokeOpacityChange(e) {
        var t = e.srcElement || e.originalTarget;
        setStrokeOpacity(t)
    }
    function onStrokeWidthChange(e) {
        var t = e.srcElement || e.originalTarget;
        setStrokeWidth(t)
    }
    function onSelect() {
        setMode("select")
    }
    function onSelectp() {
        setMode("selectp")
    }
    function onRect() {
        setMode("rect")
    }
    function onLine() {
        setMode("line")
    }
    function onEllipse() {
        setMode("ellipse")
    }
    function onPath() {
        setMode("path")
    }
    function onPolygon() {
        setMode("polygon")
    }
    function onImage() {
        setMode("image")
    }
    function onText() {
        setMode("text")
    }
    function onDelete() {
        setMode("delete")
    }
    function onPrint() {
        window.open("/print/" + campaign.id)
    }
    function onClearCanvas() {
        confirm("Are you sure you want to clear the canvas?") && svgeditor.deleteAll()
    }
    var d20 = {
        siteURL: window.d20ext.siteURL,
        environment: window.d20ext.environment
    };
    "development" === d20.environment && (window.d20 = d20);
    var exports = exports || {}
      , fabric = fabric || {
        version: "1.2.14"
    };
    exports.fabric = fabric,
    "undefined" != typeof document && "undefined" != typeof window ? (fabric.document = document,
    fabric.window = window) : (fabric.document = require("jsdom").jsdom("<!DOCTYPE html><html><head></head><body></body></html>"),
    fabric.window = fabric.document.createWindow()),
    fabric.isTouchSupported = "ontouchstart"in fabric.document.documentElement,
    fabric.isLikelyNode = "undefined" != typeof Buffer && "undefined" == typeof window,
    fabric.log = function() {}
    ,
    fabric.warn = function() {}
    ,
    "undefined" != typeof console && ("undefined" != typeof console.log && console.log.apply && (fabric.log = function() {
        return console.log.apply(console, arguments)
    }
    ),
    "undefined" != typeof console.warn && console.warn.apply && (fabric.warn = function() {
        return console.warn.apply(console, arguments)
    }
    )),
    function() {
        function e(e, t) {
            this.__eventListeners[e] && (t ? fabric.util.removeFromArray(this.__eventListeners[e], t) : this.__eventListeners[e].length = 0)
        }
        function t(e, t) {
            if (this.__eventListeners || (this.__eventListeners = {}),
            1 === arguments.length)
                for (var i in e)
                    this.on(i, e[i]);
            else
                this.__eventListeners[e] || (this.__eventListeners[e] = []),
                this.__eventListeners[e].push(t);
            return this
        }
        function i(t, i) {
            if (this.__eventListeners) {
                if (1 === arguments.length && "object" == typeof arguments[0])
                    for (var n in t)
                        e.call(this, n, t[n]);
                else
                    e.call(this, t, i);
                return this
            }
        }
        function n(e, t) {
            if (this.__eventListeners) {
                var i = this.__eventListeners[e];
                if (i) {
                    for (var n = 0, r = i.length; r > n; n++)
                        i[n].call(this, t || {});
                    return this
                }
            }
        }
        fabric.Observable = {
            observe: t,
            stopObserving: i,
            fire: n,
            on: t,
            off: i,
            trigger: n
        }
    }(),
    fabric.Collection = {
        add: function() {
            this._objects.push.apply(this._objects, arguments);
            for (var e = arguments.length; e--; )
                this._onObjectAdded(arguments[e]);
            return this.renderOnAddRemove && this.renderAll(),
            this
        },
        insertAt: function(e, t, i) {
            var n = this.getObjects();
            return i ? n[t] = e : n.splice(t, 0, e),
            this._onObjectAdded(e),
            this.renderOnAddRemove && this.renderAll(),
            this
        },
        remove: function(e) {
            var t = this.getObjects()
              , i = t.indexOf(e);
            return -1 !== i && (t.splice(i, 1),
            this._onObjectRemoved(e)),
            this.renderOnAddRemove && this.renderAll(),
            e
        },
        forEachObject: function(e, t) {
            for (var i = this.getObjects(), n = i.length; n--; )
                e.call(t, i[n], n, i);
            return this
        },
        item: function(e) {
            return this.getObjects()[e]
        },
        isEmpty: function() {
            return 0 === this.getObjects().length
        },
        size: function() {
            return this.getObjects().length
        },
        contains: function(e) {
            return this.getObjects().indexOf(e) > -1
        },
        complexity: function() {
            return this.getObjects().reduce(function(e, t) {
                return e += t.complexity ? t.complexity() : 0
            }, 0)
        },
        toGrayscale: function() {
            return this.forEachObject(function(e) {
                e.toGrayscale()
            })
        }
    },
    function() {
        function e(e, t) {
            var i = e.indexOf(t);
            return -1 !== i && e.splice(i, 1),
            e
        }
        function t(e, t) {
            return Math.floor(Math.random() * (t - e + 1)) + e
        }
        function i(e) {
            return e * R
        }
        function n(e) {
            return e / R
        }
        function r(e, t, i) {
            var n = Math.sin(i)
              , r = Math.cos(i);
            e.subtractEquals(t);
            var o = e.x * r - e.y * n
              , a = e.x * n + e.y * r;
            return new fabric.Point(o,a).addEquals(t)
        }
        function o(e, t) {
            return parseFloat(Number(e).toFixed(t))
        }
        function a() {
            return !1
        }
        function s(e, t) {
            return l(t)[fabric.util.string.camelize(fabric.util.string.capitalize(e))]
        }
        function l(e) {
            if (!e)
                return fabric;
            for (var t = e.split("."), i = t.length, n = fabric.window, r = 0; i > r; ++r)
                n = n[t[r]];
            return n
        }
        function c(e, t, i) {
            if (e) {
                var n = fabric.util.createImage();
                n.onload = function() {
                    t && t.call(i, n),
                    n = n.onload = null
                }
                ,
                n.src = e
            } else
                t && t.call(i, e)
        }
        function d(e, t, i, n) {
            function r() {
                ++a === s && t && t(o)
            }
            var o = []
              , a = 0
              , s = e.length;
            e.forEach(function(e, t) {
                if (e.type) {
                    var a = fabric.util.getKlass(e.type, i);
                    a.async ? a.fromObject(e, function(i, a) {
                        a || (o[t] = i,
                        n && n(e, o[t])),
                        r()
                    }) : (o[t] = a.fromObject(e),
                    n && n(e, o[t]),
                    r())
                }
            })
        }
        function h(e, t, i) {
            var n;
            return n = e.length > 1 ? new fabric.PathGroup(e,t) : e[0],
            "undefined" != typeof i && n.setSourcePath(i),
            n
        }
        function u(e, t, i) {
            if (i && "[object Array]" === Object.prototype.toString.call(i))
                for (var n = 0, r = i.length; r > n; n++)
                    i[n]in e && (t[i[n]] = e[i[n]])
        }
        function p(e, t, i, n, r, o) {
            var a = n - t
              , s = r - i
              , l = _(a * a + s * s)
              , c = T(s, a)
              , d = o.length
              , h = 0
              , u = !0;
            for (e.save(),
            e.translate(t, i),
            e.moveTo(0, 0),
            e.rotate(c),
            t = 0; l > t; )
                t += o[h++ % d],
                t > l && (t = l),
                e[u ? "lineTo" : "moveTo"](t, 0),
                u = !u;
            e.restore()
        }
        function f(e) {
            return e || (e = fabric.document.createElement("canvas")),
            e.getContext || "undefined" == typeof G_vmlCanvasManager || G_vmlCanvasManager.initElement(e),
            e
        }
        function g() {
            return fabric.isLikelyNode ? new (require("canvas").Image) : fabric.document.createElement("img")
        }
        function m(e) {
            for (var t = e.prototype, i = t.stateProperties.length; i--; ) {
                var n = t.stateProperties[i]
                  , r = n.charAt(0).toUpperCase() + n.slice(1)
                  , o = "set" + r
                  , a = "get" + r;
                t[a] || (t[a] = function(e) {
                    return new Function('return this.get("' + e + '")')
                }(n)),
                t[o] || (t[o] = function(e) {
                    return new Function("value",'return this.set("' + e + '", value)')
                }(n))
            }
        }
        function v(e, t) {
            t.save(),
            t.beginPath(),
            e.clipTo(t),
            t.clip()
        }
        function y(e, t) {
            for (var i = [[e[0], e[2], e[4]], [e[1], e[3], e[5]], [0, 0, 1]], n = [[t[0], t[2], t[4]], [t[1], t[3], t[5]], [0, 0, 1]], r = [], o = 0; 3 > o; o++) {
                r[o] = [];
                for (var a = 0; 3 > a; a++) {
                    for (var s = 0, l = 0; 3 > l; l++)
                        s += i[o][l] * n[l][a];
                    r[o][a] = s
                }
            }
            return [r[0][0], r[1][0], r[0][1], r[1][1], r[0][2], r[1][2]]
        }
        function b(e) {
            return (String(e).match(/function[^{]*\{([\s\S]*)\}/) || {})[1]
        }
        function w(e, t, i, n) {
            for (var r = n[0], o = n[1], a = n[2], s = n[3], l = n[4], c = n[5], d = n[6], h = x(c, d, r, o, s, l, a, t, i), u = 0; u < h.length; u++) {
                var p = E.apply(this, h[u]);
                e.bezierCurveTo.apply(e, p)
            }
        }
        function x(e, t, i, n, r, o, a, s, l) {
            if (C = M.call(arguments),
            S[C])
                return S[C];
            var c = a * (Math.PI / 180)
              , d = Math.sin(c)
              , h = Math.cos(c);
            i = Math.abs(i),
            n = Math.abs(n);
            var u = h * (s - e) * .5 + d * (l - t) * .5
              , p = h * (l - t) * .5 - d * (s - e) * .5
              , f = u * u / (i * i) + p * p / (n * n);
            f > 1 && (f = Math.sqrt(f),
            i *= f,
            n *= f);
            var g = h / i
              , m = d / i
              , v = -d / n
              , y = h / n
              , b = g * s + m * l
              , w = v * s + y * l
              , x = g * e + m * t
              , E = v * e + y * t
              , _ = (x - b) * (x - b) + (E - w) * (E - w)
              , T = 1 / _ - .25;
            0 > T && (T = 0);
            var R = Math.sqrt(T);
            o === r && (R = -R);
            var k = .5 * (b + x) - R * (E - w)
              , A = .5 * (w + E) + R * (x - b)
              , H = Math.atan2(w - A, b - k)
              , P = Math.atan2(E - A, x - k)
              , O = P - H;
            0 > O && 1 === o ? O += 2 * Math.PI : O > 0 && 0 === o && (O -= 2 * Math.PI);
            for (var D = Math.ceil(Math.abs(O / (.5 * Math.PI + .001))), $ = [], L = 0; D > L; L++) {
                var I = H + L * O / D
                  , F = H + (L + 1) * O / D;
                $[L] = [k, A, I, F, i, n, d, h]
            }
            return S[C] = $,
            $
        }
        function E(e, t, i, n, r, o, a, s) {
            if (C = M.call(arguments),
            k[C])
                return k[C];
            var l = s * r
              , c = -a * o
              , d = a * r
              , h = s * o
              , u = .5 * (n - i)
              , p = 8 / 3 * Math.sin(.5 * u) * Math.sin(.5 * u) / Math.sin(u)
              , f = e + Math.cos(i) - p * Math.sin(i)
              , g = t + Math.sin(i) + p * Math.cos(i)
              , m = e + Math.cos(n)
              , v = t + Math.sin(n)
              , y = m + p * Math.sin(n)
              , b = v - p * Math.cos(n);
            return k[C] = [l * f + c * g, d * f + h * g, l * y + c * b, d * y + h * b, l * m + c * v, d * m + h * v],
            k[C]
        }
        var _ = Math.sqrt
          , T = Math.atan2;
        fabric.util = {};
        var C, R = Math.PI / 180, S = {}, k = {}, M = Array.prototype.join;
        fabric.util.removeFromArray = e,
        fabric.util.degreesToRadians = i,
        fabric.util.radiansToDegrees = n,
        fabric.util.rotatePoint = r,
        fabric.util.toFixed = o,
        fabric.util.getRandomInt = t,
        fabric.util.falseFunction = a,
        fabric.util.getKlass = s,
        fabric.util.resolveNamespace = l,
        fabric.util.loadImage = c,
        fabric.util.enlivenObjects = d,
        fabric.util.groupSVGElements = h,
        fabric.util.populateWithProperties = u,
        fabric.util.drawDashedLine = p,
        fabric.util.createCanvasElement = f,
        fabric.util.createImage = g,
        fabric.util.createAccessors = m,
        fabric.util.clipContext = v,
        fabric.util.multiplyTransformMatrices = y,
        fabric.util.getFunctionBody = b,
        fabric.util.drawArc = w
    }(),
    function() {
        function e(e, t) {
            for (var i = n.call(arguments, 2), r = [], o = 0, a = e.length; a > o; o++)
                r[o] = i.length ? e[o][t].apply(e[o], i) : e[o][t].call(e[o]);
            return r
        }
        function t(e, t) {
            if (!e || 0 === e.length)
                return void 0;
            var i = e.length - 1
              , n = t ? e[i][t] : e[i];
            if (t)
                for (; i--; )
                    e[i][t] >= n && (n = e[i][t]);
            else
                for (; i--; )
                    e[i] >= n && (n = e[i]);
            return n
        }
        function i(e, t) {
            if (!e || 0 === e.length)
                return void 0;
            var i = e.length - 1
              , n = t ? e[i][t] : e[i];
            if (t)
                for (; i--; )
                    e[i][t] < n && (n = e[i][t]);
            else
                for (; i--; )
                    e[i] < n && (n = e[i]);
            return n
        }
        var n = Array.prototype.slice;
        Array.prototype.indexOf || (Array.prototype.indexOf = function(e) {
            if (void 0 === this || null === this)
                throw new TypeError;
            var t = Object(this)
              , i = t.length >>> 0;
            if (0 === i)
                return -1;
            var n = 0;
            if (arguments.length > 0 && (n = Number(arguments[1]),
            n !== n ? n = 0 : 0 !== n && n !== Number.POSITIVE_INFINITY && n !== Number.NEGATIVE_INFINITY && (n = (n > 0 || -1) * Math.floor(Math.abs(n)))),
            n >= i)
                return -1;
            for (var r = n >= 0 ? n : Math.max(i - Math.abs(n), 0); i > r; r++)
                if (r in t && t[r] === e)
                    return r;
            return -1
        }
        ),
        Array.prototype.forEach || (Array.prototype.forEach = function(e, t) {
            for (var i = 0, n = this.length >>> 0; n > i; i++)
                i in this && e.call(t, this[i], i, this)
        }
        ),
        Array.prototype.map || (Array.prototype.map = function(e, t) {
            for (var i = [], n = 0, r = this.length >>> 0; r > n; n++)
                n in this && (i[n] = e.call(t, this[n], n, this));
            return i
        }
        ),
        Array.prototype.every || (Array.prototype.every = function(e, t) {
            for (var i = 0, n = this.length >>> 0; n > i; i++)
                if (i in this && !e.call(t, this[i], i, this))
                    return !1;
            return !0
        }
        ),
        Array.prototype.some || (Array.prototype.some = function(e, t) {
            for (var i = 0, n = this.length >>> 0; n > i; i++)
                if (i in this && e.call(t, this[i], i, this))
                    return !0;
            return !1
        }
        ),
        Array.prototype.filter || (Array.prototype.filter = function(e, t) {
            for (var i, n = [], r = 0, o = this.length >>> 0; o > r; r++)
                r in this && (i = this[r],
                e.call(t, i, r, this) && n.push(i));
            return n
        }
        ),
        Array.prototype.reduce || (Array.prototype.reduce = function(e) {
            var t, i = this.length >>> 0, n = 0;
            if (arguments.length > 1)
                t = arguments[1];
            else
                for (; ; ) {
                    if (n in this) {
                        t = this[n++];
                        break
                    }
                    if (++n >= i)
                        throw new TypeError
                }
            for (; i > n; n++)
                n in this && (t = e.call(null , t, this[n], n, this));
            return t
        }
        ),
        fabric.util.array = {
            invoke: e,
            min: i,
            max: t
        }
    }(),
    function() {
        function e(e, t) {
            for (var i in t)
                e[i] = t[i];
            return e
        }
        function t(t) {
            return e({}, t)
        }
        fabric.util.object = {
            extend: e,
            clone: t
        }
    }(),
    function() {
        function e(e) {
            return e.replace(/-+(.)?/g, function(e, t) {
                return t ? t.toUpperCase() : ""
            })
        }
        function t(e) {
            return e.charAt(0).toUpperCase() + e.slice(1).toLowerCase()
        }
        function i(e) {
            return e.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&apos;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
        }
        String.prototype.trim || (String.prototype.trim = function() {
            return this.replace(/^[\s\xA0]+/, "").replace(/[\s\xA0]+$/, "")
        }
        ),
        fabric.util.string = {
            camelize: e,
            capitalize: t,
            escapeXml: i
        }
    }(),
    function() {
        var e = Array.prototype.slice
          , t = Function.prototype.apply
          , i = function() {}
        ;
        Function.prototype.bind || (Function.prototype.bind = function(n) {
            var r, o = this, a = e.call(arguments, 1);
            return r = a.length ? function() {
                return t.call(o, this instanceof i ? this : n, a.concat(e.call(arguments)))
            }
            : function() {
                return t.call(o, this instanceof i ? this : n, arguments)
            }
            ,
            i.prototype = this.prototype,
            r.prototype = new i,
            r
        }
        )
    }(),
    function() {
        function e() {}
        function t(e) {
            var t = this.constructor.superclass.prototype[e];
            return arguments.length > 1 ? t.apply(this, n.call(arguments, 1)) : t.call(this)
        }
        function i() {
            function i() {
                this.initialize.apply(this, arguments)
            }
            var o = null
              , s = n.call(arguments, 0);
            "function" == typeof s[0] && (o = s.shift()),
            i.superclass = o,
            i.subclasses = [],
            o && (e.prototype = o.prototype,
            i.prototype = new e,
            o.subclasses.push(i));
            for (var l = 0, c = s.length; c > l; l++)
                a(i, s[l], o);
            return i.prototype.initialize || (i.prototype.initialize = r),
            i.prototype.constructor = i,
            i.prototype.callSuper = t,
            i
        }
        var n = Array.prototype.slice
          , r = function() {}
          , o = function() {
            for (var e in {
                toString: 1
            })
                if ("toString" === e)
                    return !1;
            return !0
        }()
          , a = function(e, t, i) {
            for (var n in t)
                e.prototype[n] = n in e.prototype && "function" == typeof e.prototype[n] && (t[n] + "").indexOf("callSuper") > -1 ? function(e) {
                    return function() {
                        var n = this.constructor.superclass;
                        this.constructor.superclass = i;
                        var r = t[e].apply(this, arguments);
                        return this.constructor.superclass = n,
                        "initialize" !== e ? r : void 0
                    }
                }(n) : t[n],
                o && (t.toString !== Object.prototype.toString && (e.prototype.toString = t.toString),
                t.valueOf !== Object.prototype.valueOf && (e.prototype.valueOf = t.valueOf))
        }
        ;
        fabric.util.createClass = i
    }(),
    function() {
        function e(e) {
            var t, i, n = Array.prototype.slice.call(arguments, 1), r = n.length;
            for (i = 0; r > i; i++)
                if (t = typeof e[n[i]],
                !/^(?:function|object|unknown)$/.test(t))
                    return !1;
            return !0
        }
        function t(e, t) {
            return {
                handler: t,
                wrappedHandler: i(e, t)
            }
        }
        function i(e, t) {
            return function(i) {
                t.call(o(e), i || fabric.window.event)
            }
        }
        function n(e, t) {
            return function(i) {
                if (p[e] && p[e][t])
                    for (var n = p[e][t], r = 0, o = n.length; o > r; r++)
                        n[r].call(this, i || fabric.window.event)
            }
        }
        function r(e) {
            if (e || (e = fabric.window.event),
            fabric.isTouchSupported) {
                var t = e.touches || e.originalEvent.touches || e.changedTouches;
                return t && t[0] ? {
                    x: Math.floor(t[0].pageX / d20.engine.canvasZoom) + d20.engine.currentCanvasOffset[0] - Math.floor(d20.engine.paddingOffset[0] / d20.engine.canvasZoom),
                    y: Math.floor(t[0].pageY / d20.engine.canvasZoom) + d20.engine.currentCanvasOffset[1] - Math.floor(d20.engine.paddingOffset[1] / d20.engine.canvasZoom)
                } : {
                    x: 0,
                    y: 0
                }
            }
            return {
                x: Math.floor(e.pageX / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] / d20.engine.canvasZoom),
                y: Math.floor(e.pageY / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] / d20.engine.canvasZoom)
            }
        }
        var o, a, s = function() {
            var e = 0;
            return function(t) {
                return t.__uniqueID || (t.__uniqueID = "uniqueID__" + e++)
            }
        }();
        !function() {
            var e = {};
            o = function(t) {
                return e[t]
            }
            ,
            a = function(t, i) {
                e[t] = i
            }
        }();
        var l, c, d = e(fabric.document.documentElement, "addEventListener", "removeEventListener") && e(fabric.window, "addEventListener", "removeEventListener"), h = e(fabric.document.documentElement, "attachEvent", "detachEvent") && e(fabric.window, "attachEvent", "detachEvent"), u = {}, p = {};
        d ? (l = function(e, t, i) {
            e.addEventListener(t, i, !1)
        }
        ,
        c = function(e, t, i) {
            e.removeEventListener(t, i, !1)
        }
        ) : h ? (l = function(e, i, n) {
            var r = s(e);
            a(r, e),
            u[r] || (u[r] = {}),
            u[r][i] || (u[r][i] = []);
            var o = t(r, n);
            u[r][i].push(o),
            e.attachEvent("on" + i, o.wrappedHandler)
        }
        ,
        c = function(e, t, i) {
            var n, r = s(e);
            if (u[r] && u[r][t])
                for (var o = 0, a = u[r][t].length; a > o; o++)
                    n = u[r][t][o],
                    n && n.handler === i && (e.detachEvent("on" + t, n.wrappedHandler),
                    u[r][t][o] = null )
        }
        ) : (l = function(e, t, i) {
            var r = s(e);
            if (p[r] || (p[r] = {}),
            !p[r][t]) {
                p[r][t] = [];
                var o = e["on" + t];
                o && p[r][t].push(o),
                e["on" + t] = n(r, t)
            }
            p[r][t].push(i)
        }
        ,
        c = function(e, t, i) {
            var n = s(e);
            if (p[n] && p[n][t])
                for (var r = p[n][t], o = 0, a = r.length; a > o; o++)
                    r[o] === i && r.splice(o, 1)
        }
        ),
        fabric.util.addListener = l,
        fabric.util.removeListener = c;
        var f = function(e) {
            return "unknown" != typeof e.clientX ? e.clientX : 0
        }
          , g = function(e) {
            return "unknown" != typeof e.clientY ? e.clientY : 0
        }
        ;
        fabric.isTouchSupported && (f = function(e) {
            return "touchend" !== e.type ? e.touches && e.touches[0] ? e.touches[0].pageX - (e.touches[0].pageX - e.touches[0].clientX) || e.clientX : e.clientX : e.changedTouches && e.changedTouches[0] ? e.changedTouches[0].pageX - (e.changedTouches[0].pageX - e.changedTouches[0].clientX) || e.clientX : e.clientX
        }
        ,
        g = function(e) {
            return "touchend" !== e.type ? e.touches && e.touches[0] ? e.touches[0].pageY - (e.touches[0].pageY - e.touches[0].clientY) || e.clientY : e.clientY : e.changedTouches && e.changedTouches[0] ? e.changedTouches[0].pageY - (e.changedTouches[0].pageY - e.changedTouches[0].clientY) || e.clientY : e.clientY
        }
        ),
        fabric.util.getPointer = r,
        fabric.util.object.extend(fabric.util, fabric.Observable)
    }(),
    function() {
        function e(e, t) {
            var i = e.style;
            if (!i)
                return e;
            if ("string" == typeof t)
                return e.style.cssText += ";" + t,
                t.indexOf("opacity") > -1 ? o(e, t.match(/opacity:\s*(\d?\.?\d*)/)[1]) : e;
            for (var n in t)
                if ("opacity" === n)
                    o(e, t[n]);
                else {
                    var r = "float" === n || "cssFloat" === n ? "undefined" == typeof i.styleFloat ? "cssFloat" : "styleFloat" : n;
                    i[r] = t[n]
                }
            return e
        }
        var t = fabric.document.createElement("div")
          , i = "string" == typeof t.style.opacity
          , n = "string" == typeof t.style.filter
          , r = /alpha\s*\(\s*opacity\s*=\s*([^\)]+)\)/
          , o = function(e) {
            return e
        }
        ;
        i ? o = function(e, t) {
            return e.style.opacity = t,
            e
        }
        : n && (o = function(e, t) {
            var i = e.style;
            return e.currentStyle && !e.currentStyle.hasLayout && (i.zoom = 1),
            r.test(i.filter) ? (t = t >= .9999 ? "" : "alpha(opacity=" + 100 * t + ")",
            i.filter = i.filter.replace(r, t)) : i.filter += " alpha(opacity=" + 100 * t + ")",
            e
        }
        ),
        fabric.util.setStyle = e
    }(),
    function() {
        function e(e) {
            return "string" == typeof e ? fabric.document.getElementById(e) : e
        }
        function t(e, t) {
            var i = fabric.document.createElement(e);
            for (var n in t)
                "class" === n ? i.className = t[n] : "for" === n ? i.htmlFor = t[n] : i.setAttribute(n, t[n]);
            return i
        }
        function i(e, t) {
            -1 === (" " + e.className + " ").indexOf(" " + t + " ") && (e.className += (e.className ? " " : "") + t)
        }
        function n(e, i, n) {
            return "string" == typeof i && (i = t(i, n)),
            e.parentNode && e.parentNode.replaceChild(i, e),
            i.appendChild(e),
            i
        }
        function r(e) {
            return {
                left: 0,
                top: 0
            }
        }
        function o(e, t) {
            if (e.style || (e.style = {}),
            fabric.document.defaultView && fabric.document.defaultView.getComputedStyle)
                return fabric.document.defaultView.getComputedStyle(e, null )[t];
            var i = e.style[t];
            return !i && e.currentStyle && (i = e.currentStyle[t]),
            i
        }
        var a, s = Array.prototype.slice, l = function(e) {
            return s.call(e, 0)
        }
        ;
        try {
            a = l(fabric.document.childNodes)instanceof Array
        } catch (c) {}
        a || (l = function(e) {
            for (var t = new Array(e.length), i = e.length; i--; )
                t[i] = e[i];
            return t
        }
        ),
        function() {
            function e(e) {
                return "undefined" != typeof e.onselectstart && (e.onselectstart = fabric.util.falseFunction),
                n ? e.style[n] = "none" : "string" == typeof e.unselectable && (e.unselectable = "on"),
                e
            }
            function t(e) {
                return "undefined" != typeof e.onselectstart && (e.onselectstart = null ),
                n ? e.style[n] = "" : "string" == typeof e.unselectable && (e.unselectable = ""),
                e
            }
            var i = fabric.document.documentElement.style
              , n = "userSelect"in i ? "userSelect" : "MozUserSelect"in i ? "MozUserSelect" : "WebkitUserSelect"in i ? "WebkitUserSelect" : "KhtmlUserSelect"in i ? "KhtmlUserSelect" : "";
            fabric.util.makeElementUnselectable = e,
            fabric.util.makeElementSelectable = t
        }(),
        function() {
            function e(e, t) {
                var i = fabric.document.getElementsByTagName("head")[0]
                  , n = fabric.document.createElement("script")
                  , r = !0;
                n.onload = n.onreadystatechange = function(e) {
                    if (r) {
                        if ("string" == typeof this.readyState && "loaded" !== this.readyState && "complete" !== this.readyState)
                            return;
                        r = !1,
                        t(e || fabric.window.event),
                        n = n.onload = n.onreadystatechange = null
                    }
                }
                ,
                n.src = e,
                i.appendChild(n)
            }
            fabric.util.getScript = e
        }(),
        fabric.util.getById = e,
        fabric.util.toArray = l,
        fabric.util.makeElement = t,
        fabric.util.addClass = i,
        fabric.util.wrapElement = n,
        fabric.util.getElementOffset = r,
        fabric.util.getElementStyle = o
    }(),
    function() {
        function e(e, t) {
            return e + (/\?/.test(e) ? "&" : "?") + t
        }
        function t() {}
        function i(i, r) {
            r || (r = {});
            var o, a = r.method ? r.method.toUpperCase() : "GET", s = r.onComplete || function() {}
            , l = n();
            return l.onreadystatechange = function() {
                4 === l.readyState && (s(l),
                l.onreadystatechange = t)
            }
            ,
            "GET" === a && (o = null ,
            "string" == typeof r.parameters && (i = e(i, r.parameters))),
            l.open(a, i, !0),
            ("POST" === a || "PUT" === a) && l.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
            l.send(o),
            l
        }
        var n = function() {
            for (var e = [function() {
                return new ActiveXObject("Microsoft.XMLHTTP")
            }
            , function() {
                return new ActiveXObject("Msxml2.XMLHTTP")
            }
            , function() {
                return new ActiveXObject("Msxml2.XMLHTTP.3.0")
            }
            , function() {
                return new XMLHttpRequest
            }
            ], t = e.length; t--; )
                try {
                    var i = e[t]();
                    if (i)
                        return e[t]
                } catch (n) {}
        }();
        fabric.util.request = i
    }(),
    function() {
        function e(e) {
            e || (e = {});
            var t, n = +new Date, r = e.duration || 500, o = n + r, a = e.onChange || function() {}
            , s = e.abort || function() {
                return !1
            }
            , l = e.easing || function(e, t, i, n) {
                return -i * Math.cos(e / n * (Math.PI / 2)) + i + t
            }
            , c = "startValue"in e ? e.startValue : 0, d = "endValue"in e ? e.endValue : 100, h = e.byValue || d - c;
            e.onStart && e.onStart(),
            function u() {
                t = +new Date;
                var d = t > o ? r : t - n;
                return a(l(d, c, h, r)),
                t > o || s() ? void (e.onComplete && e.onComplete()) : void i(u)
            }()
        }
        var t = fabric.window.requestAnimationFrame || fabric.window.webkitRequestAnimationFrame || fabric.window.mozRequestAnimationFrame || fabric.window.oRequestAnimationFrame || fabric.window.msRequestAnimationFrame || function(e) {
            fabric.window.setTimeout(e, 1e3 / 60)
        }
          , i = function() {
            return t.apply(fabric.window, arguments)
        }
        ;
        fabric.util.animate = e,
        fabric.util.requestAnimFrame = i
    }(),
    function(e) {
        "use strict";
        function t(e, t) {
            this.x = e,
            this.y = t
        }
        var i = e.fabric || (e.fabric = {});
        return i.Point ? void i.warn("fabric.Point is already defined") : (i.Point = t,
        void (t.prototype = {
            constructor: t,
            add: function(e) {
                return new t(this.x + e.x,this.y + e.y)
            },
            addEquals: function(e) {
                return this.x += e.x,
                this.y += e.y,
                this
            },
            scalarAdd: function(e) {
                return new t(this.x + e,this.y + e)
            },
            scalarAddEquals: function(e) {
                return this.x += e,
                this.y += e,
                this
            },
            subtract: function(e) {
                return new t(this.x - e.x,this.y - e.y)
            },
            subtractEquals: function(e) {
                return this.x -= e.x,
                this.y -= e.y,
                this
            },
            scalarSubtract: function(e) {
                return new t(this.x - e,this.y - e)
            },
            scalarSubtractEquals: function(e) {
                return this.x -= e,
                this.y -= e,
                this
            },
            multiply: function(e) {
                return new t(this.x * e,this.y * e)
            },
            multiplyEquals: function(e) {
                return this.x *= e,
                this.y *= e,
                this
            },
            divide: function(e) {
                return new t(this.x / e,this.y / e)
            },
            divideEquals: function(e) {
                return this.x /= e,
                this.y /= e,
                this
            },
            eq: function(e) {
                return this.x === e.x && this.y === e.y
            },
            lt: function(e) {
                return this.x < e.x && this.y < e.y
            },
            lte: function(e) {
                return this.x <= e.x && this.y <= e.y
            },
            gt: function(e) {
                return this.x > e.x && this.y > e.y
            },
            gte: function(e) {
                return this.x >= e.x && this.y >= e.y
            },
            lerp: function(e, i) {
                return new t(this.x + (e.x - this.x) * i,this.y + (e.y - this.y) * i)
            },
            distanceFrom: function(e) {
                var t = this.x - e.x
                  , i = this.y - e.y;
                return Math.sqrt(t * t + i * i)
            },
            midPointFrom: function(e) {
                return new t(this.x + (e.x - this.x) / 2,this.y + (e.y - this.y) / 2)
            },
            min: function(e) {
                return new t(Math.min(this.x, e.x),Math.min(this.y, e.y))
            },
            max: function(e) {
                return new t(Math.max(this.x, e.x),Math.max(this.y, e.y))
            },
            toString: function() {
                return this.x + "," + this.y
            },
            setXY: function(e, t) {
                this.x = e,
                this.y = t
            },
            setFromPoint: function(e) {
                this.x = e.x,
                this.y = e.y
            },
            swap: function(e) {
                var t = this.x
                  , i = this.y;
                this.x = e.x,
                this.y = e.y,
                e.x = t,
                e.y = i
            }
        }))
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        function t(e) {
            this.status = e,
            this.points = []
        }
        var i = e.fabric || (e.fabric = {});
        return i.Intersection ? void i.warn("fabric.Intersection is already defined") : (i.Intersection = t,
        i.Intersection.prototype = {
            appendPoint: function(e) {
                this.points.push(e)
            },
            appendPoints: function(e) {
                this.points = this.points.concat(e)
            }
        },
        i.Intersection.intersectLineLine = function(e, n, r, o) {
            var a, s = (o.x - r.x) * (e.y - r.y) - (o.y - r.y) * (e.x - r.x), l = (n.x - e.x) * (e.y - r.y) - (n.y - e.y) * (e.x - r.x), c = (o.y - r.y) * (n.x - e.x) - (o.x - r.x) * (n.y - e.y);
            if (0 !== c) {
                var d = s / c
                  , h = l / c;
                d >= 0 && 1 >= d && h >= 0 && 1 >= h ? (a = new t("Intersection"),
                a.points.push(new i.Point(e.x + d * (n.x - e.x),e.y + d * (n.y - e.y)))) : a = new t
            } else
                a = new t(0 === s || 0 === l ? "Coincident" : "Parallel");
            return a
        }
        ,
        i.Intersection.intersectLinePolygon = function(e, i, n) {
            for (var r = new t, o = n.length, a = 0; o > a; a++) {
                var s = n[a]
                  , l = n[(a + 1) % o]
                  , c = t.intersectLineLine(e, i, s, l);
                r.appendPoints(c.points)
            }
            return r.points.length > 0 && (r.status = "Intersection"),
            r
        }
        ,
        i.Intersection.intersectPolygonPolygon = function(e, i) {
            for (var n = new t, r = e.length, o = 0; r > o; o++) {
                var a = e[o]
                  , s = e[(o + 1) % r]
                  , l = t.intersectLinePolygon(a, s, i);
                n.appendPoints(l.points)
            }
            return n.points.length > 0 && (n.status = "Intersection"),
            n
        }
        ,
        i.Intersection.intersectPolygonRectangle = function(e, n, r) {
            var o = n.min(r)
              , a = n.max(r)
              , s = new i.Point(a.x,o.y)
              , l = new i.Point(o.x,a.y)
              , c = t.intersectLinePolygon(o, s, e)
              , d = t.intersectLinePolygon(s, a, e)
              , h = t.intersectLinePolygon(a, l, e)
              , u = t.intersectLinePolygon(l, o, e)
              , p = new t;
            return p.appendPoints(c.points),
            p.appendPoints(d.points),
            p.appendPoints(h.points),
            p.appendPoints(u.points),
            p.points.length > 0 && (p.status = "Intersection"),
            p
        }
        ,
        void (i.Intersection.intersectLineRectangle = function(e, n, r, o) {
            var a = r.min(o)
              , s = r.max(o)
              , l = new i.Point(s.x,a.y)
              , c = new i.Point(a.x,s.y)
              , d = t.intersectLineLine(a, l, e, n)
              , h = t.intersectLineLine(l, s, e, n)
              , u = t.intersectLineLine(s, c, e, n)
              , p = t.intersectLineLine(c, a, e, n)
              , f = new t;
            return f.appendPoints(d.points),
            f.appendPoints(h.points),
            f.appendPoints(u.points),
            f.appendPoints(p.points),
            f.points.length > 0 && (f.status = "Intersection"),
            f
        }
        ))
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        function t(e) {
            e ? this._tryParsingColor(e) : this.setSource([0, 0, 0, 1])
        }
        function i(e, t, i) {
            return 0 > i && (i += 1),
            i > 1 && (i -= 1),
            1 / 6 > i ? e + 6 * (t - e) * i : .5 > i ? t : 2 / 3 > i ? e + (t - e) * (2 / 3 - i) * 6 : e
        }
        var n = e.fabric || (e.fabric = {});
        return n.Color ? void n.warn("fabric.Color is already defined.") : (n.Color = t,
        n.Color.prototype = {
            _tryParsingColor: function(e) {
                var i;
                e in t.colorNameMap && (e = t.colorNameMap[e]),
                i = t.sourceFromHex(e),
                i || (i = t.sourceFromRgb(e)),
                i || (i = t.sourceFromHsl(e)),
                i && this.setSource(i)
            },
            _rgbToHsl: function(e, t, i) {
                e /= 255,
                t /= 255,
                i /= 255;
                var r, o, a, s = n.util.array.max([e, t, i]), l = n.util.array.min([e, t, i]);
                if (a = (s + l) / 2,
                s === l)
                    r = o = 0;
                else {
                    var c = s - l;
                    switch (o = a > .5 ? c / (2 - s - l) : c / (s + l),
                    s) {
                    case e:
                        r = (t - i) / c + (i > t ? 6 : 0);
                        break;
                    case t:
                        r = (i - e) / c + 2;
                        break;
                    case i:
                        r = (e - t) / c + 4
                    }
                    r /= 6
                }
                return [Math.round(360 * r), Math.round(100 * o), Math.round(100 * a)]
            },
            getSource: function() {
                return this._source
            },
            setSource: function(e) {
                this._source = e
            },
            toRgb: function() {
                var e = this.getSource();
                return "rgb(" + e[0] + "," + e[1] + "," + e[2] + ")"
            },
            toRgba: function() {
                var e = this.getSource();
                return "rgba(" + e[0] + "," + e[1] + "," + e[2] + "," + e[3] + ")"
            },
            toHsl: function() {
                var e = this.getSource()
                  , t = this._rgbToHsl(e[0], e[1], e[2]);
                return "hsl(" + t[0] + "," + t[1] + "%," + t[2] + "%)"
            },
            toHsla: function() {
                var e = this.getSource()
                  , t = this._rgbToHsl(e[0], e[1], e[2]);
                return "hsla(" + t[0] + "," + t[1] + "%," + t[2] + "%," + e[3] + ")"
            },
            toHex: function() {
                var e = this.getSource()
                  , t = e[0].toString(16);
                t = 1 === t.length ? "0" + t : t;
                var i = e[1].toString(16);
                i = 1 === i.length ? "0" + i : i;
                var n = e[2].toString(16);
                return n = 1 === n.length ? "0" + n : n,
                t.toUpperCase() + i.toUpperCase() + n.toUpperCase()
            },
            getAlpha: function() {
                return this.getSource()[3]
            },
            setAlpha: function(e) {
                var t = this.getSource();
                return t[3] = e,
                this.setSource(t),
                this
            },
            toGrayscale: function() {
                var e = this.getSource()
                  , t = parseInt((.3 * e[0] + .59 * e[1] + .11 * e[2]).toFixed(0), 10)
                  , i = e[3];
                return this.setSource([t, t, t, i]),
                this
            },
            toBlackWhite: function(e) {
                var t = this.getSource()
                  , i = (.3 * t[0] + .59 * t[1] + .11 * t[2]).toFixed(0)
                  , n = t[3];
                return e = e || 127,
                i = Number(i) < Number(e) ? 0 : 255,
                this.setSource([i, i, i, n]),
                this
            },
            overlayWith: function(e) {
                e instanceof t || (e = new t(e));
                for (var i = [], n = this.getAlpha(), r = .5, o = this.getSource(), a = e.getSource(), s = 0; 3 > s; s++)
                    i.push(Math.round(o[s] * (1 - r) + a[s] * r));
                return i[3] = n,
                this.setSource(i),
                this
            }
        },
        n.Color.reRGBa = /^rgba?\(\s*(\d{1,3}\%?)\s*,\s*(\d{1,3}\%?)\s*,\s*(\d{1,3}\%?)\s*(?:\s*,\s*(\d+(?:\.\d+)?)\s*)?\)$/,
        n.Color.reHSLa = /^hsla?\(\s*(\d{1,3})\s*,\s*(\d{1,3}\%)\s*,\s*(\d{1,3}\%)\s*(?:\s*,\s*(\d+(?:\.\d+)?)\s*)?\)$/,
        n.Color.reHex = /^#?([0-9a-f]{6}|[0-9a-f]{3})$/i,
        n.Color.colorNameMap = {
            aqua: "#00FFFF",
            black: "#000000",
            blue: "#0000FF",
            fuchsia: "#FF00FF",
            gray: "#808080",
            green: "#008000",
            lime: "#00FF00",
            maroon: "#800000",
            navy: "#000080",
            olive: "#808000",
            orange: "#FFA500",
            purple: "#800080",
            red: "#FF0000",
            silver: "#C0C0C0",
            teal: "#008080",
            white: "#FFFFFF",
            yellow: "#FFFF00"
        },
        n.Color.fromRgb = function(e) {
            return t.fromSource(t.sourceFromRgb(e))
        }
        ,
        n.Color.sourceFromRgb = function(e) {
            var i = e.match(t.reRGBa);
            if (i) {
                var n = parseInt(i[1], 10) / (/%$/.test(i[1]) ? 100 : 1) * (/%$/.test(i[1]) ? 255 : 1)
                  , r = parseInt(i[2], 10) / (/%$/.test(i[2]) ? 100 : 1) * (/%$/.test(i[2]) ? 255 : 1)
                  , o = parseInt(i[3], 10) / (/%$/.test(i[3]) ? 100 : 1) * (/%$/.test(i[3]) ? 255 : 1);
                return [parseInt(n, 10), parseInt(r, 10), parseInt(o, 10), i[4] ? parseFloat(i[4]) : 1]
            }
        }
        ,
        n.Color.fromRgba = t.fromRgb,
        n.Color.fromHsl = function(e) {
            return t.fromSource(t.sourceFromHsl(e))
        }
        ,
        n.Color.sourceFromHsl = function(e) {
            var n = e.match(t.reHSLa);
            if (n) {
                var r, o, a, s = (parseFloat(n[1]) % 360 + 360) % 360 / 360, l = parseFloat(n[2]) / (/%$/.test(n[2]) ? 100 : 1), c = parseFloat(n[3]) / (/%$/.test(n[3]) ? 100 : 1);
                if (0 === l)
                    r = o = a = c;
                else {
                    var d = .5 >= c ? c * (l + 1) : c + l - c * l
                      , h = 2 * c - d;
                    r = i(h, d, s + 1 / 3),
                    o = i(h, d, s),
                    a = i(h, d, s - 1 / 3)
                }
                return [Math.round(255 * r), Math.round(255 * o), Math.round(255 * a), n[4] ? parseFloat(n[4]) : 1]
            }
        }
        ,
        n.Color.fromHsla = t.fromHsl,
        n.Color.fromHex = function(e) {
            return t.fromSource(t.sourceFromHex(e))
        }
        ,
        n.Color.sourceFromHex = function(e) {
            if (e.match(t.reHex)) {
                var i = e.slice(e.indexOf("#") + 1)
                  , n = 3 === i.length
                  , r = n ? i.charAt(0) + i.charAt(0) : i.substring(0, 2)
                  , o = n ? i.charAt(1) + i.charAt(1) : i.substring(2, 4)
                  , a = n ? i.charAt(2) + i.charAt(2) : i.substring(4, 6);
                return [parseInt(r, 16), parseInt(o, 16), parseInt(a, 16), 1]
            }
        }
        ,
        void (n.Color.fromSource = function(e) {
            var i = new t;
            return i.setSource(e),
            i
        }
        ))
    }("undefined" != typeof exports ? exports : this),
    function() {
        "use strict";
        if (fabric.StaticCanvas)
            return void fabric.warn("fabric.StaticCanvas is already defined.");
        var e = fabric.util.object.extend
          , t = fabric.util.getElementOffset
          , i = fabric.util.removeFromArray
          , n = fabric.util.removeListener
          , r = new Error("Could not initialize `canvas` element");
        fabric.StaticCanvas = fabric.util.createClass({
            initialize: function(e, t) {
                t || (t = {}),
                this._initStatic(e, t),
                fabric.StaticCanvas.activeInstance = this
            },
            backgroundColor: "",
            backgroundImage: "",
            backgroundImageOpacity: 1,
            backgroundImageStretch: !0,
            overlayImage: "",
            overlayImageLeft: 0,
            overlayImageTop: 0,
            includeDefaultValues: !0,
            stateful: !0,
            renderOnAddRemove: !0,
            clipTo: null ,
            controlsAboveOverlay: !1,
            allowTouchScrolling: !1,
            onBeforeScaleRotate: function() {},
            _initStatic: function(e, t) {
                this._objects = [],
                this._createLowerCanvas(e),
                this._initOptions(t),
                t.overlayImage && this.setOverlayImage(t.overlayImage, this.renderAll.bind(this)),
                t.backgroundImage && this.setBackgroundImage(t.backgroundImage, this.renderAll.bind(this)),
                t.backgroundColor && this.setBackgroundColor(t.backgroundColor, this.renderAll.bind(this)),
                this.calcOffset()
            },
            calcOffset: function() {
                return this._offset = t(this.lowerCanvasEl),
                this
            },
            setOverlayImage: function(e, t, i) {
                return fabric.util.loadImage(e, function(e) {
                    this.overlayImage = e,
                    i && "overlayImageLeft"in i && (this.overlayImageLeft = i.overlayImageLeft),
                    i && "overlayImageTop"in i && (this.overlayImageTop = i.overlayImageTop),
                    t && t()
                }, this),
                this
            },
            setBackgroundImage: function(e, t, i) {
                return fabric.util.loadImage(e, function(e) {
                    this.backgroundImage = e,
                    i && "backgroundImageOpacity"in i && (this.backgroundImageOpacity = i.backgroundImageOpacity),
                    i && "backgroundImageStretch"in i && (this.backgroundImageStretch = i.backgroundImageStretch),
                    t && t()
                }, this),
                this
            },
            setBackgroundColor: function(e, t) {
                if (e.source) {
                    var i = this;
                    fabric.util.loadImage(e.source, function(n) {
                        i.backgroundColor = new fabric.Pattern({
                            source: n,
                            repeat: e.repeat
                        }),
                        t && t()
                    })
                } else
                    this.backgroundColor = e,
                    t && t();
                return this
            },
            _createCanvasElement: function() {
                var e = fabric.document.createElement("canvas");
                if (e.style || (e.style = {}),
                !e)
                    throw r;
                return this._initCanvasElement(e),
                e
            },
            _initCanvasElement: function(e) {
                if (fabric.util.createCanvasElement(e),
                "undefined" == typeof e.getContext)
                    throw r
            },
            _initOptions: function(e) {
                for (var t in e)
                    this[t] = e[t];
                this.width = parseInt(this.lowerCanvasEl.width, 10) || 0,
                this.height = parseInt(this.lowerCanvasEl.height, 10) || 0,
                this.lowerCanvasEl.style && (this.lowerCanvasEl.style.width = this.width + "px",
                this.lowerCanvasEl.style.height = this.height + "px")
            },
            _createLowerCanvas: function(e) {
                this.lowerCanvasEl = fabric.util.getById(e) || this._createCanvasElement(),
                this._initCanvasElement(this.lowerCanvasEl),
                fabric.util.addClass(this.lowerCanvasEl, "lower-canvas"),
                this.interactive && this._applyCanvasStyle(this.lowerCanvasEl),
                this.contextContainer = this.lowerCanvasEl.getContext("2d")
            },
            getWidth: function() {
                return this.width
            },
            getHeight: function() {
                return this.height
            },
            setWidth: function(e) {
                return this._setDimension("width", e)
            },
            setHeight: function(e) {
                return this._setDimension("height", e)
            },
            setDimensions: function(e) {
                for (var t in e)
                    this._setDimension(t, e[t]);
                return this
            },
            _setDimension: function(e, t) {
                return this.lowerCanvasEl[e] = t,
                this.lowerCanvasEl.style[e] = t + "px",
                this.upperCanvasEl && (this.upperCanvasEl[e] = t,
                this.upperCanvasEl.style[e] = t + "px"),
                this.cacheCanvasEl && (this.cacheCanvasEl[e] = t),
                this.wrapperEl && (this.wrapperEl.style[e] = t + "px"),
                this[e] = t,
                this.calcOffset(),
                this.renderAll(),
                this
            },
            getElement: function() {
                return this.lowerCanvasEl
            },
            getActiveObject: function() {
                return null
            },
            getActiveGroup: function() {
                return null
            },
            _draw: function(e, t) {
                if (t)
                    if (this.controlsAboveOverlay) {
                        var i = t.hasBorders
                          , n = t.hasControls;
                        t.hasBorders = t.hasControls = !1,
                        t.render(e),
                        t.hasBorders = i,
                        t.hasControls = n
                    } else
                        t.render(e)
            },
            _onObjectAdded: function(e) {
                this.stateful && e.setupState(),
                e.setCoords(),
                e.canvas = this,
                this.fire("object:added", {
                    target: e
                }),
                e.fire("added")
            },
            _onObjectRemoved: function(e) {
                this.fire("object:removed", {
                    target: e
                }),
                e.fire("removed")
            },
            getObjects: function() {
                return this._objects
            },
            clearContext: function(e) {
                return e.clearRect(0, 0, Math.ceil(this.width / d20.engine.canvasZoom), Math.ceil(this.height / d20.engine.canvasZoom)),
                this
            },
            getContext: function() {
                return this.contextContainer
            },
            clear: function() {
                return this._objects.length = 0,
                this.discardActiveGroup && this.discardActiveGroup(),
                this.discardActiveObject && this.discardActiveObject(),
                this.clearContext(this.contextContainer),
                this.contextTop && this.clearContext(this.contextTop),
                this.fire("canvas:cleared"),
                this.renderAll(),
                this
            },
            renderAll: function(e) {
                var t = this[e === !0 && this.interactive ? "contextTop" : "contextContainer"];
                this.contextTop && this.selection && !this._groupSelector && this.clearContext(this.contextTop),
                e || this.clearContext(t),
                d20.engine && d20.engine.preProcessing && d20.engine.preProcessing(t, !1);
                {
                    var i = this._objects.length
                      , n = this.getActiveGroup();
                    this.getActiveObject(),
                    new Date
                }
                if (n && !window.is_gm && (n.hideResizers = !0),
                this.fire("before:render"),
                this.clipTo && fabric.util.clipContext(this, t),
                t.fillStyle = d20.engine.backgroundColor,
                t.fillRect(0, 0, Math.ceil(this.width / d20.engine.canvasZoom), Math.ceil(this.height / d20.engine.canvasZoom)),
                "object" == typeof this.backgroundImage && this._drawBackroundImage(t),
                void 0 !== i) {
                    for (var r = [d20.engine.currentCanvasOffset[0], d20.engine.currentCanvasOffset[1]], o = [d20.engine.canvasWidth / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0], d20.engine.canvasHeight / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1]], a = {
                        map: [],
                        walls: [],
                        grid: [],
                        objects: [],
                        gmlayer: []
                    }, s = 0; i > s; ++s)
                        if (this._objects[s].model) {
                            if (!a[this._objects[s].model.get("layer")])
                                continue;a[this._objects[s].model.get("layer")].push(this._objects[s])
                        } else
                            a[window.currentEditingLayer].push(this._objects[s]);
                    for (var l in a)
                        if (!("gmlayer" == l && !window.is_gm || "walls" == l && "walls" !== window.currentEditingLayer || "walls" == l && !window.is_gm))
                            if ("grid" != l) {
                                i = a[l].length,
                                t.globalAlpha = "gmlayer" == l ? .55 : "objects" != l || "map" != window.currentEditingLayer && "walls" != window.currentEditingLayer ? 1 : .45;
                                for (var s = 0; i > s; ++s) {
                                    var c = a[l][s];
                                    n && c && n.contains(c) ? (c.renderingInGroup = n,
                                    c.hasControls = !1) : (c.hasControls = !0,
                                    c.hideResizers = "text" != c.type && window.is_gm ? !1 : !0),
                                    c.needsRender(r, o) && (c.renderThisPass = !0,
                                    c.renderPre && c.renderPre(t))
                                }
                                for (var s = 0; i > s; ++s) {
                                    var c = a[l][s];
                                    c.renderThisPass && (this._draw(t, c),
                                    delete c.renderingInGroup,
                                    delete c.renderThisPass)
                                }
                            } else
                                d20.engine && d20.engine.drawGrid && d20.engine.drawGrid(t, !1);
                    t.globalAlpha = 1
                }
                return n && n.setCoords(),
                d20.engine && d20.engine.postProcessing && d20.engine.postProcessing(t, !1),
                this.renderTop(),
                this.clipTo && t.restore(),
                this.overlayImage && t.drawImage(this.overlayImage, this.overlayImageLeft, this.overlayImageTop),
                this.controlsAboveOverlay && this.interactive && this.drawControls(t),
                this.fire("after:render"),
                this
            },
            _drawBackroundImage: function(e) {
                e.save(),
                e.globalAlpha = this.backgroundImageOpacity,
                this.backgroundImageStretch ? e.drawImage(this.backgroundImage, 0, 0, this.width, this.height) : e.drawImage(this.backgroundImage, 0, 0),
                e.restore()
            },
            renderTop: function() {
                var e = this.contextTop || this.contextContainer;
                return this.clearContext(e),
                this.selection && this._groupSelector && this._drawSelection(),
                this.overlayImage && e.drawImage(this.overlayImage, this.overlayImageLeft, this.overlayImageTop),
                d20.engine && d20.engine.drawOverlaysTop && d20.engine.drawOverlaysTop(e),
                this.fire("after:render"),
                this
            },
            getCenter: function() {
                return {
                    top: this.getHeight() / 2,
                    left: this.getWidth() / 2
                }
            },
            centerObjectH: function(e) {
                return e.set("left", this.getCenter().left),
                this.renderAll(),
                this
            },
            centerObjectV: function(e) {
                return e.set("top", this.getCenter().top),
                this.renderAll(),
                this
            },
            centerObject: function(e) {
                return this.centerObjectH(e).centerObjectV(e)
            },
            toDatalessJSON: function(e) {
                return this.toDatalessObject(e)
            },
            toObject: function(e) {
                return this._toObjectMethod("toObject", e)
            },
            toDatalessObject: function(e) {
                return this._toObjectMethod("toDatalessObject", e)
            },
            _toObjectMethod: function(e, t) {
                var i = this.getActiveGroup();
                i && this.discardActiveGroup();
                var n = {
                    objects: this.getObjects().map(function(i) {
                        var n;
                        this.includeDefaultValues || (n = i.includeDefaultValues,
                        i.includeDefaultValues = !1);
                        var r = i[e](t);
                        return this.includeDefaultValues || (i.includeDefaultValues = n),
                        r
                    }, this),
                    background: this.backgroundColor && this.backgroundColor.toObject ? this.backgroundColor.toObject() : this.backgroundColor
                };
                return this.backgroundImage && (n.backgroundImage = this.backgroundImage.src,
                n.backgroundImageOpacity = this.backgroundImageOpacity,
                n.backgroundImageStretch = this.backgroundImageStretch),
                this.overlayImage && (n.overlayImage = this.overlayImage.src,
                n.overlayImageLeft = this.overlayImageLeft,
                n.overlayImageTop = this.overlayImageTop),
                fabric.util.populateWithProperties(this, n, t),
                i && (this.setActiveGroup(new fabric.Group(i.getObjects())),
                i.forEachObject(function(e) {
                    e.set("active", !0)
                })),
                n
            },
            toSVG: function(e) {
                e || (e = {});
                var t = [];
                e.suppressPreamble || t.push('<?xml version="1.0" encoding="', e.encoding || "UTF-8", '" standalone="no" ?>', '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" ', '"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\n'),
                t.push("<svg ", 'xmlns="http://www.w3.org/2000/svg" ', 'xmlns:xlink="http://www.w3.org/1999/xlink" ', 'version="1.1" ', 'width="', e.viewBox ? e.viewBox.width : this.width, '" ', 'height="', e.viewBox ? e.viewBox.height : this.height, '" ', this.backgroundColor && !this.backgroundColor.source ? 'style="background-color: ' + this.backgroundColor + '" ' : null , e.viewBox ? 'viewBox="' + e.viewBox.x + " " + e.viewBox.y + " " + e.viewBox.width + " " + e.viewBox.height + '" ' : null , 'xml:space="preserve">', "<desc>Created with Fabric.js ", fabric.version, "</desc>", "<defs>", fabric.createSVGFontFacesMarkup(this.getObjects()), fabric.createSVGRefElementsMarkup(this), "</defs>"),
                this.backgroundColor && this.backgroundColor.source && t.push('<rect x="0" y="0" ', 'width="', "repeat-y" === this.backgroundColor.repeat || "no-repeat" === this.backgroundColor.repeat ? this.backgroundColor.source.width : this.width, '" height="', "repeat-x" === this.backgroundColor.repeat || "no-repeat" === this.backgroundColor.repeat ? this.backgroundColor.source.height : this.height, '" fill="url(#backgroundColorPattern)"', "></rect>"),
                this.backgroundImage && t.push('<image x="0" y="0" ', 'width="', this.backgroundImageStretch ? this.width : this.backgroundImage.width, '" height="', this.backgroundImageStretch ? this.height : this.backgroundImage.height, '" preserveAspectRatio="', this.backgroundImageStretch ? "none" : "defer", '" xlink:href="', this.backgroundImage.src, '" style="opacity:', this.backgroundImageOpacity, '"></image>'),
                this.overlayImage && t.push('<image x="', this.overlayImageLeft, '" y="', this.overlayImageTop, '" width="', this.overlayImage.width, '" height="', this.overlayImage.height, '" xlink:href="', this.overlayImage.src, '"></image>');
                var i = this.getActiveGroup();
                i && this.discardActiveGroup();
                for (var n = 0, r = this.getObjects(), o = r.length; o > n; n++)
                    t.push(r[n].toSVG());
                return i && (this.setActiveGroup(new fabric.Group(i.getObjects())),
                i.forEachObject(function(e) {
                    e.set("active", !0)
                })),
                t.push("</svg>"),
                t.join("")
            },
            remove: function(e) {
                return this.getActiveObject() === e && (this.fire("before:selection:cleared", {
                    target: e
                }),
                this.discardActiveObject(),
                this.fire("selection:cleared")),
                fabric.Collection.remove.call(this, e)
            },
            sendToBack: function(e) {
                return i(this._objects, e),
                this._objects.unshift(e),
                this.renderAll && this.renderAll()
            },
            bringToFront: function(e) {
                return i(this._objects, e),
                this._objects.push(e),
                this.renderAll && this.renderAll()
            },
            sendBackwards: function(e, t) {
                var n = this._objects.indexOf(e);
                if (0 !== n) {
                    var r;
                    if (t) {
                        r = n;
                        for (var o = n - 1; o >= 0; --o) {
                            var a = e.intersectsWithObject(this._objects[o]) || e.isContainedWithinObject(this._objects[o]) || this._objects[o].isContainedWithinObject(e);
                            if (a) {
                                r = o;
                                break
                            }
                        }
                    } else
                        r = n - 1;
                    i(this._objects, e),
                    this._objects.splice(r, 0, e),
                    this.renderAll && this.renderAll()
                }
                return this
            },
            bringForward: function(e, t) {
                var n = this._objects.indexOf(e);
                if (n !== this._objects.length - 1) {
                    var r;
                    if (t) {
                        r = n;
                        for (var o = n + 1; o < this._objects.length; ++o) {
                            var a = e.intersectsWithObject(this._objects[o]) || e.isContainedWithinObject(this._objects[o]) || this._objects[o].isContainedWithinObject(e);
                            if (a) {
                                r = o;
                                break
                            }
                        }
                    } else
                        r = n + 1;
                    i(this._objects, e),
                    this._objects.splice(r, 0, e),
                    this.renderAll && this.renderAll()
                }
                return this
            },
            moveTo: function(e, t) {
                return i(this._objects, e),
                this._objects.splice(t, 0, e),
                this.renderAll && this.renderAll()
            },
            dispose: function() {
                return this.clear(),
                this.interactive ? (fabric.isTouchSupported ? (n(this.upperCanvasEl, "touchstart", this._onMouseDown),
                n(this.upperCanvasEl, "touchmove", this._onMouseMove),
                "undefined" != typeof Event && "remove"in Event && Event.remove(this.upperCanvasEl, "gesture", this._onGesture)) : (n(this.upperCanvasEl, "mousedown", this._onMouseDown),
                n(this.upperCanvasEl, "mousemove", this._onMouseMove),
                n(fabric.window, "resize", this._onResize)),
                this) : this
            },
            toString: function() {
                return "#<fabric.Canvas (" + this.complexity() + "): { objects: " + this.getObjects().length + " }>"
            }
        }),
        e(fabric.StaticCanvas.prototype, fabric.Observable),
        e(fabric.StaticCanvas.prototype, fabric.Collection),
        e(fabric.StaticCanvas.prototype, fabric.DataURLExporter),
        e(fabric.StaticCanvas, {
            EMPTY_JSON: '{"objects": [], "background": "white"}',
            toGrayscale: function(e) {
                var t, i, n, r, o = e.getContext("2d"), a = o.getImageData(0, 0, e.width, e.height), s = a.data, l = a.width, c = a.height;
                for (n = 0; l > n; n++)
                    for (r = 0; c > r; r++)
                        t = 4 * n * c + 4 * r,
                        i = (s[t] + s[t + 1] + s[t + 2]) / 3,
                        s[t] = i,
                        s[t + 1] = i,
                        s[t + 2] = i;
                o.putImageData(a, 0, 0)
            },
            supports: function(e) {
                var t = fabric.util.createCanvasElement();
                if (!t || !t.getContext)
                    return null ;
                var i = t.getContext("2d");
                if (!i)
                    return null ;
                switch (e) {
                case "getImageData":
                    return "undefined" != typeof i.getImageData;
                case "setLineDash":
                    return "undefined" != typeof i.setLineDash;
                case "toDataURL":
                    return "undefined" != typeof t.toDataURL;
                case "toDataURLWithQuality":
                    try {
                        return t.toDataURL("image/jpeg", 0),
                        !0
                    } catch (n) {}
                    return !1;
                default:
                    return null
                }
            }
        }),
        fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject
    }(),
    fabric.BaseBrush = fabric.util.createClass({
        color: "rgb(0, 0, 0)",
        width: 1,
        fill: "transparent",
        shadow: null ,
        strokeLineCap: "round",
        strokeLineJoin: "round",
        setShadow: function(e) {
            return this.shadow = new fabric.Shadow(e),
            this
        },
        _setBrushStyles: function() {
            var e = this.canvas.contextTop;
            e.strokeStyle = this.color,
            e.fillStyle = this.fill,
            e.lineWidth = this.width,
            e.lineCap = this.strokeLineCap,
            e.lineJoin = this.strokeLineJoin
        },
        _setShadow: function() {
            if (this.shadow) {
                var e = this.canvas.contextTop;
                e.shadowColor = this.shadow.color,
                e.shadowBlur = this.shadow.blur,
                e.shadowOffsetX = this.shadow.offsetX,
                e.shadowOffsetY = this.shadow.offsetY
            }
        },
        _resetShadow: function() {
            var e = this.canvas.contextTop;
            e.shadowColor = "",
            e.shadowBlur = e.shadowOffsetX = e.shadowOffsetY = 0
        }
    }),
    function() {
        var e = fabric.util.array.min
          , t = fabric.util.array.max;
        fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, {
            initialize: function(e) {
                this.canvas = e,
                this._points = []
            },
            onMouseDown: function(e) {
                this._prepareForDrawing(e),
                this._captureDrawingPath(e),
                this._render()
            },
            onMouseMove: function(e) {
                this._captureDrawingPath(e),
                this.canvas.clearContext(this.canvas.contextTop),
                this._render()
            },
            onMouseUp: function() {
                this._finalizeAndAddPath()
            },
            _prepareForDrawing: function(e) {
                var t = new fabric.Point(e.x - d20.engine.currentCanvasOffset[0],e.y - d20.engine.currentCanvasOffset[1]);
                this._reset(),
                this._addPoint(t),
                this.canvas.contextTop.moveTo(t.x, t.y)
            },
            _addPoint: function(e) {
                this._points.push(e)
            },
            _reset: function() {
                this._points.length = 0,
                this._setBrushStyles(),
                this._setShadow()
            },
            _captureDrawingPath: function(e) {
                var t = new fabric.Point(e.x - d20.engine.currentCanvasOffset[0],e.y - d20.engine.currentCanvasOffset[1]);
                this._addPoint(t)
            },
            _render: function() {
                var e = this.canvas.contextTop;
                e.beginPath();
                var t = this._points[0]
                  , i = this._points[1];
                2 === this._points.length && t.x === i.x && t.y === i.y && (t.x -= .5,
                i.x += .5),
                e.moveTo(t.x, t.y);
                for (var n = 1, r = this._points.length; r > n; n++) {
                    var o = t.midPointFrom(i);
                    e.quadraticCurveTo(t.x, t.y, o.x, o.y),
                    t = this._points[n],
                    i = this._points[n + 1]
                }
                e.lineTo(t.x, t.y),
                "transparent" !== this.fill && e.fill(),
                e.stroke()
            },
            _getSVGPathData: function() {
                return this.box = this.getPathBoundingBox(this._points),
                this.convertPointsToSVGPath(this._points, this.box.minx, this.box.maxx, this.box.miny, this.box.maxy)
            },
            getPathBoundingBox: function(i) {
                for (var n = [], r = [], o = i[0], a = i[1], s = o, l = 1, c = i.length; c > l; l++) {
                    var d = o.midPointFrom(a);
                    n.push(s.x),
                    n.push(d.x),
                    r.push(s.y),
                    r.push(d.y),
                    o = i[l],
                    a = i[l + 1],
                    s = d
                }
                return n.push(o.x),
                r.push(o.y),
                {
                    minx: e(n),
                    miny: e(r),
                    maxx: t(n),
                    maxy: t(r)
                }
            },
            convertPointsToSVGPath: function(e, t, i, n) {
                var r = []
                  , o = new fabric.Point(e[0].x - t,e[0].y - n)
                  , a = new fabric.Point(e[1].x - t,e[1].y - n);
                r.push("M ", e[0].x - t, " ", e[0].y - n, " ");
                for (var s = 1, l = e.length; l > s; s++) {
                    var c = o.midPointFrom(a);
                    r.push("Q ", o.x, " ", o.y, " ", c.x, " ", c.y, " "),
                    o = new fabric.Point(e[s].x - t,e[s].y - n),
                    s + 1 < e.length && (a = new fabric.Point(e[s + 1].x - t,e[s + 1].y - n))
                }
                return r.push("L ", o.x, " ", o.y, " "),
                r
            },
            createPath: function(e) {
                var t = new fabric.Path(e);
                return t.fill = this.fill,
                t.stroke = this.color,
                t.strokeWidth = this.width,
                t.strokeLineCap = this.strokeLineCap,
                t.strokeLineJoin = this.strokeLineJoin,
                this.shadow && (this.shadow.affectStroke = !0,
                t.setShadow(this.shadow)),
                t
            },
            _finalizeAndAddPath: function() {
                var e = this.canvas.contextTop;
                e.closePath();
                var t = this._getSVGPathData().join("");
                if ("M 0 0 Q 0 0 0 0 L 0 0" === t)
                    return void this.canvas.renderAll();
                var i = this.box.minx + (this.box.maxx - this.box.minx) / 2 + d20.engine.currentCanvasOffset[0]
                  , n = this.box.miny + (this.box.maxy - this.box.miny) / 2 + d20.engine.currentCanvasOffset[1];
                this.canvas.contextTop.arc(i, n, 3, 0, 2 * Math.PI, !1);
                var r = this.createPath(t);
                r.set({
                    left: i,
                    top: n
                }),
                this.canvas.add(r),
                r.setCoords(),
                this.canvas.clearContext(this.canvas.contextTop),
                this._resetShadow(),
                this.canvas.renderAll(),
                this.canvas.fire("path:created", {
                    path: r
                })
            }
        })
    }(),
    fabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, {
        width: 10,
        initialize: function(e) {
            this.canvas = e,
            this.points = []
        },
        drawDot: function(e) {
            var t = this.addPoint(e)
              , i = this.canvas.contextTop;
            i.fillStyle = t.fill,
            i.beginPath(),
            i.arc(t.x, t.y, t.radius, 0, 2 * Math.PI, !1),
            i.closePath(),
            i.fill()
        },
        onMouseDown: function(e) {
            this.points.length = 0,
            this.canvas.clearContext(this.canvas.contextTop),
            this._setShadow(),
            this.drawDot(e)
        },
        onMouseMove: function(e) {
            this.drawDot(e)
        },
        onMouseUp: function() {
            var e = this.canvas.renderOnAddRemove;
            this.canvas.renderOnAddRemove = !1;
            for (var t = [], i = 0, n = this.points.length; n > i; i++) {
                var r = this.points[i]
                  , o = new fabric.Circle({
                    radius: r.radius,
                    left: r.x,
                    top: r.y,
                    fill: r.fill
                });
                this.shadow && o.setShadow(this.shadow),
                t.push(o)
            }
            var a = new fabric.Group(t);
            this.canvas.add(a),
            this.canvas.fire("path:created", {
                path: a
            }),
            this.canvas.clearContext(this.canvas.contextTop),
            this._resetShadow(),
            this.canvas.renderOnAddRemove = e,
            this.canvas.renderAll()
        },
        addPoint: function(e) {
            var t = new fabric.Point(e.x,e.y)
              , i = fabric.util.getRandomInt(Math.max(0, this.width - 20), this.width + 20) / 2
              , n = new fabric.Color(this.color).setAlpha(fabric.util.getRandomInt(0, 100) / 100).toRgba();
            return t.radius = i,
            t.fill = n,
            this.points.push(t),
            t
        }
    }),
    fabric.SprayBrush = fabric.util.createClass(fabric.BaseBrush, {
        width: 10,
        density: 20,
        dotWidth: 1,
        dotWidthVariance: 1,
        randomOpacity: !1,
        initialize: function(e) {
            this.canvas = e,
            this.sprayChunks = []
        },
        onMouseDown: function(e) {
            this.sprayChunks.length = 0,
            this.canvas.clearContext(this.canvas.contextTop),
            this._setShadow(),
            this.addSprayChunk(e),
            this.render()
        },
        onMouseMove: function(e) {
            this.addSprayChunk(e),
            this.render()
        },
        onMouseUp: function() {
            var e = this.canvas.renderOnAddRemove;
            this.canvas.renderOnAddRemove = !1;
            for (var t = [], i = 0, n = this.sprayChunks.length; n > i; i++)
                for (var r = this.sprayChunks[i], o = 0, a = r.length; a > o; o++) {
                    var s = new fabric.Rect({
                        width: r[o].width,
                        height: r[o].width,
                        left: r[o].x + 1,
                        top: r[o].y + 1,
                        fill: this.color
                    });
                    this.shadow && s.setShadow(this.shadow),
                    t.push(s)
                }
            var l = new fabric.Group(t);
            this.canvas.add(l),
            this.canvas.fire("path:created", {
                path: l
            }),
            this.canvas.clearContext(this.canvas.contextTop),
            this._resetShadow(),
            this.canvas.renderOnAddRemove = e,
            this.canvas.renderAll()
        },
        render: function() {
            var e = this.canvas.contextTop;
            e.fillStyle = this.color,
            e.save();
            for (var t = 0, i = this.sprayChunkPoints.length; i > t; t++) {
                var n = this.sprayChunkPoints[t];
                "undefined" != typeof n.opacity && (e.globalAlpha = n.opacity),
                e.fillRect(n.x, n.y, n.width, n.width)
            }
            e.restore()
        },
        addSprayChunk: function(e) {
            this.sprayChunkPoints = [];
            for (var t, i, n, r = this.width / 2, o = 0; o < this.density; o++) {
                t = fabric.util.getRandomInt(e.x - r, e.x + r),
                i = fabric.util.getRandomInt(e.y - r, e.y + r),
                n = this.dotWidthVariance ? fabric.util.getRandomInt(Math.max(1, this.dotWidth - this.dotWidthVariance), this.dotWidth + this.dotWidthVariance) : this.dotWidth;
                var a = {
                    x: t,
                    y: i,
                    width: n
                };
                this.randomOpacity && (a.opacity = fabric.util.getRandomInt(0, 100) / 100),
                this.sprayChunkPoints.push(a)
            }
            this.sprayChunks.push(this.sprayChunkPoints)
        }
    }),
    fabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, {
        getPatternSrc: function() {
            var e = 20
              , t = 5
              , i = fabric.document.createElement("canvas")
              , n = i.getContext("2d");
            return i.width = i.height = e + t,
            n.fillStyle = this.color,
            n.beginPath(),
            n.arc(e / 2, e / 2, e / 2, 0, 2 * Math.PI, !1),
            n.closePath(),
            n.fill(),
            i
        },
        getPatternSrcFunction: function() {
            return String(this.getPatternSrc).replace("this.color", '"' + this.color + '"')
        },
        getPattern: function() {
            return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), "repeat")
        },
        setBrushStyles: function() {
            this.callSuper("setBrushStyles"),
            this.canvas.contextTop.strokeStyle = this.getPattern()
        },
        createPath: function(e) {
            var t = this.callSuper("createPath", e);
            return t.stroke = new fabric.Pattern({
                source: this.source || this.getPatternSrcFunction()
            }),
            t
        }
    }),
    function() {
        var e = fabric.util.getPointer
          , t = fabric.util.degreesToRadians
          , i = fabric.util.radiansToDegrees
          , n = Math.atan2
          , r = Math.abs
          , o = Math.min
          , a = Math.max
          , s = .5;
        fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, {
            initialize: function(e, t) {
                t || (t = {}),
                this._initStatic(e, t),
                this._initInteractive(),
                this._createCacheCanvas(),
                fabric.Canvas.activeInstance = this
            },
            uniScaleTransform: !1,
            centerTransform: !1,
            interactive: !0,
            selection: !0,
            selectionColor: "rgba(100, 100, 255, 0.3)",
            selectionDashArray: [],
            selectionBorderColor: "rgba(255, 255, 255, 0.3)",
            selectionLineWidth: 1,
            freeDrawingColor: "rgb(0, 0, 0)",
            freeDrawingFill: "transparent",
            freeDrawingLineWidth: 1,
            hoverCursor: "move",
            moveCursor: "move",
            defaultCursor: "default",
            freeDrawingCursor: "crosshair",
            rotationCursor: "crosshair",
            containerClass: "canvas-container",
            perPixelTargetFind: !1,
            targetFindTolerance: 0,
            skipTargetFind: !1,
            _initInteractive: function() {
                this._currentTransform = null ,
                this._groupSelector = null ,
                this._initWrapperElement(),
                this._createUpperCanvas(),
                this._initEvents(),
                this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this),
                this.calcOffset()
            },
            _resetCurrentTransform: function() {
                var e = this._currentTransform;
                e.target.set("scaleX", e.original.scaleX),
                e.target.set("scaleY", e.original.scaleY),
                e.target.set("left", e.original.left),
                e.target.set("top", e.original.top),
                this.centerTransform || e.target.centerTransform ? ("center" !== e.originX && (e.mouseXSign = "right" === e.originX ? -1 : 1),
                "center" !== e.originY && (e.mouseYSign = "bottom" === e.originY ? -1 : 1),
                e.originX = "center",
                e.originY = "center") : (e.originX = e.original.originX,
                e.originY = e.original.originY)
            },
            containsPoint: function(e, t) {
                var i = this.getPointer(e)
                  , n = this._normalizePointer(t, i);
                return t.containsPoint(n) || t._findTargetCorner(e, this._offset)
            },
            _normalizePointer: function(e, t) {
                var i = this.getActiveGroup()
                  , n = t.x
                  , r = t.y
                  , o = i && "group" !== e.type && i.contains(e);
                return o && (n -= i.left,
                r -= i.top),
                {
                    x: n,
                    y: r
                }
            },
            isTargetTransparent: function(e, t, i) {
                var n = this.contextCache
                  , r = e.hasBorders
                  , o = e.transparentCorners;
                e.hasBorders = e.transparentCorners = !1,
                this._draw(n, e),
                e.hasBorders = r,
                e.transparentCorners = o,
                t -= d20.engine.currentCanvasOffset[0],
                i -= d20.engine.currentCanvasOffset[1],
                this.targetFindTolerance > 0 && (t > this.targetFindTolerance ? t -= this.targetFindTolerance : t = 0,
                i > this.targetFindTolerance ? i -= this.targetFindTolerance : i = 0);
                for (var a = !0, s = n.getImageData(t, i, 2 * this.targetFindTolerance || 1, 2 * this.targetFindTolerance || 1), l = 3, c = s.data.length; c > l; l += 4) {
                    var d = s.data[l];
                    if (a = 0 >= d,
                    a === !1)
                        break
                }
                return s = null ,
                this.clearContext(n),
                a
            },
            _shouldClearSelection: function(e, t) {
                var i = this.getActiveGroup();
                return !t || t && i && !i.contains(t) && i !== t && !e.shiftKey || t && !t.selectable
            },
            _setupCurrentTransform: function(i, n, r) {
                if (n) {
                    var o, a = "drag", s = e(i, n.canvas.upperCanvasEl);
                    o = n._findTargetCorner(i, this._offset),
                    o && (a = "ml" === o || "mr" === o ? "scaleX" : "mt" === o || "mb" === o ? "scaleY" : "mtr" === o ? "rotate" : "scale"),
                    "rotate" != a && "scale" != a && "scaleX" != a && "scaleY" != a || r || (a = "drag");
                    var l = n.originX
                      , c = n.originY;
                    "ml" === o || "tl" === o || "bl" === o ? l = "right" : ("mr" === o || "tr" === o || "br" === o) && (l = "left"),
                    "tl" === o || "mt" === o || "tr" === o ? c = "bottom" : ("bl" === o || "mb" === o || "br" === o) && (c = "top"),
                    this._currentTransform = {
                        target: n,
                        action: a,
                        scaleX: n.scaleX,
                        scaleY: n.scaleY,
                        offsetX: s.x - n.left,
                        offsetY: s.y - n.top,
                        originX: l,
                        originY: c,
                        ex: s.x,
                        ey: s.y,
                        left: n.left,
                        top: n.top,
                        theta: t(n.angle),
                        width: n.width * n.scaleX,
                        mouseXSign: 1,
                        mouseYSign: 1
                    },
                    this._currentTransform.original = {
                        left: n.left,
                        top: n.top,
                        scaleX: n.scaleX,
                        scaleY: n.scaleY,
                        originX: l,
                        originY: c
                    },
                    this._resetCurrentTransform(i)
                }
            },
            _shouldHandleGroupLogic: function(e, t) {
                var i = this.getActiveObject();
                return e.shiftKey && (this.getActiveGroup() || i && i !== t) && this.selection
            },
            _handleGroupLogic: function(e, t) {
                if (t !== this.getActiveGroup() || (t = this.findTarget(e, !0),
                t && !t.isType("group"))) {
                    var i = this.getActiveGroup();
                    if (i)
                        i.contains(t) ? (i.removeWithUpdate(t),
                        this._resetObjectTransform(i),
                        t.set("active", !1),
                        1 === i.size() && this.discardActiveGroup()) : (i.addWithUpdate(t),
                        this._resetObjectTransform(i)),
                        this.fire("selection:created", {
                            target: i,
                            e: e
                        }),
                        i.set("active", !0);
                    else {
                        if (this._activeObject && t !== this._activeObject) {
                            var n = this.getObjects()
                              , r = n.indexOf(this._activeObject) < n.indexOf(t)
                              , o = new fabric.Group(r ? [t, this._activeObject] : [this._activeObject, t]);
                            this.setActiveGroup(o),
                            this._activeObject = null ,
                            i = this.getActiveGroup(),
                            this.fire("selection:created", {
                                target: i,
                                e: e
                            })
                        }
                        t.set("active", !0)
                    }
                    i && i.saveCoords()
                }
            },
            _translateObject: function(e, t) {
                var i = this._currentTransform.target;
                if (d20.engine && d20.engine.checkMovement) {
                    var n = d20.engine.checkMovement(i, [i.get("left"), i.get("top")], [e - this._currentTransform.offsetX, t - this._currentTransform.offsetY]);
                    if (0 === n)
                        return;
                    if (1 === n)
                        return void i.set("left", e - this._currentTransform.offsetX);
                    if (2 === n)
                        return void i.set("top", t - this._currentTransform.offsetY)
                }
                i.get("lockMovementX") || i.set("left", e - this._currentTransform.offsetX),
                i.get("lockMovementY") || i.set("top", t - this._currentTransform.offsetY)
            },
            _scaleObject: function(e, t, i) {
                var n = this._currentTransform
                  , o = this._offset
                  , a = n.target
                  , s = a.get("lockScalingX")
                  , l = a.get("lockScalingY");
                if (!s || !l) {
                    var c = a.translateToOriginPoint(a.getCenterPoint(), n.originX, n.originY)
                      , d = a.toLocalPoint(new fabric.Point(e - o.left,t - o.top), n.originX, n.originY);
                    "right" === n.originX ? d.x *= -1 : "center" === n.originX && (d.x *= 2 * n.mouseXSign,
                    d.x < 0 && (n.mouseXSign = -n.mouseXSign)),
                    "bottom" === n.originY ? d.y *= -1 : "center" === n.originY && (d.y *= 2 * n.mouseYSign,
                    d.y < 0 && (n.mouseYSign = -n.mouseYSign)),
                    r(d.x) > a.padding ? d.x < 0 ? d.x += a.padding : d.x -= a.padding : d.x = 0,
                    r(d.y) > a.padding ? d.y < 0 ? d.y += a.padding : d.y -= a.padding : d.y = 0;
                    var h = a.scaleX
                      , u = a.scaleY;
                    if ("equally" !== i || s || l)
                        i ? "x" !== i || a.get("lockUniScaling") ? "y" !== i || a.get("lockUniScaling") || (u = d.y / (a.height + a.strokeWidth),
                        l || a.set("scaleY", u)) : (h = d.x / (a.width + a.strokeWidth),
                        s || a.set("scaleX", h)) : (h = d.x / (a.width + a.strokeWidth),
                        u = d.y / (a.height + a.strokeWidth),
                        s || a.set("scaleX", h),
                        l || a.set("scaleY", u));
                    else {
                        var p = d.y + d.x
                          , f = (a.height + a.strokeWidth) * n.original.scaleY + (a.width + a.strokeWidth) * n.original.scaleX;
                        h = n.original.scaleX * p / f,
                        u = n.original.scaleY * p / f,
                        a.set("scaleX", h),
                        a.set("scaleY", u)
                    }
                    0 > h && ("left" === n.originX ? n.originX = "right" : "right" === n.originX && (n.originX = "left")),
                    0 > u && ("top" === n.originY ? n.originY = "bottom" : "bottom" === n.originY && (n.originY = "top")),
                    a.setPositionByOrigin(c, n.originX, n.originY)
                }
            },
            _rotateObject: function(e, t) {
                var r = this._currentTransform
                  , o = this._offset;
                if (!r.target.get("lockRotation")) {
                    var a = n(r.ey - r.top - o.top, r.ex - r.left - o.left)
                      , s = n(t - r.top - o.top, e - r.left - o.left)
                      , l = i(s - a + r.theta);
                    0 > l && (l = 360 + l),
                    r.target.angle = l
                }
            },
            _setCursor: function(e) {
                this.upperCanvasEl.style.cursor = e
            },
            _resetObjectTransform: function(e) {
                e.scaleX = 1,
                e.scaleY = 1,
                e.setAngle(0)
            },
            _drawSelection: function() {
                var e = this.contextTop
                  , t = this._groupSelector
                  , i = t.left
                  , n = t.top
                  , o = r(i)
                  , a = r(n);
                if (e.save(),
                e.translate(-d20.engine.currentCanvasOffset[0], -d20.engine.currentCanvasOffset[1]),
                e.fillStyle = this.selectionColor,
                e.fillRect(t.ex - (i > 0 ? 0 : -i), t.ey - (n > 0 ? 0 : -n), o, a),
                e.lineWidth = this.selectionLineWidth,
                e.strokeStyle = this.selectionBorderColor,
                this.selectionDashArray.length > 1) {
                    var l = t.ex + s - (i > 0 ? 0 : o)
                      , c = t.ey + s - (n > 0 ? 0 : a);
                    e.beginPath(),
                    fabric.util.drawDashedLine(e, l, c, l + o, c, this.selectionDashArray),
                    fabric.util.drawDashedLine(e, l, c + a - 1, l + o, c + a - 1, this.selectionDashArray),
                    fabric.util.drawDashedLine(e, l, c, l, c + a, this.selectionDashArray),
                    fabric.util.drawDashedLine(e, l + o - 1, c, l + o - 1, c + a, this.selectionDashArray),
                    e.closePath(),
                    e.stroke()
                } else
                    e.strokeRect(t.ex + s - (i > 0 ? 0 : o), t.ey + s - (n > 0 ? 0 : a), o, a);
                e.restore()
            },
            _findSelectedObjects: function(e) {
                for (var t, i = [], n = this._groupSelector.ex, r = this._groupSelector.ey, s = n + this._groupSelector.left, l = r + this._groupSelector.top, c = new fabric.Point(o(n, s),o(r, l)), d = new fabric.Point(a(n, s),a(r, l)), h = n === s && r === l, u = [], p = this._objects.length; p--; )
                    if (t = this._objects[p],
                    t && !(e.altKey && "image" == t.type && t.model && 1 != t.model.get("isdrawing") || e.ctrlKey && ("image" != t.type || t.model && 1 == t.model.get("isdrawing")) || !t.selectable))
                        if (t.isContainedWithinRect(c, d) && this.selection) {
                            if (t.set("active", !0),
                            i.push(t),
                            h)
                                break
                        } else if ((t.intersectsWithRect(c, d) || t.containsPoint(c) || t.containsPoint(d)) && this.selection && t.selectable)
                            if (t.model && void 0 !== t.path && t.model && "transparent" === t.model.get("fill"))
                                u.push(t);
                            else if (t.set("active", !0),
                            i.push(t),
                            h)
                                break;
                if (u.length > 0)
                    for (var p = 0; p < u.length; p++)
                        for (var f = u[p].left - Math.floor(u[p].width / 2), g = u[p].top - Math.floor(u[p].height / 2), m = !1, v = !1, y = 0; y < u[p].path.length; y++)
                            if (("L" === u[p].path[y][0] || "M" === u[p].path[y][0]) && (v = new fabric.Point(u[p].path[y][1] + f,u[p].path[y][2] + g)),
                            v) {
                                if (m && "Intersection" === fabric.Intersection.intersectLineRectangle(v, m, c, d).status) {
                                    u[p].set("active", !0),
                                    i.push(u[p]);
                                    break
                                }
                                m = v
                            }
                1 === i.length ? this.setActiveObject(i[0], e) : i.length > 1 && (i = new fabric.Group(i.reverse()),
                this.setActiveGroup(i),
                i.saveCoords(),
                this.fire("selection:created", {
                    target: i
                }),
                this.renderAll())
            },
            findTarget: function(e, t, i) {
                if (!this.skipTargetFind) {
                    var n, r = this.getPointer(e);
                    if (this.controlsAboveOverlay && this.lastRenderedObjectWithControlsAboveOverlay && this.lastRenderedObjectWithControlsAboveOverlay.visible && this.containsPoint(e, this.lastRenderedObjectWithControlsAboveOverlay) && this.lastRenderedObjectWithControlsAboveOverlay._findTargetCorner(e, this._offset))
                        return n = this.lastRenderedObjectWithControlsAboveOverlay;
                    var o = this.getActiveGroup();
                    if (o && !t && this.containsPoint(e, o))
                        return n = o;
                    for (var a = [], s = this._objects.length; s--; )
                        if (this._objects[s] && this._objects[s].visible && (this._objects[s].selectable || i && this._objects[s].model && this._objects[s].model.get("layer") === window.currentEditingLayer) && this.containsPoint(e, this._objects[s])) {
                            if (!this.perPixelTargetFind && !this._objects[s].perPixelTargetFind) {
                                n = this._objects[s],
                                this.relatedTarget = n;
                                break
                            }
                            a[a.length] = this._objects[s]
                        }
                    for (var l = 0, c = a.length; c > l; l++) {
                        r = this.getPointer(e);
                        var d = this.isTargetTransparent(a[l], r.x, r.y);
                        if (!d) {
                            n = a[l],
                            this.relatedTarget = n;
                            break
                        }
                    }
                    return n
                }
            },
            getPointer: function(t) {
                var i = e(t, this.upperCanvasEl);
                return {
                    x: i.x - this._offset.left,
                    y: i.y - this._offset.top
                }
            },
            _createUpperCanvas: function() {
                var e = this.lowerCanvasEl.className.replace(/\s*lower-canvas\s*/, "");
                this.upperCanvasEl = this._createCanvasElement(),
                fabric.util.addClass(this.upperCanvasEl, "upper-canvas " + e),
                this.upperCanvasEl.id = "upperCanvas",
                this.wrapperEl.appendChild(this.upperCanvasEl),
                this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl),
                this._applyCanvasStyle(this.upperCanvasEl),
                this.contextTop = this.upperCanvasEl.getContext("2d")
            },
            _createCacheCanvas: function() {
                this.cacheCanvasEl = this._createCanvasElement(),
                this.cacheCanvasEl.setAttribute("width", this.width),
                this.cacheCanvasEl.setAttribute("height", this.height),
                this.contextCache = this.cacheCanvasEl.getContext("2d")
            },
            _initWrapperElement: function() {
                this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, "div", {
                    "class": this.containerClass
                }),
                fabric.util.setStyle(this.wrapperEl, {
                    width: this.getWidth() + "px",
                    height: this.getHeight() + "px",
                    position: "relative"
                }),
                fabric.util.makeElementUnselectable(this.wrapperEl)
            },
            _applyCanvasStyle: function(e) {
                var t = this.getWidth() || e.width
                  , i = this.getHeight() || e.height;
                fabric.util.setStyle(e, {
                    position: "absolute",
                    width: t + "px",
                    height: i + "px",
                    left: 0,
                    top: 0
                }),
                e.width = t,
                e.height = i,
                fabric.util.makeElementUnselectable(e)
            },
            _copyCanvasStyle: function(e, t) {
                t.style.cssText = e.style.cssText
            },
            getSelectionContext: function() {
                return this.contextTop
            },
            getSelectionElement: function() {
                return this.upperCanvasEl
            },
            setActiveObject: function(e, t) {
                return this._activeObject && this._activeObject.set("active", !1),
                this._activeObject = e,
                e.set("active", !0),
                this.renderAll(),
                this.fire("object:selected", {
                    target: e,
                    e: t
                }),
                e.fire("selected", {
                    e: t
                }),
                this
            },
            getActiveObject: function() {
                return this._activeObject
            },
            discardActiveObject: function() {
                return this._activeObject && this._activeObject.set("active", !1),
                this._activeObject = null ,
                this
            },
            setActiveGroup: function(e) {
                return this._activeGroup = e,
                e && (e.canvas = this,
                e.set("active", !0)),
                this
            },
            getActiveGroup: function() {
                return this._activeGroup
            },
            discardActiveGroup: function() {
                var e = this.getActiveGroup();
                return e && e.destroy(),
                this.setActiveGroup(null )
            },
            deactivateAll: function() {
                for (var e = this.getObjects(), t = 0, i = e.length; i > t; t++)
                    e[t].set("active", !1);
                return this.discardActiveGroup(),
                this.discardActiveObject(),
                this
            },
            deactivateAllWithDispatch: function() {
                var e = this.getActiveGroup() || this.getActiveObject();
                return e && this.fire("before:selection:cleared", {
                    target: e
                }),
                this.deactivateAll(),
                e && this.fire("selection:cleared"),
                this
            },
            drawControls: function(e) {
                var t = this.getActiveGroup();
                if (t)
                    e.save(),
                    fabric.Group.prototype.transform.call(t, e),
                    t.drawBorders(e).drawControls(e),
                    e.restore();
                else
                    for (var i = 0, n = this._objects.length; n > i; ++i)
                        this._objects[i] && this._objects[i].active && (e.save(),
                        fabric.Object.prototype.transform.call(this._objects[i], e),
                        this._objects[i].drawBorders(e).drawControls(e),
                        e.restore(),
                        this.lastRenderedObjectWithControlsAboveOverlay = this._objects[i])
            }
        });
        for (var l in fabric.StaticCanvas)
            "prototype" !== l && (fabric.Canvas[l] = fabric.StaticCanvas[l]);
        fabric.isTouchSupported && (fabric.Canvas.prototype._setCursorFromEvent = function() {}
        ),
        fabric.Element = fabric.Canvas
    }(),
    function() {
        var e = ["n-resize", "ne-resize", "e-resize", "se-resize", "s-resize", "sw-resize", "w-resize", "nw-resize"]
          , t = {
            mt: 0,
            tr: 1,
            mr: 2,
            br: 3,
            mb: 4,
            bl: 5,
            ml: 6,
            tl: 7
        }
          , i = fabric.util.addListener
          , n = fabric.util.removeListener
          , r = fabric.util.getPointer;
        fabric.util.object.extend(fabric.Canvas.prototype, {
            _initEvents: function() {
                var e = this;
                this._onMouseDown = this._onMouseDown.bind(this),
                this._onMouseMove = this._onMouseMove.bind(this),
                this._onMouseUp = this._onMouseUp.bind(this),
                this._onResize = this._onResize.bind(this),
                this._onGesture = function(t, i) {
                    e.__onTransformGesture(t, i)
                }
                ,
                i(fabric.window, "resize", this._onResize),
                fabric.isTouchSupported && "undefined" != typeof Event && "add"in Event && Event.add(this.upperCanvasEl, "gesture", function(t, i) {
                    e.__onTransformGesture(t, i)
                })
            },
            _onMouseDown: function(e) {
                this.__onMouseDown(e),
                !fabric.isTouchSupported && i(fabric.document, "mouseup", this._onMouseUp),
                fabric.isTouchSupported && i(fabric.document, "touchend", this._onMouseUp),
                !fabric.isTouchSupported && i(fabric.document, "mousemove", this._onMouseMove),
                fabric.isTouchSupported && i(fabric.document, "touchmove", this._onMouseMove),
                !fabric.isTouchSupported && n(this.upperCanvasEl, "mousemove", this._onMouseMove),
                fabric.isTouchSupported && n(this.upperCanvasEl, "touchmove", this._onMouseMove)
            },
            _onMouseUp: function(e) {
                this.__onMouseUp(e),
                !fabric.isTouchSupported && n(fabric.document, "mouseup", this._onMouseUp),
                fabric.isTouchSupported && n(fabric.document, "touchend", this._onMouseUp),
                !fabric.isTouchSupported && n(fabric.document, "mousemove", this._onMouseMove),
                fabric.isTouchSupported && n(fabric.document, "touchmove", this._onMouseMove),
                !fabric.isTouchSupported && i(this.upperCanvasEl, "mousemove", this._onMouseMove),
                fabric.isTouchSupported && i(this.upperCanvasEl, "touchmove", this._onMouseMove)
            },
            _onMouseMove: function(e) {
                !this.allowTouchScrolling && e.preventDefault && e.preventDefault(),
                this.__onMouseMove(e)
            },
            _onResize: function() {
                this.calcOffset()
            },
            __onMouseUp: function(e) {
                var t;
                if (this.isDrawingMode && this._isCurrentlyDrawing)
                    return this._isCurrentlyDrawing = !1,
                    this.clipTo && this.contextTop.restore(),
                    this.freeDrawingBrush.onMouseUp(),
                    void this.fire("mouse:up", {
                        e: e
                    });
                if (this._currentTransform) {
                    var i = this._currentTransform;
                    if (t = i.target,
                    t._scaling && (t._scaling = !1),
                    t.isMoving = !1,
                    t.setCoords(),
                    this.stateful && t.hasStateChanged() && (this.fire("object:modified", {
                        target: t
                    }),
                    t.fire("modified")),
                    this._previousOriginX && this._previousOriginY) {
                        var n = t.translateToOriginPoint(t.getCenterPoint(), this._previousOriginX, this._previousOriginY);
                        t.originX = this._previousOriginX,
                        t.originY = this._previousOriginY,
                        t.left = n.x,
                        t.top = n.y,
                        this._previousOriginX = null ,
                        this._previousOriginY = null
                    }
                }
                this._currentTransform = null ,
                this.selection && this._groupSelector && this._groupSelector.top && this._groupSelector.left && Math.abs(this._groupSelector.top) + Math.abs(this._groupSelector.left) > 5 && this._findSelectedObjects(e);
                var r = this.getActiveGroup();
                r && (r.setObjectsCoords(),
                r.set("isMoving", !1),
                this._setCursor(this.defaultCursor)),
                this._groupSelector = null ,
                this.renderAll(),
                this._setCursorFromEvent(e, t);
                var o = this;
                setTimeout(function() {
                    o._setCursorFromEvent(e, t)
                }, 50),
                this.fire("mouse:up", {
                    target: t,
                    e: e
                }),
                t && t.fire("mouseup", {
                    e: e
                })
            },
            __onMouseDown: function(e) {
                var t, i = "which"in e ? 1 === e.which : 1 === e.button;
                if (i || fabric.isTouchSupported) {
                    if (this.isDrawingMode)
                        return t = this.getPointer(e),
                        this._isCurrentlyDrawing = !0,
                        this.discardActiveObject().renderAll(),
                        this.clipTo && fabric.util.clipContext(this, this.contextTop),
                        this.freeDrawingBrush.onMouseDown(t),
                        void this.fire("mouse:down", {
                            e: e
                        });
                    if (!this._currentTransform) {
                        var n, r = this.findTarget(e), o = !1;
                        if (t = this.getPointer(e),
                        this._shouldClearSelection(e, r) ? (this._groupSelector = {
                            ex: t.x,
                            ey: t.y,
                            top: 0,
                            left: 0
                        },
                        this.deactivateAllWithDispatch(),
                        r && r.selectable && this.setActiveObject(r, e)) : this._shouldHandleGroupLogic(e, r) ? (this._handleGroupLogic(e, r),
                        r = this.getActiveGroup()) : (this.stateful && r.saveState(),
                        (n = r._findTargetCorner(e, this._offset)) && this.onBeforeScaleRotate(r),
                        r !== this.getActiveGroup() && r !== this.getActiveObject() ? (this.deactivateAll(),
                        this.setActiveObject(r, e)) : o = !0,
                        this._setupCurrentTransform(e, r, o)),
                        this.renderAll(),
                        this.fire("mouse:down", {
                            target: r,
                            e: e
                        }),
                        r && r.fire("mousedown", {
                            e: e
                        }),
                        "mtr" === n && r.centerTransform) {
                            console.log("Resetting to center transform!"),
                            this._previousOriginX = this._currentTransform.target.originX,
                            this._previousOriginY = this._currentTransform.target.originY;
                            var a = r.getCenterPoint();
                            r.originX = "center",
                            r.originY = "center",
                            r.left = a.x,
                            r.top = a.y,
                            this._currentTransform.left = r.left,
                            this._currentTransform.top = r.top
                        }
                    }
                }
            },
            __onMouseMove: function(e) {
                var t, i;
                if (this.isDrawingMode)
                    return this._isCurrentlyDrawing && (i = this.getPointer(e),
                    this.freeDrawingBrush.onMouseMove(i)),
                    this.upperCanvasEl.style.cursor = this.freeDrawingCursor,
                    void this.fire("mouse:move", {
                        e: e
                    });
                var n = this._groupSelector;
                if (n)
                    i = r(e, this.upperCanvasEl),
                    n.left = i.x - this._offset.left - n.ex,
                    n.top = i.y - this._offset.top - n.ey,
                    this.renderTop();
                else if (this._currentTransform) {
                    i = r(e, this.upperCanvasEl);
                    var o = i.x
                      , a = i.y
                      , s = !1
                      , l = this._currentTransform;
                    t = l.target,
                    t.isMoving = !0,
                    "scale" !== l.action && "scaleX" !== l.action && "scaleY" !== l.action || (!e.altKey || "center" === l.originX && "center" === l.originY) && (e.altKey || "center" !== l.originX || "center" !== l.originY) || (this._resetCurrentTransform(e),
                    s = !0),
                    "rotate" === l.action ? (this._rotateObject(o, a),
                    this.fire("object:rotating", {
                        target: t,
                        e: e
                    }),
                    t.fire("rotating", {
                        e: e
                    })) : "scale" === l.action ? (!e.shiftKey && !this.uniScaleTransform || t.get("lockUniScaling") ? (s || "scale" !== l.currentAction || this._resetCurrentTransform(e),
                    l.currentAction = "scaleEqually",
                    this._scaleObject(o, a, "equally")) : (l.currentAction = "scale",
                    this._scaleObject(o, a)),
                    this.fire("object:scaling", {
                        target: t,
                        e: e
                    }),
                    t.fire("scaling", {
                        e: e
                    })) : "scaleX" === l.action ? (this._scaleObject(o, a, "x"),
                    this.fire("object:scaling", {
                        target: t,
                        e: e
                    }),
                    t.fire("scaling", {
                        e: e
                    })) : "scaleY" === l.action ? (this._scaleObject(o, a, "y"),
                    this.fire("object:scaling", {
                        target: t,
                        e: e
                    }),
                    t.fire("scaling", {
                        e: e
                    })) : (this._translateObject(o, a),
                    this.fire("object:moving", {
                        target: t,
                        e: e
                    }),
                    t.fire("moving", {
                        e: e
                    }),
                    this._setCursor(this.moveCursor)),
                    this.renderAll()
                } else {
                    var c = this.upperCanvasEl.style
                      , d = d20.engine && "targeting" === d20.engine.mode ? !0 : !1;
                    t = this.findTarget(e, null , d),
                    !t || t && !t.selectable && !d ? c.cursor = this.defaultCursor : this._setCursorFromEvent(e, t)
                }
                this.fire("mouse:move", {
                    target: t,
                    e: e
                }),
                t && t.fire("mousemove", {
                    e: e
                })
            },
            _setCursorFromEvent: function(i, n) {
                var r = this.upperCanvasEl.style;
                if (!n)
                    return r.cursor = this.defaultCursor,
                    !1;
                var o = this.getActiveGroup()
                  , a = n._findTargetCorner && (!o || !o.contains(n)) && n._findTargetCorner(i, this._offset);
                if (a)
                    if (a in t) {
                        var s = Math.round(n.getAngle() % 360 / 45);
                        0 > s && (s += 8),
                        s += t[a],
                        s %= 8,
                        r.cursor = e[s]
                    } else {
                        if ("mtr" !== a || !n.hasRotatingPoint)
                            return r.cursor = this.defaultCursor,
                            !1;
                        r.cursor = this.rotationCursor
                    }
                else
                    r.cursor = n.hoverCursor || this.hoverCursor;
                return !0
            }
        })
    }(),
    fabric.util.object.extend(fabric.StaticCanvas.prototype, {
        toDataURL: function(e) {
            e || (e = {});
            var t = e.format || "png"
              , i = e.quality || 1
              , n = e.multiplier || 1
              , r = {
                left: e.left,
                top: e.top,
                width: e.width,
                height: e.height
            };
            return 1 !== n ? this.__toDataURLWithMultiplier(t, i, r, n) : this.__toDataURL(t, i, r)
        },
        __toDataURL: function(e, t, i) {
            this.renderAll(!0);
            var n = this.upperCanvasEl || this.lowerCanvasEl
              , r = this.__getCroppedCanvas(n, i);
            "jpg" === e && (e = "jpeg");
            var o = fabric.StaticCanvas.supports("toDataURLWithQuality") ? (r || n).toDataURL("image/" + e, t) : (r || n).toDataURL("image/" + e);
            return this.contextTop && this.clearContext(this.contextTop),
            this.renderAll(),
            r && (r = null ),
            o
        },
        __getCroppedCanvas: function(e, t) {
            var i, n, r = "left"in t || "top"in t || "width"in t || "height"in t;
            return r && (i = fabric.util.createCanvasElement(),
            n = i.getContext("2d"),
            i.width = t.width || this.width,
            i.height = t.height || this.height,
            n.drawImage(e, -t.left || 0, -t.top || 0)),
            i
        },
        __toDataURLWithMultiplier: function(e, t, i, n) {
            var r = this.getWidth()
              , o = this.getHeight()
              , a = r * n
              , s = o * n
              , l = this.getActiveObject()
              , c = this.getActiveGroup()
              , d = this.contextTop || this.contextContainer;
            this.setWidth(a).setHeight(s),
            d.scale(n, n),
            i.left && (i.left *= n),
            i.top && (i.top *= n),
            i.width && (i.width *= n),
            i.height && (i.height *= n),
            c ? this._tempRemoveBordersControlsFromGroup(c) : l && this.deactivateAll && this.deactivateAll(),
            this.width = r,
            this.height = o,
            this.renderAll(!0);
            var h = this.__toDataURL(e, t, i);
            return d.scale(1 / n, 1 / n),
            this.setWidth(r).setHeight(o),
            c ? this._restoreBordersControlsOnGroup(c) : l && this.setActiveObject && this.setActiveObject(l),
            this.contextTop && this.clearContext(this.contextTop),
            this.renderAll(),
            h
        },
        toDataURLWithMultiplier: function(e, t, i) {
            return this.toDataURL({
                format: e,
                multiplier: t,
                quality: i
            })
        },
        _tempRemoveBordersControlsFromGroup: function(e) {
            e.origHasControls = e.hasControls,
            e.origBorderColor = e.borderColor,
            e.hasControls = !0,
            e.borderColor = "rgba(0,0,0,0)",
            e.forEachObject(function(e) {
                e.origBorderColor = e.borderColor,
                e.borderColor = "rgba(0,0,0,0)"
            })
        },
        _restoreBordersControlsOnGroup: function(e) {
            e.hideControls = e.origHideControls,
            e.borderColor = e.origBorderColor,
            e.forEachObject(function(e) {
                e.borderColor = e.origBorderColor,
                delete e.origBorderColor
            })
        }
    }),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , i = t.util.object.extend
          , n = t.util.toFixed
          , r = t.util.string.capitalize
          , o = t.util.degreesToRadians
          , a = t.StaticCanvas.supports("setLineDash");
        t.Object || (t.Object = t.util.createClass({
            type: "object",
            originX: "center",
            originY: "center",
            top: 0,
            left: 0,
            width: 0,
            height: 0,
            scaleX: 1,
            scaleY: 1,
            flipX: !1,
            flipY: !1,
            opacity: 1,
            angle: 0,
            cornerSize: 12,
            transparentCorners: !1,
            hoverCursor: null ,
            padding: 0,
            borderColor: "rgba(102,153,255,0.75)",
            cornerColor: "rgba(102,153,255,0.5)",
            centerTransform: !1,
            fill: "rgb(0,0,0)",
            fillRule: "source-over",
            overlayFill: null ,
            stroke: null ,
            strokeWidth: 1,
            strokeDashArray: null ,
            strokeLineCap: "butt",
            strokeLineJoin: "miter",
            strokeMiterLimit: 10,
            shadow: null ,
            borderOpacityWhenMoving: .4,
            borderScaleFactor: 1,
            transformMatrix: null ,
            minScaleLimit: .01,
            selectable: !0,
            visible: !0,
            hasControls: !0,
            hasBorders: !0,
            hasRotatingPoint: !0,
            rotatingPointOffset: 40,
            perPixelTargetFind: !1,
            includeDefaultValues: !0,
            clipTo: null ,
            lockMovementX: !1,
            lockMovementY: !1,
            lockRotation: !1,
            lockScalingX: !1,
            lockScalingY: !1,
            lockUniScaling: !1,
            stateProperties: "top left width height scaleX scaleY flipX flipY originX originY transformMatrix stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit angle opacity fill fillRule overlayFill shadow clipTo visible".split(" "),
            initialize: function(e) {
                e && this.setOptions(e)
            },
            _initGradient: function(e) {
                !e.fill || !e.fill.colorStops || e.fill instanceof t.Gradient || this.set("fill", new t.Gradient(e.fill))
            },
            _initPattern: function(e) {
                !e.fill || !e.fill.source || e.fill instanceof t.Pattern || this.set("fill", new t.Pattern(e.fill)),
                !e.stroke || !e.stroke.source || e.stroke instanceof t.Pattern || this.set("stroke", new t.Pattern(e.stroke))
            },
            _initClipping: function(e) {
                if (e.clipTo && "string" == typeof e.clipTo) {
                    var i = t.util.getFunctionBody(e.clipTo);
                    "undefined" != typeof i && (this.clipTo = new Function("ctx",i))
                }
            },
            setOptions: function(e) {
                for (var t in e)
                    this.set(t, e[t]);
                this._initGradient(e),
                this._initPattern(e),
                this._initClipping(e)
            },
            transform: function(e, t) {
                e.globalAlpha *= this.opacity;
                var i = t ? this._getLeftTopCoords() : this.getCenterPoint();
                this.renderingInGroup ? (this.renderingInGroup.transform(e),
                e.translate(i.x, i.y)) : e.translate(i.x - d20.engine.currentCanvasOffset[0], i.y - d20.engine.currentCanvasOffset[1]),
                e.rotate(o(this.angle)),
                e.scale(this.scaleX * (this.flipX ? -1 : 1), this.scaleY * (this.flipY ? -1 : 1))
            },
            toObject: function(e) {
                var i = t.Object.NUM_FRACTION_DIGITS
                  , r = {
                    type: this.type,
                    originX: this.originX,
                    originY: this.originY,
                    left: n(this.left, i),
                    top: n(this.top, i),
                    width: n(this.width, i),
                    height: n(this.height, i),
                    fill: this.fill && this.fill.toObject ? this.fill.toObject() : this.fill,
                    overlayFill: this.overlayFill,
                    stroke: this.stroke && this.stroke.toObject ? this.stroke.toObject() : this.stroke,
                    strokeWidth: n(this.strokeWidth, i),
                    strokeDashArray: this.strokeDashArray,
                    strokeLineCap: this.strokeLineCap,
                    strokeLineJoin: this.strokeLineJoin,
                    strokeMiterLimit: n(this.strokeMiterLimit, i),
                    scaleX: n(this.scaleX, i),
                    scaleY: n(this.scaleY, i),
                    angle: n(this.getAngle(), i),
                    flipX: this.flipX,
                    flipY: this.flipY,
                    opacity: n(this.opacity, i),
                    shadow: this.shadow && this.shadow.toObject ? this.shadow.toObject() : this.shadow,
                    visible: this.visible,
                    clipTo: this.clipTo && String(this.clipTo)
                };
                return this.includeDefaultValues || (r = this._removeDefaultValues(r)),
                t.util.populateWithProperties(this, r, e),
                r
            },
            toDatalessObject: function(e) {
                return this.toObject(e)
            },
            getSvgStyles: function() {
                var e = this.fill ? this.fill.toLive ? "url(#SVGID_" + this.fill.id + ")" : this.fill : "none"
                  , t = this.stroke ? this.stroke.toLive ? "url(#SVGID_" + this.stroke.id + ")" : this.stroke : "none"
                  , i = this.strokeWidth ? this.strokeWidth : "0"
                  , n = this.strokeDashArray ? this.strokeDashArray.join(" ") : ""
                  , r = this.strokeLineCap ? this.strokeLineCap : "butt"
                  , o = this.strokeLineJoin ? this.strokeLineJoin : "miter"
                  , a = this.strokeMiterLimit ? this.strokeMiterLimit : "4"
                  , s = "undefined" != typeof this.opacity ? this.opacity : "1"
                  , l = this.visible ? "" : " visibility: hidden;"
                  , c = this.shadow && "text" !== this.type ? "filter: url(#SVGID_" + this.shadow.id + ");" : "";
                return ["stroke: ", t, "; ", "stroke-width: ", i, "; ", "stroke-dasharray: ", n, "; ", "stroke-linecap: ", r, "; ", "stroke-linejoin: ", o, "; ", "stroke-miterlimit: ", a, "; ", "fill: ", e, "; ", "opacity: ", s, ";", c, l].join("")
            },
            getSvgTransform: function() {
                var e = this.getAngle()
                  , i = this.getCenterPoint()
                  , r = t.Object.NUM_FRACTION_DIGITS
                  , o = "translate(" + n(i.x, r) + " " + n(i.y, r) + ")"
                  , a = 0 !== e ? " rotate(" + n(e, r) + ")" : ""
                  , s = 1 === this.scaleX && 1 === this.scaleY ? "" : " scale(" + n(this.scaleX, r) + " " + n(this.scaleY, r) + ")"
                  , l = this.flipX ? "matrix(-1 0 0 1 0 0) " : ""
                  , c = this.flipY ? "matrix(1 0 0 -1 0 0)" : "";
                return [o, a, s, l, c].join("")
            },
            _createBaseSVGMarkup: function() {
                var e = [];
                return this.fill && this.fill.toLive && e.push(this.fill.toSVG(this, !1)),
                this.stroke && this.stroke.toLive && e.push(this.stroke.toSVG(this, !1)),
                this.shadow && e.push(this.shadow.toSVG(this)),
                e
            },
            _removeDefaultValues: function(e) {
                return this.stateProperties.forEach(function(t) {
                    e[t] === this.constructor.prototype[t] && delete e[t]
                }, this),
                e
            },
            toString: function() {
                return "#<fabric." + r(this.type) + ">"
            },
            get: function(e) {
                return this[e]
            },
            set: function(e, t) {
                if ("object" == typeof e)
                    for (var i in e)
                        this._set(i, e[i]);
                else
                    "function" == typeof t && "clipTo" !== e ? this._set(e, t(this.get(e))) : this._set(e, t);
                return this
            },
            _set: function(e, i) {
                var r = "scaleX" === e || "scaleY" === e;
                return r && (i = this._constrainScale(i)),
                "scaleX" === e && 0 > i ? (this.flipX = !this.flipX,
                i *= -1) : "scaleY" === e && 0 > i ? (this.flipY = !this.flipY,
                i *= -1) : "width" === e || "height" === e ? this.minScaleLimit = n(Math.min(.1, 1 / Math.max(this.width, this.height)), 2) : "shadow" !== e || !i || i instanceof t.Shadow || (i = new t.Shadow(i)),
                this[e] = i,
                this
            },
            toggle: function(e) {
                var t = this.get(e);
                return "boolean" == typeof t && this.set(e, !t),
                this
            },
            setSourcePath: function(e) {
                return this.sourcePath = e,
                this
            },
            render: function(e, i) {
                if (0 !== this.width && 0 !== this.height && this.visible) {
                    e.save();
                    var n = this.transformMatrix;
                    n && !this.group && e.setTransform(n[0], n[1], n[2], n[3], n[4], n[5]),
                    i || this.transform(e),
                    this.stroke && (e.lineWidth = this.strokeWidth,
                    e.lineCap = this.strokeLineCap,
                    e.lineJoin = this.strokeLineJoin,
                    e.miterLimit = this.strokeMiterLimit,
                    e.strokeStyle = this.stroke.toLive ? this.stroke.toLive(e) : this.stroke),
                    this.overlayFill ? e.fillStyle = this.overlayFill : this.fill && (e.fillStyle = this.fill.toLive ? this.fill.toLive(e) : this.fill),
                    n && this.group && (e.translate(-this.group.width / 2, -this.group.height / 2),
                    e.transform(n[0], n[1], n[2], n[3], n[4], n[5])),
                    this._setShadow(e),
                    this.clipTo && t.util.clipContext(this, e),
                    this._render(e, i),
                    this.clipTo && e.restore(),
                    this._removeShadow(e),
                    this.active && !i && (this.drawBorders(e),
                    this.drawControls(e)),
                    e.restore()
                }
            },
            _setShadow: function(e) {
                this.shadow && (e.shadowColor = this.shadow.color,
                e.shadowBlur = this.shadow.blur,
                e.shadowOffsetX = this.shadow.offsetX,
                e.shadowOffsetY = this.shadow.offsetY)
            },
            _removeShadow: function(e) {
                e.shadowColor = "",
                e.shadowBlur = e.shadowOffsetX = e.shadowOffsetY = 0
            },
            _renderFill: function(e) {
                this.fill && (this.fill.toLive && (e.save(),
                e.translate(-this.width / 2 + this.fill.offsetX || 0, -this.height / 2 + this.fill.offsetY || 0)),
                e.fill(),
                this.fill.toLive && e.restore(),
                this.shadow && !this.shadow.affectStroke && this._removeShadow(e))
            },
            _renderStroke: function(e) {
                this.stroke && (e.save(),
                this.strokeDashArray ? (1 & this.strokeDashArray.length && this.strokeDashArray.push.apply(this.strokeDashArray, this.strokeDashArray),
                a ? (e.setLineDash(this.strokeDashArray),
                this._stroke && this._stroke(e)) : this._renderDashedStroke && this._renderDashedStroke(e),
                e.stroke()) : this._stroke ? this._stroke(e) : e.stroke(),
                this._removeShadow(e),
                e.restore())
            },
            clone: function(e, i) {
                return this.constructor.fromObject ? this.constructor.fromObject(this.toObject(i), e) : new t.Object(this.toObject(i))
            },
            cloneAsImage: function(e) {
                var i = this.toDataURL();
                return t.util.loadImage(i, function(i) {
                    e && e(new t.Image(i))
                }),
                this
            },
            toDataURL: function(e) {
                e || (e = {});
                var i = t.util.createCanvasElement();
                i.width = this.getBoundingRectWidth(),
                i.height = this.getBoundingRectHeight(),
                t.util.wrapElement(i, "div");
                var n = new t.Canvas(i);
                "jpeg" === e.format && (n.backgroundColor = "#fff");
                var r = {
                    active: this.get("active"),
                    left: this.getLeft(),
                    top: this.getTop()
                };
                this.set({
                    active: !1,
                    left: i.width / 2,
                    top: i.height / 2
                }),
                n.add(this);
                var o = n.toDataURL(e);
                return this.set(r).setCoords(),
                n.dispose(),
                n = null ,
                o
            },
            isType: function(e) {
                return this.type === e
            },
            toGrayscale: function() {
                var e = this.get("fill");
                return e && this.set("overlayFill", new t.Color(e).toGrayscale().toRgb()),
                this
            },
            complexity: function() {
                return 0
            },
            toJSON: function(e) {
                return this.toObject(e)
            },
            needsRender: function(e, t) {
                var i = 0;
                if (this.active || this.renderingInGroup)
                    return !0;
                if ("image" == this.type && this.model && (i = 30,
                "" != this.model.get("aura1_radius") || "" != this.model.get("aura2_radius")))
                    return !0;
                var n = (0 != this.theta ? this.getBoundingRectWidth() : this.width * this.scaleX) / 2
                  , r = (0 != this.theta ? this.getBoundingRectHeight() : this.height * this.scaleY) / 2
                  , o = [this.left - n, this.top - r]
                  , a = [this.left + n, this.top + r];
                return o[0] > t[0] || a[0] < e[0] || o[1] > t[1] || a[1] < e[1] ? !1 : !0
            },
            setGradient: function(e, i) {
                i || (i = {});
                var n = {
                    colorStops: []
                };
                n.type = i.type || (i.r1 || i.r2 ? "radial" : "linear"),
                n.coords = {
                    x1: i.x1,
                    y1: i.y1,
                    x2: i.x2,
                    y2: i.y2
                },
                (i.r1 || i.r2) && (n.coords.r1 = i.r1,
                n.coords.r2 = i.r2);
                for (var r in i.colorStops) {
                    var o = new t.Color(i.colorStops[r]);
                    n.colorStops.push({
                        offset: r,
                        color: o.toRgb(),
                        opacity: o.getAlpha()
                    })
                }
                return this.set(e, t.Gradient.forObject(this, n))
            },
            setPatternFill: function(e) {
                return this.set("fill", new t.Pattern(e))
            },
            setShadow: function(e) {
                return this.set("shadow", new t.Shadow(e))
            },
            setColor: function(e) {
                return this.set("fill", e),
                this
            },
            centerH: function() {
                return this.canvas.centerObjectH(this),
                this
            },
            centerV: function() {
                return this.canvas.centerObjectV(this),
                this
            },
            center: function() {
                return this.centerH().centerV()
            },
            remove: function() {
                return this.canvas.remove(this)
            },
            sendToBack: function() {
                return this.group ? t.StaticCanvas.prototype.sendToBack.call(this.group, this) : this.canvas.sendToBack(this),
                this
            },
            bringToFront: function() {
                return this.group ? t.StaticCanvas.prototype.bringToFront.call(this.group, this) : this.canvas.bringToFront(this),
                this
            },
            sendBackwards: function(e) {
                return this.group ? t.StaticCanvas.prototype.sendBackwards.call(this.group, this, e) : this.canvas.sendBackwards(this, e),
                this
            },
            bringForward: function(e) {
                return this.group ? t.StaticCanvas.prototype.bringForward.call(this.group, this, e) : this.canvas.bringForward(this, e),
                this
            },
            moveTo: function(e) {
                return this.group ? t.StaticCanvas.prototype.moveTo.call(this.group, this, e) : this.canvas.moveTo(this, e),
                this
            }
        }),
        t.util.createAccessors(t.Object),
        t.Object.prototype.rotate = t.Object.prototype.setAngle,
        i(t.Object.prototype, t.Observable),
        t.Object.NUM_FRACTION_DIGITS = 2,
        t.Object.__uid = 0)
    }("undefined" != typeof exports ? exports : this),
    function() {
        var e = fabric.util.degreesToRadians;
        fabric.util.object.extend(fabric.Object.prototype, {
            translateToCenterPoint: function(t, i, n) {
                var r = t.x
                  , o = t.y;
                return "left" === i ? r = t.x + (this.getWidth() + this.strokeWidth * this.scaleX) / 2 : "right" === i && (r = t.x - (this.getWidth() + this.strokeWidth * this.scaleX) / 2),
                "top" === n ? o = t.y + (this.getHeight() + this.strokeWidth * this.scaleY) / 2 : "bottom" === n && (o = t.y - (this.getHeight() + this.strokeWidth * this.scaleY) / 2),
                fabric.util.rotatePoint(new fabric.Point(r,o), t, e(this.angle))
            },
            translateToOriginPoint: function(t, i, n) {
                var r = t.x
                  , o = t.y;
                return "left" === i ? r = t.x - (this.getWidth() + this.strokeWidth * this.scaleX) / 2 : "right" === i && (r = t.x + (this.getWidth() + this.strokeWidth * this.scaleX) / 2),
                "top" === n ? o = t.y - (this.getHeight() + this.strokeWidth * this.scaleY) / 2 : "bottom" === n && (o = t.y + (this.getHeight() + this.strokeWidth * this.scaleY) / 2),
                fabric.util.rotatePoint(new fabric.Point(r,o), t, e(this.angle))
            },
            getCenterPoint: function() {
                return this.translateToCenterPoint(new fabric.Point(this.left,this.top), this.originX, this.originY)
            },
            toLocalPoint: function(t, i, n) {
                var r, o, a = this.getCenterPoint();
                return void 0 !== i && void 0 !== n ? (r = "left" === i ? a.x - (this.getWidth() + this.strokeWidth * this.scaleX) / 2 : "right" === i ? a.x + (this.getWidth() + this.strokeWidth * this.scaleX) / 2 : a.x,
                o = "top" === n ? a.y - (this.getHeight() + this.strokeWidth * this.scaleY) / 2 : "bottom" === n ? a.y + (this.getHeight() + this.strokeWidth * this.scaleY) / 2 : a.y) : (r = this.left,
                o = this.top),
                fabric.util.rotatePoint(new fabric.Point(t.x,t.y), a, -e(this.angle)).subtractEquals(new fabric.Point(r,o))
            },
            setPositionByOrigin: function(e, t, i) {
                var n = this.translateToCenterPoint(e, t, i)
                  , r = this.translateToOriginPoint(n, this.originX, this.originY);
                this.set("left", r.x),
                this.set("top", r.y)
            },
            adjustPosition: function(t) {
                var i = e(this.angle)
                  , n = this.getWidth() / 2
                  , r = Math.cos(i) * n
                  , o = Math.sin(i) * n
                  , a = this.getWidth()
                  , s = Math.cos(i) * a
                  , l = Math.sin(i) * a;
                "center" === this.originX && "left" === t || "right" === this.originX && "center" === t ? (this.left -= r,
                this.top -= o) : "left" === this.originX && "center" === t || "center" === this.originX && "right" === t ? (this.left += r,
                this.top += o) : "left" === this.originX && "right" === t ? (this.left += s,
                this.top += l) : "right" === this.originX && "left" === t && (this.left -= s,
                this.top -= l),
                this.setCoords(),
                this.originX = t
            },
            _getLeftTopCoords: function() {
                var t = e(this.angle)
                  , i = this.getWidth() / 2
                  , n = Math.cos(t) * i
                  , r = Math.sin(t) * i
                  , o = this.left
                  , a = this.top;
                return ("center" === this.originX || "right" === this.originX) && (o -= n),
                ("center" === this.originY || "bottom" === this.originY) && (a -= r),
                {
                    x: o,
                    y: a
                }
            }
        })
    }(),
    function() {
        var e = fabric.util.degreesToRadians;
        fabric.util.object.extend(fabric.Object.prototype, {
            oCoords: null ,
            intersectsWithRect: function(e, t) {
                var i = this.oCoords
                  , n = new fabric.Point(i.tl.x,i.tl.y)
                  , r = new fabric.Point(i.tr.x,i.tr.y)
                  , o = new fabric.Point(i.bl.x,i.bl.y)
                  , a = new fabric.Point(i.br.x,i.br.y)
                  , s = fabric.Intersection.intersectPolygonRectangle([n, r, a, o], e, t);
                return "Intersection" === s.status
            },
            intersectsWithObject: function(e) {
                function t(e) {
                    return {
                        tl: new fabric.Point(e.tl.x,e.tl.y),
                        tr: new fabric.Point(e.tr.x,e.tr.y),
                        bl: new fabric.Point(e.bl.x,e.bl.y),
                        br: new fabric.Point(e.br.x,e.br.y)
                    }
                }
                var i = t(this.oCoords)
                  , n = t(e.oCoords)
                  , r = fabric.Intersection.intersectPolygonPolygon([i.tl, i.tr, i.br, i.bl], [n.tl, n.tr, n.br, n.bl]);
                return "Intersection" === r.status
            },
            isContainedWithinObject: function(e) {
                var t = e.getBoundingRect()
                  , i = new fabric.Point(t.left,t.top)
                  , n = new fabric.Point(t.left + t.width,t.top + t.height);
                return this.isContainedWithinRect(i, n)
            },
            isContainedWithinRect: function(e, t) {
                var i = this.getBoundingRect();
                return i.left > e.x && i.left + i.width < t.x && i.top > e.y && i.top + i.height < t.y
            },
            containsPoint: function(e) {
                var t = this._getImageLines(this.oCoords)
                  , i = this._findCrossPoints(e, t);
                return 0 !== i && i % 2 === 1
            },
            _getImageLines: function(e) {
                return {
                    topline: {
                        o: e.tl,
                        d: e.tr
                    },
                    rightline: {
                        o: e.tr,
                        d: e.br
                    },
                    bottomline: {
                        o: e.br,
                        d: e.bl
                    },
                    leftline: {
                        o: e.bl,
                        d: e.tl
                    }
                }
            },
            _findCrossPoints: function(e, t) {
                var i, n, r, o, a, s, l, c = 0;
                for (var d in t)
                    if (l = t[d],
                    !(l.o.y < e.y && l.d.y < e.y || l.o.y >= e.y && l.d.y >= e.y || (l.o.x === l.d.x && l.o.x >= e.x ? (a = l.o.x,
                    s = e.y) : (i = 0,
                    n = (l.d.y - l.o.y) / (l.d.x - l.o.x),
                    r = e.y - i * e.x,
                    o = l.o.y - n * l.o.x,
                    a = -(r - o) / (i - n),
                    s = r + i * a),
                    a >= e.x && (c += 1),
                    2 !== c)))
                        break;
                return c
            },
            getBoundingRectWidth: function() {
                return this.getBoundingRect().width
            },
            getBoundingRectHeight: function() {
                return this.getBoundingRect().height
            },
            getBoundingRect: function() {
                this.oCoords || this.setCoords();
                var e = [this.oCoords.tl.x, this.oCoords.tr.x, this.oCoords.br.x, this.oCoords.bl.x]
                  , t = fabric.util.array.min(e)
                  , i = fabric.util.array.max(e)
                  , n = Math.abs(t - i)
                  , r = [this.oCoords.tl.y, this.oCoords.tr.y, this.oCoords.br.y, this.oCoords.bl.y]
                  , o = fabric.util.array.min(r)
                  , a = fabric.util.array.max(r)
                  , s = Math.abs(o - a);
                return {
                    left: t,
                    top: o,
                    width: n,
                    height: s
                }
            },
            getWidth: function() {
                return this.width * this.scaleX
            },
            getHeight: function() {
                return this.height * this.scaleY
            },
            _constrainScale: function(e) {
                return Math.abs(e) < this.minScaleLimit ? 0 > e ? -this.minScaleLimit : this.minScaleLimit : e
            },
            scale: function(e) {
                return e = this._constrainScale(e),
                0 > e && (this.flipX = !this.flipX,
                this.flipY = !this.flipY,
                e *= -1),
                this.scaleX = e,
                this.scaleY = e,
                this.setCoords(),
                this
            },
            scaleToWidth: function(e) {
                var t = this.getBoundingRectWidth() / this.getWidth();
                return this.scale(e / this.width / t)
            },
            scaleToHeight: function(e) {
                var t = this.getBoundingRectHeight() / this.getHeight();
                return this.scale(e / this.height / t)
            },
            setCoords: function() {
                var t = this.strokeWidth > 1 ? this.strokeWidth : 0
                  , i = this.padding
                  , n = e(this.angle);
                this.currentWidth = (this.width + t) * this.scaleX + 2 * i,
                this.currentHeight = (this.height + t) * this.scaleY + 2 * i,
                this.currentWidth < 0 && (this.currentWidth = Math.abs(this.currentWidth));
                var r = Math.sqrt(Math.pow(this.currentWidth / 2, 2) + Math.pow(this.currentHeight / 2, 2))
                  , o = Math.atan(isFinite(this.currentHeight / this.currentWidth) ? this.currentHeight / this.currentWidth : 0)
                  , a = Math.cos(o + n) * r
                  , s = Math.sin(o + n) * r
                  , l = Math.sin(n)
                  , c = Math.cos(n)
                  , d = this.getCenterPoint()
                  , h = {
                    x: d.x - a,
                    y: d.y - s
                }
                  , u = {
                    x: h.x + this.currentWidth * c,
                    y: h.y + this.currentWidth * l
                }
                  , p = {
                    x: u.x - this.currentHeight * l,
                    y: u.y + this.currentHeight * c
                }
                  , f = {
                    x: h.x - this.currentHeight * l,
                    y: h.y + this.currentHeight * c
                }
                  , g = {
                    x: h.x - this.currentHeight / 2 * l,
                    y: h.y + this.currentHeight / 2 * c
                }
                  , m = {
                    x: h.x + this.currentWidth / 2 * c,
                    y: h.y + this.currentWidth / 2 * l
                }
                  , v = {
                    x: u.x - this.currentHeight / 2 * l,
                    y: u.y + this.currentHeight / 2 * c
                }
                  , y = {
                    x: f.x + this.currentWidth / 2 * c,
                    y: f.y + this.currentWidth / 2 * l
                }
                  , b = {
                    x: m.x,
                    y: m.y
                };
                return this.oCoords = {
                    tl: h,
                    tr: u,
                    br: p,
                    bl: f,
                    ml: g,
                    mt: m,
                    mr: v,
                    mb: y,
                    mtr: b
                },
                this._setCornerCoords && this._setCornerCoords(),
                this
            }
        })
    }(),
    fabric.util.object.extend(fabric.Object.prototype, {
        hasStateChanged: function() {
            return this.stateProperties.some(function(e) {
                return this.get(e) !== this.originalState[e]
            }, this)
        },
        saveState: function(e) {
            return this.stateProperties.forEach(function(e) {
                this.originalState[e] = this.get(e)
            }, this),
            e && e.stateProperties && e.stateProperties.forEach(function(e) {
                this.originalState[e] = this.get(e)
            }, this),
            this
        },
        setupState: function() {
            return this.originalState = {},
            this.saveState(),
            this
        }
    }),
    function() {
        var e = fabric.util.getPointer
          , t = fabric.util.degreesToRadians;
        fabric.util.object.extend(fabric.Object.prototype, {
            _findTargetCorner: function(t, i) {
                if (!this.hasControls || !this.active)
                    return !1;
                var n, r, o = e(t, this.canvas.upperCanvasEl), a = o.x - i.left, s = o.y - i.top;
                for (var l in this.oCoords)
                    if (!("mtr" !== l && this.hideResizers || "mtr" === l && !this.hasRotatingPoint || this.get("lockUniScaling") && ("mt" === l || "mr" === l || "mb" === l || "ml" === l) || (r = this._getImageLines(this.oCoords[l].corner),
                    n = this._findCrossPoints({
                        x: a,
                        y: s
                    }, r),
                    0 === n || n % 2 !== 1)))
                        return this.__corner = l,
                        l;
                return !1
            },
            _setCornerCoords: function() {
                var e = this.oCoords
                  , i = t(this.angle)
                  , n = t(45 - this.angle)
                  , r = Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2
                  , o = r * Math.cos(n)
                  , a = r * Math.sin(n)
                  , s = Math.sin(i)
                  , l = Math.cos(i);
                e.tl.corner = {
                    tl: {
                        x: e.tl.x - a,
                        y: e.tl.y - o
                    },
                    tr: {
                        x: e.tl.x + o,
                        y: e.tl.y - a
                    },
                    bl: {
                        x: e.tl.x - o,
                        y: e.tl.y + a
                    },
                    br: {
                        x: e.tl.x + a,
                        y: e.tl.y + o
                    }
                },
                e.tr.corner = {
                    tl: {
                        x: e.tr.x - a,
                        y: e.tr.y - o
                    },
                    tr: {
                        x: e.tr.x + o,
                        y: e.tr.y - a
                    },
                    br: {
                        x: e.tr.x + a,
                        y: e.tr.y + o
                    },
                    bl: {
                        x: e.tr.x - o,
                        y: e.tr.y + a
                    }
                },
                e.bl.corner = {
                    tl: {
                        x: e.bl.x - a,
                        y: e.bl.y - o
                    },
                    bl: {
                        x: e.bl.x - o,
                        y: e.bl.y + a
                    },
                    br: {
                        x: e.bl.x + a,
                        y: e.bl.y + o
                    },
                    tr: {
                        x: e.bl.x + o,
                        y: e.bl.y - a
                    }
                },
                e.br.corner = {
                    tr: {
                        x: e.br.x + o,
                        y: e.br.y - a
                    },
                    bl: {
                        x: e.br.x - o,
                        y: e.br.y + a
                    },
                    br: {
                        x: e.br.x + a,
                        y: e.br.y + o
                    },
                    tl: {
                        x: e.br.x - a,
                        y: e.br.y - o
                    }
                },
                e.ml.corner = {
                    tl: {
                        x: e.ml.x - a,
                        y: e.ml.y - o
                    },
                    tr: {
                        x: e.ml.x + o,
                        y: e.ml.y - a
                    },
                    bl: {
                        x: e.ml.x - o,
                        y: e.ml.y + a
                    },
                    br: {
                        x: e.ml.x + a,
                        y: e.ml.y + o
                    }
                },
                e.mt.corner = {
                    tl: {
                        x: e.mt.x - a,
                        y: e.mt.y - o
                    },
                    tr: {
                        x: e.mt.x + o,
                        y: e.mt.y - a
                    },
                    bl: {
                        x: e.mt.x - o,
                        y: e.mt.y + a
                    },
                    br: {
                        x: e.mt.x + a,
                        y: e.mt.y + o
                    }
                },
                e.mr.corner = {
                    tl: {
                        x: e.mr.x - a,
                        y: e.mr.y - o
                    },
                    tr: {
                        x: e.mr.x + o,
                        y: e.mr.y - a
                    },
                    bl: {
                        x: e.mr.x - o,
                        y: e.mr.y + a
                    },
                    br: {
                        x: e.mr.x + a,
                        y: e.mr.y + o
                    }
                },
                e.mb.corner = {
                    tl: {
                        x: e.mb.x - a,
                        y: e.mb.y - o
                    },
                    tr: {
                        x: e.mb.x + o,
                        y: e.mb.y - a
                    },
                    bl: {
                        x: e.mb.x - o,
                        y: e.mb.y + a
                    },
                    br: {
                        x: e.mb.x + a,
                        y: e.mb.y + o
                    }
                },
                e.mtr.corner = {
                    tl: {
                        x: e.mtr.x - a + s * this.rotatingPointOffset,
                        y: e.mtr.y - o - l * this.rotatingPointOffset
                    },
                    tr: {
                        x: e.mtr.x + o + s * this.rotatingPointOffset,
                        y: e.mtr.y - a - l * this.rotatingPointOffset
                    },
                    bl: {
                        x: e.mtr.x - o + s * this.rotatingPointOffset,
                        y: e.mtr.y + a - l * this.rotatingPointOffset
                    },
                    br: {
                        x: e.mtr.x + a + s * this.rotatingPointOffset,
                        y: e.mtr.y + o - l * this.rotatingPointOffset
                    }
                }
            },
            drawBorders: function(e) {
                if (!this.hasBorders)
                    return this;
                var t = this.padding
                  , i = 2 * t
                  , n = 2 * ~~(this.strokeWidth / 2);
                e.save(),
                e.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1,
                e.strokeStyle = this.borderColor;
                var r = 1 / this._constrainScale(this.scaleX)
                  , o = 1 / this._constrainScale(this.scaleY);
                e.lineWidth = 1 / this.borderScaleFactor,
                e.scale(r, o);
                var a = this.getWidth()
                  , s = this.getHeight();
                if (e.strokeRect(~~(-(a / 2) - t - n / 2 * this.scaleX) - .5, ~~(-(s / 2) - t - n / 2 * this.scaleY) - .5, ~~(a + i + n * this.scaleX) + 1, ~~(s + i + n * this.scaleY) + 1),
                this.hasRotatingPoint && !this.get("lockRotation") && this.hasControls) {
                    var l = (this.flipY ? s + n * this.scaleY + 2 * t : -s - n * this.scaleY - 2 * t) / 2;
                    e.beginPath(),
                    e.moveTo(0, l),
                    e.lineTo(0, l + (this.flipY ? this.rotatingPointOffset : -this.rotatingPointOffset)),
                    e.closePath(),
                    e.stroke()
                }
                return e.restore(),
                this
            },
            drawControls: function(e) {
                if (!this.hasControls)
                    return this;
                var t, i, n = this.cornerSize, r = n / 2, o = ~~(this.strokeWidth / 2), a = -(this.width / 2), s = -(this.height / 2), l = n / this.scaleX, c = n / this.scaleY, d = this.padding / this.scaleX, h = this.padding / this.scaleY, u = r / this.scaleY, p = r / this.scaleX, f = (r - n) / this.scaleX, g = (r - n) / this.scaleY, m = this.height, v = this.width, y = this.transparentCorners ? "strokeRect" : "fillRect", b = this.transparentCorners, w = "undefined" != typeof G_vmlCanvasManager;
                return e.save(),
                e.lineWidth = 1 / Math.max(this.scaleX, this.scaleY),
                e.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1,
                e.strokeStyle = e.fillStyle = this.cornerColor,
                this.hideResizers || (t = a - p - o - d,
                i = s - u - o - h,
                w || b || e.clearRect(t, i, l, c),
                e[y](t, i, l, c),
                t = a + v - p + o + d,
                i = s - u - o - h,
                w || b || e.clearRect(t, i, l, c),
                e[y](t, i, l, c),
                t = a - p - o - d,
                i = s + m + g + o + h,
                w || b || e.clearRect(t, i, l, c),
                e[y](t, i, l, c),
                t = a + v + f + o + d,
                i = s + m + g + o + h,
                w || b || e.clearRect(t, i, l, c),
                e[y](t, i, l, c),
                this.get("lockUniScaling") || (t = a + v / 2 - p,
                i = s - u - o - h,
                w || e.clearRect(t, i, l, c),
                e[y](t, i, l, c),
                t = a + v / 2 - p,
                i = s + m + g + o + h,
                w || e.clearRect(t, i, l, c),
                e[y](t, i, l, c),
                t = a + v + f + o + d,
                i = s + m / 2 - u,
                w || e.clearRect(t, i, l, c),
                e[y](t, i, l, c),
                t = a - p - o - d,
                i = s + m / 2 - u,
                w || e.clearRect(t, i, l, c),
                e[y](t, i, l, c))),
                this.hasRotatingPoint && (t = a + v / 2 - p,
                i = this.flipY ? s + m + this.rotatingPointOffset / this.scaleY - c / 2 + o + h : s - this.rotatingPointOffset / this.scaleY - c / 2 - o - h,
                w || b || e.clearRect(t, i, l, c),
                e[y](t, i, l, c)),
                e.restore(),
                this
            }
        })
    }(),
    fabric.util.object.extend(fabric.StaticCanvas.prototype, {
        FX_DURATION: 500,
        fxCenterObjectH: function(e, t) {
            t = t || {};
            var i = function() {}
              , n = t.onComplete || i
              , r = t.onChange || i
              , o = this;
            return fabric.util.animate({
                startValue: e.get("left"),
                endValue: this.getCenter().left,
                duration: this.FX_DURATION,
                onChange: function(t) {
                    e.set("left", t),
                    o.renderAll(),
                    r()
                },
                onComplete: function() {
                    e.setCoords(),
                    n()
                }
            }),
            this
        },
        fxCenterObjectV: function(e, t) {
            t = t || {};
            var i = function() {}
              , n = t.onComplete || i
              , r = t.onChange || i
              , o = this;
            return fabric.util.animate({
                startValue: e.get("top"),
                endValue: this.getCenter().top,
                duration: this.FX_DURATION,
                onChange: function(t) {
                    e.set("top", t),
                    o.renderAll(),
                    r()
                },
                onComplete: function() {
                    e.setCoords(),
                    n()
                }
            }),
            this
        },
        fxRemove: function(e, t) {
            t = t || {};
            var i = function() {}
              , n = t.onComplete || i
              , r = t.onChange || i
              , o = this;
            return fabric.util.animate({
                startValue: e.get("opacity"),
                endValue: 0,
                duration: this.FX_DURATION,
                onStart: function() {
                    e.set("active", !1)
                },
                onChange: function(t) {
                    e.set("opacity", t),
                    o.renderAll(),
                    r()
                },
                onComplete: function() {
                    o.remove(e),
                    n()
                }
            }),
            this
        }
    }),
    fabric.util.object.extend(fabric.Object.prototype, {
        animate: function() {
            if (arguments[0] && "object" == typeof arguments[0]) {
                var e, t, i = [];
                for (e in arguments[0])
                    i.push(e);
                for (var n = 0, r = i.length; r > n; n++)
                    e = i[n],
                    t = n !== r - 1,
                    this._animate(e, arguments[0][e], arguments[1], t)
            } else
                this._animate.apply(this, arguments);
            return this
        },
        _animate: function(e, t, i, n) {
            var r, o = this;
            t = t.toString(),
            i = i ? fabric.util.object.clone(i) : {},
            ~e.indexOf(".") && (r = e.split("."));
            var a = r ? this.get(r[0])[r[1]] : this.get(e);
            "from"in i || (i.from = a),
            t = ~t.indexOf("=") ? a + parseFloat(t.replace("=", "")) : parseFloat(t),
            fabric.util.animate({
                startValue: i.from,
                endValue: t,
                byValue: i.by,
                easing: i.easing,
                duration: i.duration,
                abort: i.abort && function() {
                    return i.abort.call(o)
                }
                ,
                onChange: function(t) {
                    r ? o[r[0]][r[1]] = t : o.set(e, t),
                    n || i.onChange && i.onChange()
                },
                onComplete: function() {
                    n || (o.setCoords(),
                    i.onComplete && i.onComplete())
                }
            })
        }
    }),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , i = t.util.object.extend
          , n = {
            x1: 1,
            x2: 1,
            y1: 1,
            y2: 1
        }
          , r = t.StaticCanvas.supports("setLineDash");
        return t.Line ? void t.warn("fabric.Line is already defined") : (t.Line = t.util.createClass(t.Object, {
            type: "line",
            initialize: function(e, t) {
                t = t || {},
                e || (e = [0, 0, 0, 0]),
                this.callSuper("initialize", t),
                this.set("x1", e[0]),
                this.set("y1", e[1]),
                this.set("x2", e[2]),
                this.set("y2", e[3]),
                this._setWidthHeight(t)
            },
            _setWidthHeight: function(e) {
                e || (e = {}),
                this.set("width", Math.abs(this.x2 - this.x1) || 1),
                this.set("height", Math.abs(this.y2 - this.y1) || 1),
                this.set("left", "left"in e ? e.left : Math.min(this.x1, this.x2) + this.width / 2),
                this.set("top", "top"in e ? e.top : Math.min(this.y1, this.y2) + this.height / 2)
            },
            _set: function(e, t) {
                return this[e] = t,
                e in n && this._setWidthHeight(),
                this
            },
            _render: function(e) {
                e.beginPath();
                var t = this.group && "group" !== this.group.type;
                if (t && !this.transformMatrix && e.translate(-this.group.width / 2 + this.left, -this.group.height / 2 + this.top),
                !this.strokeDashArray || this.strokeDashArray && r) {
                    var i = this.x1 <= this.x2 ? -1 : 1
                      , n = this.y1 <= this.y2 ? -1 : 1;
                    e.moveTo(1 === this.width ? 0 : i * this.width / 2, 1 === this.height ? 0 : n * this.height / 2),
                    e.lineTo(1 === this.width ? 0 : -1 * i * this.width / 2, 1 === this.height ? 0 : -1 * n * this.height / 2)
                }
                e.lineWidth = this.strokeWidth;
                var o = e.strokeStyle;
                e.strokeStyle = this.stroke || e.fillStyle,
                this._renderStroke(e),
                e.strokeStyle = o
            },
            _renderDashedStroke: function(e) {
                var i = this.x1 <= this.x2 ? -1 : 1
                  , n = this.y1 <= this.y2 ? -1 : 1
                  , r = 1 === this.width ? 0 : i * this.width / 2
                  , o = 1 === this.height ? 0 : n * this.height / 2;
                e.beginPath(),
                t.util.drawDashedLine(e, r, o, -r, -o, this.strokeDashArray),
                e.closePath()
            },
            toObject: function(e) {
                return i(this.callSuper("toObject", e), {
                    x1: this.get("x1"),
                    y1: this.get("y1"),
                    x2: this.get("x2"),
                    y2: this.get("y2")
                })
            },
            toSVG: function() {
                var e = this._createBaseSVGMarkup();
                return e.push("<line ", 'x1="', this.get("x1"), '" y1="', this.get("y1"), '" x2="', this.get("x2"), '" y2="', this.get("y2"), '" style="', this.getSvgStyles(), '"/>'),
                e.join("")
            },
            complexity: function() {
                return 1
            }
        }),
        void (t.Line.fromObject = function(e) {
            var i = [e.x1, e.y1, e.x2, e.y2];
            return new t.Line(i,e)
        }
        ))
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , i = 2 * Math.PI
          , n = t.util.object.extend;
        return t.Circle ? void t.warn("fabric.Circle is already defined.") : (t.Circle = t.util.createClass(t.Object, {
            type: "circle",
            initialize: function(e) {
                e = e || {},
                this.set("radius", e.radius || 0),
                this.callSuper("initialize", e)
            },
            _set: function(e, t) {
                return this.callSuper("_set", e, t),
                "radius" === e && this.setRadius(t),
                this
            },
            toObject: function(e) {
                return n(this.callSuper("toObject", e), {
                    radius: this.get("radius")
                })
            },
            toSVG: function() {
                var e = this._createBaseSVGMarkup();
                return e.push("<circle ", 'cx="0" cy="0" ', 'r="', this.radius, '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), '"/>'),
                e.join("")
            },
            _render: function(e, t) {
                e.beginPath(),
                e.globalAlpha = this.group ? e.globalAlpha * this.opacity : this.opacity,
                e.arc(t ? this.left : 0, t ? this.top : 0, this.radius, 0, i, !1),
                e.closePath(),
                this._renderFill(e),
                this._renderStroke(e)
            },
            getRadiusX: function() {
                return this.get("radius") * this.get("scaleX")
            },
            getRadiusY: function() {
                return this.get("radius") * this.get("scaleY")
            },
            setRadius: function(e) {
                this.radius = e,
                this.set("width", 2 * e).set("height", 2 * e)
            },
            complexity: function() {
                return 1
            }
        }),
        void (t.Circle.fromObject = function(e) {
            return new t.Circle(e)
        }
        ))
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {});
        return t.Triangle ? void t.warn("fabric.Triangle is already defined") : (t.Triangle = t.util.createClass(t.Object, {
            type: "triangle",
            initialize: function(e) {
                e = e || {},
                this.callSuper("initialize", e),
                this.set("width", e.width || 100).set("height", e.height || 100)
            },
            _render: function(e) {
                var t = this.width / 2
                  , i = this.height / 2;
                e.beginPath(),
                e.moveTo(-t, i),
                e.lineTo(0, -i),
                e.lineTo(t, i),
                e.closePath(),
                this._renderFill(e),
                this._renderStroke(e)
            },
            _renderDashedStroke: function(e) {
                var i = this.width / 2
                  , n = this.height / 2;
                e.beginPath(),
                t.util.drawDashedLine(e, -i, n, 0, -n, this.strokeDashArray),
                t.util.drawDashedLine(e, 0, -n, i, n, this.strokeDashArray),
                t.util.drawDashedLine(e, i, n, -i, n, this.strokeDashArray),
                e.closePath()
            },
            toSVG: function() {
                var e = this._createBaseSVGMarkup()
                  , t = this.width / 2
                  , i = this.height / 2
                  , n = [-t + " " + i, "0 " + -i, t + " " + i].join(",");
                return e.push("<polygon ", 'points="', n, '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), '"/>'),
                e.join("")
            },
            complexity: function() {
                return 1
            }
        }),
        void (t.Triangle.fromObject = function(e) {
            return new t.Triangle(e)
        }
        ))
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , i = 2 * Math.PI
          , n = t.util.object.extend;
        return t.Ellipse ? void t.warn("fabric.Ellipse is already defined.") : (t.Ellipse = t.util.createClass(t.Object, {
            type: "ellipse",
            rx: 0,
            ry: 0,
            initialize: function(e) {
                e = e || {},
                this.callSuper("initialize", e),
                this.set("rx", e.rx || 0),
                this.set("ry", e.ry || 0),
                this.set("width", 2 * this.get("rx")),
                this.set("height", 2 * this.get("ry"))
            },
            toObject: function(e) {
                return n(this.callSuper("toObject", e), {
                    rx: this.get("rx"),
                    ry: this.get("ry")
                })
            },
            toSVG: function() {
                var e = this._createBaseSVGMarkup();
                return e.push("<ellipse ", 'rx="', this.get("rx"), '" ry="', this.get("ry"), '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), '"/>'),
                e.join("")
            },
            render: function(e, t) {
                return 0 !== this.rx && 0 !== this.ry ? this.callSuper("render", e, t) : void 0
            },
            _render: function(e, t) {
                e.beginPath(),
                e.save(),
                e.globalAlpha = this.group ? e.globalAlpha * this.opacity : this.opacity,
                this.transformMatrix && this.group && e.translate(this.cx, this.cy),
                e.transform(1, 0, 0, this.ry / this.rx, 0, 0),
                e.arc(t ? this.left : 0, t ? this.top : 0, this.rx, 0, i, !1),
                this._renderFill(e),
                this._renderStroke(e),
                e.restore()
            },
            complexity: function() {
                return 1
            }
        }),
        void (t.Ellipse.fromObject = function(e) {
            return new t.Ellipse(e)
        }
        ))
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , i = t.util.object.extend;
        if (t.Rect)
            return void console.warn("fabric.Rect is already defined");
        var n = t.Object.prototype.stateProperties.concat();
        n.push("rx", "ry"),
        t.Rect = t.util.createClass(t.Object, {
            stateProperties: n,
            type: "rect",
            rx: 0,
            ry: 0,
            strokeDashArray: null ,
            initialize: function(e) {
                e = e || {},
                this.callSuper("initialize", e),
                this._initRxRy(),
                this.x = e.x || 0,
                this.y = e.y || 0
            },
            _initRxRy: function() {
                this.rx && !this.ry ? this.ry = this.rx : this.ry && !this.rx && (this.rx = this.ry)
            },
            _render: function(e) {
                var t = this.rx || 0
                  , i = this.ry || 0
                  , n = -this.width / 2
                  , r = -this.height / 2
                  , o = this.width
                  , a = this.height
                  , s = this.group && "group" !== this.group.type;
                e.beginPath(),
                e.globalAlpha = s ? e.globalAlpha * this.opacity : this.opacity,
                this.transformMatrix && s && e.translate(this.width / 2 + this.x, this.height / 2 + this.y),
                !this.transformMatrix && s && e.translate(-this.group.width / 2 + this.width / 2 + this.x, -this.group.height / 2 + this.height / 2 + this.y);
                var l = 0 !== t || 0 !== i;
                e.moveTo(n + t, r),
                e.lineTo(n + o - t, r),
                l && e.quadraticCurveTo(n + o, r, n + o, r + i, n + o, r + i),
                e.lineTo(n + o, r + a - i),
                l && e.quadraticCurveTo(n + o, r + a, n + o - t, r + a, n + o - t, r + a),
                e.lineTo(n + t, r + a),
                l && e.quadraticCurveTo(n, r + a, n, r + a - i, n, r + a - i),
                e.lineTo(n, r + i),
                l && e.quadraticCurveTo(n, r, n + t, r, n + t, r),
                e.closePath(),
                this._renderFill(e),
                this._renderStroke(e)
            },
            _renderDashedStroke: function(e) {
                var i = -this.width / 2
                  , n = -this.height / 2
                  , r = this.width
                  , o = this.height;
                e.beginPath(),
                t.util.drawDashedLine(e, i, n, i + r, n, this.strokeDashArray),
                t.util.drawDashedLine(e, i + r, n, i + r, n + o, this.strokeDashArray),
                t.util.drawDashedLine(e, i + r, n + o, i, n + o, this.strokeDashArray),
                t.util.drawDashedLine(e, i, n + o, i, n, this.strokeDashArray),
                e.closePath()
            },
            _normalizeLeftTopProperties: function(e) {
                return "left"in e && this.set("left", e.left + this.getWidth() / 2),
                this.set("x", e.left || 0),
                "top"in e && this.set("top", e.top + this.getHeight() / 2),
                this.set("y", e.top || 0),
                this
            },
            toObject: function(e) {
                return i(this.callSuper("toObject", e), {
                    rx: this.get("rx") || 0,
                    ry: this.get("ry") || 0,
                    x: this.get("x"),
                    y: this.get("y")
                })
            },
            toSVG: function() {
                var e = this._createBaseSVGMarkup();
                return e.push("<rect ", 'x="', -1 * this.width / 2, '" y="', -1 * this.height / 2, '" rx="', this.get("rx"), '" ry="', this.get("ry"), '" width="', this.width, '" height="', this.height, '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), '"/>'),
                e.join("")
            },
            complexity: function() {
                return 1
            }
        }),
        t.Rect.fromObject = function(e) {
            return new t.Rect(e)
        }
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        {
            var t = e.fabric || (e.fabric = {})
              , i = t.util.toFixed;
            t.util.array.min
        }
        return t.Polyline ? void t.warn("fabric.Polyline is already defined") : (t.Polyline = t.util.createClass(t.Object, {
            type: "polyline",
            initialize: function(e, t, i) {
                t = t || {},
                this.set("points", e),
                this.callSuper("initialize", t),
                this._calcDimensions(i)
            },
            _calcDimensions: function(e) {
                return t.Polygon.prototype._calcDimensions.call(this, e)
            },
            toObject: function(e) {
                return t.Polygon.prototype.toObject.call(this, e)
            },
            toSVG: function() {
                for (var e = [], t = this._createBaseSVGMarkup(), n = 0, r = this.points.length; r > n; n++)
                    e.push(i(this.points[n].x, 2), ",", i(this.points[n].y, 2), " ");
                return t.push("<polyline ", 'points="', e.join(""), '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), '"/>'),
                t.join("")
            },
            _render: function(e) {
                var t;
                e.beginPath(),
                e.moveTo(this.points[0].x, this.points[0].y);
                for (var i = 0, n = this.points.length; n > i; i++)
                    t = this.points[i],
                    e.lineTo(t.x, t.y);
                this._renderFill(e),
                this._renderStroke(e)
            },
            _renderDashedStroke: function(e) {
                var i, n;
                e.beginPath();
                for (var r = 0, o = this.points.length; o > r; r++)
                    i = this.points[r],
                    n = this.points[r + 1] || i,
                    t.util.drawDashedLine(e, i.x, i.y, n.x, n.y, this.strokeDashArray)
            },
            complexity: function() {
                return this.get("points").length
            }
        }),
        void (t.Polyline.fromObject = function(e) {
            var i = e.points;
            return new t.Polyline(i,e,!0)
        }
        ))
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , i = t.util.object.extend
          , n = t.util.array.min
          , r = t.util.array.max
          , o = t.util.toFixed;
        return t.Polygon ? void t.warn("fabric.Polygon is already defined") : (t.Polygon = t.util.createClass(t.Object, {
            type: "polygon",
            initialize: function(e, t, i) {
                t = t || {},
                this.points = e,
                this.callSuper("initialize", t),
                this._calcDimensions(i)
            },
            _calcDimensions: function(e) {
                var t = this.points
                  , i = n(t, "x")
                  , o = n(t, "y")
                  , a = r(t, "x")
                  , s = r(t, "y");
                if (this.width = a - i || 1,
                this.height = s - o || 1,
                this.minX = i,
                this.minY = o,
                !e) {
                    var l = this.width / 2 + this.minX
                      , c = this.height / 2 + this.minY;
                    this.points.forEach(function(e) {
                        e.x -= l,
                        e.y -= c
                    }, this)
                }
            },
            toObject: function(e) {
                return i(this.callSuper("toObject", e), {
                    points: this.points.concat()
                })
            },
            toSVG: function() {
                for (var e = [], t = this._createBaseSVGMarkup(), i = 0, n = this.points.length; n > i; i++)
                    e.push(o(this.points[i].x, 2), ",", o(this.points[i].y, 2), " ");
                return t.push("<polygon ", 'points="', e.join(""), '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), '"/>'),
                t.join("")
            },
            _render: function(e) {
                var t;
                e.beginPath(),
                e.moveTo(this.points[0].x, this.points[0].y);
                for (var i = 0, n = this.points.length; n > i; i++)
                    t = this.points[i],
                    e.lineTo(t.x, t.y);
                this._renderFill(e),
                (this.stroke || this.strokeDashArray) && (e.closePath(),
                this._renderStroke(e))
            },
            _renderDashedStroke: function(e) {
                var i, n;
                e.beginPath();
                for (var r = 0, o = this.points.length; o > r; r++)
                    i = this.points[r],
                    n = this.points[r + 1] || this.points[0],
                    t.util.drawDashedLine(e, i.x, i.y, n.x, n.y, this.strokeDashArray);
                e.closePath()
            },
            complexity: function() {
                return this.points.length
            }
        }),
        void (t.Polygon.fromObject = function(e) {
            return new t.Polygon(e.points,e,!0)
        }
        ))
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        function t(e) {
            return "H" === e[0] ? e[1] : e[e.length - 2]
        }
        function i(e) {
            return "V" === e[0] ? e[1] : e[e.length - 1]
        }
        var n = {
            m: 2,
            l: 2,
            h: 1,
            v: 1,
            c: 6,
            s: 4,
            q: 4,
            t: 2,
            a: 7
        }
          , r = e.fabric || (e.fabric = {})
          , o = r.util.array.min
          , a = r.util.array.max
          , s = r.util.object.extend
          , l = Object.prototype.toString
          , c = r.util.drawArc;
        return r.Path ? void r.warn("fabric.Path is already defined") : (r.Path = r.util.createClass(r.Object, {
            type: "path",
            initialize: function(e, t) {
                if (t = t || {},
                this.setOptions(t),
                !e)
                    throw new Error("`path` argument is required");
                var i = "[object Array]" === l.call(e);
                this.path = i ? e : e.match && e.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi),
                this.path && (i || (this.path = this._parsePath()),
                this._initializePath(t),
                t.sourcePath && this.setSourcePath(t.sourcePath))
            },
            _initializePath: function(e) {
                var t = "width"in e && null != e.width
                  , i = "height"in e && null != e.width
                  , n = "left"in e
                  , r = "top"in e
                  , o = n ? this.left : 0
                  , a = r ? this.top : 0;
                t && i ? (r || (this.top = this.height / 2),
                n || (this.left = this.width / 2)) : (s(this, this._parseDimensions()),
                t && (this.width = e.width),
                i && (this.height = e.height)),
                this.pathOffset = this.pathOffset || this._calculatePathOffset(o, a)
            },
            _calculatePathOffset: function(e, t) {
                return {
                    x: this.left - e - this.width / 2,
                    y: this.top - t - this.height / 2
                }
            },
            _render: function(e) {
                for (var t, i, n, r, o, a = null , s = 0, l = 0, d = 0, h = 0, u = -(this.width / 2 + this.pathOffset.x), p = -(this.height / 2 + this.pathOffset.y), f = 0, g = this.path.length; g > f; ++f) {
                    switch (t = this.path[f],
                    t[0]) {
                    case "l":
                        s += t[1],
                        l += t[2],
                        e.lineTo(s + u, l + p);
                        break;
                    case "L":
                        s = t[1],
                        l = t[2],
                        e.lineTo(s + u, l + p);
                        break;
                    case "h":
                        s += t[1],
                        e.lineTo(s + u, l + p);
                        break;
                    case "H":
                        s = t[1],
                        e.lineTo(s + u, l + p);
                        break;
                    case "v":
                        l += t[1],
                        e.lineTo(s + u, l + p);
                        break;
                    case "V":
                        l = t[1],
                        e.lineTo(s + u, l + p);
                        break;
                    case "m":
                        s += t[1],
                        l += t[2],
                        e[!a || "m" !== a[0] && "M" !== a[0] ? "moveTo" : "lineTo"](s + u, l + p);
                        break;
                    case "M":
                        s = t[1],
                        l = t[2],
                        e[!a || "m" !== a[0] && "M" !== a[0] ? "moveTo" : "lineTo"](s + u, l + p);
                        break;
                    case "c":
                        i = s + t[5],
                        n = l + t[6],
                        d = s + t[3],
                        h = l + t[4],
                        e.bezierCurveTo(s + t[1] + u, l + t[2] + p, d + u, h + p, i + u, n + p),
                        s = i,
                        l = n;
                        break;
                    case "C":
                        s = t[5],
                        l = t[6],
                        d = t[3],
                        h = t[4],
                        e.bezierCurveTo(t[1] + u, t[2] + p, d + u, h + p, s + u, l + p);
                        break;
                    case "s":
                        i = s + t[3],
                        n = l + t[4],
                        d = d ? 2 * s - d : s,
                        h = h ? 2 * l - h : l,
                        e.bezierCurveTo(d + u, h + p, s + t[1] + u, l + t[2] + p, i + u, n + p),
                        d = s + t[1],
                        h = l + t[2],
                        s = i,
                        l = n;
                        break;
                    case "S":
                        i = t[3],
                        n = t[4],
                        d = 2 * s - d,
                        h = 2 * l - h,
                        e.bezierCurveTo(d + u, h + p, t[1] + u, t[2] + p, i + u, n + p),
                        s = i,
                        l = n,
                        d = t[1],
                        h = t[2];
                        break;
                    case "q":
                        i = s + t[3],
                        n = l + t[4],
                        d = s + t[1],
                        h = l + t[2],
                        e.quadraticCurveTo(d + u, h + p, i + u, n + p),
                        s = i,
                        l = n;
                        break;
                    case "Q":
                        i = t[3],
                        n = t[4],
                        e.quadraticCurveTo(t[1] + u, t[2] + p, i + u, n + p),
                        s = i,
                        l = n,
                        d = t[1],
                        h = t[2];
                        break;
                    case "t":
                        i = s + t[1],
                        n = l + t[2],
                        null === a[0].match(/[QqTt]/) ? (d = s,
                        h = l) : "t" === a[0] ? (d = 2 * s - r,
                        h = 2 * l - o) : "q" === a[0] && (d = 2 * s - d,
                        h = 2 * l - h),
                        r = d,
                        o = h,
                        e.quadraticCurveTo(d + u, h + p, i + u, n + p),
                        s = i,
                        l = n,
                        d = s + t[1],
                        h = l + t[2];
                        break;
                    case "T":
                        i = t[1],
                        n = t[2],
                        d = 2 * s - d,
                        h = 2 * l - h,
                        e.quadraticCurveTo(d + u, h + p, i + u, n + p),
                        s = i,
                        l = n;
                        break;
                    case "a":
                        c(e, s + u, l + p, [t[1], t[2], t[3], t[4], t[5], t[6] + s + u, t[7] + l + p]),
                        s += t[6],
                        l += t[7];
                        break;
                    case "A":
                        c(e, s + u, l + p, [t[1], t[2], t[3], t[4], t[5], t[6] + u, t[7] + p]),
                        s = t[6],
                        l = t[7];
                        break;
                    case "z":
                    case "Z":
                        e.closePath()
                    }
                    a = t
                }
            },
            render: function(e, t) {
                if (this.visible) {
                    e.save();
                    var i = this.transformMatrix;
                    i && e.transform(i[0], i[1], i[2], i[3], i[4], i[5]),
                    t || this.transform(e),
                    this.overlayFill ? e.fillStyle = this.overlayFill : this.fill && (e.fillStyle = this.fill.toLive ? this.fill.toLive(e) : this.fill),
                    this.stroke && (e.lineWidth = this.strokeWidth,
                    e.lineCap = this.strokeLineCap,
                    e.lineJoin = this.strokeLineJoin,
                    e.miterLimit = this.strokeMiterLimit,
                    e.strokeStyle = this.stroke.toLive ? this.stroke.toLive(e) : this.stroke),
                    this._setShadow(e),
                    this.clipTo && r.util.clipContext(this, e),
                    e.beginPath(),
                    this._render(e),
                    this._renderFill(e),
                    this._renderStroke(e),
                    this.clipTo && e.restore(),
                    this._removeShadow(e),
                    !t && this.active && (this.drawBorders(e),
                    this.drawControls(e)),
                    e.restore()
                }
            },
            toString: function() {
                return "#<fabric.Path (" + this.complexity() + '): { "top": ' + this.top + ', "left": ' + this.left + " }>"
            },
            toObject: function(e) {
                var t = s(this.callSuper("toObject", e), {
                    path: this.path,
                    pathOffset: this.pathOffset
                });
                return this.sourcePath && (t.sourcePath = this.sourcePath),
                this.transformMatrix && (t.transformMatrix = this.transformMatrix),
                t
            },
            toDatalessObject: function(e) {
                var t = this.toObject(e);
                return this.sourcePath && (t.path = this.sourcePath),
                delete t.sourcePath,
                t
            },
            toSVG: function() {
                for (var e = [], t = this._createBaseSVGMarkup(), i = 0, n = this.path.length; n > i; i++)
                    e.push(this.path[i].join(" "));
                var r = e.join(" ");
                return t.push('<g transform="', this.group ? "" : this.getSvgTransform(), '">', "<path ", 'd="', r, '" style="', this.getSvgStyles(), '" transform="translate(', -this.width / 2, " ", -this.height / 2, ")", '" stroke-linecap="round" ', "/>", "</g>"),
                t.join("")
            },
            complexity: function() {
                return this.path.length
            },
            _parsePath: function() {
                for (var e, t, i, r, o, a = [], s = [], l = /(-?\.\d+)|(-?\d+(\.\d+)?)/g, c = 0, d = this.path.length; d > c; c++) {
                    for (e = this.path[c],
                    r = e.slice(1).trim(),
                    s.length = 0; i = l.exec(r); )
                        s.push(i[0]);
                    o = [e.charAt(0)];
                    for (var h = 0, u = s.length; u > h; h++)
                        t = parseFloat(s[h]),
                        isNaN(t) || o.push(t);
                    var p = o[0].toLowerCase()
                      , f = n[p];
                    if (o.length - 1 > f)
                        for (var g = 1, m = o.length; m > g; g += f)
                            a.push([o[0]].concat(o.slice(g, g + f)));
                    else
                        a.push(o)
                }
                return a
            },
            _parseDimensions: function() {
                var e, n, r, s, l = [], c = [], d = !1;
                this.path.forEach(function(o, a) {
                    "H" !== o[0] && (e = t(0 === a ? o : this.path[a - 1])),
                    "V" !== o[0] && (n = i(0 === a ? o : this.path[a - 1])),
                    o[0] === o[0].toLowerCase() && (d = !0),
                    r = d ? e + t(o) : "V" === o[0] ? e : t(o),
                    s = d ? n + i(o) : "H" === o[0] ? n : i(o);
                    var h = parseInt(r, 10);
                    isNaN(h) || l.push(h),
                    h = parseInt(s, 10),
                    isNaN(h) || c.push(h)
                }, this);
                var h = o(l)
                  , u = o(c)
                  , p = a(l)
                  , f = a(c)
                  , g = p - h
                  , m = f - u
                  , v = {
                    left: this.left + (h + g / 2),
                    top: this.top + (u + m / 2),
                    width: g,
                    height: m
                };
                return v
            }
        }),
        r.Path.fromObject = function(e, t) {
            "string" == typeof e.path ? r.loadSVGFromURL(e.path, function(i) {
                var n = i[0]
                  , o = e.path;
                delete e.path,
                r.util.object.extend(n, e),
                n.setSourcePath(o),
                t(n)
            }) : t(new r.Path(e.path,e))
        }
        ,
        void (r.Path.async = !0))
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , i = t.util.object.extend
          , n = t.util.array.invoke
          , r = t.Object.prototype.toObject;
        return t.PathGroup ? void t.warn("fabric.PathGroup is already defined") : (t.PathGroup = t.util.createClass(t.Path, {
            type: "path-group",
            fill: "",
            initialize: function(e, t) {
                t = t || {},
                this.paths = e || [];
                for (var i = this.paths.length; i--; )
                    this.paths[i].group = this;
                this.setOptions(t),
                this.setCoords(),
                t.sourcePath && this.setSourcePath(t.sourcePath)
            },
            render: function(e) {
                if (this.visible) {
                    e.save();
                    var i = this.transformMatrix;
                    i && e.transform(i[0], i[1], i[2], i[3], i[4], i[5]),
                    this.transform(e),
                    this._setShadow(e),
                    this.clipTo && t.util.clipContext(this, e);
                    for (var n = 0, r = this.paths.length; r > n; ++n)
                        this.paths[n].render(e, !0);
                    this.clipTo && e.restore(),
                    this._removeShadow(e),
                    this.active && (this.drawBorders(e),
                    this.drawControls(e)),
                    e.restore()
                }
            },
            _set: function(e, t) {
                if (("fill" === e || "overlayFill" === e) && t && this.isSameColor())
                    for (var i = this.paths.length; i--; )
                        this.paths[i]._set(e, t);
                return this.callSuper("_set", e, t)
            },
            toObject: function(e) {
                return i(r.call(this, e), {
                    paths: n(this.getObjects(), "toObject", e),
                    sourcePath: this.sourcePath
                })
            },
            toDatalessObject: function(e) {
                var t = this.toObject(e);
                return this.sourcePath && (t.paths = this.sourcePath),
                t
            },
            toSVG: function() {
                for (var e = this.getObjects(), t = ["<g ", 'style="', this.getSvgStyles(), '" ', 'transform="', this.getSvgTransform(), '" ', ">"], i = 0, n = e.length; n > i; i++)
                    t.push(e[i].toSVG());
                return t.push("</g>"),
                t.join("")
            },
            toString: function() {
                return "#<fabric.PathGroup (" + this.complexity() + "): { top: " + this.top + ", left: " + this.left + " }>"
            },
            isSameColor: function() {
                var e = this.getObjects()[0].get("fill");
                return this.getObjects().every(function(t) {
                    return t.get("fill") === e
                })
            },
            complexity: function() {
                return this.paths.reduce(function(e, t) {
                    return e + (t && t.complexity ? t.complexity() : 0)
                }, 0)
            },
            toGrayscale: function() {
                for (var e = this.paths.length; e--; )
                    this.paths[e].toGrayscale();
                return this
            },
            getObjects: function() {
                return this.paths
            }
        }),
        t.PathGroup.fromObject = function(e, i) {
            "string" == typeof e.paths ? t.loadSVGFromURL(e.paths, function(n) {
                var r = e.paths;
                delete e.paths;
                var o = t.util.groupSVGElements(n, e, r);
                i(o)
            }) : t.util.enlivenObjects(e.paths, function(n) {
                delete e.paths,
                i(new t.PathGroup(n,e))
            })
        }
        ,
        void (t.PathGroup.async = !0))
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , i = t.util.object.extend
          , n = t.util.array.min
          , r = t.util.array.max
          , o = t.util.array.invoke;
        if (!t.Group) {
            var a = {
                lockMovementX: !0,
                lockMovementY: !0,
                lockRotation: !0,
                lockScalingX: !0,
                lockScalingY: !0,
                lockUniScaling: !0
            };
            t.Group = t.util.createClass(t.Object, t.Collection, {
                type: "group",
                initialize: function(e, t) {
                    t = t || {},
                    this._objects = e || [];
                    for (var n = this._objects.length; n--; )
                        this._objects[n].group = this;
                    this.originalState = {},
                    this.callSuper("initialize"),
                    this._calcBounds(),
                    this._updateObjectsCoords(),
                    t && i(this, t),
                    this._setOpacityIfSame(),
                    this.hasControls = !0,
                    this.setCoords(!0),
                    this.saveCoords()
                },
                _updateObjectsCoords: function() {
                    var e = this.left
                      , t = this.top;
                    this.forEachObject(function(i) {
                        var n = i.get("left")
                          , r = i.get("top");
                        i.set("originalLeft", n),
                        i.set("originalTop", r),
                        i.set("left", n - e),
                        i.set("top", r - t),
                        i.setCoords(),
                        i.__origHasControls = i.hasControls,
                        i.hasControls = !1
                    }, this)
                },
                toString: function() {
                    return "#<fabric.Group: (" + this.complexity() + ")>"
                },
                getObjects: function() {
                    return this._objects
                },
                addWithUpdate: function(e) {
                    return this._restoreObjectsState(),
                    this._objects.push(e),
                    e.group = this,
                    this.forEachObject(function(e) {
                        e.set("active", !0),
                        e.group = this
                    }, this),
                    this._calcBounds(),
                    this._updateObjectsCoords(),
                    this
                },
                removeWithUpdate: function(e) {
                    return this._restoreObjectsState(),
                    this.forEachObject(function(e) {
                        e.set("active", !0),
                        e.group = this
                    }, this),
                    this.remove(e),
                    this._calcBounds(),
                    this._updateObjectsCoords(),
                    this
                },
                _onObjectAdded: function(e) {
                    e.group = this
                },
                _onObjectRemoved: function(e) {
                    delete e.group,
                    e.set("active", !1)
                },
                delegatedProperties: {
                    fill: !0,
                    opacity: !0,
                    fontFamily: !0,
                    fontWeight: !0,
                    fontSize: !0,
                    fontStyle: !0,
                    lineHeight: !0,
                    textDecoration: !0,
                    textAlign: !0,
                    backgroundColor: !0
                },
                _set: function(e, t) {
                    if (e in this.delegatedProperties) {
                        var i = this._objects.length;
                        for (this[e] = t; i--; )
                            this._objects[i].set(e, t)
                    } else
                        this[e] = t
                },
                toObject: function(e) {
                    return i(this.callSuper("toObject", e), {
                        objects: o(this._objects, "toObject", e)
                    })
                },
                render: function(e, i) {
                    if (this.visible) {
                        e.save(),
                        this.transform(e);
                        var n = Math.max(this.scaleX, this.scaleY);
                        this.clipTo && t.util.clipContext(this, e);
                        for (var r = 0, o = this._objects.length; o > r; r++) {
                            var a = this._objects[r]
                              , s = a.borderScaleFactor
                              , l = a.hasRotatingPoint;
                            a.visible && (a.borderScaleFactor = n,
                            a.hasRotatingPoint = !1,
                            a.render(e),
                            a.borderScaleFactor = s,
                            a.hasRotatingPoint = l)
                        }
                        this.clipTo && e.restore(),
                        !i && this.active && (this.drawBorders(e),
                        this.drawControls(e)),
                        e.restore(),
                        this.setCoords()
                    }
                },
                _restoreObjectsState: function() {
                    return this._objects.forEach(this._restoreObjectState, this),
                    this
                },
                _restoreObjectState: function(e) {
                    var t = this.get("left")
                      , i = this.get("top")
                      , n = this.getAngle() * (Math.PI / 180)
                      , r = Math.cos(n) * e.get("top") * this.get("scaleY") + Math.sin(n) * e.get("left") * this.get("scaleX")
                      , o = -Math.sin(n) * e.get("top") * this.get("scaleY") + Math.cos(n) * e.get("left") * this.get("scaleX");
                    return e.setAngle(e.getAngle() + this.getAngle()),
                    e.set("left", t + o),
                    e.set("top", i + r),
                    e.set("scaleX", e.get("scaleX") * this.get("scaleX")),
                    e.set("scaleY", e.get("scaleY") * this.get("scaleY")),
                    e.setCoords(),
                    e.hasControls = e.__origHasControls,
                    delete e.__origHasControls,
                    e.set("active", !1),
                    e.setCoords(),
                    delete e.group,
                    this
                },
                destroy: function() {
                    return this._restoreObjectsState()
                },
                saveCoords: function() {
                    return this._originalLeft = this.get("left"),
                    this._originalTop = this.get("top"),
                    this
                },
                hasMoved: function() {
                    return this._originalLeft !== this.get("left") || this._originalTop !== this.get("top")
                },
                setObjectsCoords: function() {
                    return this.forEachObject(function(e) {
                        e.setCoords()
                    }),
                    this
                },
                _setOpacityIfSame: function() {
                    var e = this.getObjects()
                      , t = e[0] ? e[0].get("opacity") : 1
                      , i = e.every(function(e) {
                        return e.get("opacity") === t
                    });
                    i && (this.opacity = t)
                },
                _calcBounds: function() {
                    for (var e, t, i, o, a, s, l, c = [], d = [], h = 0, u = this._objects.length; u > h; ++h) {
                        a = this._objects[h],
                        a.setCoords();
                        for (var p in a.oCoords)
                            c.push(a.oCoords[p].x),
                            d.push(a.oCoords[p].y)
                    }
                    e = n(c),
                    i = r(c),
                    t = n(d),
                    o = r(d),
                    s = i - e || 0,
                    l = o - t || 0,
                    this.width = s,
                    this.height = l,
                    this.left = e + s / 2 || 0,
                    this.top = t + l / 2 || 0
                },
                toSVG: function() {
                    for (var e = [], t = this._objects.length; t--; )
                        e.push(this._objects[t].toSVG());
                    return '<g transform="' + this.getSvgTransform() + '">' + e.join("") + "</g>"
                },
                get: function(e) {
                    if (e in a) {
                        if (this[e])
                            return this[e];
                        for (var t = 0, i = this._objects.length; i > t; t++)
                            if (this._objects[t][e])
                                return !0;
                        return !1
                    }
                    return e in this.delegatedProperties ? this._objects[0] && this._objects[0].get(e) : this[e]
                }
            }),
            t.Group.fromObject = function(e, i) {
                t.util.enlivenObjects(e.objects, function(n) {
                    delete e.objects,
                    i && i(new t.Group(n,e))
                })
            }
            ,
            t.Group.async = !0
        }
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        var t = fabric.util.object.extend;
        return e.fabric || (e.fabric = {}),
        e.fabric.Image ? void fabric.warn("fabric.Image is already defined.") : (fabric.Image = fabric.util.createClass(fabric.Object, {
            type: "image",
            initialize: function(e, t) {
                t || (t = {}),
                this.filters = [],
                this.callSuper("initialize", t),
                this._initElement(e),
                this._initConfig(t),
                t.filters && (this.filters = t.filters,
                this.applyFilters()),
                this.updateImageCache()
            },
            getElement: function() {
                return this._element
            },
            setElement: function(e) {
                return this._element = e,
                this._originalElement = e,
                this
            },
            getOriginalSize: function() {
                var e = this.getElement();
                return {
                    width: e.width,
                    height: e.height
                }
            },
            render: function(e, t) {
                if (this.visible) {
                    e.save();
                    var i = this.transformMatrix
                      , n = this.group && "group" !== this.group.type;
                    n && e.translate(-this.group.width / 2 + this.width / 2, -this.group.height / 2 + this.height / 2),
                    i && e.transform(i[0], i[1], i[2], i[3], i[4], i[5]),
                    t || this.transform(e),
                    e.save(),
                    this._setShadow(e),
                    this.clipTo && fabric.util.clipContext(this, e),
                    this._canvasPoolActive ? this._splitRender(e) : this._render(e),
                    this.shadow && !this.shadow.affectStroke && this._removeShadow(e),
                    this._renderStroke(e),
                    this.clipTo && e.restore(),
                    e.restore(),
                    this.model && this.model.view.updateBackdrops && this.model.view.updateBackdrops(e),
                    this.active && !t && (this.drawBorders(e),
                    this.drawControls(e)),
                    e.restore()
                }
            },
            _splitRender: function(e) {
                for (var t = -Math.floor(this.width / 2), i = -Math.floor(this.height / 2), n = this.width / this._element.width, r = this.height / this._element.height, o = 0; o < this._canvasPool.length; o++)
                    this._canvasPool[o].active === !0 && e.drawImage(this._canvasPool[o].canvas, t + Math.floor(this._canvasPool[o]._x * n), i + Math.floor(this._canvasPool[o]._y * r), Math.ceil(1024 * n), Math.ceil(1024 * r))
            },
            updateImageCache: function() {
                if (this._canvasPool)
                    for (var e = 0; e < this._canvasPool.length; e++)
                        this._canvasPool[e].active = !1;
                this._canvasPoolActive = !1,
                this._canvasPool || (this._canvasPool = []);
                var t = (new Date).getTime()
                  , i = 1024;
                if (!(this._element.width <= i && this._element.height <= i)) {
                    {
                        d20.engine.cachectx
                    }
                    this._splitCache = [];
                    var n = Math.ceil(this._element.width / i)
                      , r = Math.ceil(this._element.height / i);
                    console.log("Cols: " + n + " Rows: " + r);
                    for (var o = 0, e = 0; n > e; e++)
                        for (var a = 0; r > a; a++) {
                            this._canvasPool[o] || (this._canvasPool[o] = {
                                canvas: document.createElement("canvas")
                            },
                            this._canvasPool[o].canvas.width = i,
                            this._canvasPool[o].canvas.height = i,
                            this._canvasPool[o].canvas.style.display = "none",
                            this._canvasPool[o].ctx = this._canvasPool[o].canvas.getContext("2d")),
                            this._canvasPool[o].ctx.clearRect(0, 0, i, i);
                            var s = e == n - 1 ? this._element.width % i : i
                              , l = a == r - 1 ? this._element.height % i : i;
                            0 === s && (s = i),
                            0 === l && (l = i),
                            this._canvasPool[o].ctx.drawImage(this._element, i * e, i * a, s, l, 0, 0, s, l),
                            this._canvasPool[o]._x = e * i,
                            this._canvasPool[o]._y = a * i,
                            this._canvasPool[o].active = !0,
                            o++
                        }
                    this._canvasPoolActive = !0,
                    console.log("Took " + ((new Date).getTime() - t) + "ms to generate cache.")
                }
            },
            renderPre: function(e, t) {
                if (this.model && void 0 !== this.model.view.drawAuras && void 0 !== this.model.view.needsAuras && this.model.view.needsAuras()) {
                    e.save();
                    var i = this.transformMatrix;
                    if (i && e.transform(i[0], i[1], i[2], i[3], i[4], i[5]),
                    !t) {
                        e.globalAlpha *= this.opacity;
                        var n = this.getCenterPoint();
                        this.renderingInGroup ? (this.renderingInGroup.transform(e),
                        e.translate(n.x, n.y)) : e.translate(n.x - d20.engine.currentCanvasOffset[0], n.y - d20.engine.currentCanvasOffset[1])
                    }
                    this.model.view.drawAuras(e),
                    e.restore()
                }
            },
            _stroke: function(e) {
                e.save(),
                e.lineWidth = this.strokeWidth,
                e.lineCap = this.strokeLineCap,
                e.lineJoin = this.strokeLineJoin,
                e.miterLimit = this.strokeMiterLimit,
                e.strokeStyle = this.stroke.toLive ? this.stroke.toLive(e) : this.stroke,
                e.beginPath(),
                e.strokeRect(-this.width / 2, -this.height / 2, this.width, this.height),
                e.closePath(),
                e.restore()
            },
            _renderDashedStroke: function(e) {
                var t = -this.width / 2
                  , i = -this.height / 2
                  , n = this.width
                  , r = this.height;
                e.save(),
                e.lineWidth = this.strokeWidth,
                e.lineCap = this.strokeLineCap,
                e.lineJoin = this.strokeLineJoin,
                e.miterLimit = this.strokeMiterLimit,
                e.strokeStyle = this.stroke.toLive ? this.stroke.toLive(e) : this.stroke,
                e.beginPath(),
                fabric.util.drawDashedLine(e, t, i, t + n, i, this.strokeDashArray),
                fabric.util.drawDashedLine(e, t + n, i, t + n, i + r, this.strokeDashArray),
                fabric.util.drawDashedLine(e, t + n, i + r, t, i + r, this.strokeDashArray),
                fabric.util.drawDashedLine(e, t, i + r, t, i, this.strokeDashArray),
                e.closePath(),
                e.restore()
            },
            toObject: function(e) {
                return t(this.callSuper("toObject", e), {
                    src: this._originalElement.src || this._originalElement._src
                })
            },
            toSVG: function() {
                var e = [];
                if (e.push('<g transform="', this.getSvgTransform(), '">', '<image xlink:href="', this.getSvgSrc(), '" style="', this.getSvgStyles(), '" transform="translate(' + -this.width / 2 + " " + -this.height / 2 + ")", '" width="', this.width, '" height="', this.height, '"></image>'),
                this.stroke || this.strokeDashArray) {
                    var t = this.fill;
                    this.fill = null ,
                    e.push("<rect ", 'x="', -1 * this.width / 2, '" y="', -1 * this.height / 2, '" width="', this.width, '" height="', this.height, '" style="', this.getSvgStyles(), '"/>'),
                    this.fill = t
                }
                return e.push("</g>"),
                e.join("")
            },
            getSrc: function() {
                return this.getElement().src || this.getElement()._src
            },
            toString: function() {
                return '#<fabric.Image: { src: "' + this.getSrc() + '" }>'
            },
            clone: function(e, t) {
                this.constructor.fromObject(this.toObject(t), e)
            },
            applyFilters: function(e) {
                if (0 === this.filters.length)
                    return this._element = this._originalElement,
                    this.updateImageCache(),
                    void (e && e());
                var t = this._originalElement
                  , i = fabric.util.createCanvasElement()
                  , n = fabric.util.createImage()
                  , r = this;
                try {
                    if (i.width = t.width,
                    i.height = t.height,
                    i.getContext("2d").drawImage(t, 0, 0, t.width, t.height),
                    this.filters.forEach(function(e) {
                        e && e.applyTo(i)
                    }),
                    n.width = t.width,
                    n.height = t.height,
                    fabric.isLikelyNode) {
                        var o = i.toDataURL("image/png").substring(22);
                        n.src = new Buffer(o,"base64"),
                        r._element = n,
                        e && e()
                    } else
                        n.onload = function() {
                            r._element = n,
                            r.updateImageCache(),
                            e && e(),
                            n.onload = i = t = null
                        }
                        ,
                        n.src = i.toDataURL("image/png")
                } catch (a) {
                    console.log("Error applying filters..."),
                    console.log(a)
                }
                return this
            },
            _render: function(e) {
                e.drawImage(this._element, -Math.floor(this.width / 2), -Math.floor(this.height / 2), this.width, this.height)
            },
            _resetWidthHeight: function() {
                var e = this.getElement();
                this.set("width", e.width),
                this.set("height", e.height)
            },
            _initElement: function(e) {
                this.setElement(fabric.util.getById(e)),
                fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS)
            },
            _initConfig: function(e) {
                e || (e = {}),
                this.setOptions(e),
                this._setWidthHeight(e)
            },
            _initFilters: function(e, t) {
                e.filters && e.filters.length ? fabric.util.enlivenObjects(e.filters, function(e) {
                    t && t(e)
                }, "fabric.Image.filters") : t && t()
            },
            _setWidthHeight: function(e) {
                this.width = "width"in e ? e.width : this.getElement().width || 0,
                this.height = "height"in e ? e.height : this.getElement().height || 0
            },
            complexity: function() {
                return 1
            }
        }),
        fabric.Image.CSS_CANVAS = "canvas-img",
        fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc,
        fabric.Image.fromObject = function(e, t) {
            var i = fabric.document.createElement("img")
              , n = e.src;
            i.onload = function() {
                fabric.Image.prototype._initFilters.call(e, e, function(n) {
                    e.filters = n || [];
                    var r = new fabric.Image(i,e);
                    t && t(r),
                    i = i.onload = i.onerror = null
                })
            }
            ,
            i.onerror = function() {
                fabric.log("Error loading " + i.src),
                t && t(null , !0),
                i = i.onload = i.onerror = null
            }
            ,
            i.src = n
        }
        ,
        fabric.Image.fromURL = function(e, t, i) {
            var n = fabric.document.createElement("img")
              , r = e;
            i.usecors === !0 && (n.crossOrigin = "anonymous",
            -1 !== e.indexOf("d20cors.herokuapp.com") && (e = e.replace("d20cors.herokuapp.com", "imgsrv.roll20.net:5100")),
            -1 == e.indexOf(".d20.io") && -1 === e.indexOf("d20cors.herokuapp.com") && -1 === e.indexOf("imgsrv.roll20.net") && (e = "http://imgsrv.roll20.net:5100/?src=" + escape(e.replace(/http[s]*:\/\//, "")) + "&cb="),
            e += "development" == d20.environment ? "3" : "staging" == d20.environment ? "4" : "5");
            var o = !1;
            n.onload = function() {
                t && t(new fabric.Image(n,i)),
                n = n.onload = null
            }
            ,
            i.usecors === !0 && (n.onerror = function() {
                if (!o) {
                    console.log("Error loading image, probably due to cors. Trying once without CORS for " + r),
                    n = n.onload = null ,
                    i.usecors = !1;
                    var e = fabric.document.createElement("img");
                    e.onload = function() {
                        t && t(new fabric.Image(e,i)),
                        e = e.onload = null
                    }
                    ,
                    o = !0,
                    e.src = r
                }
            }
            ),
            n.src = e
        }
        ,
        fabric.Image.async = !0,
        void (fabric.Image.pngCompression = 1))
    }("undefined" != typeof exports ? exports : this),
    fabric.Image.filters = fabric.Image.filters || {},
    fabric.Image.filters.BaseFilter = fabric.util.createClass({
        type: "BaseFilter",
        toObject: function() {
            return {
                type: this.type
            }
        },
        toJSON: function() {
            return this.toObject()
        }
    }),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , i = t.util.object.extend;
        t.Image.filters.Brightness = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "Brightness",
            initialize: function(e) {
                e = e || {},
                this.brightness = e.brightness || 100
            },
            applyTo: function(e) {
                for (var t = e.getContext("2d"), i = t.getImageData(0, 0, e.width, e.height), n = i.data, r = this.brightness, o = 0, a = n.length; a > o; o += 4)
                    n[o] += r,
                    n[o + 1] += r,
                    n[o + 2] += r;
                t.putImageData(i, 0, 0)
            },
            toObject: function() {
                return i(this.callSuper("toObject"), {
                    brightness: this.brightness
                })
            }
        }),
        t.Image.filters.Brightness.fromObject = function(e) {
            return new t.Image.filters.Brightness(e)
        }
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , i = t.util.object.extend;
        t.Image.filters.Convolute = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "Convolute",
            initialize: function(e) {
                e = e || {},
                this.opaque = e.opaque,
                this.matrix = e.matrix || [0, 0, 0, 0, 1, 0, 0, 0, 0];
                var i = t.util.createCanvasElement();
                this.tmpCtx = i.getContext("2d")
            },
            _createImageData: function(e, t) {
                return this.tmpCtx.createImageData(e, t)
            },
            applyTo: function(e) {
                for (var t = this.matrix, i = e.getContext("2d"), n = i.getImageData(0, 0, e.width, e.height), r = Math.round(Math.sqrt(t.length)), o = Math.floor(r / 2), a = n.data, s = n.width, l = n.height, c = s, d = l, h = this._createImageData(c, d), u = h.data, p = this.opaque ? 1 : 0, f = 0; d > f; f++)
                    for (var g = 0; c > g; g++) {
                        for (var m = f, v = g, y = 4 * (f * c + g), b = 0, w = 0, x = 0, E = 0, _ = 0; r > _; _++)
                            for (var T = 0; r > T; T++) {
                                var C = m + _ - o
                                  , R = v + T - o;
                                if (C >= 0 && l > C && R >= 0 && s > R) {
                                    var S = 4 * (C * s + R)
                                      , k = t[_ * r + T];
                                    b += a[S] * k,
                                    w += a[S + 1] * k,
                                    x += a[S + 2] * k,
                                    E += a[S + 3] * k
                                }
                            }
                        u[y] = b,
                        u[y + 1] = w,
                        u[y + 2] = x,
                        u[y + 3] = E + p * (255 - E)
                    }
                i.putImageData(h, 0, 0)
            },
            toObject: function() {
                return i(this.callSuper("toObject"), {
                    opaque: this.opaque,
                    matrix: this.matrix
                })
            }
        }),
        t.Image.filters.Convolute.fromObject = function(e) {
            return new t.Image.filters.Convolute(e)
        }
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , i = t.util.object.extend;
        t.Image.filters.GradientTransparency = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "GradientTransparency",
            initialize: function(e) {
                e = e || {},
                this.threshold = e.threshold || 100
            },
            applyTo: function(e) {
                for (var t = e.getContext("2d"), i = t.getImageData(0, 0, e.width, e.height), n = i.data, r = this.threshold, o = n.length, a = 0, s = n.length; s > a; a += 4)
                    n[a + 3] = r + 255 * (o - a) / o;
                t.putImageData(i, 0, 0)
            },
            toObject: function() {
                return i(this.callSuper("toObject"), {
                    threshold: this.threshold
                })
            }
        }),
        t.Image.filters.GradientTransparency.fromObject = function(e) {
            return new t.Image.filters.GradientTransparency(e)
        }
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {});
        t.Image.filters.Grayscale = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "Grayscale",
            applyTo: function(e) {
                for (var t, i = e.getContext("2d"), n = i.getImageData(0, 0, e.width, e.height), r = n.data, o = n.width * n.height * 4, a = 0; o > a; )
                    t = (r[a] + r[a + 1] + r[a + 2]) / 3,
                    r[a] = t,
                    r[a + 1] = t,
                    r[a + 2] = t,
                    a += 4;
                i.putImageData(n, 0, 0)
            }
        }),
        t.Image.filters.Grayscale.fromObject = function() {
            return new t.Image.filters.Grayscale
        }
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {});
        t.Image.filters.Invert = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "Invert",
            applyTo: function(e) {
                var t, i = e.getContext("2d"), n = i.getImageData(0, 0, e.width, e.height), r = n.data, o = r.length;
                for (t = 0; o > t; t += 4)
                    r[t] = 255 - r[t],
                    r[t + 1] = 255 - r[t + 1],
                    r[t + 2] = 255 - r[t + 2];
                i.putImageData(n, 0, 0)
            }
        }),
        t.Image.filters.Invert.fromObject = function() {
            return new t.Image.filters.Invert
        }
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , i = t.util.object.extend;
        t.Image.filters.Mask = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "Mask",
            initialize: function(e) {
                e = e || {},
                this.mask = e.mask,
                this.channel = [0, 1, 2, 3].indexOf(e.channel) > -1 ? e.channel : 0
            },
            applyTo: function(e) {
                if (this.mask) {
                    var i, n = e.getContext("2d"), r = n.getImageData(0, 0, e.width, e.height), o = r.data, a = this.mask.getElement(), s = t.util.createCanvasElement(), l = this.channel, c = r.width * r.height * 4;
                    s.width = a.width,
                    s.height = a.height,
                    s.getContext("2d").drawImage(a, 0, 0, a.width, a.height);
                    var d = s.getContext("2d").getImageData(0, 0, a.width, a.height)
                      , h = d.data;
                    for (i = 0; c > i; i += 4)
                        o[i + 3] = h[i + l];
                    n.putImageData(r, 0, 0)
                }
            },
            toObject: function() {
                return i(this.callSuper("toObject"), {
                    mask: this.mask.toObject(),
                    channel: this.channel
                })
            }
        }),
        t.Image.filters.Mask.fromObject = function(e, i) {
            var n = t.document.createElement("img")
              , r = e.mask.src;
            n.onload = function() {
                e.mask = new t.Image(n,e.mask),
                i && i(new t.Image.filters.Mask(e)),
                n = n.onload = n.onerror = null
            }
            ,
            n.onerror = function() {
                t.log("Error loading " + n.src),
                i && i(null , !0),
                n = n.onload = n.onerror = null
            }
            ,
            n.src = r
        }
        ,
        t.Image.filters.Mask.async = !0
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , i = t.util.object.extend;
        t.Image.filters.Noise = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "Noise",
            initialize: function(e) {
                e = e || {},
                this.noise = e.noise || 100
            },
            applyTo: function(e) {
                for (var t, i = e.getContext("2d"), n = i.getImageData(0, 0, e.width, e.height), r = n.data, o = this.noise, a = 0, s = r.length; s > a; a += 4)
                    t = (.5 - Math.random()) * o,
                    r[a] += t,
                    r[a + 1] += t,
                    r[a + 2] += t;
                i.putImageData(n, 0, 0)
            },
            toObject: function() {
                return i(this.callSuper("toObject"), {
                    noise: this.noise
                })
            }
        }),
        t.Image.filters.Noise.fromObject = function(e) {
            return new t.Image.filters.Noise(e)
        }
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , i = t.util.object.extend;
        t.Image.filters.Pixelate = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "Pixelate",
            initialize: function(e) {
                e = e || {},
                this.blocksize = e.blocksize || 4
            },
            applyTo: function(e) {
                var t, i, n, r, o, a, s, l = e.getContext("2d"), c = l.getImageData(0, 0, e.width, e.height), d = c.data, h = c.height, u = c.width;
                for (i = 0; h > i; i += this.blocksize)
                    for (n = 0; u > n; n += this.blocksize) {
                        t = 4 * i * u + 4 * n,
                        r = d[t],
                        o = d[t + 1],
                        a = d[t + 2],
                        s = d[t + 3];
                        for (var p = i, f = i + this.blocksize; f > p; p++)
                            for (var g = n, m = n + this.blocksize; m > g; g++)
                                t = 4 * p * u + 4 * g,
                                d[t] = r,
                                d[t + 1] = o,
                                d[t + 2] = a,
                                d[t + 3] = s
                    }
                l.putImageData(c, 0, 0)
            },
            toObject: function() {
                return i(this.callSuper("toObject"), {
                    blocksize: this.blocksize
                })
            }
        }),
        t.Image.filters.Pixelate.fromObject = function(e) {
            return new t.Image.filters.Pixelate(e)
        }
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , i = t.util.object.extend;
        t.Image.filters.RemoveWhite = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "RemoveWhite",
            initialize: function(e) {
                e = e || {},
                this.threshold = e.threshold || 30,
                this.distance = e.distance || 20
            },
            applyTo: function(e) {
                for (var t, i, n, r = e.getContext("2d"), o = r.getImageData(0, 0, e.width, e.height), a = o.data, s = this.threshold, l = this.distance, c = 255 - s, d = Math.abs, h = 0, u = a.length; u > h; h += 4)
                    t = a[h],
                    i = a[h + 1],
                    n = a[h + 2],
                    t > c && i > c && n > c && d(t - i) < l && d(t - n) < l && d(i - n) < l && (a[h + 3] = 1);
                r.putImageData(o, 0, 0)
            },
            toObject: function() {
                return i(this.callSuper("toObject"), {
                    threshold: this.threshold,
                    distance: this.distance
                })
            }
        }),
        t.Image.filters.RemoveWhite.fromObject = function(e) {
            return new t.Image.filters.RemoveWhite(e)
        }
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {});
        t.Image.filters.Sepia = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "Sepia",
            applyTo: function(e) {
                var t, i, n = e.getContext("2d"), r = n.getImageData(0, 0, e.width, e.height), o = r.data, a = o.length;
                for (t = 0; a > t; t += 4)
                    i = .3 * o[t] + .59 * o[t + 1] + .11 * o[t + 2],
                    o[t] = i + 100,
                    o[t + 1] = i + 50,
                    o[t + 2] = i + 255;
                n.putImageData(r, 0, 0)
            }
        }),
        t.Image.filters.Sepia.fromObject = function() {
            return new t.Image.filters.Sepia
        }
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {});
        t.Image.filters.Sepia2 = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "Sepia2",
            applyTo: function(e) {
                var t, i, n, r, o = e.getContext("2d"), a = o.getImageData(0, 0, e.width, e.height), s = a.data, l = s.length;
                for (t = 0; l > t; t += 4)
                    i = s[t],
                    n = s[t + 1],
                    r = s[t + 2],
                    s[t] = (.393 * i + .769 * n + .189 * r) / 1.351,
                    s[t + 1] = (.349 * i + .686 * n + .168 * r) / 1.203,
                    s[t + 2] = (.272 * i + .534 * n + .131 * r) / 2.14;
                o.putImageData(a, 0, 0)
            }
        }),
        t.Image.filters.Sepia2.fromObject = function() {
            return new t.Image.filters.Sepia2
        }
    }("undefined" != typeof exports ? exports : this),
    function() {
        fabric.Image.filters.Tint = fabric.util.createClass({
            type: "Tint",
            initialize: function(e) {
                e || (e = {}),
                this.color = e.color || fabric.Color.fromHex("#FFFFFF"),
                this.strength = e.strength || .5
            },
            applyTo: function(e) {
                console.log(this.color);
                var t, i = this.color._source[0], n = this.color._source[1], r = this.color._source[2], o = this.strength, a = e.getContext("2d"), s = a.getImageData(0, 0, e.width, e.height), l = s.data, c = l.length;
                for (t = 0; c > t; )
                    l[t] = l[t] * (1 - o) + i * o,
                    t++,
                    l[t] = l[t] * (1 - o) + n * o,
                    t++,
                    l[t] = l[t] * (1 - o) + r * o,
                    t++,
                    t++;
                a.putImageData(s, 0, 0)
            },
            toJSON: function() {
                return {
                    color: this.color,
                    type: this.type,
                    stength: this.strength
                }
            }
        })
    }("undefined" != typeof exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , i = t.util.object.extend
          , n = t.util.object.clone
          , r = t.util.toFixed
          , o = t.StaticCanvas.supports("setLineDash");
        if (t.Text)
            return void t.warn("fabric.Text is already defined");
        var a = t.Object.prototype.stateProperties.concat();
        a.push("fontFamily", "fontWeight", "fontSize", "text", "textDecoration", "textAlign", "fontStyle", "lineHeight", "backgroundColor", "textBackgroundColor", "useNative", "path"),
        t.Text = t.util.createClass(t.Object, {
            _dimensionAffectingProps: {
                fontSize: !0,
                fontWeight: !0,
                fontFamily: !0,
                textDecoration: !0,
                fontStyle: !0,
                lineHeight: !0,
                stroke: !0,
                strokeWidth: !0,
                text: !0
            },
            type: "text",
            fontSize: 40,
            fontWeight: "normal",
            fontFamily: "Times New Roman",
            textDecoration: "",
            textAlign: "left",
            fontStyle: "",
            lineHeight: 1.3,
            backgroundColor: "",
            textBackgroundColor: "",
            path: null ,
            useNative: !0,
            stateProperties: a,
            stroke: null ,
            shadow: null ,
            initialize: function(e, t) {
                t = t || {},
                this.text = e,
                this.__skipDimension = !0,
                this.setOptions(t),
                this.__skipDimension = !1,
                this._initDimensions(),
                this.setCoords()
            },
            _initDimensions: function() {
                if (!this.__skipDimension) {
                    var e = t.util.createCanvasElement();
                    this._render(e.getContext("2d"))
                }
            },
            toString: function() {
                return "#<fabric.Text (" + this.complexity() + '): { "text": "' + this.text + '", "fontFamily": "' + this.fontFamily + '" }>'
            },
            _render: function(e) {
                var t = this.group && "group" !== this.group.type;
                t && !this.transformMatrix ? e.translate(-this.group.width / 2 + this.left, -this.group.height / 2 + this.top) : t && this.transformMatrix && e.translate(-this.group.width / 2, -this.group.height / 2),
                "undefined" == typeof Cufon || this.useNative === !0 ? this._renderViaNative(e) : this._renderViaCufon(e)
            },
            _renderViaNative: function(e) {
                this.transform(e, t.isLikelyNode),
                this._setTextStyles(e);
                var i = this.text.split(/\r?\n/);
                this.width = this._getTextWidth(e, i),
                this.height = this._getTextHeight(e, i),
                this.clipTo && t.util.clipContext(this, e),
                this._renderTextBackground(e, i),
                "left" !== this.textAlign && "justify" !== this.textAlign && (e.save(),
                e.translate("center" === this.textAlign ? this.width / 2 : this.width, 0)),
                e.save(),
                this._setShadow(e),
                this._renderTextFill(e, i),
                this._renderTextStroke(e, i),
                this._removeShadow(e),
                e.restore(),
                "left" !== this.textAlign && "justify" !== this.textAlign && e.restore(),
                this._renderTextDecoration(e, i),
                this.clipTo && e.restore(),
                this._setBoundaries(e, i),
                this._totalLineHeight = 0
            },
            _setBoundaries: function(e, t) {
                this._boundaries = [];
                for (var i = 0, n = t.length; n > i; i++) {
                    var r = this._getLineWidth(e, t[i])
                      , o = this._getLineLeftOffset(r);
                    this._boundaries.push({
                        height: this.fontSize * this.lineHeight,
                        width: r,
                        left: o
                    })
                }
            },
            _setTextStyles: function(e) {
                this.fill && (e.fillStyle = this.fill.toLive ? this.fill.toLive(e) : this.fill),
                this.stroke && (e.lineWidth = this.strokeWidth,
                e.lineCap = this.strokeLineCap,
                e.lineJoin = this.strokeLineJoin,
                e.miterLimit = this.strokeMiterLimit,
                e.strokeStyle = this.stroke.toLive ? this.stroke.toLive(e) : this.stroke),
                e.textBaseline = "alphabetic",
                e.textAlign = this.textAlign,
                e.font = this._getFontDeclaration()
            },
            _getTextHeight: function(e, t) {
                return this.fontSize * t.length * this.lineHeight
            },
            _getTextWidth: function(e, t) {
                for (var i = e.measureText(t[0]).width, n = 1, r = t.length; r > n; n++) {
                    var o = e.measureText(t[n]).width;
                    o > i && (i = o)
                }
                return i
            },
            _drawChars: function(e, t, i, n, r) {
                t[e](i, n, r)
            },
            _drawTextLine: function(e, t, i, n, r, o) {
                if ("justify" !== this.textAlign)
                    return void this._drawChars(e, t, i, n, r, o);
                var a = t.measureText(i).width
                  , s = this.width;
                if (s > a)
                    for (var l = i.split(/\s+/), c = t.measureText(i.replace(/\s+/g, "")).width, d = s - c, h = l.length - 1, u = d / h, p = 0, f = 0, g = l.length; g > f; f++)
                        this._drawChars(e, t, l[f], n + p, r, o),
                        p += t.measureText(l[f]).width + u;
                else
                    this._drawChars(e, t, i, n, r, o)
            },
            _getLeftOffset: function() {
                return !t.isLikelyNode || "left" !== this.originX && "center" !== this.originX ? -this.width / 2 : 0
            },
            _getTopOffset: function() {
                return t.isLikelyNode ? "center" === this.originY ? -this.height / 2 : "bottom" === this.originY ? -this.height : 0 : -this.height / 2
            },
            _renderTextFill: function(e, t) {
                if (this.fill || this.skipFillStrokeCheck) {
                    this._boundaries = [];
                    for (var i = 0, n = 0, r = t.length; r > n; n++) {
                        var o = this._getHeightOfLine(e, n, t);
                        i += o,
                        this._drawTextLine("fillText", e, t[n], this._getLeftOffset(), this._getTopOffset() + i - Math.floor(this.fontSize / 2), n)
                    }
                }
            },
            _renderTextStroke: function(e, t) {
                if (this.stroke || this.skipFillStrokeCheck) {
                    var i = 0;
                    e.save(),
                    this.strokeDashArray && (1 & this.strokeDashArray.length && this.strokeDashArray.push.apply(this.strokeDashArray, this.strokeDashArray),
                    o && e.setLineDash(this.strokeDashArray)),
                    e.beginPath();
                    for (var n = 0, r = t.length; r > n; n++) {
                        var a = this._getHeightOfLine(e, n, t);
                        i += a,
                        this._drawTextLine("strokeText", e, t[n], this._getLeftOffset(), this._getTopOffset() + i, n)
                    }
                    e.closePath(),
                    e.restore()
                }
            },
            _getHeightOfLine: function() {
                return this.fontSize * this.lineHeight
            },
            _renderTextBackground: function(e, t) {
                this._renderTextBoxBackground(e),
                this._renderTextLinesBackground(e, t)
            },
            _renderTextBoxBackground: function(e) {
                this.backgroundColor && (e.save(),
                e.fillStyle = this.backgroundColor,
                e.fillRect(this._getLeftOffset(), this._getTopOffset(), this.width, this.height),
                e.restore())
            },
            _renderTextLinesBackground: function(e, t) {
                if (this.textBackgroundColor) {
                    e.save(),
                    e.fillStyle = this.textBackgroundColor;
                    for (var i = 0, n = t.length; n > i; i++)
                        if ("" !== t[i]) {
                            var r = this._getLineWidth(e, t[i])
                              , o = this._getLineLeftOffset(r);
                            e.fillRect(this._getLeftOffset() + o, this._getTopOffset() + i * this.fontSize * this.lineHeight, r, this.fontSize * this.lineHeight)
                        }
                    e.restore()
                }
            },
            _getLineLeftOffset: function(e) {
                return "center" === this.textAlign ? (this.width - e) / 2 : "right" === this.textAlign ? this.width - e : 0
            },
            _getLineWidth: function(e, t) {
                return "justify" === this.textAlign ? this.width : e.measureText(t).width
            },
            _renderTextDecoration: function(e, t) {
                function i(i) {
                    for (var o = 0, a = t.length; a > o; o++) {
                        var s = r._getLineWidth(e, t[o])
                          , l = r._getLineLeftOffset(s);
                        e.fillRect(r._getLeftOffset() + l, i + o * r._getHeightOfLine(e, o, t) - n, s, 1)
                    }
                }
                if (this.textDecoration) {
                    var n = this._getTextHeight(e, t) / 2
                      , r = this
                      , o = this.fontSize / 4;
                    this.textDecoration.indexOf("underline") > -1 && i(this.fontSize * this.lineHeight),
                    this.textDecoration.indexOf("line-through") > -1 && i(this.fontSize * this.lineHeight - o),
                    this.textDecoration.indexOf("overline") > -1 && i(o)
                }
            },
            _getFontDeclaration: function() {
                return [t.isLikelyNode ? this.fontWeight : this.fontStyle, t.isLikelyNode ? this.fontStyle : this.fontWeight, this.fontSize + "px", t.isLikelyNode ? '"' + this.fontFamily + '"' : this.fontFamily].join(" ")
            },
            render: function(e, t) {
                this.visible && (e.save(),
                this._render(e),
                !t && this.active && (this.drawBorders(e),
                this.drawControls(e)),
                e.restore())
            },
            toObject: function(e) {
                return i(this.callSuper("toObject", e), {
                    text: this.text,
                    fontSize: this.fontSize,
                    fontWeight: this.fontWeight,
                    fontFamily: this.fontFamily,
                    fontStyle: this.fontStyle,
                    lineHeight: this.lineHeight,
                    textDecoration: this.textDecoration,
                    textAlign: this.textAlign,
                    path: this.path,
                    backgroundColor: this.backgroundColor,
                    textBackgroundColor: this.textBackgroundColor,
                    useNative: this.useNative
                })
            },
            toSVG: function() {
                var e = this.text.split(/\r?\n/)
                  , t = this.useNative ? this.fontSize * this.lineHeight : -this._fontAscent - this._fontAscent / 5 * this.lineHeight
                  , i = -(this.width / 2)
                  , n = this.useNative ? this.fontSize - 1 : this.height / 2 - e.length * this.fontSize - this._totalLineHeight
                  , o = this._getSVGTextAndBg(t, i, e)
                  , a = this._getSVGShadows(t, e);
                return n += this._fontAscent ? this._fontAscent / 5 * this.lineHeight : 0,
                ['<g transform="', this.getSvgTransform(), '">', o.textBgRects.join(""), "<text ", this.fontFamily ? 'font-family="' + this.fontFamily.replace(/"/g, "'") + '" ' : "", this.fontSize ? 'font-size="' + this.fontSize + '" ' : "", this.fontStyle ? 'font-style="' + this.fontStyle + '" ' : "", this.fontWeight ? 'font-weight="' + this.fontWeight + '" ' : "", this.textDecoration ? 'text-decoration="' + this.textDecoration + '" ' : "", 'style="', this.getSvgStyles(), '" ', 'transform="translate(', r(i, 2), " ", r(n, 2), ')">', a.join(""), o.textSpans.join(""), "</text>", "</g>"].join("")
            },
            _getSVGShadows: function(e, i) {
                var n, o, a = [], s = 1;
                if (!this.shadow || !this._boundaries)
                    return a;
                for (n = 0,
                o = i.length; o > n; n++)
                    if ("" !== i[n]) {
                        var l = this._boundaries && this._boundaries[n] ? this._boundaries[n].left : 0;
                        a.push('<tspan x="', r(l + s + this.shadow.offsetX, 2), 0 === n || this.useNative ? '" y' : '" dy', '="', r(this.useNative ? e * n - this.height / 2 + this.shadow.offsetY : e + (0 === n ? this.shadow.offsetY : 0), 2), '" ', this._getFillAttributes(this.shadow.color), ">", t.util.string.escapeXml(i[n]), "</tspan>"),
                        s = 1
                    } else
                        s++;
                return a
            },
            _getSVGTextAndBg: function(e, i, n) {
                var o, a, s, l = [], c = [], d = 1;
                for (this.backgroundColor && this._boundaries && c.push("<rect ", this._getFillAttributes(this.backgroundColor), ' x="', r(-this.width / 2, 2), '" y="', r(-this.height / 2, 2), '" width="', r(this.width, 2), '" height="', r(this.height, 2), '"></rect>'),
                o = 0,
                s = n.length; s > o; o++)
                    "" !== n[o] ? (a = this._boundaries && this._boundaries[o] ? r(this._boundaries[o].left, 2) : 0,
                    l.push('<tspan x="', a, '" ', 0 === o || this.useNative ? "y" : "dy", '="', r(this.useNative ? e * o - this.height / 2 : e * d, 2), '" ', this._getFillAttributes(this.fill), ">", t.util.string.escapeXml(n[o]), "</tspan>"),
                    d = 1) : d++,
                    this.textBackgroundColor && this._boundaries && c.push("<rect ", this._getFillAttributes(this.textBackgroundColor), ' x="', r(i + this._boundaries[o].left, 2), '" y="', r(e * o - this.height / 2, 2), '" width="', r(this._boundaries[o].width, 2), '" height="', r(this._boundaries[o].height, 2), '"></rect>');
                return {
                    textSpans: l,
                    textBgRects: c
                }
            },
            _getFillAttributes: function(e) {
                var i = e && "string" == typeof e ? new t.Color(e) : "";
                return i && i.getSource() && 1 !== i.getAlpha() ? 'opacity="' + i.getAlpha() + '" fill="' + i.setAlpha(1).toRgb() + '"' : 'fill="' + e + '"'
            },
            _set: function(e, t) {
                "fontFamily" === e && this.path && (this.path = this.path.replace(/(.*?)([^\/]*)(\.font\.js)/, "$1" + t + "$3")),
                this.callSuper("_set", e, t),
                e in this._dimensionAffectingProps && (this._initDimensions(),
                this.setCoords())
            },
            complexity: function() {
                return 1
            }
        }),
        t.Text.fromObject = function(e) {
            return new t.Text(e.text,n(e))
        }
        ,
        t.util.createAccessors(t.Text)
    }("undefined" != typeof exports ? exports : this);
    var Vector = {
        create: function(e, t) {
            return {
                x: e || -1,
                y: t || -1
            }
        },
        multiply: function(e, t) {
            return e.x *= t,
            e.y *= t,
            e
        },
        add: function(e, t) {
            return e.x += t.x,
            e.y += t.y,
            e
        }
    }, editor, raphael, svgeditor, canvas_overlay;
    if (window.zoomLevel = 1,
    window.dpi = 70,
    console.log(window.dpi),
    $.ajaxSetup({
        timeout: 1e4
    }),
    fabric.isTouchSupported = fabric.isTouchSupported && window.is_mobile,
    window.clicktype = "click",
    window.mousedowntype = "mousedown",
    fabric.isTouchSupported) {
        window.clicktype = "touchend",
        window.mousedowntype = "touchstart";
        var ismobilesafari = function() {
            return navigator.userAgent.match(/(iPod|iPhone|iPad)/)
        }
        ;
        $("#upperCanvas").on("touchstart", function() {
            $("#floatingtoolbar").trigger("blur")
        })
    }
    $(function() {
        $("#sidebarcontrol").on(clicktype, function() {
            $("body").toggleClass("sidebarhidden"),
            $(this).removeClass("alertify"),
            $(window).trigger("resize")
        })
    }),
    generateUUID = function() {
        var e = 0
          , t = [];
        return function() {
            var i = (new Date).getTime() + 0
              , n = i === e;
            e = i;
            for (var r = Array(8), o = 7; o >= 0; o--)
                r[o] = "-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz".charAt(i % 64),
                i = Math.floor(i / 64);
            if (i = r.join(""),
            n) {
                for (o = 11; o >= 0 && 63 === t[o]; o--)
                    t[o] = 0;
                t[o]++
            } else
                for (o = 0; 12 > o; o++)
                    t[o] = Math.floor(64 * Math.random());
            for (o = 0; 12 > o; o++)
                i += "-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz".charAt(t[o]);
            return i
        }
    }();
    var firebasePing = function() {
        var e = new Firebase(window.FIREBASE_ROOT + "/.info/connected")
          , t = new Firebase(window.FIREBASE_ROOT + window.campaign_storage_path + "/players/" + window.currentPlayer.id + "/online")
          , i = !1
          , n = !0;
        e.on("value", function(e) {
            e.val() === !0 ? (console.log("Firebase Online"),
            n = !0,
            t.onDisconnect().set(!1),
            t.set(!0),
            i && (clearTimeout(i),
            i = !1),
            $("#connectionerror").hide()) : (console.log("Firebase Offline"),
            n = !1,
            i = setTimeout(function() {
                $("#connectionerror").show()
            }, 2e4))
        }),
        t.on("value", function(e) {
            e.val() === !1 && t.set(!0)
        });
        var r, o = new Firebase(window.FIREBASE_ROOT + window.campaign_storage_path + "/players/" + window.currentPlayer.id + "/lastActive"), a = !1;
        $connerror = $("#connectionerror");
        var s = function() {
            console.log("Timeout ref showed error!"),
            a = !0,
            $connerror.show()
        }
          , l = function() {
            r = setTimeout(s, 2e4);
            var e = (new Date).getTime();
            o.set((new Date).getTime(), function() {
                window.firebaseLastPing = (new Date).getTime() - e,
                clearTimeout(r),
                "none" != $connerror[0].style.display && $connerror.hide(),
                r = !1,
                a = !1,
                setTimeout(l, 6e4)
            })
        }
        ;
        l()
    }
      , roll20Ping = function() {
        $.get("/editor/ping/5/" + (window.firebaseLastPing ? window.firebaseLastPing : "0") + "/" + d20.textchat.globalrolled),
        d20.textchat.globalrolled = 0,
        setTimeout(roll20Ping, 3e5)
    }
    ;
    d20.bootstrap = {},
    $(function() {
        new Firebase(window.FIREBASE_ROOT + "/.info/connected");
        setTimeout(roll20Ping, 3e5),
        $.get("/editor/startping/false"),
        editor = $("#editor"),
        canvas_overlay = $("#canvas-overlay"),
        setMode("select"),
        raphael = $("body > svg"),
        d20.bootstrap.returnStruct = function() {
            var e = d20.Campaign.toJSON();
            return e.pages = [],
            d20.Campaign.pages.each(function(t) {
                var i = t.toJSON()
                  , n = [];
                t.thegraphics.each(function(e) {
                    n.push(e.toJSON())
                }),
                t.thetexts.each(function(e) {
                    n.push(e.toJSON())
                }),
                i.items = _.sortBy(n, function(e) {
                    return parseInt(e.z_index)
                }),
                e.pages.push(i)
            }),
            e.pages = _.sortBy(e.pages, function(e) {
                return parseInt(e.placement)
            }),
            JSON.stringify(e)
        }
        ,
        d20.bootstrap.addDroppedImage = function(e, t, i, n, r, o, a) {
            var s = {
                x: n - ruleroffset,
                y: r - toolbaroffset - ruleroffset,
                width: t,
                height: i,
                imgsrc: e,
                imgwidth: t,
                imgheight: i
            };
            "none" == a ? d20.Campaign.activePage().addImage(s, !1, !1, o) : d20.Campaign.activePage().addImage(s, !1, a, o)
        }
    }),
    d20.canvas_overlay = {},
    $(function() {
        var e = function(e) {
            var t, i = 305419896;
            for (t = 0; t < e.length; t++)
                i += e.charCodeAt(t) * t;
            return i
        }
          , t = d20.engine.fowcanvas
          , i = d20.engine.lightingcanvas
          , n = d20.engine.shadowcanvas
          , r = d20.engine.fowctx;
        if (i)
            var o = d20.engine.lightingctx;
        if (n)
            var a = d20.engine.shadowctx;
        var s = function(e, t, i, n, r) {
            var o = r / d20.engine.canvasZoom
              , a = n / d20.engine.canvasZoom
              , s = d20.engine.snapTo
              , l = 0;
            e.beginPath(),
            e.lineWidth = 1;
            for (var c = t % s; a >= c; c += s)
                e.moveTo(.5 + c + l, l),
                e.lineTo(.5 + c + l, o + l);
            for (var c = i % s; o >= c; c += s)
                e.moveTo(l, .5 + c + l),
                e.lineTo(a + l, .5 + c + l);
            var d = fabric.Color.sourceFromHex(d20.Campaign.activePage().get("gridcolor"));
            d && (e.strokeStyle = "rgba(" + d[0] + ", " + d[1] + ", " + d[2] + ", " + d20.Campaign.activePage().get("grid_opacity") + ")",
            e.stroke())
        }
          , l = function(e, t, i, n, r, o) {
            var a = .66 * d20.engine.snapTo;
            10 > a && (a = 10);
            $("#editor");
            if (!d20.canvas_overlay.activeHexGrid || HT.Hexagon.Static.SIDE != a || HT.Hexagon.Static.ORIENTATION != ("cols" == o ? HT.Hexagon.Orientation.Rotated : HT.Hexagon.Orientation.Normal) || d20.engine.pageWidth != HT.Hexagon.Static.LastMaxW || d20.engine.pageHeight != HT.Hexagon.Static.LastMaxH) {
                HT.Hexagon.Static.ORIENTATION = "cols" == o ? HT.Hexagon.Orientation.Rotated : HT.Hexagon.Orientation.Normal;
                var s = "cols" == o ? .85714285714286 : 1.16666666666667
                  , l = Math.pow(s, 2)
                  , c = (1 + l) / l
                  , d = a / l
                  , h = (1 - 4 * l) / (4 * l) * Math.pow(a, 2)
                  , u = (-d + Math.sqrt(Math.pow(d, 2) - 4 * c * h)) / (2 * c)
                  , p = (2 * u + a) / (2 * s)
                  , f = 2 * u + a
                  , g = 2 * p;
                HT.Hexagon.Static.WIDTH = f,
                HT.Hexagon.Static.HEIGHT = g,
                HT.Hexagon.Static.SIDE = a,
                HT.Hexagon.Static.LastMaxW = d20.engine.pageWidth / d20.engine.canvasZoom,
                HT.Hexagon.Static.LastMaxH = d20.engine.pageHeight / d20.engine.canvasZoom,
                d20.canvas_overlay.activeHexGrid = new HT.Grid(HT.Hexagon.Static.LastMaxW,HT.Hexagon.Static.LastMaxH)
            }
            var m = fabric.Color.sourceFromHex(d20.Campaign.activePage().get("gridcolor"));
            if (m) {
                e.strokeStyle = "rgba(" + m[0] + ", " + m[1] + ", " + m[2] + ", " + d20.Campaign.activePage().get("grid_opacity") + ")",
                e.lineWidth = 1;
                for (var v = 0, y = 0; y < d20.canvas_overlay.activeHexGrid.Hexes.length; y++) {
                    var b = d20.canvas_overlay.activeHexGrid.Hexes[y];
                    b.BottomRightPoint.Y < -i || b.BottomRightPoint.X < -t || b.TopLeftPoint.Y > r / d20.engine.canvasZoom - i || b.TopLeftPoint.X > n / d20.engine.canvasZoom - t || (v++,
                    b.draw(e, t, i, d20.Campaign.activePage().get("gridlabels")))
                }
            }
        }
          , c = function(e, t, i, n) {
            r.globalCompositeOperation = "source-over",
            r.fillStyle = window.is_gm ? "rgba(0, 0, 0, " + d20.Campaign.activePage().get("fog_opacity") + ")" : "rgb(0, 0, 0)";
            var o = {
                minx: e,
                miny: t,
                maxx: e + i / d20.engine.canvasZoom,
                maxy: t + n / d20.engine.canvasZoom,
                w: i,
                h: n
            }
              , a = -e
              , s = -t;
            r.beginPath(),
            r.rect(0, 0, Math.ceil(d20.engine.canvasWidth / d20.engine.canvasZoom), Math.ceil(d20.engine.canvasHeight / d20.engine.canvasZoom)),
            r.closePath(),
            r.fill();
            var l = d20.Campaign.activePage().get("revealedAreas");
            _.isArray(l) || (l = JSON.parse(l));
            var c = 0;
            if (l && _.each(l, function(e) {
                if (r.globalCompositeOperation = "destination-out",
                r.beginPath(),
                e.points) {
                    if (e.points.length < 1)
                        return;
                    r.moveTo(e.points[0][0] + a, e.points[0][1] + s);
                    for (var t = 1; t < e.points.length; t++)
                        r.lineTo(e.points[t][0] + a, e.points[t][1] + s)
                } else {
                    var i = e.x
                      , n = e.y;
                    if (i + e.width < o.minx || i > o.maxx || n + e.height < o.miny || n > o.maxy)
                        return !0;
                    c++,
                    r.rect(i + a, n + s, e.width, e.height)
                }
                r.fillStyle = "rgba(0, 0, 0, 1.0)",
                r.closePath(),
                r.fill(),
                "hide" == e.type && (r.globalCompositeOperation = "source-over",
                r.beginPath(),
                r.rect(e.x + a, e.y + s, e.width, e.height),
                r.fillStyle = window.is_gm ? "rgba(0, 0, 0, " + d20.Campaign.activePage().get("fog_opacity") + ")" : "rgb(0, 0, 0)",
                r.closePath(),
                r.fill())
            }),
            r.globalCompositeOperation = "source-over",
            "fog-hide" != d20.engine.mode && "fog-reveal" != d20.engine.mode || 4 != d20.engine.fog.down.length || (r.beginPath(),
            r.fillStyle = "fog-hide" == d20.engine.mode ? "rgba(0,0,0,0.75)" : "rgba(255,255,133,0.50)",
            r.rect(d20.engine.fog.down[0] + a, d20.engine.fog.down[1] + s, d20.engine.fog.down[2] - d20.engine.fog.down[0], d20.engine.fog.down[3] - d20.engine.fog.down[1]),
            r.closePath(),
            r.fill()),
            "fog-polygonreveal" == d20.engine.mode && d20.engine.fog.points.length > 0) {
                if (r.beginPath(),
                r.moveTo(d20.engine.fog.points[0][0] + a, d20.engine.fog.points[0][1] + s),
                1 == d20.engine.fog.points.length)
                    r.lineTo(d20.engine.fog.points[0][0] + 2 + a, d20.engine.fog.points[0][1] + 2 + s);
                else
                    for (var d = 1; d < d20.engine.fog.points.length; d++)
                        r.lineTo(d20.engine.fog.points[d][0] + a, d20.engine.fog.points[d][1] + s);
                r.lineWidth = 5,
                r.fillStyle = "rgba(255,255,133,0.50)",
                r.fill(),
                r.strokeStyle = "rgba(255,255,133,0.50)",
                r.stroke()
            }
        }
          , d = function(e, t, i) {
            return {
                x: e.x + t * Math.cos(i),
                y: e.y + t * Math.sin(i)
            }
        }
          , h = function(e, t, i, n) {
            var r = 1.5 * t;
            0 > i && (i = 0),
            i > 360 && (i = 360);
            var o = Math.max(i - 180, 0)
              , a = o / 2
              , s = [];
            if (s.push([[{
                x: e.x,
                y: e.y
            }, d(e, r, .5 * Math.PI + n), d(e, r, 1 * Math.PI - fabric.util.degreesToRadians(a) + n)]], [[{
                x: e.x,
                y: e.y
            }, d(e, r, .5 * Math.PI + n), d(e, r, 2 * Math.PI + fabric.util.degreesToRadians(a) + n)]]),
            180 > i) {
                var o = Math.max(180 - i, 0)
                  , a = o / 2;
                s.push([[{
                    x: e.x,
                    y: e.y
                }, d(e, r, 1 * Math.PI + n), d(e, r, 1 * Math.PI + fabric.util.degreesToRadians(a) + n)]], [[{
                    x: e.x,
                    y: e.y
                }, d(e, r, 2 * Math.PI + n), d(e, r, 2 * Math.PI - fabric.util.degreesToRadians(a) + n)]])
            }
            return s
        }
          , u = function(n, r, s, l, c) {
            d20.utils.stattracker.lighting || (d20.utils.stattracker.lighting = !0);
            for (var d = illuminated.Lamp, u = (illuminated.RectangleObject,
            illuminated.DiscObject,
            illuminated.PolygonObject), p = illuminated.Vec2, f = illuminated.Lighting, g = (illuminated.DarkMask,
            {
                minx: n,
                miny: r,
                maxx: n + s / d20.engine.canvasZoom,
                maxy: r + l / d20.engine.canvasZoom,
                w: s,
                h: l
            }), m = 1e4, v = o, y = [], b = 0, w = d20.engine.canvas._objects.length; w > b; b++) {
                var x = d20.engine.canvas._objects[b];
                if ("path" == x.type && x.model && "walls" == x.model.get("layer")) {
                    var E = e(x.get("top") + "" + x.get("left") + x.get("width") + x.get("height") + x.get("scaleX") + x.get("scaleY"));
                    if (!x.lightingobjs || x.lightingchecksum !== E) {
                        console.log("new caster!");
                        var T = Math.floor(x.get("left") - Math.floor(x.get("width") * x.scaleX) / 2)
                          , C = Math.floor(x.get("top") - Math.floor(x.get("height") * x.scaleY) / 2);
                        x.lightingobjs = [];
                        for (var R = x.get("path"), S = 0; S < R.length; S++)
                            if (0 != S) {
                                var k = [];
                                k.push(new p(Math.round(R[S][1] * x.scaleX) + T,Math.round(R[S][2] * x.scaleY) + C)),
                                k.push(new p(Math.round(R[S - 1][1] * x.scaleX) + T,Math.round(R[S - 1][2] * x.scaleY) + C)),
                                x.lightingobjs.push(new u({
                                    points: k
                                }))
                            }
                        x.lightingchecksum = E
                    }
                    for (var M = 0; M < x.lightingobjs.length; M++)
                        y.push(x.lightingobjs[M])
                }
            }
            var A = 0
              , H = d20.Campaign.activePage().get("lightenforcelos") !== !0 || window.is_gm !== !1 && !d20.engine.lightOnlySelected ? !1 : !0
              , P = d20.engine.lightOnlySelected && !H ? d20.engine.lightOnlySelected : d20.engine.canvas._objects
              , O = []
              , D = d20.engine.canvas.getActiveGroup()
              , $ = 2 * (g.w > g.h ? g.w : g.h);
            d20.engine.canvasZoom < 1 && ($ /= d20.engine.canvasZoom);
            var L = 0;
            if (window.is_gm && !d20.engine.lightOnlySelected && (L = 1),
            _.each(P, function(e) {
                return "image" !== e.type ? !0 : e.model.get("light_hassight") ? void ((window.is_gm && d20.engine.lightOnlySelected && -1 !== d20.engine.lightOnlySelected.indexOf(e) || !window.is_gm && e.selectable) && e.model.get("light_multiplier") > L && (L = e.model.get("light_multiplier"))) : !0
            }),
            0 === L && d20.Campaign.activePage().get("lightenforcelos") === !1 && (L = 1),
            _.each(P, function(e) {
                var i = !1;
                if ("image" == e.type && "gmlayer" != e.model.get("layer") && (H && e.model.get("light_hassight") === !0 && (window.is_gm && d20.engine.lightOnlySelected && -1 !== d20.engine.lightOnlySelected.indexOf(e) || !window.is_gm && e.selectable) && (i = !0),
                i || "" != e.model.get("light_radius") && (window.is_gm || e.selectable === !0 || e.model.get("light_otherplayers") === !0))) {
                    if (window.is_gm && d20.engine.lightOnlySelected && -1 === d20.engine.lightOnlySelected.indexOf(e) && e.model.get("light_otherplayers") === !1)
                        return;
                    var n = 0
                      , r = 0
                      , o = !1;
                    d20.Campaign.activePage().get("lightingglobalillum") === !0 && (o = !0),
                    D && D.contains(e) && (n = D.left,
                    r = D.top);
                    var s;
                    s = 1 == d20.Campaign.activePage().get("lightupdatedrop") ? {
                        top: e.model.get("top"),
                        left: e.model.get("left"),
                        width: e.model.get("width"),
                        height: e.model.get("height")
                    } : {
                        top: e.top + r,
                        left: e.left + n,
                        width: e.width,
                        height: e.height
                    };
                    var l = parseFloat(e.model.get("light_radius"));
                    if (_.isNaN(l) && i && (l = 1,
                    o = !0),
                    _.isNaN(l))
                        return;
                    l *= L;
                    var u = Math.floor(l / parseFloat(d20.Campaign.activePage().get("scale_number")) * window.dpi);
                    u += s.width > s.height ? s.width : s.height;
                    var b;
                    if ("" === e.model.get("light_dimradius"))
                        b = .75 * u;
                    else {
                        var w = parseFloat(e.model.get("light_dimradius"));
                        if (_.isNaN(w))
                            return;
                        w *= L,
                        b = Math.floor(w / parseFloat(d20.Campaign.activePage().get("scale_number")) * window.dpi)
                    }
                    (u > m || 0 == u) && (u = m),
                    b >= u && (b = .95 * u);
                    var x = i && $ > u ? $ : u;
                    if (s.left + x < g.minx || s.left - x > g.maxx || s.top + x < g.miny || s.top - x > g.maxy)
                        return;
                    e.lamp && e.lamp.newradius == u && e.lamp.newdim == b || (console.log("new lamp"),
                    e.lamp = new d({
                        position: new p(0,0),
                        distance: 1,
                        radius: 1,
                        samples: 1,
                        diffuse: .2
                    }),
                    e.lamp.newradius = u,
                    e.lamp.newdim = b,
                    e.lamp.infinite = !1);
                    var E = new f({
                        light: e.lamp,
                        objects: y
                    });
                    e.lamp.position = new p(s.left,s.top),
                    e.lamp.distance = u,
                    e.lamp.radius = b,
                    e.lamp.distance_shadows = 1.5 * e.lamp.distance;
                    var T;
                    i && (E.light.infinite = !0,
                    E.light.distance_shadows < $ && (E.light.distance_shadows = $),
                    O.push(E)),
                    E.shadowpaths = E.compute(),
                    E.maskingpaths = [];
                    for (var C = 0; C < E.shadowpaths.length; C++)
                        E.maskingpaths.push(E.shadowpaths[C]);
                    if (i && "" !== e.model.get("light_losangle") && E.maskingpaths.push.apply(E.maskingpaths, h({
                        x: e.lamp.position.x,
                        y: e.lamp.position.y + 0
                    }, e.lamp.distance_shadows, parseInt(e.model.get("light_losangle"), 10), fabric.util.degreesToRadians(e.angle))),
                    o)
                        return;
                    "" !== e.model.get("light_angle") && E.shadowpaths.push.apply(E.shadowpaths, h({
                        x: e.lamp.position.x,
                        y: e.lamp.position.y + 0
                    }, e.lamp.distance, parseInt(e.model.get("light_angle"), 10), fabric.util.degreesToRadians(e.angle))),
                    d20.canvas_overlay.gl.active ? d20.canvas_overlay.gl.renderLightToGl(E, A + 1) : (0 == A ? (v.globalCompositeOperation = "source-over",
                    v.globalAlpha = c,
                    T = !1) : (1 != v.globalAlpha && (v.globalAlpha = 1),
                    v.globalCompositeOperation = "destination-in",
                    T = !1),
                    a.fillStyle = "rgb(0,0,0)",
                    a.fillRect(0, 0, Math.ceil(t.width / d20.engine.canvasZoom), Math.ceil(t.height / d20.engine.canvasZoom)),
                    a.save(),
                    a.translate(-d20.engine.currentCanvasOffset[0], -d20.engine.currentCanvasOffset[1]),
                    E.light.castlight(E.light.center(), a, T),
                    E.castToCtx(a, E.shadowpaths),
                    a.restore(),
                    v.drawImage(d20.engine.shadowcanvas, 0, 0, Math.ceil(d20.engine.shadowcanvas.width / d20.engine.canvasZoom), Math.ceil(d20.engine.shadowcanvas.height / d20.engine.canvasZoom))),
                    A++
                }
            }),
            H && d20.canvas_overlay.gl.active)
                d20.canvas_overlay.gl.renderLosMask(O);
            else if (H) {
                var I = d20.engine.workctx;
                I.globalAlpha = 1,
                a.fillStyle = "rgb(0,0,0)";
                for (var F = O.length, B = 0; F > B; B++)
                    0 == B ? (I.clearRect(0, 0, Math.ceil(t.width / d20.engine.canvasZoom), Math.ceil(t.height / d20.engine.canvasZoom)),
                    I.globalCompositeOperation = "source-over") : I.globalCompositeOperation = "destination-in",
                    a.clearRect(0, 0, Math.ceil(t.width / d20.engine.canvasZoom), Math.ceil(t.height / d20.engine.canvasZoom)),
                    a.save(),
                    a.translate(-d20.engine.currentCanvasOffset[0], -d20.engine.currentCanvasOffset[1]),
                    O[B].castToCtx(a, O[B].maskingpaths),
                    a.restore(),
                    F > 1 && I.drawImage(d20.engine.shadowcanvas, 0, 0, Math.ceil(d20.engine.shadowcanvas.width / d20.engine.canvasZoom), Math.ceil(d20.engine.shadowcanvas.height / d20.engine.canvasZoom));
                0 === F && (a.fillStyle = "rgb(0,0,0)",
                a.fillRect(0, 0, Math.ceil(t.width / d20.engine.canvasZoom), Math.ceil(t.height / d20.engine.canvasZoom))),
                v.globalAlpha = 1,
                v.globalCompositeOperation = "source-over",
                v.drawImage(F > 1 ? d20.engine.workcanvas : d20.engine.shadowcanvas, 0, 0, Math.ceil(d20.engine.workcanvas.width / d20.engine.canvasZoom), Math.ceil(d20.engine.workcanvas.height / d20.engine.canvasZoom))
            }
            0 != A || d20.canvas_overlay.gl.active || (window.is_gm && !d20.engine.lightOnlySelected || d20.Campaign.activePage().get("lightglobalillum") !== !0 || (c = 1),
            v.fillStyle = "rgba(0,0,0," + c + ")",
            v.fillRect(0, 0, Math.ceil(i.width / d20.engine.canvasZoom), Math.ceil(i.height / d20.engine.canvasZoom))),
            d20.canvas_overlay.gl.active && (d20.canvas_overlay.gl.finishLightRender(),
            H && 0 === O.length && (window.is_gm && !d20.engine.lightOnlySelected || d20.Campaign.activePage().get("lightglobalillum") !== !0 || (c = 1),
            d20.canvas_overlay.gl.prepareForGlDraw(c))),
            O = null
        }
          , p = !1
          , f = !1;
        d20.canvas_overlay.drawGrid = function(e) {
            if (d20.Campaign && d20.Campaign.activePage() && e) {
                var i = d20.engine.currentCanvasOffset[1]
                  , n = d20.engine.currentCanvasOffset[0]
                  , r = t.width
                  , o = t.height;
                d20.Campaign.activePage().get("showgrid") && d20.engine.snapTo > 0 && ("hex" == d20.Campaign.activePage().get("grid_type") ? l(e, -n, -i, r, o, "cols") : "hexr" == d20.Campaign.activePage().get("grid_type") ? l(e, -n, -i, r, o, "rows") : s(e, -n, -i, r, o))
            }
        }
        ;
        var g = function() {
            if (d20.Campaign && d20.Campaign.activePage() && r) {
                var e = d20.engine.currentCanvasOffset[1]
                  , i = d20.engine.currentCanvasOffset[0]
                  , n = t.width
                  , o = t.height;
                r.save(),
                r.clearRect(0, 0, Math.ceil(t.width / d20.engine.canvasZoom), Math.ceil(t.height / d20.engine.canvasZoom)),
                d20.Campaign.activePage().get("showdarkness") && c(i, e, n, o),
                "gridalign" == d20.engine.mode && 4 == d20.engine.fog.down.length && (r.beginPath(),
                r.fillStyle = "rgba(255,255,133,0.50)",
                r.rect(d20.engine.fog.down[0] - i, d20.engine.fog.down[1] - e, d20.engine.fog.down[2] - d20.engine.fog.down[0], d20.engine.fog.down[3] - d20.engine.fog.down[1]),
                r.closePath(),
                r.fill()),
                r.restore()
            }
        }
          , m = function(e) {
            p && clearTimeout(p),
            f && !e ? (w(!1),
            p = setTimeout(function() {
                g(),
                m(!0)
            }, 200)) : w(!0)
        }
        ;
        d20.canvas_overlay.postProcessing = function(e) {
            d20.Campaign && d20.Campaign.activePage() && r && m(e)
        }
        ;
        var v = 0
          , y = 0
          , b = 0
          , w = function(e) {
            lightingIsActive = d20.Campaign.activePage().get("showlighting") && window.largefeats === !0;
            var i = 1;
            if (window.is_gm && !d20.engine.lightOnlySelected && (i = d20.Campaign.activePage().get("fog_opacity")),
            d20.Campaign.activePage().get("lightglobalillum") === !0 && (i = 0),
            d20.canvas_overlay.gl.active && d20.canvas_overlay.gl.prepareForGlDraw(lightingIsActive ? i : 0),
            lightingIsActive)
                if (d20.canvas_overlay.gl.active)
                    u(d20.engine.currentCanvasOffset[0], d20.engine.currentCanvasOffset[1], t.width, t.height, i);
                else {
                    if (e) {
                        var n = (new Date).getTime();
                        o.save(),
                        o.clearRect(0, 0, Math.ceil(t.width / d20.engine.canvasZoom), Math.ceil(t.height / d20.engine.canvasZoom)),
                        "walls" == window.currentEditingLayer && (i = .5 * i),
                        u(d20.engine.currentCanvasOffset[0], d20.engine.currentCanvasOffset[1], t.width, t.height, i),
                        o.restore(),
                        v = n,
                        y = d20.engine.currentCanvasOffset[0],
                        b = d20.engine.currentCanvasOffset[1],
                        f = (new Date).getTime() - n > 50 ? !0 : !1
                    }
                    r.globalCompositeOperation = "source-over";
                    var a = y - d20.engine.currentCanvasOffset[0]
                      , s = b - d20.engine.currentCanvasOffset[1];
                    (0 !== a || 0 !== s) && (r.fillStyle = window.is_gm ? "rgba(0, 0, 0, " + i + ")" : 1 === i ? "rgb(0, 0, 0)" : "rgba(0, 0, 0, " + i + ")",
                    s > 0 ? r.fillRect(0, 0, Math.ceil(t.width / d20.engine.canvasZoom), s) : 0 > s && r.fillRect(0, Math.ceil(t.height / d20.engine.canvasZoom) + s, Math.ceil(t.width / d20.engine.canvasZoom), -s),
                    a > 0 ? r.fillRect(0, 0, a, Math.ceil(t.height / d20.engine.canvasZoom)) : 0 > a && r.fillRect(Math.ceil(t.width / d20.engine.canvasZoom) + a, 0, -a, Math.ceil(t.height / d20.engine.canvasZoom))),
                    r.drawImage(d20.engine.lightingcanvas, a, s, Math.ceil(t.width / d20.engine.canvasZoom), Math.ceil(t.height / d20.engine.canvasZoom))
                }
        }
        ;
        d20.canvas_overlay.debounced_redrawlighting = _.debounce(w, 50),
        d20.canvas_overlay.redrawlighting = w,
        d20.canvas_overlay.redraw = g,
        d20.canvas_overlay.revealOrHideArea = function(e) {
            if (!d20.Campaign.activePage().get("showdarkness")) {
                var t = $("<div><p>The Fog of War feature isn't currently turned on for this page, so hiding or revealing areas will have no effect. Do you want to turn it on? (You probably do!)</p>");
                t.dialog({
                    zIndex: 10800,
                    title: "Enable Fog of War?",
                    buttons: {
                        "Turn On Fog of War": function() {
                            d20.Campaign.activePage().save({
                                showdarkness: !0
                            }),
                            t.dialog("destroy").remove()
                        },
                        "No Thanks!": function() {
                            t.dialog("destroy").remove()
                        }
                    },
                    beforeClose: function() {
                        t.dialog("destroy").remove()
                    }
                })
            }
            if (!(e.width + e.height < 20 || e.x < 0 || e.y < 0)) {
                var i = d20.Campaign.activePage().get("revealedAreas");
                if (_.isArray(i) || (i = JSON.parse(i)),
                e.points)
                    var n = {
                        points: e.points,
                        type: e.type
                    };
                else
                    var n = {
                        width: e.width / window.zoomLevel,
                        height: e.height / window.zoomLevel,
                        x: e.x / window.zoomLevel,
                        y: e.y / window.zoomLevel,
                        type: e.type
                    };
                i.push(n),
                d20.Campaign.activePage().save({
                    revealedAreas: JSON.stringify(i)
                })
            }
        }
        ,
        d20.canvas_overlay.resetFog = function() {
            d20.Campaign.activePage().save({
                revealedAreas: d20.Campaign.activePage().defaults.revealedAreas
            })
        }
    }),
    d20.canvas_overlay.gl = {
        active: !1,
        initialized: !1
    },
    function() {
        var e, t, i, n, r, o, a, s, l, c = [], d = [], h = function() {
            var e = (c.length / 2,
            a.createBuffer());
            a.bindBuffer(a.ARRAY_BUFFER, e),
            a.bufferData(a.ARRAY_BUFFER, new Float32Array(c), a.STATIC_DRAW),
            a.vertexAttribPointer(t, 2, a.FLOAT, !1, 0, 0),
            c = []
        }
        , u = function(e, t) {
            a.drawArrays(a.TRIANGLES, e, t)
        }
        , p = function(e, t, i) {
            for (var n = (e[0].x - d20.engine.currentCanvasOffset[0]) * d20.engine.canvasZoom, r = (e[0].y - d20.engine.currentCanvasOffset[1]) * d20.engine.canvasZoom, o = e.length - (i ? 2 : 1), a = 1; o > a; a++)
                c.push(n, r, (e[a].x - d20.engine.currentCanvasOffset[0]) * d20.engine.canvasZoom, (e[a].y - d20.engine.currentCanvasOffset[1]) * d20.engine.canvasZoom, (e[a + 1].x - d20.engine.currentCanvasOffset[0]) * d20.engine.canvasZoom, (e[a + 1].y - d20.engine.currentCanvasOffset[1]) * d20.engine.canvasZoom);
            t || h()
        }
        ;
        d20.canvas_overlay.gl.updateGlSize = function(e) {
            console.log("UPDATE GL SIZE!"),
            d20.canvas_overlay.gl.initialized || f(),
            e ? (console.log("FORCE RESIZE!"),
            s.viewport(0, 0, d20.engine.lightingcanvas.width + 10, d20.engine.lightingcanvas.height + 10)) : s.viewport(0, 0, d20.engine.lightingcanvas.width, d20.engine.lightingcanvas.height),
            d20.engine.renderAll()
        }
        ,
        d20ext.resizeGl = d20.canvas_overlay.gl.updateGlSize;
        var f = function() {
            if (!d20.canvas_overlay.gl.initialized) {
                a = d20.engine.lightingctx,
                s = d20.engine.lightingctx,
                a.enable(a.BLEND),
                a.blendFunc(a.DST_ALPHA, a.ZERO),
                a.disable(a.DEPTH_TEST);
                var c = createShaderFromScriptElement(a, "2d-vertex-shader")
                  , d = createShaderFromScriptElement(a, "2d-fragment-shader");
                l = createProgram(a, [c, d]),
                e = a.getUniformLocation(l, "u_lightflag"),
                i = a.getUniformLocation(l, "u_resolution"),
                t = a.getAttribLocation(l, "a_position"),
                n = a.getUniformLocation(l, "centerPosition"),
                r = a.getUniformLocation(l, "lightRadius"),
                o = a.getUniformLocation(l, "lightColor"),
                a.enableVertexAttribArray(t),
                a.useProgram(l),
                a.colorMask(!0, !0, !0, !0),
                a.enable(a.STENCIL_TEST),
                a.stencilMask(255),
                d20.canvas_overlay.gl.initialized = !0
            }
        }
          , g = function(e, t, i) {
            for (var n = 2 * Math.PI / i, r = [{
                x: e.x,
                y: e.y
            }], o = 0; o <= 2 * Math.PI - n + 1; o += n)
                r.push({
                    x: Math.sin(o) * t + e.x,
                    y: Math.cos(o) * t + e.y
                });
            p(r, !0, !0)
        }
        ;
        d20.canvas_overlay.gl.prepareForGlDraw = function(e) {
            return a.clearColor(0, 0, 0, e),
            a.clear(a.STENCIL_BUFFER_BIT | a.COLOR_BUFFER_BIT),
            a.uniform2f(i, d20.engine.lightingcanvas.width, d20.engine.lightingcanvas.height),
            !0
        }
        ,
        d20.canvas_overlay.gl.renderLightToGl = function(e, t) {
            for (var i = c.length / 2, n = e.shadowpaths.length, r = 0; n > r; r++)
                for (var o = e.shadowpaths[r].length, a = 0; o > a; a++)
                    p(e.shadowpaths[r][a], !0);
            d.push(0, t, i, c.length / 2 - i, 0, 0, 0, 0, 0);
            var i = c.length / 2;
            g(e.light.position, e.light.distance, 18),
            d.push(1, t, i, c.length / 2 - i, (e.light.position.x - d20.engine.currentCanvasOffset[0]) * d20.engine.canvasZoom, (e.light.position.y - d20.engine.currentCanvasOffset[1]) * d20.engine.canvasZoom, e.light.distance * d20.engine.canvasZoom, e.light.radius * d20.engine.canvasZoom, 0)
        }
        ,
        d20.canvas_overlay.gl.renderLosMask = function(e) {
            for (var t = e.length, i = 0; t > i; i++) {
                for (var n = c.length / 2, r = e[i].maskingpaths.length, o = 0; r > o; o++)
                    for (var a = e[i].maskingpaths[o].length, s = 0; a > s; s++)
                        p(e[i].maskingpaths[o][s], !0);
                d.push(2, i, n, c.length / 2 - n, t, 0, 0, 0, 0)
            }
        }
        ,
        d20.canvas_overlay.gl.finishLightRender = function() {
            h(),
            a.blendFunc(a.DST_ALPHA, a.ZERO),
            a.enable(a.STENCIL_TEST),
            a.enable(a.BLEND);
            for (var t = 0; t < d.length; t += 9)
                0 === d[t] ? (a.stencilFunc(a.NEVER, d[t + 1], 255),
                a.stencilOp(a.REPLACE, a.KEEP, a.KEEP),
                a.uniform1f(e, 0),
                u(d[t + 2], d[t + 3])) : 1 === d[t] ? (a.stencilFunc(a.NOTEQUAL, d[t + 1], 255),
                a.stencilOp(a.KEEP, a.KEEP, a.KEEP),
                a.uniform2f(n, d[t + 4], d[t + 5]),
                a.uniform2f(r, d[t + 6], d[t + 7]),
                a.uniform1f(e, 1),
                u(d[t + 2], d[t + 3])) : (0 === d[t + 1] ? (a.clear(a.STENCIL_BUFFER_BIT),
                a.stencilFunc(a.NEVER, 1, 255),
                a.stencilOp(a.REPLACE, a.KEEP, a.KEEP),
                a.uniform1f(e, 0)) : (a.stencilFunc(a.EQUAL, d[t + 1], 255),
                a.stencilOp(a.KEEP, a.KEEP, a.INCR)),
                d[t + 1] === d[t + 4] - 1 && (0 === d[t + 1] && a.stencilFunc(a.ALWAYS, 1, 255),
                a.disable(a.BLEND)),
                u(d[t + 2], d[t + 3]));
            d20.canvas_overlay.gl.shadowsDrawnSinceLastFrame = !0,
            d = []
        }
        ,
        d20.canvas_overlay.gl.renderParticle = function(e, t, i, n, r, o) {
            var a = c.length / 2;
            p(e, !0),
            d.push("particle", 0, a, c.length / 2 - a, (t - d20.engine.currentCanvasOffset[0]) * d20.engine.canvasZoom, (i - d20.engine.currentCanvasOffset[1]) * d20.engine.canvasZoom, n, r, o)
        }
        ,
        d20.canvas_overlay.gl.finishParticleRender = function() {
            h(),
            a.uniform1f(e, 5),
            a.disable(a.STENCIL_TEST),
            a.enable(a.BLEND),
            a.blendFuncSeparate(a.SRC_ALPHA, a.ONE, a.ONE, a.ONE);
            for (var t = 0; t < d.length; t += 9)
                a.uniform2f(n, d[t + 4], d[t + 5]),
                a.uniform2f(r, d[t + 6], d[t + 8]),
                a.uniform4f(o, d[t + 7][0], d[t + 7][1], d[t + 7][2], d[t + 7][3]),
                u(d[t + 2], d[t + 3]);
            d = []
        }
        ,
        d20.canvas_overlay.gl.renderLightToGl2 = function(e, t) {
            a.stencilFunc(a.NEVER, t, 255),
            a.stencilOp(a.REPLACE, a.KEEP, a.KEEP),
            _.each(e.compute(), function(e) {
                _.each(e, function(e) {
                    p(e, !0)
                })
            }),
            h(),
            a.stencilFunc(a.NOTEQUAL, t, 255),
            g(e.light.position, e.light.distance, 25),
            h()
        }
    }(),
    d20.engine = {
        currentCanvasOffset: [0, 0],
        paddingOffset: [0, 0],
        padding: 125,
        snapTo: 0,
        canvasHeight: $(window).width(),
        canvasWidth: $(window).height(),
        pageWidth: 200,
        pageHeight: 200,
        altDown: !1,
        shiftDown: !1,
        ctrlDown: !1,
        spaceDown: !1,
        noOverlayRender: !1,
        mode: "select",
        canvasZoom: 1,
        fog: {
            down: [],
            points: []
        },
        measure: {
            down: []
        },
        measurements: {},
        leftMouseIsDown: !1,
        pan: {
            lastPanDist: 0,
            panning: !1
        },
        drawshape: {
            shape: !1
        },
        stats: !1,
        pings: {},
        backgroundColor: "#FFFFFF",
        highlightToken: !1,
        gridaligner: {},
        lightOnlySelected: !1,
        lastMousePos: [0, 0],
        lastTouchStarted: 0,
        zoomStart: !1,
        canvasDirty: !1,
        canvasTopDirty: !1,
        fx: {
            lastMoveBroadcast: 0,
            MOVE_BROADCAST_FREQ: 150
        },
        pauseRender: !1,
        movingShadows: {},
        renderingShadows: {},
        showLastPaths: [],
        nextTargetCallback: !1
    },
    function() {
        for (var e = 0, t = ["ms", "moz", "webkit", "o"], i = 0; i < t.length && !window.requestAnimationFrame; ++i)
            window.requestAnimationFrame = window[t[i] + "RequestAnimationFrame"],
            window.cancelAnimationFrame = window[t[i] + "CancelAnimationFrame"] || window[t[i] + "CancelRequestAnimationFrame"];
        window.requestAnimationFrame || (window.requestAnimationFrame = function(t) {
            var i = (new Date).getTime()
              , n = Math.max(0, 16 - (i - e))
              , r = window.setTimeout(function() {
                t(i + n)
            }, n);
            return e = i + n,
            r
        }
        ),
        window.cancelAnimationFrame || (window.cancelAnimationFrame = function(e) {
            clearTimeout(e)
        }
        )
    }(),
    function() {
        if (!fabric.isTouchSupported && ("staging" == d20.environment || "development" == d20.environment)) {
            var e = new Stats;
            e.setMode(1),
            e.domElement.style.position = "absolute",
            e.domElement.style.right = "250px",
            e.domElement.style.bottom = "0px",
            document.body.appendChild(e.domElement),
            e.domElement.style.zIndex = 1e5,
            d20.engine.stats = e
        }
        console.log("TOUCH SUPPORTED: " + fabric.isTouchSupported);
        var t, i, n;
        i = $("<canvas id='fowcanvas' style='position: absolute; z-index: 4; left:0px; top: 0px;' tabindex='-1'></canvas>"),
        d20.engine.fowcanvas = i[0],
        d20.engine.fowctx = d20.engine.fowcanvas.getContext("2d"),
        d20.engine.canvas = t = new fabric.Canvas("maincanvas",{
            controlsAboveOverlay: !0
        }),
        t.backgroundColor = "rgb(255,255,255)",
        n = $("#upperCanvas"),
        n.attr("tabindex", "-1"),
        d20.engine.uppercanvas = n[0];
        var r = $("#editor-wrapper").find(".canvas-container");
        if (r.css("position", "fixed"),
        r.find("canvas").css("border", "none"),
        r.append(i),
        d20.engine.$container = r,
        d20.engine.lightingcanvas = document.createElement("canvas"),
        d20.engine.lightingcanvas.webkitImageSmoothingEnabled = !1,
        d20.engine.lightingcanvas.mozImageSmoothingEnabled = !1,
        !window.disablewebgl && window.Detector.webgl) {
            console.log("USING WEBGL ACCELERATION...");
            try {
                d20.engine.lightingctx = d20.engine.lightingcanvas.getContext("webgl", {
                    stencil: !0,
                    antialias: !0,
                    premultipliedAlpha: !0
                }) || d20.engine.lightingcanvas.getContext("experimental-webgl", {
                    stencil: !0,
                    antialias: !0,
                    premultipliedAlpha: !0
                }),
                d20.engine.lightingcanvas.id = "lightingcanvas",
                d20.engine.lightingcanvas.style.position = "absolute",
                d20.engine.lightingcanvas.style.zIndex = 3,
                d20.engine.lightingcanvas.style.left = "0px",
                d20.engine.lightingcanvas.style.top = "0px",
                r.append(d20.engine.lightingcanvas),
                d20.engine.lightingctx && (d20.canvas_overlay.gl.active = !0,
                console.log("WEBGL STARTUP SUCCESS"))
            } catch (o) {
                console.log("ERROR DURING WEBGL STARTUP"),
                console.log(o),
                d20.engine.lightingcanvas = document.createElement("canvas"),
                d20.canvas_overlay.gl.active = !1
            }
        }
        d20.canvas_overlay.gl.active || (d20.engine.lightingcanvas.style.display = "none",
        d20.engine.lightingctx = d20.engine.lightingcanvas.getContext("2d"),
        d20.engine.shadowcanvas = document.createElement("canvas"),
        d20.engine.shadowcanvas.style.display = "none",
        d20.engine.shadowcanvas.webkitImageSmoothingEnabled = !1,
        d20.engine.shadowcanvas.mozImageSmoothingEnabled = !1,
        d20.engine.shadowctx = d20.engine.shadowcanvas.getContext("2d"),
        d20.engine.workcanvas = document.createElement("canvas"),
        d20.engine.workcanvas.style.display = "none",
        d20.engine.workcanvas.webkitImageSmoothingEnabled = !1,
        d20.engine.workcanvas.mozImageSmoothingEnabled = !1,
        d20.engine.workctx = d20.engine.workcanvas.getContext("2d")),
        t.renderAll(),
        d20.engine.setCanvasSize = function(e, i) {
            var n = d20.engine.canvasZoom;
            d20.engine.setZoom(1, !0),
            t.setHeight(i),
            t.setWidth(e),
            d20.engine.fowcanvas.width = e,
            d20.engine.fowcanvas.height = i,
            d20.canvas_overlay.gl.active ? (d20.engine.lightingcanvas.width = e,
            d20.engine.lightingcanvas.height = i,
            d20.canvas_overlay.gl.updateGlSize()) : d20.engine.shadowcanvas && (d20.engine.lightingcanvas.width = e,
            d20.engine.lightingcanvas.height = i,
            d20.engine.shadowcanvas.width = e,
            d20.engine.shadowcanvas.height = i,
            d20.engine.workcanvas.width = e,
            d20.engine.workcanvas.height = i),
            d20.engine.canvasHeight = i,
            d20.engine.canvasWidth = e,
            d20.engine.setZoom(n, !0),
            setTimeout(function() {
                a.trigger("scroll")
            }, 100)
        }
        ,
        d20.engine.snapToIncrement = function(e, t) {
            return t * Math.round(e / t)
        }
        ;
        var a = $("#editor-wrapper");
        a.on("scroll", function() {
            var e = Math.round(a.scrollTop() / d20.engine.canvasZoom)
              , t = Math.round(a.scrollLeft() / d20.engine.canvasZoom);
            t < d20.engine.padding ? (d20.engine.paddingOffset[0] = d20.engine.padding - t,
            d20.engine.currentCanvasOffset[0] = 0) : d20.engine.pageWidth / d20.engine.canvasZoom - t - d20.engine.canvasWidth / d20.engine.canvasZoom + d20.engine.padding < 0 ? (d20.engine.paddingOffset[0] = d20.engine.pageWidth / d20.engine.canvasZoom - t - d20.engine.canvasWidth / d20.engine.canvasZoom + d20.engine.padding,
            d20.engine.currentCanvasOffset[0] = t - d20.engine.padding + d20.engine.paddingOffset[0]) : (d20.engine.paddingOffset[0] = 0,
            d20.engine.currentCanvasOffset[0] = t - d20.engine.padding),
            e < d20.engine.padding ? (d20.engine.paddingOffset[1] = d20.engine.padding - e,
            d20.engine.currentCanvasOffset[1] = 0) : d20.engine.pageHeight / d20.engine.canvasZoom - e - d20.engine.canvasHeight / d20.engine.canvasZoom + d20.engine.padding < 0 ? (d20.engine.paddingOffset[1] = d20.engine.pageHeight / d20.engine.canvasZoom - e - d20.engine.canvasHeight / d20.engine.canvasZoom + d20.engine.padding,
            d20.engine.currentCanvasOffset[1] = e - d20.engine.padding + d20.engine.paddingOffset[1]) : (d20.engine.paddingOffset[1] = 0,
            d20.engine.currentCanvasOffset[1] = e - d20.engine.padding);
            var i = d20.engine.pageWidth + 2 * d20.engine.padding < d20.engine.canvasWidth ? d20.engine.pageWidth : d20.engine.canvasWidth - d20.engine.paddingOffset[0]
              , n = d20.engine.pageHeight + 2 * d20.engine.padding < d20.engine.canvasHeight ? d20.engine.pageHeight : d20.engine.canvasHeight - d20.engine.paddingOffset[1];
            (r.width() != i || r.height() != n) && r.css({
                width: i + "px",
                height: n + "px"
            });
            var o = r[0].style.left
              , s = r[0].style.top
              , l = d20.engine.paddingOffset[0] + "px"
              , c = d20.engine.paddingOffset[1] + "px";
            (o != l || s != c) && (r[0].style.left = l,
            r[0].style.top = c),
            d20.engine.renderAll(),
            _.defer(function() {
                if (1 != d20.engine.canvasZoom && d20.token_editor.$currentRadialMenu) {
                    var e = d20.token_editor.$currentRadialMenu[0];
                    e && "none" != e.style.display && (e.style.display = "none"),
                    d20.token_editor.debounced_updateRadialMenuPos()
                }
                1 != d20.engine.canvasZoom && d20.engine.editingTextarea && d20.engine.editingTextarea.trigger("scrolled")
            })
        });
        var s = !1;
        $(document).bind("keydown", "e alt+e", function() {
            s = !0
        }),
        $(document).bind("keyup", "e alt+e", function() {
            s = !1
        }),
        r[0].addEventListener("mousewheel", function(e) {
            a.stop();
            var t = !1;
            if (s) {
                var i = d20.engine.selected()
                  , n = d20.engine.canvas.getActiveGroup();
                if (i.length > 0) {
                    t = !0;
                    var r;
                    r = e.altKey ? e.wheelDelta / 30 : (e.wheelDelta < 0 ? -1 : 1) * ("square" == d20.Campaign.activePage().get("grid_type") ? 45 : 30);
                    var o = i[0];
                    n && (o = n),
                    o.angle = o.angle + r,
                    o.angle = o.angle % 360,
                    d20.engine.canvas.trigger("object:modified", {
                        target: o,
                        debounce: !0,
                        no_snap: e.altKey ? !0 : !1
                    }),
                    d20.engine.renderAll()
                }
            }
            if (!t && e.altKey) {
                var l = e.wheelDeltaY / 120 * .1;
                d20.engine.slideZoom(f + l)
            } else
                t || (e.wheelDeltaX && (a[0].scrollLeft = a[0].scrollLeft - .75 * e.wheelDeltaX),
                e.wheelDeltaY && (a[0].scrollTop = a[0].scrollTop - .75 * e.wheelDeltaY));
            e.stopPropagation(),
            e.preventDefault()
        }),
        r[0].addEventListener("MozMousePixelScroll", function(e) {
            if (d20.Campaign && d20.Campaign.activePage()) {
                a.stop();
                var t = !1;
                if (s) {
                    var i = d20.engine.selected()
                      , n = d20.engine.canvas.getActiveGroup();
                    if (i.length > 0) {
                        t = !0;
                        var r;
                        r = e.altKey ? e.detail < 0 ? -1 : 1 : (e.detail < 0 ? -1 : 1) * ("square" == d20.Campaign.activePage().get("grid_type") ? 45 : 30);
                        var o = i[0];
                        n && (o = n),
                        o.angle = o.angle + r,
                        o.angle = o.angle % 360,
                        d20.engine.canvas.trigger("object:modified", {
                            target: o,
                            debounce: !0,
                            no_snap: e.altKey ? !0 : !1
                        }),
                        d20.engine.renderAll()
                    }
                }
                if (!t && e.altKey) {
                    if (e.axis == e.VERTICAL_AXIS) {
                        var l = e.detail / 120 * .25 * -1;
                        console.log(l),
                        console.log(d20.engine.canvasZoom + l),
                        d20.engine.slideZoom(f + l)
                    }
                } else
                    t || (e.axis == e.HORIZONTAL_AXIS ? a[0].scrollLeft = a[0].scrollLeft + e.detail : e.axis == e.VERTICAL_AXIS && (a[0].scrollTop = a[0].scrollTop + e.detail));
                e.stopPropagation(),
                e.preventDefault()
            }
        }),
        d20.engine.getSnappedTopLeft = function(e, t, i) {
            var n, r, o = {}, a = e.get("top"), s = e.get("left");
            n = r = 0;
            var l = Math.floor(d20.engine.pageWidth / d20.engine.canvasZoom) - 5
              , c = Math.floor(d20.engine.pageHeight / d20.engine.canvasZoom) - 5;
            if ("square" == d20.Campaign.activePage().get("grid_type")) {
                if (t && t.contains(e))
                    n = t.top - Math.floor(t.height / 2) - d20.engine.snapToIncrement(t.top - Math.floor(t.height / 2), d20.engine.snapTo),
                    r = t.left - Math.floor(t.width / 2) - d20.engine.snapToIncrement(t.left - Math.floor(t.width / 2), d20.engine.snapTo);
                else {
                    if (i)
                        a -= Math.floor(e.get("width") / 2),
                        s -= Math.floor(e.get("height") / 2);
                    else {
                        var d = e.getBoundingRect();
                        a = d.top,
                        s = d.left,
                        e.get("height") == e.get("width") && (a += Math.floor((d.height - e.get("height")) / 2),
                        s += Math.floor((d.width - e.get("width")) / 2))
                    }
                    n = a - d20.engine.snapToIncrement(a, d20.engine.snapTo),
                    r = s - d20.engine.snapToIncrement(s, d20.engine.snapTo)
                }
                o.top = e.get("top") - n,
                o.left = e.get("left") - r
            } else {
                if (t && t.contains(e)) {
                    var h = d20.canvas_overlay.activeHexGrid.GetHexAt({
                        X: t.left,
                        Y: t.top
                    });
                    h && (n = t.top - h.MidPoint.Y,
                    r = t.left - h.MidPoint.X)
                } else {
                    var h = d20.canvas_overlay.activeHexGrid.GetHexAt({
                        X: s,
                        Y: a
                    });
                    h && (n = a - h.MidPoint.Y,
                    r = s - h.MidPoint.X)
                }
                o.top = a - n,
                o.left = s - r
            }
            return o.top > c && (o.top = c),
            o.left > l && (o.left = l),
            o
        }
        ;
        var l = []
          , c = function() {
            var e = d20.engine.canvas.getActiveGroup()
              , t = [];
            if (e && (_.each(e._objects, function(e) {
                t.push(e)
            }),
            d20.engine.canvas.discardActiveGroup()),
            _.each(l, function(e) {
                e.model && e.model.collection && e.model.view && e.model.view.modified()
            }),
            l = [],
            t.length > 0) {
                var i = new fabric.Group(t);
                d20.engine.canvas.setActiveGroup(i)
            }
        }
          , d = _.debounce(c, 500)
          , h = _.debounce(c, 25);
        t.on("object:modified", function(e) {
            for (var t = e.target._objects || [e.target], i = d20.engine.canvas.getActiveGroup(), n = !1, r = 0; r < t.length; r++) {
                var o = t[r];
                if (!o.model)
                    return;
                if (!d20.engine.altDown && 0 != d20.engine.snapTo && ("path" != o.type && 1 != o.model.get("isdrawing") || n)) {
                    var a = {}
                      , s = o.get("width") * o.get("scaleX")
                      , c = o.get("height") * o.get("scaleY")
                      , u = o.get("angle")
                      , p = o.get("top")
                      , f = o.get("left");
                    if ((o.model.changedAttributes({
                        width: s,
                        height: c
                    }) || e.force_snap) && (console.log("Do width/height snapping"),
                    s = d20.engine.snapToIncrement(s, d20.engine.snapTo),
                    c = d20.engine.snapToIncrement(c, d20.engine.snapTo),
                    s < d20.engine.snapTo && (s = d20.engine.snapTo),
                    c < d20.engine.snapTo && (c = d20.engine.snapTo),
                    a.width = s,
                    a.height = c,
                    a.scaleX = 1,
                    a.scaleY = 1),
                    !o.model.changedAttributes({
                        rotation: u
                    }) && !e.force_snap || e.no_snap || (console.log("Do angle snapping!"),
                    a.angle = "square" == d20.Campaign.activePage().get("grid_type") ? d20.engine.snapToIncrement(u, 45) : d20.engine.snapToIncrement(u, 30)),
                    Object.keys(a).length > 0 && (o.set(a),
                    o.setCoords()),
                    !(a.angle && i || !(o.model.changedAttributes({
                        top: p,
                        left: f
                    }) || a.width || e.force_snap) || e.no_snap)) {
                        var g = d20.engine.getSnappedTopLeft(o, i);
                        3 === d20.engine.checkMovement(o, [g.left, g.top], [f, p]) && (a.top = g.top,
                        a.left = g.left)
                    }
                    o.set(a),
                    o.setCoords()
                }
                if (("objects" === o.model.get("layer") || "gmlayer" === o.model.get("layer")) && "image" === o.model.get("type")) {
                    var m = !1;
                    if (d20.engine.movingShadows[o.model.id] && 0 !== d20.engine.movingShadows[o.model.id].waypoints.length) {
                        for (var v = 0; v < d20.engine.movingShadows[o.model.id].waypoints.length; v++)
                            if (o.model.changedAttributes({
                                left: d20.engine.movingShadows[o.model.id].waypoints[v],
                                top: d20.engine.movingShadows[o.model.id].waypoints[++v]
                            })) {
                                m = !0;
                                break
                            }
                    } else
                        o.model.changedAttributes({
                            top: o.get("top"),
                            left: o.get("left")
                        }) && (m = !0);
                    if (m) {
                        var y = [o.model.get("left"), o.model.get("top")];
                        if (d20.engine.movingShadows[o.model.id])
                            for (var v = 0; v < d20.engine.movingShadows[o.model.id].waypoints.length; v++)
                                y.push(d20.engine.movingShadows[o.model.id].waypoints[v]);
                        o.model.set({
                            lastmove: y.join(",")
                        }, {
                            silent: !0
                        })
                    }
                }
                o.model && o.model.view && (o.model.view.ischanging && o.model.view.ischanging(),
                -1 === l.indexOf(o) && l.push(o),
                e.debounce ? d() : h(),
                o.model.view.updateBackdrops && o.model.view.updateBackdrops())
            }
        }),
        t.on("path:created", function(e) {
            var t = 1.25
              , i = e.path.get("path");
            if ("M" == i[0][0] && "L" == i[1][0]) {
                var n, r = [];
                _.map(i, function(e) {
                    "L" == e[0] ? r.push({
                        x: e[1],
                        y: e[2],
                        action: e
                    }) : "M" == e[0] && (n = {
                        action: e
                    })
                });
                var o = simplify(r, t);
                o.unshift(n),
                e.path.set("path", _.pluck(o, "action"))
            }
            d20.Campaign.activePage().addPath(e.path)
        }),
        d20.engine.canvasOrigRenderAll = _.bind(t.renderAll, d20.engine.canvas),
        d20.engine.canvasOrigRenderTop = _.bind(t.renderTop, d20.engine.canvas),
        d20.engine.renderAll = function() {
            d20.engine.canvasDirty = !0
        }
        ,
        d20.engine.renderTop = function() {
            d20.engine.canvasTopDirty = !0
        }
        ,
        t.renderAll = d20.engine.renderAll,
        t.renderTop = d20.engine.renderTop,
        d20.engine.debounced_renderAll = _.debounce(function() {
            d20.engine.renderAll()
        }, 30),
        d20.engine.throttled_renderAll = _.throttle(function() {
            d20.engine.noOverlayRender = !0,
            d20.engine.renderAll(),
            d20.engine.noOverlayRender = !1
        }, 30),
        d20.engine.postProcessing = function() {
            d20.canvas_overlay.postProcessing && !d20.engine.noOverlayRender && d20.canvas_overlay.postProcessing(),
            d20.engine.drawHighlights(d20.engine.canvas.contextContainer)
        }
        ,
        d20.engine.drawOverlays = function() {
            d20.engine.preProcessing(),
            d20.engine.postProcessing()
        }
        ,
        d20.engine.preProcessing = function() {
            d20.canvas_overlay.redraw && !d20.engine.noOverlayRender && d20.canvas_overlay.redraw()
        }
        ,
        d20.engine.debounced_renderTop = _.debounce(function() {
            d20.engine.renderTop()
        }, 30),
        d20.engine.drawOverlaysTop = function(e) {
            e.globalCompositeOperation = "lighter",
            d20.fx.render(e),
            e.globalCompositeOperation = "source-over",
            d20.engine.redrawSightTokens(e),
            d20.engine.drawShadowMovements(e),
            d20.engine.drawMeasurements(e),
            d20.engine.drawPings(e),
            d20.engine.drawInProgressDrawings(e)
        }
        ,
        d20.engine.redrawSightTokens = function(e) {
            if (!window.is_gm || d20.engine.lightOnlySelected) {
                var t, i = d20.engine.canvas._objects.length, n = d20.engine.canvas.getActiveGroup();
                if (n) {
                    t = [],
                    e.save(),
                    e.translate(n.left, n.top);
                    for (var r = n._objects.length, o = 0; r > o; o++)
                        (window.is_gm && -1 !== d20.engine.lightOnlySelected.indexOf(n._objects[o]) || !window.is_gm && n._objects[o].selectable && n._objects[o].model && "image" === n._objects[o].type && "objects" === n._objects[o].model.get("layer") && n._objects[o].model.get("light_hassight") === !0) && (n._objects[o].render(e),
                        t.push(n._objects[o]));
                    e.restore()
                }
                for (var o = 0; i > o; o++)
                    if (window.is_gm && -1 !== d20.engine.lightOnlySelected.indexOf(d20.engine.canvas._objects[o]) || !window.is_gm && d20.engine.canvas._objects[o].selectable && d20.engine.canvas._objects[o].model && "image" === d20.engine.canvas._objects[o].type && "objects" === d20.engine.canvas._objects[o].model.get("layer") && d20.engine.canvas._objects[o].model.get("light_hassight") === !0) {
                        if (t && -1 !== t.indexOf(d20.engine.canvas._objects[o]))
                            continue;d20.engine.canvas._objects[o].render(e)
                    }
            }
        }
        ,
        d20.engine.drawGrid = function(e) {
            d20.canvas_overlay.drawGrid && d20.canvas_overlay.drawGrid(e)
        }
        ,
        d20.engine.handleMetaKeys = function(e) {
            d20.engine.altDown = e.altKey ? !0 : !1,
            d20.engine.shiftDown = e.shiftKey ? !0 : !1,
            d20.engine.ctrlDown = e.ctrlKey ? !0 : !1
        }
        ;
        var u = $("#zoomslider")
          , p = !1
          , f = 1
          , g = _.debounce(function() {
            console.log("Debounced init page!"),
            r.css({
                "-webkit-transform": "scale(1.0)",
                "-moz-transform": "scale(1.0)"
            }),
            d20.Campaign.initActivePage(!0),
            d20.canvas_overlay.postProcessing(!0),
            a.stop().animate({
                scrollTop: Math.floor(d20.engine.zoomStart[1] * d20.engine.canvasZoom) - Math.floor(d20.engine.canvasHeight / 2) + 125 * d20.engine.canvasZoom,
                scrollLeft: Math.floor(d20.engine.zoomStart[0] * d20.engine.canvasZoom) - Math.floor(d20.engine.canvasWidth / 2) + 125 * d20.engine.canvasZoom
            }, 0),
            d20.engine.zoomStart = !1,
            p = !1,
            f = d20.engine.canvasZoom
        }, 0);
        d20.engine.setZoom = function(e, i, n) {
            if (console.log("Final set zoom!"),
            .1 > e && (e = .1),
            e > 2.5 && (e = 2.5),
            e != d20.engine.canvasZoom || n) {
                d20.engine.zooming = !0,
                d20.engine.zoomStart === !1 && (d20.engine.zoomStart = [$("#editor-wrapper").scrollLeft() / d20.engine.canvasZoom + d20.engine.canvasWidth / 2 / d20.engine.canvasZoom - 125, $("#editor-wrapper").scrollTop() / d20.engine.canvasZoom + d20.engine.canvasHeight / 2 / d20.engine.canvasZoom - 125]),
                console.log(d20.engine.zoomStart);
                var r = e / d20.engine.canvasZoom;
                d20.engine.canvasZoom = e,
                t.contextTop.scale(r, r),
                t.contextContainer.scale(r, r),
                d20.engine.fowctx.scale(r, r),
                d20.canvas_overlay.gl.active ? d20.canvas_overlay.gl.updateGlSize() : (d20.engine.lightingctx.scale(r, r),
                d20.engine.shadowctx.scale(r, r),
                d20.engine.workctx.scale(r, r)),
                t.forEachObject(function(e) {
                    e.setCoords()
                }),
                d20.Campaign && d20.Campaign.activePage() && g(),
                i || (u.slider("value", parseInt(100 * e, 10)),
                $("#zoompanel").find("select").val(10 * Math.round(parseInt(100 * e, 10) / 10))),
                d20.engine.zooming = !1
            }
        }
        ,
        d20.engine.slideZoom = function(e) {
            .1 > e && (e = .1),
            e > 2.5 && (e = 2.5),
            (e != d20.engine.canvasZoom || force) && (p === !1 && (p = d20.engine.canvasZoom),
            f = e,
            r.css({
                "-webkit-transform": "scale(" + e / p + ")",
                "-moz-transform": "scale(" + e / p + ")"
            }),
            d20.engine.debounced_setZoom(e, !1, !0))
        }
        ,
        d20.engine.debounced_setZoom = _.debounce(d20.engine.setZoom, 250),
        t.on("object:selected", function(e) {
            e.target._objects ? $("#editor").trigger("shape_selected", e.target._objects[0]) : (e.e && e.e.altKey || e.target.model.selectGroup(),
            $("#editor").trigger("shape_selected", e.target))
        }),
        t.on("selection:created", function(e) {
            $("#editor").trigger("shape_selected", e.target._objects[0]);
            for (var t = 0; t < e.target._objects.length; t++)
                e.target._objects[t].model.selectGroup()
        }),
        t.on("selection:cleared", function() {
            $("#editor").trigger("nothing_selected");
            for (var e = d20.engine.showLastPaths.length; e--; )
                "selected" == d20.engine.showLastPaths[e].type && d20.engine.showLastPaths.splice(e, 1)
        }),
        t.on("object:moving", function(e) {
            var t;
            t = void 0 !== e.target._objects ? e.target._objects : [e.target];
            for (var i = 0; i < t.length; i++)
                t[i].model && t[i].model.view.ischanging && t[i].model.view.ischanging(),
                !t[i].model || "objects" !== t[i].model.get("layer") && "gmlayer" !== t[i].model.get("layer") || "image" !== t[i].model.get("type") || d20.engine.movingShadows[t[i].model.id] || (d20.engine.movingShadows[t[i].model.id] = {
                    obj: t[i],
                    waypoints: [],
                    alwaysShowRuler: !1
                })
        }),
        t.on("object:rotating", function(e) {
            e.target.model && e.target.model.view.ischanging && e.target.model.view.ischanging()
        }),
        t.on("object:scaling", function(e) {
            e.target.model && e.target.model.view.ischanging && e.target.model.view.ischanging()
        });
        var m, v = 0;
        t.on("mouse:up", function(e) {
            var i = (new Date).getTime();
            400 > i - v && e.target && e.target == m && t.fire("dblclick", {
                target: e.target,
                e: e
            }),
            m = e.target ? e.target : !1,
            v = i
        }),
        t.on("dblclick", function(e) {
            if (e.target && "text" == e.target.type)
                d20.engine.editText(e.target, e.pageX, e.pageY);
            else if (e.target && "image" == e.target.type && e.target.model)
                if ((e.e.e.shiftKey || e.e.e.altKey) && "" !== e.target.model.get("represents")) {
                    console.log("Show token's character...");
                    var t = d20.Campaign.characters.get(e.target.model.get("represents"));
                    if (t) {
                        var i = t.get("inplayerjournals").split(",");
                        (window.is_gm || -1 !== _.indexOf(i, "all") || window.currentPlayer && -1 !== _.indexOf(i, window.currentPlayer.id)) && t.view.showDialog()
                    }
                    e.e.e.altKey ? $(".dialog[data-characterid=" + e.target.model.get("represents") + "] .characterviewer ul.nav a[data-tab='attributesabilities']").trigger("click") : $(".dialog[data-characterid=" + e.target.model.get("represents") + "] .characterviewer ul.nav a[data-tab='bioinfo']").trigger("click")
                } else
                    e.target.model.trigger("showtokeneditor")
        });
        var y = function() {
            var e = []
              , i = t.getActiveGroup()
              , n = 0
              , r = 0;
            _.each(d20.engine.movingShadows, function(t) {
                var o = t.obj;
                if (i && i.contains(o) ? (n = i.get("left"),
                r = i.get("top")) : (n = 0,
                r = 0),
                d20.engine.altDown)
                    var a = {
                        top: o.get("top"),
                        left: o.get("left")
                    };
                else {
                    o.setCoords();
                    var a = d20.engine.getSnappedTopLeft(o, i)
                }
                e.push({
                    id: o.model.id,
                    x: a.left + n,
                    y: a.top + r
                })
            }),
            d20.textchat.sendShout({
                type: "shdw_update",
                playerid: window.currentPlayer.id,
                time: (new Date).getTime(),
                objs: e
            })
        }
          , b = (_.throttle(y, 200),
        {})
          , w = function(e, t, i, n, r, o, a, s) {
            var l, c, d, h;
            l = i - e,
            c = n - t,
            d = a - r,
            h = s - o;
            var u, p;
            return u = (-c * (e - r) + l * (t - o)) / (-d * c + l * h),
            p = (d * (t - o) - h * (e - r)) / (-d * c + l * h),
            u >= 0 && 1 >= u && p >= 0 && 1 >= p ? 1 : 0
        }
        ;
        d20.engine.checkMovement = function(e, t, i) {
            if (d20.Campaign.activePage().get("lightrestrictmove") !== !0)
                return 3;
            var n, r = !1;
            e._objects ? (n = e._objects,
            r = !0) : n = [e];
            for (var o = 0; o < n.length; o++) {
                var a = n[o];
                if (a && a.model && "image" === a.model.get("type") && a.model.get("light_hassight") === !0 && (!window.is_gm || d20.engine.lightOnlySelected && -1 !== d20.engine.lightOnlySelected.indexOf(a)))
                    for (var s, l, c, d, h = t[0] + (r ? a.get("left") : 0), u = t[1] + (r ? a.get("top") : 0), p = i[0] + (r ? a.get("left") : 0), f = i[1] + (r ? a.get("top") : 0), g = 0, m = d20.engine.canvas._objects.length; m > g; g++) {
                        var v = d20.engine.canvas._objects[g];
                        if ("path" == v.type && v.model && "walls" == v.model.get("layer"))
                            for (var y = Math.floor(v.get("left") - Math.floor(v.get("width") * v.scaleX) / 2), b = Math.floor(v.get("top") - Math.floor(v.get("height") * v.scaleY) / 2), x = v.get("path"), E = 0; E < x.length; E++)
                                if (0 != E && (s = Math.round(x[E][1] * v.scaleX) + y,
                                l = Math.round(x[E][2] * v.scaleY) + b,
                                c = Math.round(x[E - 1][1] * v.scaleX) + y,
                                d = Math.round(x[E - 1][2] * v.scaleY) + b,
                                w(h, u, p, f, s, l, c, d)))
                                    return 0
                    }
            }
            return 3
        }
        ,
        d20.engine.handleShadows = function(e) {
            e.playerid !== window.currentPlayer.id && ("shdw_update" === e.type ? (b[e.playerid] && clearTimeout(b[e.playerid]),
            void 0 !== d20.engine.renderingShadows[e.playerid] ? (d20.engine.renderingShadows[e.playerid].objs = e.objs,
            d20.engine.renderingShadows[e.playerid].firstframe = !0) : d20.engine.renderingShadows[e.playerid] = {
                objs: e.objs,
                firstframe: !0,
                shdws: {}
            },
            b[e.playerid] = setTimeout(function() {
                delete d20.engine.renderingShadows[e.playerid],
                d20.engine.renderTop()
            }, 3e4),
            d20.engine.renderTop()) : (delete d20.engine.renderingShadows[e.playerid],
            b[e.playerid] && clearTimeout(b[e.playerid]),
            d20.engine.renderTop()))
        }
        ,
        d20.engine.drawShadowMovements = function(e) {
            e.globalAlpha = .75;
            var t, i, n, r = +new Date, o = !1;
            _.each(d20.engine.movingShadows, function(r) {
                void 0 === t && (t = d20.engine.canvas.getActiveGroup()),
                t && t.contains(r.obj) ? (i = t.get("left"),
                n = t.get("top")) : i = n = 0;
                for (var o = [r.obj.model.get("left"), r.obj.model.get("top")], a = 0; a < r.waypoints.length; a++)
                    o.push(r.waypoints[a]);
                if (0 == d20.engine.snapTo || d20.engine.altDown)
                    var s = {
                        top: r.obj.get("top"),
                        left: r.obj.get("left")
                    };
                else {
                    r.obj.setCoords();
                    var s = d20.engine.getSnappedTopLeft(r.obj, t)
                }
                o.push(s.left + i),
                o.push(s.top + n),
                d20.engine.renderLastPath(e, r.obj, o, !r.alwaysShowRuler && 0 === r.waypoints.length)
            }),
            e.globalAlpha = 1;
            var e = d20.engine.canvas.contextContainer
              , a = d20.engine.showLastPaths.length;
            a > 0 && (e.globalAlpha = .75);
            for (var s; a--; )
                s = d20.engine.showLastPaths[a],
                s.obj.model && (window.is_gm && "gmlayer" === s.obj.model.get("layer") || "objects" === s.obj.model.get("layer")) ? (void 0 !== s.fadestart ? (o = !0,
                r - s.fadestart > 500 ? (console.log("Remove!"),
                d20.engine.showLastPaths.splice(a, 1),
                e.globalAlpha = 0) : e.globalAlpha = .7 * (1 - (r - s.fadestart) / 500)) : e.globalAlpha = .75,
                d20.engine.renderLastPath(e, s.obj, s.obj.model.get("lastmove") + "," + s.obj.model.get("left") + "," + s.obj.model.get("top"))) : d20.engine.showLastPaths.splice(a, 1);
            e.globalAlpha = 1,
            o && _.defer(function() {
                d20.engine.renderAll()
            })
        }
        ,
        d20.engine.renderLastPath = function(e, t, i, n) {
            if ("string" == typeof i)
                var r = i.split(",");
            else
                var r = i;
            for (var o = 0, a = 0, s = 0; s < r.length - 2; s += 2)
                if (0 === s && (e.save(),
                e.translate(r[s] - t.get("left"), r[s + 1] - t.get("top")),
                t.transform(e),
                t._canvasPoolActive ? t._splitRender(e) : t._render(e),
                e.restore()),
                !n) {
                    var l = R(e, {
                        x: r[s] - d20.engine.currentCanvasOffset[0],
                        to_x: r[s + 2] - d20.engine.currentCanvasOffset[0],
                        y: r[s + 1] - d20.engine.currentCanvasOffset[1],
                        to_y: r[s + 3] - d20.engine.currentCanvasOffset[1],
                        color: "#F7F42A"
                    }, !0, s === r.length - 4 ? "arrow" : "nub", o, a);
                    o += l[0],
                    a = l[1] % 2
                }
        }
        ,
        d20.engine.drawHighlights = function(e) {
            if (d20.engine.highlightToken && d20.engine.highlightToken.collection.page.id == d20.Campaign.activePage().id && d20.engine.highlightToken.view.graphic) {
                var t = d20.engine.highlightToken.view.graphic;
                e.strokeStyle = "#F7F42A",
                e.lineWidth = 5,
                e.beginPath();
                var i = t.getBoundingRect();
                e.rect(i.left - 10 - d20.engine.currentCanvasOffset[0], i.top - 10 - d20.engine.currentCanvasOffset[1], i.width + 20, i.height + 20),
                e.stroke()
            }
        }
        ;
        var x = function(e) {
            e.type = "measuring",
            e.time = (new Date).getTime(),
            d20.textchat.sendShout(e)
        }
          , E = _.throttle(x, 200)
          , T = function(e) {
            E(e),
            d20.tutorial && d20.tutorial.active && $(document.body).trigger("measure"),
            d20.engine.receiveMeasureUpdate(e)
        }
        ;
        d20.engine.receiveMeasureUpdate = function(e) {
            e.type && e.player == window.currentPlayer.id || ("objects" === e.currentLayer || "map" === e.currentLayer || window.is_gm) && (d20.engine.measurements[e.player] && d20.engine.measurements[e.player].clearTimeout && clearTimeout(d20.engine.measurements[e.player].clearTimeout),
            e.player != window.currentPlayer.id && (e.clearTimeout = setTimeout(function() {
                delete d20.engine.measurements[e.player],
                d20.engine.renderTop()
            }, 1e4)),
            d20.engine.measurements[e.player] = e,
            d20.engine.renderTop())
        }
        ;
        var C = function(e) {
            d20.engine.receiveEndMeasure(e),
            e.type = "endmeasurement",
            setTimeout(function() {
                e.time = (new Date).getTime(),
                d20.textchat.sendShout(e)
            }, 300)
        }
        ;
        d20.engine.receiveEndMeasure = function(e) {
            d20.engine.measurements[e.player] && d20.engine.measurements[e.player].clearTimeout && clearTimeout(d20.engine.measurements[e.player].clearTimeout),
            delete d20.engine.measurements[e.player],
            d20.engine.renderTop()
        }
        ;
        _.throttle(T, 250);
        d20.engine.calcAngle = function(e, t) {
            var i = function(e, t) {
                return rat = (t.y - e.y) / (t.x - e.x),
                inradians = Math.atan(rat)
            }
            ;
            return t.x > e.x ? t.y > e.y ? i(e, t) : t.y == e.y ? 0 : 2 * Math.PI + i(e, t) : t.x == e.x ? t.y == e.y ? 0 : t.y > e.y ? Math.PI / 2 : 1.5 * Math.PI : t.y == e.y ? Math.PI : t.y > e.y ? Math.PI + i(e, t) : Math.PI + i(e, t)
        }
        ,
        d20.engine.getDistanceInScale = function(e, t, i) {
            var n, r = 0, o = d20.Campaign.activePage().get("diagonaltype"), a = parseFloat(d20.Campaign.activePage().get("scale_number"));
            if ("foure" != o || 0 != d20.engine.snapTo && "square" == d20.Campaign.activePage().get("grid_type") || (o = "pythagorean"),
            "hex" === d20.Campaign.activePage().get("grid_type") || "hexr" === d20.Campaign.activePage().get("grid_type"))
                try {
                    e.x = e.x + d20.engine.currentCanvasOffset[0],
                    e.y = e.y + d20.engine.currentCanvasOffset[1],
                    t.x = t.x + d20.engine.currentCanvasOffset[0],
                    t.y = t.y + d20.engine.currentCanvasOffset[1];
                    var s = d20.canvas_overlay.activeHexGrid.GetHexAt({
                        X: e.x,
                        Y: e.y
                    })
                      , l = d20.canvas_overlay.activeHexGrid.GetHexAt({
                        X: t.x,
                        Y: t.y
                    });
                    n = d20.canvas_overlay.activeHexGrid.GetHexDistance(s, l)
                } catch (c) {
                    n = 0
                }
            else {
                var d, h = t.x, u = t.y, p = e.x, f = e.y, g = h - p, m = u - f;
                if ("foure" == o)
                    g = Math.abs(g),
                    m = Math.abs(m),
                    d = Math.max(g, m);
                else if ("threefive" == o) {
                    g = Math.abs(g),
                    m = Math.abs(m);
                    var v = Math.round(parseFloat(d20.Campaign.activePage().get("snapping_increment") || 1) * window.dpi);
                    r = Math.floor(Math.min(g, m) / v),
                    i && (r += i),
                    d = Math.floor(r / 2) * v + Math.max(g, m)
                } else
                    d = "manhattan" == o ? Math.abs(g) + Math.abs(m) : Math.sqrt(g * g + m * m);
                n = d / window.dpi
            }
            return [Math.round(n * a * 10) / 10, r]
        }
        ;
        var R = function(e, t, i, n, r, o) {
            var a = d20.engine.getDistanceInScale({
                x: t.x,
                y: t.y
            }, {
                x: t.to_x,
                y: t.to_y
            }, o)
              , s = a[0];
            void 0 !== r && (s = Math.round(10 * (s + r)) / 10);
            var l = s + "" + d20.Campaign.activePage().get("scale_units");
            if (e.strokeStyle = t.color,
            i) {
                e.font = "12pt Arial Black";
                var c = e.measureText(l);
                e.fillStyle = "rgba(255,255,255,0.75)",
                e.beginPath(),
                e.rect(t.to_x - 35, t.to_y - 35, c.width + 10, 20),
                e.closePath(),
                e.fill()
            }
            e.beginPath();
            var d = 15
              , h = Math.atan2(t.to_y - t.y, t.to_x - t.x);
            return e.moveTo(t.x, t.y),
            e.lineTo(t.to_x, t.to_y),
            (n === !0 || "arrow" === n) && (e.lineTo(t.to_x - d * Math.cos(h - Math.PI / 6), t.to_y - d * Math.sin(h - Math.PI / 6)),
            e.moveTo(t.to_x, t.to_y),
            e.lineTo(t.to_x - d * Math.cos(h + Math.PI / 6), t.to_y - d * Math.sin(h + Math.PI / 6))),
            e.closePath(),
            e.stroke(),
            "nub" === n && (e.beginPath(),
            e.arc(t.to_x, t.to_y, 7, 0, 2 * Math.PI, !0),
            e.closePath(),
            e.fillStyle = e.strokeStyle,
            e.fill()),
            i && (e.fillStyle = "rgba(0,0,0,1)",
            e.fillText(l, t.to_x - 30, t.to_y - 20)),
            a
        }
        ;
        d20.engine.drawMeasurements = function(e) {
            e.globalCompositeOperation = "source-over",
            e.lineWidth = 3,
            e.globalAlpha = 1,
            _.each(d20.engine.measurements, function(t) {
                if (t.pageid === d20.Campaign.activePage().id) {
                    var i = _.clone(t)
                      , n = d20.Campaign.players.get(i.player);
                    i.color = n.get("color"),
                    i.to_x = i.to_x - d20.engine.currentCanvasOffset[0],
                    i.to_y = i.to_y - d20.engine.currentCanvasOffset[1],
                    i.x = i.x - d20.engine.currentCanvasOffset[0],
                    i.y = i.y - d20.engine.currentCanvasOffset[1],
                    R(e, i, !0, !0)
                }
            })
        }
        ,
        d20.engine.drawPings = function(e) {
            _.keys(d20.engine.pings).length > 0 && d20.engine.debounced_renderTop(),
            e.globalCompositeOperation = "source-over";
            var t = (new Date).getTime();
            _.each(d20.engine.pings, function(i, n) {
                if (i.pageid === d20.Campaign.activePage().id) {
                    var r = 2;
                    if (i.radius < 20 ? (r = fabric.isTouchSupported ? .5 : 1,
                    e.lineWidth = 3) : e.lineWidth = 9,
                    i.radius >= 20 && i.player == window.currentPlayer.id && !i.type) {
                        i.type = "mapping";
                        var o = _.clone(i);
                        delete o.lasttick,
                        o.time = (new Date).getTime(),
                        d20.textchat.sendShout(o),
                        d20.tutorial && d20.tutorial.active && $(document).trigger("userSentPing")
                    }
                    if (i.lasttick) {
                        var a = t - i.lasttick;
                        a > 40 && (r = Math.ceil(r + r * ((a - 30) / 30)))
                    }
                    if (i.lasttick = t,
                    i.radius < 10)
                        return void (i.radius = i.radius + r);
                    var s = _.clone(i);
                    if (s.top = s.top - d20.engine.currentCanvasOffset[1],
                    s.left = s.left - d20.engine.currentCanvasOffset[0],
                    e.beginPath(),
                    "api" === s.player)
                        e.strokeStyle = "yellow";
                    else {
                        var l = d20.Campaign.players.get(s.player);
                        e.strokeStyle = l.get("color")
                    }
                    e.arc(s.left, s.top, s.radius, 0, 2 * Math.PI, !1),
                    e.closePath(),
                    e.stroke(),
                    i.radius = s.radius + r,
                    i.radius > 110 && delete d20.engine.pings[n]
                }
            })
        }
        ,
        window.getWorldPageCenter = function() {
            var e = $("#editor-wrapper").scrollTop() / d20.engine.canvasZoom + d20.engine.canvasHeight / 2 / d20.engine.canvasZoom - 125
              , t = $("#editor-wrapper").scrollLeft() / d20.engine.canvasZoom + d20.engine.canvasWidth / 2 / d20.engine.canvasZoom - 125;
            console.log(t + "," + e)
        }
        ,
        d20.engine.receiveMapping = function(e) {
            ("objects" === e.currentLayer || "map" === e.currentLayer || window.is_gm) && (e.scrollto && (console.log(e),
            a.animate({
                scrollTop: Math.floor(e.top * d20.engine.canvasZoom) - Math.floor(d20.engine.canvasHeight / 2) + 125 * d20.engine.canvasZoom,
                scrollLeft: Math.floor(e.left * d20.engine.canvasZoom) - Math.floor(d20.engine.canvasWidth / 2) + 125 * d20.engine.canvasZoom
            }, 350)),
            e.player != window.currentPlayer.id && (d20.engine.pings[e.player] = e,
            d20.engine.debounced_renderAll()))
        }
        ,
        d20.engine.zoomObject = function(e) {
            var t = d20.Campaign.activePage().thegraphics.get(e);
            if (t) {
                var i = t.view.graphic
                  , n = i._originalElement.src;
                if (-1 !== n.indexOf("files.d20.io") || -1 !== n.indexOf("files.staging.d20.io")) {
                    var r = n.split("/")
                      , o = r[r.length - 1].split(".")[0];
                    "original" != o && (n = n.replace(o, "original"))
                }
                window.fakeLightly(n)
            }
        }
        ,
        d20.engine.finishCurrentPolygon = function() {
            var e = d20.engine.drawshape.shape;
            if (e && "polygon" == e.type) {
                if (e.points.length < 2)
                    return d20.engine.drawshape.shape = !1,
                    void d20.engine.debounced_renderTop();
                var t;
                t = "M" + e.points[0][0] + "," + e.points[0][1];
                for (var i = 1; i < e.points.length; i++)
                    t = t + " L" + e.points[i][0] + "," + e.points[i][1];
                var n = d20.engine.convertAbsolutePathStringtoFabric(t);
                n = _.extend(n, {
                    strokeWidth: e.strokewidth,
                    fill: e.fill,
                    stroke: e.stroke,
                    path: JSON.parse(n.path)
                }),
                d20.Campaign.activePage().addPath(n),
                d20.engine.drawshape.shape = !1,
                d20.engine.debounced_renderTop()
            }
        }
        ,
        d20.engine.polygonUndoLastPoint = function() {
            var e = d20.engine.drawshape.shape;
            e && "polygon" == e.type && (e.points.length <= 1 ? d20.engine.drawshape.shape = !1 : e.points.pop(),
            d20.engine.debounced_renderTop())
        }
        ,
        d20.engine.finishPolygonReveal = function() {
            d20.engine.fog.points.length > 2 && d20.canvas_overlay.revealOrHideArea({
                type: "reveal",
                points: d20.engine.fog.points
            }),
            d20.engine.fog.points = [],
            d20.engine.drawOverlays()
        }
        ,
        d20.engine.fogUndoLastPoint = function() {
            d20.engine.fog.points.length > 1 && d20.engine.fog.points.pop(),
            d20.engine.drawOverlays()
        }
        ,
        d20.engine.drawInProgressDrawings = function(e) {
            var t = d20.engine.drawshape.shape;
            if (t) {
                if (e.lineWidth = t.strokewidth,
                "rect" == t.type)
                    e.beginPath(),
                    e.rect(t.x - d20.engine.currentCanvasOffset[0], t.y - d20.engine.currentCanvasOffset[1], t.width, t.height),
                    e.closePath();
                else if ("circle" == t.type)
                    d20.engine.drawEllipse(t.x - d20.engine.currentCanvasOffset[0] + t.width / 2, t.y - d20.engine.currentCanvasOffset[1] + t.height / 2, t.width, t.height, e);
                else if ("polygon" == t.type) {
                    if (t.points.length < 1)
                        return;
                    if (e.save(),
                    e.translate(-d20.engine.currentCanvasOffset[0], -d20.engine.currentCanvasOffset[1]),
                    e.beginPath(),
                    e.moveTo(t.points[0][0], t.points[0][1]),
                    1 == t.points.length)
                        e.lineTo(t.points[0][0] + 2, t.points[0][1] + 2);
                    else
                        for (var i = 1; i < t.points.length; i++)
                            e.lineTo(t.points[i][0], t.points[i][1])
                }
                e.fillStyle = t.fill,
                e.fill(),
                e.strokeStyle = t.stroke,
                e.stroke(),
                "polygon" == t.type && e.restore()
            }
        }
        ;
        var S = !1
          , k = !1
          , M = function(e) {
            var i, r;
            if (d20.tddice && d20.tddice.handleInteraction && d20.tddice.handleInteraction(),
            e.touches) {
                if ("pan" == d20.engine.mode)
                    return;
                e.touches.length > 1 && (S = d20.engine.mode,
                d20.engine.mode = "pan",
                d20.engine.leftMouseIsDown = !0),
                d20.engine.lastTouchStarted = (new Date).getTime(),
                i = e.touches[0].pageX,
                r = e.touches[0].pageY,
                e.preventDefault()
            } else
                i = e.pageX,
                r = e.pageY;
            for (var o = d20.engine.showLastPaths.length; o--; )
                "selected" == d20.engine.showLastPaths[o].type && d20.engine.showLastPaths.splice(o, 1);
            d20.engine.handleMetaKeys(e),
            ("select" == d20.engine.mode || "path" == d20.engine.mode) && t.__onMouseDown(e),
            (1 == e.which || e.touches && 1 == e.touches.length) && (d20.engine.leftMouseIsDown = !0);
            var s = Math.floor(i / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] / d20.engine.canvasZoom)
              , l = Math.floor(r / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] / d20.engine.canvasZoom);
            if (d20.engine.lastMousePos = [s, l],
            !d20.engine.leftMouseIsDown || "fog-reveal" != d20.engine.mode && "fog-hide" != d20.engine.mode && "gridalign" != d20.engine.mode) {
                if (d20.engine.leftMouseIsDown && "fog-polygonreveal" == d20.engine.mode) {
                    var c = s
                      , d = l;
                    0 != d20.engine.snapTo && e.shiftKey && (c = d20.engine.snapToIncrement(c, d20.engine.snapTo),
                    d = d20.engine.snapToIncrement(d, d20.engine.snapTo)),
                    d20.engine.fog.points.length > 0 && Math.abs(d20.engine.fog.points[0][0] - c) + Math.abs(d20.engine.fog.points[0][1] - d) < 15 ? (d20.engine.fog.points.push([d20.engine.fog.points[0][0], d20.engine.fog.points[0][1]]),
                    d20.engine.finishPolygonReveal()) : d20.engine.fog.points.push([c, d]),
                    console.log(d20.engine.fog.points),
                    d20.engine.drawOverlays()
                } else if (d20.engine.leftMouseIsDown && "measure" == d20.engine.mode) {
                    if (d20.engine.measure.down[0] = s,
                    d20.engine.measure.down[1] = l,
                    0 != d20.engine.snapTo && !e.altKey)
                        if ("square" == d20.Campaign.activePage().get("grid_type"))
                            d20.engine.measure.down[1] = d20.engine.snapToIncrement(d20.engine.measure.down[1] + Math.floor(d20.engine.snapTo / 2), d20.engine.snapTo) - Math.floor(d20.engine.snapTo / 2),
                            d20.engine.measure.down[0] = d20.engine.snapToIncrement(d20.engine.measure.down[0] + Math.floor(d20.engine.snapTo / 2), d20.engine.snapTo) - Math.floor(d20.engine.snapTo / 2);
                        else {
                            var h = d20.canvas_overlay.activeHexGrid.GetHexAt({
                                X: d20.engine.measure.down[0],
                                Y: d20.engine.measure.down[1]
                            });
                            d20.engine.measure.down[1] = h.MidPoint.Y,
                            d20.engine.measure.down[0] = h.MidPoint.X
                        }
                } else if (d20.engine.leftMouseIsDown && "fxtools" == d20.engine.mode)
                    d20.engine.fx.current || (d20.engine.fx.current = d20.fx.handleClick(s, l));
                else if (d20.engine.leftMouseIsDown && "text" == d20.engine.mode) {
                    var u = {
                        fontFamily: $("#font-family").val(),
                        fontSize: $("#font-size").val(),
                        fill: $("#font-color").val(),
                        text: "",
                        left: s,
                        top: l
                    }
                      , p = d20.Campaign.activePage().addText(u);
                    _.defer(function() {
                        d20.engine.editText(p.view.graphic, u.top, u.left),
                        setTimeout(function() {
                            $(".texteditor").focus()
                        }, 300)
                    })
                } else if (d20.engine.leftMouseIsDown && "rect" == d20.engine.mode) {
                    var f = parseInt($("#path_width").val(), 10)
                      , g = d20.engine.drawshape.shape = {
                        strokewidth: f,
                        x: 0,
                        y: 0,
                        width: 10,
                        height: 10,
                        type: e.altKey ? "circle" : "rect"
                    }
                      , c = s
                      , d = l;
                    0 != d20.engine.snapTo && e.shiftKey && (c = d20.engine.snapToIncrement(c, d20.engine.snapTo),
                    d = d20.engine.snapToIncrement(d, d20.engine.snapTo)),
                    g.x = c,
                    g.y = d,
                    g.fill = $("#path_fillcolor").val(),
                    g.stroke = $("#path_strokecolor").val(),
                    d20.engine.drawshape.start = [i + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0], r + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1]],
                    d20.engine.renderTop()
                } else if (d20.engine.leftMouseIsDown && "polygon" == d20.engine.mode) {
                    if (d20.engine.drawshape.shape)
                        var g = d20.engine.drawshape.shape;
                    else {
                        var f = parseInt($("#path_width").val(), 10)
                          , g = d20.engine.drawshape.shape = {
                            strokewidth: f,
                            points: [],
                            type: "polygon"
                        };
                        g.fill = $("#path_fillcolor").val(),
                        g.stroke = $("#path_strokecolor").val()
                    }
                    var c = s
                      , d = l;
                    0 != d20.engine.snapTo && e.shiftKey && (c = d20.engine.snapToIncrement(c, d20.engine.snapTo),
                    d = d20.engine.snapToIncrement(d, d20.engine.snapTo)),
                    g.points.length > 0 && Math.abs(g.points[0][0] - c) + Math.abs(g.points[0][1] - d) < 15 ? (g.points.push([g.points[0][0], g.points[0][1]]),
                    d20.engine.finishCurrentPolygon()) : g.points.push([c, d]),
                    d20.engine.debounced_renderTop()
                } else if (d20.engine.leftMouseIsDown && "targeting" === d20.engine.mode) {
                    var m = d20.engine.canvas.findTarget(e, !0, !0);
                    return void (void 0 !== m && "image" === m.type && m.model && d20.engine.nextTargetCallback(m))
                }
            } else
                d20.engine.fog.down[0] = s,
                d20.engine.fog.down[1] = l,
                0 != d20.engine.snapTo && e.shiftKey && "square" == d20.Campaign.activePage().get("grid_type") && (d20.engine.fog.down[0] = d20.engine.snapToIncrement(d20.engine.fog.down[0], d20.engine.snapTo),
                d20.engine.fog.down[1] = d20.engine.snapToIncrement(d20.engine.fog.down[1], d20.engine.snapTo));
            if (window.currentPlayer && d20.engine.leftMouseIsDown && "select" == d20.engine.mode) {
                if (d20.engine.pings[window.currentPlayer.id] && d20.engine.pings[window.currentPlayer.id].radius > 20)
                    return;
                var v = s
                  , y = l
                  , b = {
                    left: v,
                    top: y,
                    radius: -5,
                    player: window.currentPlayer.id,
                    pageid: d20.Campaign.activePage().id,
                    currentLayer: window.currentEditingLayer
                };
                window.is_gm && e.shiftKey && (b.scrollto = !0),
                d20.engine.pings[window.currentPlayer.id] = b,
                d20.engine.pinging = {
                    downx: i,
                    downy: r
                },
                d20.engine.renderTop()
            }
            3 == e.which && (d20.engine.rightMouseIsDown = !0),
            d20.engine.rightMouseIsDown && ("select" == d20.engine.mode || "path" == d20.engine.mode || "text" == d20.engine.mode) || d20.engine.leftMouseIsDown && "pan" == d20.engine.mode ? (d20.engine.pan.beginPos = [a.scrollLeft(), a.scrollTop()],
            d20.engine.pan.panXY = [i, r],
            d20.engine.pan.panning = !0) : d20.engine.pan.panning = !1,
            n.hasClass("hasfocus") || n.focus()
        }
          , A = function(e) {
            var i, n;
            if (e.changedTouches ? ((e.changedTouches.length > 1 || "pan" == d20.engine.mode) && (delete d20.engine.pings[window.currentPlayer.id],
            d20.engine.pinging = !1),
            e.preventDefault(),
            i = e.changedTouches[0].pageX,
            n = e.changedTouches[0].pageY) : (i = e.pageX,
            n = e.pageY),
            ("select" == d20.engine.mode || "path" == d20.engine.mode || "targeting" == d20.engine.mode) && t.__onMouseMove(e),
            d20.engine.leftMouseIsDown || d20.engine.rightMouseIsDown) {
                var r = Math.floor(i / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] / d20.engine.canvasZoom)
                  , o = Math.floor(n / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] / d20.engine.canvasZoom);
                if (!d20.engine.leftMouseIsDown || "fog-reveal" != d20.engine.mode && "fog-hide" != d20.engine.mode && "gridalign" != d20.engine.mode) {
                    if (d20.engine.leftMouseIsDown && "measure" == d20.engine.mode) {
                        if (d20.engine.measure.down[2] = r,
                        d20.engine.measure.down[3] = o,
                        0 != d20.engine.snapTo && !e.altKey)
                            if ("square" == d20.Campaign.activePage().get("grid_type"))
                                d20.engine.measure.down[2] = d20.engine.snapToIncrement(d20.engine.measure.down[2] + Math.floor(d20.engine.snapTo / 2), d20.engine.snapTo) - Math.floor(d20.engine.snapTo / 2),
                                d20.engine.measure.down[3] = d20.engine.snapToIncrement(d20.engine.measure.down[3] + Math.floor(d20.engine.snapTo / 2), d20.engine.snapTo) - Math.floor(d20.engine.snapTo / 2);
                            else {
                                var s = d20.canvas_overlay.activeHexGrid.GetHexAt({
                                    X: d20.engine.measure.down[2],
                                    Y: d20.engine.measure.down[3]
                                });
                                if (!s)
                                    return;
                                d20.engine.measure.down[3] = s.MidPoint.Y,
                                d20.engine.measure.down[2] = s.MidPoint.X
                            }
                        var l = {
                            x: d20.engine.measure.down[0],
                            y: d20.engine.measure.down[1],
                            to_x: d20.engine.measure.down[2],
                            to_y: d20.engine.measure.down[3],
                            player: window.currentPlayer.id,
                            pageid: d20.Campaign.activePage().id,
                            currentLayer: window.currentEditingLayer
                        };
                        T(l)
                    } else if (d20.engine.leftMouseIsDown && "fxtools" == d20.engine.mode) {
                        if (d20.engine.fx.current) {
                            var c = (new Date).getTime();
                            c - d20.engine.fx.lastMoveBroadcast > d20.engine.fx.MOVE_BROADCAST_FREQ ? (d20.fx.moveFx(d20.engine.fx.current, r, o),
                            d20.engine.fx.lastMoveBroadcast = c) : d20.fx.moveFx(d20.engine.fx.current, r, o, !0)
                        }
                    } else if (d20.engine.leftMouseIsDown && "rect" == d20.engine.mode) {
                        var d = (i + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] - d20.engine.drawshape.start[0]) / d20.engine.canvasZoom
                          , h = (n + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] - d20.engine.drawshape.start[1]) / d20.engine.canvasZoom;
                        0 != d20.engine.snapTo && e.shiftKey && (d = d20.engine.snapToIncrement(d, d20.engine.snapTo),
                        h = d20.engine.snapToIncrement(h, d20.engine.snapTo));
                        var u = d20.engine.drawshape.shape;
                        u.width = d,
                        u.height = h,
                        d20.engine.renderTop()
                    }
                } else
                    d20.engine.fog.down[2] = r,
                    d20.engine.fog.down[3] = o,
                    0 != d20.engine.snapTo && e.shiftKey && "square" == d20.Campaign.activePage().get("grid_type") && (d20.engine.fog.down[2] = d20.engine.snapToIncrement(d20.engine.fog.down[2], d20.engine.snapTo),
                    d20.engine.fog.down[3] = d20.engine.snapToIncrement(d20.engine.fog.down[3], d20.engine.snapTo)),
                    d20.engine.drawOverlays();
                if (d20.engine.pinging) {
                    var d = Math.abs(d20.engine.pinging.downx - i)
                      , h = Math.abs(d20.engine.pinging.downy - n);
                    d + h > 10 && (delete d20.engine.pings[window.currentPlayer.id],
                    d20.engine.pinging = !1)
                }
                if (d20.engine.pan.panning) {
                    var d = 2 * (i - d20.engine.pan.panXY[0])
                      , h = 2 * (n - d20.engine.pan.panXY[1]);
                    if (d20.engine.pan.lastPanDist += Math.abs(d) + Math.abs(h),
                    d20.engine.pan.lastPanDist < 10)
                        return;
                    var p = d20.engine.pan.beginPos[0] - d
                      , f = d20.engine.pan.beginPos[1] - h;
                    a.stop().animate({
                        scrollLeft: p,
                        scrollTop: f
                    }, {
                        duration: 1500,
                        easing: "easeOutExpo",
                        queue: !1
                    })
                }
            }
        }
          , H = function(e) {
            d20.engine.handleMetaKeys(e);
            var i, n;
            e.changedTouches && e.changedTouches.length > 0 ? (i = e.changedTouches[0].pageX,
            n = e.changedTouches[0].pageY) : (i = e.pageX,
            n = e.pageY),
            ("select" == d20.engine.mode || "path" == d20.engine.mode) && t.__onMouseUp(e);
            var r = Math.floor(i / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] / d20.engine.canvasZoom)
              , o = Math.floor(n / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] / d20.engine.canvasZoom)
              , a = 0;
            if (e.changedTouches && e.changedTouches.length > 0 && (a = Math.abs(r - d20.engine.lastMousePos[0]) + Math.abs(o - d20.engine.lastMousePos[1])),
            Object.keys(d20.engine.movingShadows).length > 0 && (d20.engine.movingShadows = {}),
            "fog-reveal" == d20.engine.mode || "fog-hide" == d20.engine.mode) {
                var s = {
                    x: d20.engine.fog.down[0] < d20.engine.fog.down[2] ? d20.engine.fog.down[0] : d20.engine.fog.down[2],
                    y: d20.engine.fog.down[1] < d20.engine.fog.down[3] ? d20.engine.fog.down[1] : d20.engine.fog.down[3],
                    width: Math.abs(d20.engine.fog.down[2] - d20.engine.fog.down[0]),
                    height: Math.abs(d20.engine.fog.down[3] - d20.engine.fog.down[1]),
                    type: d20.engine.mode.replace("fog-", "")
                };
                void 0 !== s.x && void 0 !== s.y && (d20.canvas_overlay.revealOrHideArea(s),
                d20.tutorial && d20.tutorial.active && ("fog-reveal" == d20.engine.mode ? $(document).trigger("fogReveal") : "fog-hide" == d20.engine.mode && $(document).trigger("fogHide")))
            } else if ("measure" == d20.engine.mode)
                C({
                    player: window.currentPlayer.id
                });
            else if ("fxtools" == d20.engine.mode)
                d20.engine.fx.current && (d20.fx.killFx(d20.engine.fx.current),
                delete d20.engine.fx.current);
            else if ("rect" == d20.engine.mode && d20.engine.drawshape.shape) {
                var l = d20.engine.drawshape.shape;
                if (l.width < 0 && (l.x = l.x + l.width,
                l.width = -l.width),
                l.height < 0 && (l.y = l.y + l.height,
                l.height = -l.height),
                l.width > 5 || l.height > 5) {
                    var c;
                    if ("rect" == l.type)
                        c = "M0,0 L" + l.width + ",0 L" + l.width + "," + l.height + " L0," + l.height + " L0,0";
                    else {
                        var d = .5522848
                          , h = Math.floor(l.width / 2)
                          , u = Math.floor(l.height / 2)
                          , p = h
                          , f = u
                          , g = h * d
                          , m = u * d
                          , v = p + h
                          , y = f + u;
                        c = "M" + (p - h) + "," + f + " C" + (p - h) + "," + (f - m) + " " + (p - g) + "," + (f - u) + " " + p + "," + (f - u) + " C" + (p + g) + "," + (f - u) + " " + v + "," + (f - m) + " " + v + "," + f + " C" + v + "," + (f + m) + " " + (p + g) + "," + y + " " + p + "," + y + " C" + (p - g) + "," + y + " " + (p - h) + "," + (f + m) + " " + (p - h) + "," + f
                    }
                    var b = new fabric.Path(c,{
                        strokeWidth: l.strokewidth
                    });
                    b.set({
                        top: Math.floor(l.y + l.height / 2),
                        left: Math.floor(l.x + l.width / 2),
                        fill: l.fill,
                        stroke: l.stroke
                    }),
                    d20.Campaign.activePage().addPath(b)
                }
            } else if (window.currentPlayer && "select" == d20.engine.mode && d20.engine.pings[window.currentPlayer.id] && d20.engine.pings[window.currentPlayer.id].radius < 20)
                delete d20.engine.pings[window.currentPlayer.id];
            else if ("gridalign" == d20.engine.mode) {
                var w = {
                    width: Math.abs(d20.engine.fog.down[2] - d20.engine.fog.down[0]) / 3,
                    height: Math.abs(d20.engine.fog.down[3] - d20.engine.fog.down[1]) / 3,
                    x: d20.engine.fog.down[0],
                    y: d20.engine.fog.down[1]
                }
                  , x = $("<div class='gridalignconfirmation'>Okay, it looks like your grid cells are: <br /> <input class='resultwidth' value='" + Math.round(w.width) + "' /> x <input class='resultheight' value='" + Math.round(w.height) + "' /> pixels <br /> We'll resize the map image so that it matches your page's current grid size. Proceed?</div>");
                x.dialog({
                    zIndex: 10800,
                    buttons: {
                        "Align to Grid!": function() {
                            var e = d20.Campaign.activePage().get("snapping_increment") * window.dpi
                              , t = d20.Campaign.activePage().get("snapping_increment") * window.dpi
                              , i = e / parseInt(x.find(".resultwidth").val(), 10)
                              , n = t / parseInt(x.find(".resultheight").val(), 10);
                            d20.engine.gridaligner.target.model.save({
                                width: d20.engine.gridaligner.target.get("width") * i,
                                height: d20.engine.gridaligner.target.get("height") * n
                            }),
                            _.defer(function() {
                                d20.engine.canvas.fire("object:modified", {
                                    target: d20.engine.gridaligner.target,
                                    force_snap: !0
                                })
                            }),
                            x.dialog("destroy")
                        },
                        "Try Again": function() {
                            setMode("gridalign"),
                            x.dialog("destroy")
                        },
                        Cancel: function() {
                            x.dialog("destroy")
                        }
                    },
                    beforeClose: function() {
                        x.dialog("destroy")
                    },
                    title: "Proceed with Alignment?",
                    modal: !0,
                    width: 400
                }),
                setMode("select")
            }
            if ((d20.engine.rightMouseIsDown || fabric.isTouchSupported && d20.engine.leftMouseIsDown && (new Date).getTime() - d20.engine.lastTouchStarted > 500 && 25 > a) && (!d20.engine.pan.panning || d20.engine.pan.lastPanDist < 10)) {
                var E = !1;
                if ("polygon" == d20.engine.mode)
                    d20.engine.finishCurrentPolygon();
                else if ("fog-polygonreveal" == d20.engine.mode)
                    d20.engine.finishPolygonReveal();
                else if (d20.engine.pinging && (d20.engine.pings[window.currentPlayer.id] && d20.engine.pings[window.currentPlayer.id].radius > 20 ? E = !0 : (delete d20.engine.pings[window.currentPlayer.id],
                d20.engine.pinging = !1)),
                !E) {
                    var T = d20.engine.canvas.findTarget(e);
                    T && d20.engine.canvas.setActiveObject(T, e),
                    d20.token_editor.showContextMenu(e)
                }
            }
            d20.engine.pinging = !1,
            d20.engine.measure.down = [],
            d20.engine.fog.down = [],
            d20.engine.leftMouseIsDown = !1,
            d20.engine.rightMouseIsDown = !1,
            d20.engine.pan.panning = !1,
            d20.engine.pan.lastPanDist = 0,
            "polygon" != d20.engine.mode && (d20.engine.drawshape.shape = !1),
            S && (k && clearTimeout(k),
            k = setTimeout(function() {
                d20.engine.mode = S,
                S = !1,
                k = !1
            }, 500))
        }
        ;
        d20.engine.uppercanvas.addEventListener(fabric.isTouchSupported ? "touchstart" : "mousedown", M),
        d20.engine.uppercanvas.addEventListener(fabric.isTouchSupported ? "touchmove" : "mousemove", A),
        d20.engine.uppercanvas.addEventListener(fabric.isTouchSupported ? "touchend" : "mouseup", H),
        $("body").on(fabric.isTouchSupported ? "touchend" : "mouseup", function(e) {
            d20.engine.leftMouseIsDown && H(e)
        }),
        d20.engine.selected = function() {
            var e = d20.engine.canvas.getActiveGroup()
              , t = [];
            if (e)
                t = e.getObjects();
            else {
                var i = d20.engine.canvas.getActiveObject();
                i && t.push(i)
            }
            return t
        }
        ,
        d20.engine.unselect = function(e) {
            e || (d20.engine.canvas.deactivateAllWithDispatch(),
            d20.engine.debounced_renderAll())
        }
        ,
        d20.engine.selectAll = function(e) {
            var t = [];
            if (d20.engine.canvas.forEachObject(function(i) {
                if (1 == i.selectable) {
                    if (e && "image" == i.type && i.model && 1 != i.model.get("isdrawing"))
                        return !0;
                    t.push(i)
                }
            }),
            0 != t.length) {
                var i = new fabric.Group(t);
                d20.engine.canvas.setActiveGroup(i),
                i.saveCoords(),
                d20.engine.canvas.fire("selection:created", {
                    target: i
                }),
                d20.engine.debounced_renderAll()
            }
        }
        ,
        d20.engine.select = function(e) {
            d20.engine.canvas.getActiveObject() || d20.engine.canvas.getActiveGroup() ? d20.engine.selectAdd(e) : d20.engine.canvas.setActiveObject(e)
        }
        ,
        d20.engine.selectAdd = function(e) {
            -1 == _.indexOf(d20.engine.selected(), e) && (d20.engine.canvas._handleGroupLogic({}, e),
            d20.engine.canvas._currentTransform && (d20.engine.canvas._currentTransform = null )),
            d20.engine.debounced_renderAll()
        }
        ,
        d20.engine.drawEllipse = function(e, t, i, n, r) {
            i /= 2,
            n /= 2;
            var o = i / 2
              , a = n / 2
              , s = .551784
              , l = i / 8 * s
              , c = n / 8 * s;
            r.beginPath(),
            r.moveTo(e, t - n),
            r.bezierCurveTo(e + o + l, t - n, e + i, t - a - c, e + i, t),
            r.bezierCurveTo(e + i, t + a + c, e + o + l, t + n, e, t + n),
            r.bezierCurveTo(e - o - l, t + n, e - i, t + a + c, e - i, t),
            r.bezierCurveTo(e - i, t - a - c, e - o - l, t - n, e, t - n),
            r.closePath()
        }
        ,
        d20.engine.editText = function(e, t) {
            var i, n, r;
            $("body").trigger("click.textarea");
            var o = parseInt(e.get("fontSize"), 10)
              , a = e.get("fontFamily").replace(/'/g, "")
              , s = e.get("fill");
            $("#font-size").val(o).trigger("keyup"),
            $("#font-color").val(s).trigger("change-silent"),
            $("#font-family").val(a);
            var l, c, d = 1.6, h = $("<textarea class='texteditor' style='line-height: " + d + "em;'></textarea>").css("font-size", o * d20.engine.canvasZoom).css("color", s).css("font-family", a), u = $("<div class='texteditor_ghost'></div>").css("font-size", o).css("line-height", d), p = $("<div class='texteditor_outline'></div>");
            d20.engine.editingTextarea = h,
            h.bind("click touchstart", function(e) {
                e.stopPropagation()
            }),
            $("#editor-wrapper").append(h),
            $("#editor-wrapper").append(u),
            $("#editor-wrapper").append(p);
            var f = function() {
                i = {
                    x: Math.floor((e.oCoords.tl.x - d20.engine.currentCanvasOffset[0]) * d20.engine.canvasZoom) - 125 + d20.engine.paddingOffset[0] + $("#editor-wrapper").scrollLeft(),
                    y: Math.floor((e.oCoords.tl.y - d20.engine.currentCanvasOffset[1]) * d20.engine.canvasZoom) - 125 + d20.engine.paddingOffset[1] + $("#editor-wrapper").scrollTop(),
                    width: Math.floor(e.get("width") * d20.engine.canvasZoom),
                    height: Math.floor(e.get("height") * d20.engine.canvasZoom)
                },
                h.css("top", toolbaroffset + ruleroffset + i.y + "px").css("left", ruleroffset + i.x + "px").css("width", i.width + "px").css("height", i.height + "px"),
                p.css("top", h.offset().top + $("#editor-wrapper").scrollTop() - 5 + "px").css("left", h.offset().left + $("#editor-wrapper").scrollLeft() - 5 + "px")
            }
              , g = function() {
                console.log("Finish editing"),
                e.model.save({
                    font_size: parseInt($("#font-size").val(), 10),
                    left: e.get("left") + Math.round((h.width() - l) / 2),
                    top: e.get("top") + Math.round((h.height() - c) / 2),
                    text: h.val(),
                    color: h.css("color"),
                    font_family: h.css("font-family").replace(/'/g, "")
                }),
                d20.engine.canvas.add(e),
                d20.Campaign.activePage().debounced_reorderByZ(),
                h.remove(),
                u.remove(),
                p.remove(),
                $("body").unbind("click.textarea"),
                $("#editor").trigger("nothing_selected"),
                setTimeout(function() {
                    $(document).trigger("forceresize")
                }, 100),
                d20.engine.editingTextarea = !1
            }
            ;
            h.bind("keyup", function() {
                var e = h.val();
                "" == e && (e = " "),
                u.text(e),
                u.css("font-size", h.css("font-size")),
                u.css("font-family", h.css("font-family")),
                $(this).css("width", u.width() + o * d + o + "px").css("height", u.height() + "px"),
                p.css("width", u.width() + o * d + "px").css("height", $(this).height() + 5 + "px"),
                l || (l = $(this).width(),
                c = $(this).height())
            }),
            h.bind("scrolled", function() {
                f(e)
            }),
            h.bind("keydown", "esc", function() {
                return g(),
                !1
            }),
            h.bind("keydown", "ctrl+d meta+d", function() {
                return g(),
                setMode("drawselect"),
                !1
            }),
            h.bind("keydown", "ctrl+s meta+s", function() {
                return g(),
                setMode("select"),
                !1
            }),
            h.bind("keydown", "ctrl+f meta+f", function() {
                return g(),
                setMode("path"),
                !1
            }),
            h.bind("mousedown mousemove mouseup touchstart touchmove touchend", function(e) {
                e.stopPropagation()
            });
            var m = function(o) {
                e = o,
                f(e),
                n = (t - i.x) / i.width,
                r = e.model.get("text"),
                h.val(r);
                var a = Math.floor(n * r.length);
                a > r.length && (a = r.length),
                a > 0 && h.setCursorPosition(a),
                d20.engine.canvas.remove(e),
                d20.engine.debounced_renderAll(),
                "Placeholder" == r && h.val(""),
                h.focus().keyup(),
                $("#editor").trigger("shape_selected", [e, !1])
            }
            ;
            m(e),
            _.defer(function() {
                $("body").bind("click.textarea", function() {
                    g()
                })
            })
        }
        ,
        d20.engine.convertAbsolutePathStringtoFabric = function(e) {
            try {
                var t = new fabric.Path(e)
                  , i = {
                    width: t.width,
                    height: t.height,
                    top: t.top,
                    left: t.left
                };
                0 == t.height && "A" == t.path[1][0] && (i.height = 2 * t.path[1][2],
                i.width = i.height,
                i.top = i.top - i.height / 2);
                for (var n = {}, r = t.path, o = 0; o < r.length; o++) {
                    var a = r[o];
                    "M" == a[0] || "L" == a[0] ? (a[1] = a[1] - i.left + i.width / 2,
                    a[2] = a[2] - i.top + i.height / 2,
                    r[o] = a) : "A" == a[0] && (a[6] = a[6] - i.left + i.width / 2,
                    a[7] = a[7] - i.top + i.height / 2,
                    r[o] = a)
                }
                return i = _.extend(i, n),
                i.path = JSON.stringify(r),
                i
            } catch (s) {
                return console.log("ERROR converting path!"),
                console.log(s),
                {
                    path: "[]"
                }
            }
        }
        ;
        var P = 25
          , O = 0;
        d20.engine.renderLoop = function() {
            d20.engine.stats && (d20.engine.canvasDirty || d20.engine.canvasTopDirty || d20.fx.numactive > 0) && (d20.engine.stats.begin(),
            d20.engine.stats.begun = !0);
            var e = +new Date;
            e - O > P && (d20.fx.update(1),
            O = e),
            d20.fx.numactive > 0 && (d20.engine.canvasTopDirty = !0,
            d20.canvas_overlay.gl.shadowsDrawnSinceLastFrame = !1),
            d20.engine.canvasDirty && (d20.engine.canvasOrigRenderAll(),
            d20.canvas_overlay.gl.shadowsDrawnSinceLastFrame = !0),
            d20.engine.canvasTopDirty && d20.engine.canvasOrigRenderTop(),
            d20.engine.canvasDirty = !1,
            d20.engine.canvasTopDirty = !1,
            requestAnimationFrame(d20.engine.renderLoop),
            d20.engine.stats && d20.engine.stats.begun && (d20.engine.stats.end(),
            d20.engine.stats.begun = !1)
        }
        ,
        requestAnimationFrame(d20.engine.renderLoop)
    }(),
    new function(e) {
        e.fn.setCursorPosition = function(t) {
            if (e(this).get(0).setSelectionRange)
                e(this).get(0).setSelectionRange(t, t);
            else if (e(this).get(0).createTextRange) {
                var i = e(this).get(0).createTextRange();
                i.collapse(!0),
                i.moveEnd("character", t),
                i.moveStart("character", t),
                i.select()
            }
        }
    }
    (jQuery),
    d20.utils = {
        stattracker: {}
    },
    window.d20ext = window.d20ext || {},
    window.d20ext.utils = d20.utils,
    function() {
        void 0 !== window.customcharsheet_translation && (i18n.translator.add(JSON.parse(BASE64.decode(window.customcharsheet_translation))),
        console.log("Custom Sheet Translation"));
        var e = {};
        d20.utils.htmlTranslator = function(t, i) {
            if ("" === t)
                return "";
            "undefined" == typeof i && (i = !1);
            var n = "jQuery";
            "string" == typeof t ? (n = "string",
            t = $(t)) : t instanceof jQuery || (n = "html",
            t = $(t));
            var r = "[data-i18n],[data-i18n-placeholder],[data-i18n-title],[data-i18n-alt],[data-i18n-aria-label],[data-i18n-label]";
            switch (i && (r += ",[data-i18n-dynamic]"),
            t.find(r).each(function() {
                var t = $(this)
                  , n = ["-placeholder", "-title", "-alt", "-aria-label", "-label", ""];
                i && n.push("-dynamic"),
                $.each(n, function() {
                    try {
                        if ("undefined" == typeof t.attr("data-i18n" + this))
                            return;
                        var n = "" !== this ? this.substr(1) : !1
                          , r = i && "dynamic" === n
                          , o = r ? t.text() : t.attr("data-i18n" + this)
                          , a = (t.attr("data-i18n-vars") || "").split("|")
                          , s = n ? "[" + o + "]" : '<span style="color: red;">[' + o + "]</span>"
                          , l = i18n(o, s);
                        if (e[o] = n ? t.attr(n) : t.html(),
                        l = 0 === a.length ? l : l.replace(/{{([0-9]+)}}/g, function(e, t) {
                            return a[t] ? a[t] : "{{" + t + "}}"
                        }),
                        !n || r)
                            return t.html(l),
                            !1;
                        t.attr(n, l)
                    } catch (c) {
                        console.log("Translation Error:", c),
                        console.log(t)
                    }
                })
            }),
            window.i18nOutput = JSON.stringify(e),
            n) {
            case "string":
                return t.prop("outerHTML");
            case "html":
                return t[0];
            default:
                return t
            }
        }
        ,
        d20.utils.playerZoneHeight = function() {
            var e = $("#playerzone .player").height() + 65;
            return $("#macrobar").is(":visible") && (e += $("#macrobar").height()),
            console.log(e),
            e
        }
        ,
        d20.utils.strip_tags = function(e, t, i) {
            i || void 0 === t || (e = html_sanitize(e, function(e, t, i, n) {
                var r = e.toString();
                if (n && "a" === n.XML_TAG)
                    return r;
                var o = "https://s3.amazonaws.com/files.d20.io"
                  , a = "http://imgsrv.roll20.net"
                  , s = "https://imgsrv.roll20.net";
                return r.substring(0, o.length) === o || r.substring(0, a.length) === a || r.substring(0, s.length) === s ? r : /^https?:\/\//.test(r) ? "http://imgsrv.roll20.net/?src=" + escape(r.replace("http://", "").replace("https://", "")) : ""
            }, function(e) {
                var t = e.split(" ");
                return _.each(t, function(e, i) {
                    t[i] = "userscript-" === e.substring(0, 11) || "sheet-" === e.substring(0, 6) ? e : "userscript-" + e
                }),
                t.join(" ")
            })),
            t = (((t || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join("");
            var n = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi
              , r = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;
            return e.replace(r, "").replace(n, function(e, i) {
                return t.indexOf("<" + i.toLowerCase() + ">") > -1 ? e : ""
            })
        }
        ,
        d20.utils.htmlAllowed = "<code><span><div><label><a><br><br /><p><b><i><del><strike><u><img><video><audio><param><blockquote><mark><cite><small><ul><ol><li><hr><dl><dt><dd><sup><sub><big><pre><code><figure><figcaption><strong><em><table><tr><td><th><tbody><thead><tfoot><caption><h1><h2><h3><h4><h5><h6>",
        d20.utils.handleHTMLInput = function(e) {
            return escape(d20.utils.strip_tags(d20.utils.autoLink(e), d20.utils.htmlAllowed))
        }
        ,
        d20.utils.handleHTMLOutput = function(e) {
            return d20.utils.strip_tags(unescape(e), d20.utils.htmlAllowed)
        }
        ,
        d20.utils.showOverQuota = function() {
            var e = $("<div><p>We're sorry, but it looks like you've uploaded more than your allotted quota of storage space on Roll20. You can increase your quota by <a href='/account/supporter/?quotainapp' target='_blank'>becoming a Plus user</a> (or upgrading your Plus account if you already have one), or by <a href='http://help.roll20.net/sidebar-art-library/' target='_blank'>deleting items from your Art Library</a>.</div>");
            e.dialog({
                modal: !0,
                title: "Quota Exceeded",
                buttons: {
                    "Upgrade Account": function() {
                        window.open("/account/supporter/?quotainapp"),
                        e.dialog("destroy")
                    },
                    "No Thanks": function() {
                        e.dialog("destroy")
                    }
                },
                beforeClose: function() {
                    e.dialog("destroy")
                }
            })
        }
        ,
        d20.utils.showBadConvert = function() {
            var e = $("<div><p>There was an error trying to convert the PDF. Be sure you didn't specify an invalid page number. It's also possible the PDF is corrupted or isn't supported by our conversion software.</div>");
            e.dialog({
                modal: !0,
                title: "PDF Conversion Error",
                buttons: {
                    "Drat!": function() {
                        e.dialog("destroy")
                    }
                },
                beforeClose: function() {
                    e.dialog("destroy")
                }
            })
        }
        ,
        d20.utils.setupAvatar = function(e, t) {
            e.bind("uploadcomplete", function(e, i) {
                return e.stopPropagation(),
                "overquota" == i ? (d20.utils.showOverQuota(),
                !1) : (t.updateModel(),
                void t.model.save({
                    avatar: i.base.replace("/original.", "/med.") + (-1 === i.base.indexOf("?") ? "?" + Math.floor((new Date).getTime() / 1e3) : "")
                }))
            }),
            e.dndUploader({
                url: "/image_library/newupload",
                method: "POST",
                allowMultiple: !1
            }),
            e.bind("removeimage", function() {
                t.updateModel(),
                t.model.save({
                    avatar: ""
                })
            }),
            e.on("click", ".remove", function() {
                e.trigger("removeimage")
            }),
            e.droppable({
                drop: function(t, i) {
                    console.log("Dropped onto avatar!"),
                    t.originalEvent.dropHandled = !0,
                    e.trigger("uploadcomplete", [{
                        base: i.draggable.attr("data-fullsizeurl")
                    }, !0]),
                    t.preventDefault(),
                    t.stopPropagation()
                },
                greedy: !0,
                accept: ".resultimage, .library-item"
            })
        }
        ;
        d20.utils.defaultRedactorSettings = {
            minHeight: 50,
            maxHeight: 300,
            plugins: ["fontcolor"],
            buttons: ["formatting", "|", "bold", "italic", "deleted", "|", "unorderedlist", "orderedlist", "outdent", "indent", "|", "table", "link", "|", "alignment", "|", "horizontalrule", "|"],
            convertDivs: !0,
            linebreaks: !0,
            tidyHtml: !1,
            dragUpload: !1
        },
        d20.utils.addCSSRules = function(e) {
            var t = document.createElement("style");
            document.getElementsByTagName("head")[0].appendChild(t),
            window.createPopup || t.appendChild(document.createTextNode(""));
            var i = document.styleSheets[document.styleSheets.length - 1];
            for (selector in e)
                if (i.insertRule)
                    try {
                        i.insertRule(selector + e[selector], i.cssRules.length)
                    } catch (n) {}
                else
                    try {
                        i.addRule(selector, e[selector])
                    } catch (n) {
                        console.log("Error addding rule!"),
                        console.log(n)
                    }
        }
        ,
        d20.utils.defaultDiceTokens = {
            d4: ["https://s3.amazonaws.com/files.d20.io/images/779542/DEYaBdP8w9B1CUSK26im0A/thumb.png?1363050056", "https://s3.amazonaws.com/files.d20.io/images/779540/P7yKde5fyGZCB1ud70UOzA/thumb.png?1363050056", "https://s3.amazonaws.com/files.d20.io/images/779539/AO4m-45bGw5yOcnZXUAn9g/thumb.png?1363050056", "https://s3.amazonaws.com/files.d20.io/images/779541/oWA-hmBAHNAijceHr8k-3A/thumb.png?1363050056"],
            d6: ["https://s3.amazonaws.com/files.d20.io/images/779533/-gS85HUaXIvmE5SjGpoH4w/thumb.png?1363049998", "https://s3.amazonaws.com/files.d20.io/images/779535/vkc_PT4z-d_ON1MvfHaCiA/thumb.png?1363049999", "https://s3.amazonaws.com/files.d20.io/images/779534/mHDadFirie4L12_ii-HYqQ/thumb.png?1363049998", "https://s3.amazonaws.com/files.d20.io/images/779531/nXqp2BhdwVsQn7cDR3cMlg/thumb.png?1363049998", "https://s3.amazonaws.com/files.d20.io/images/779532/nQD5_IXYLWN7YCjnd5zugA/thumb.png?1363049998", "https://s3.amazonaws.com/files.d20.io/images/779536/ttiwwiWE2PVkhD2d7fV3GA/thumb.png?1363049999"],
            d8: ["https://s3.amazonaws.com/files.d20.io/images/779514/GPCh5vqdSwvt_ANka3yhaw/thumb.png?1363049802", "https://s3.amazonaws.com/files.d20.io/images/779517/nnuf1Pe2Fq70BIs9FGI7mQ/thumb.png?1363049802", "https://s3.amazonaws.com/files.d20.io/images/779516/WnwuwT7yb5VM3-KiJY3GOg/thumb.png?1363049802", "https://s3.amazonaws.com/files.d20.io/images/779515/Gx21buVd6d6onPsALrGFWQ/thumb.png?1363049802", "https://s3.amazonaws.com/files.d20.io/images/779518/4LqfUGiX8sBXrX9b5gUnLw/thumb.png?1363049803", "https://s3.amazonaws.com/files.d20.io/images/779519/YOR5Wav0-3-L1fm4vD-LFQ/thumb.png?1363049803", "https://s3.amazonaws.com/files.d20.io/images/779522/dGFXXsEJz0EPA8dRpZvOzA/thumb.png?1363049804", "https://s3.amazonaws.com/files.d20.io/images/779521/QXm6GcIhK6zTdMvJZVS8Og/thumb.png?1363049804"],
            d10: ["https://s3.amazonaws.com/files.d20.io/images/779498/fjup5Fz4iV-TFKxV9z1Qtg/thumb.png?1363049717", "https://s3.amazonaws.com/files.d20.io/images/779500/ug7m7g1rII05ZFzyTrkRmw/thumb.png?1363049717", "https://s3.amazonaws.com/files.d20.io/images/779499/QNZR5kGieM1x00yQvSYYbg/thumb.png?1363049717", "https://s3.amazonaws.com/files.d20.io/images/779497/tkz2552-MqV8a_woAD8S4A/thumb.png?1363049717", "https://s3.amazonaws.com/files.d20.io/images/779501/xKjqIxXzibpcx3Lp7UH6qg/thumb.png?1363049718", "https://s3.amazonaws.com/files.d20.io/images/779502/Bpc1QATzO293LvGS3neBsQ/thumb.png?1363049718", "https://s3.amazonaws.com/files.d20.io/images/779504/Bpw24T8na0nJNFdTKZX5aw/thumb.png?1363049718", "https://s3.amazonaws.com/files.d20.io/images/779503/ukQbc7uDKfl62ng2EO6h6g/thumb.png?1363049719", "https://s3.amazonaws.com/files.d20.io/images/779505/23948Y6_O0Bc0RuIve3BbA/thumb.png?1363049719", "https://s3.amazonaws.com/files.d20.io/images/779506/VhwbFVDm2KOte5h2p97n7w/thumb.png?1363049719"],
            d12: ["https://s3.amazonaws.com/files.d20.io/images/779476/FRkaR6XvyzUuZb0ZB7ysCA/thumb.png?1363049489", "https://s3.amazonaws.com/files.d20.io/images/779474/UyTKDHxf-fU1zC3w6udl0w/thumb.png?1363049489", "https://s3.amazonaws.com/files.d20.io/images/779475/kUK2UmBaD2No00Gp4Q_OCQ/thumb.png?1363049489", "https://s3.amazonaws.com/files.d20.io/images/779477/OVnJDjAkMPLk29hjpFjUvw/thumb.png?1363049489", "https://s3.amazonaws.com/files.d20.io/images/779478/2la9taZk_vqdKItYZ6JEfA/thumb.png?1363049490", "https://s3.amazonaws.com/files.d20.io/images/779479/fa8f9OVIBt79oETji8C8Lg/thumb.png?1363049490", "https://s3.amazonaws.com/files.d20.io/images/779480/CTuw9Yiijq24ra3G9YMuPA/thumb.png?1363049490", "https://s3.amazonaws.com/files.d20.io/images/779481/d4onnc7NOAbNG5JbiL9mbg/thumb.png?1363049491", "https://s3.amazonaws.com/files.d20.io/images/779482/Oy2dTkB3-NlxiMsTRj78nw/thumb.png?1363049491", "https://s3.amazonaws.com/files.d20.io/images/779483/mO_KU8nlO7GDQKc2J_aNeg/thumb.png?1363049491", "https://s3.amazonaws.com/files.d20.io/images/779484/3MYG5dYJhiKXsRZtSUpHZw/thumb.png?1363049491", "https://s3.amazonaws.com/files.d20.io/images/779485/VxA3umVDmYrH5A_VBecUIQ/thumb.png?1363049492"],
            d20: ["https://s3.amazonaws.com/files.d20.io/images/779445/OfLXGnbkNr2qKg1Qqk4cPg/thumb.png?1363049314", "https://s3.amazonaws.com/files.d20.io/images/779447/br4TdShbuMIZ-D-lyeXsKA/thumb.png?1363049315", "https://s3.amazonaws.com/files.d20.io/images/779454/2ARsJLoP4tExbCWrRaaxQg/thumb.png?1363049318", "https://s3.amazonaws.com/files.d20.io/images/779444/3pryVOKRxMCBisEHpH3LWg/thumb.png?1363049314", "https://s3.amazonaws.com/files.d20.io/images/779446/Yk4sSF3eWfnpeJd4DQpV2A/thumb.png?1363049314", "https://s3.amazonaws.com/files.d20.io/images/779450/tdvjVviFHhM_KxjFRQomhA/thumb.png?1363049316", "https://s3.amazonaws.com/files.d20.io/images/779456/twbHlPq0CFjFCpAyS59CTQ/thumb.png?1363049319", "https://s3.amazonaws.com/files.d20.io/images/779449/PPHDirZfEowhjBHxQdxJiw/thumb.png?1363049315", "https://s3.amazonaws.com/files.d20.io/images/779448/1SpNrrunpHwrNbsKcqpCzQ/thumb.png?1363049315", "https://s3.amazonaws.com/files.d20.io/images/779458/VsueBYqaDlvp9BjlXl9wMQ/thumb.png?1363049320", "https://s3.amazonaws.com/files.d20.io/images/779451/nWqhH9iMimUAJh_9jOFEog/thumb.png?1363049316", "https://s3.amazonaws.com/files.d20.io/images/779452/TvksvU6AZm2wmpEQ2HkBlQ/thumb.png?1363049317", "https://s3.amazonaws.com/files.d20.io/images/779459/L4pwmqIbQk0TfaCMExrYxQ/thumb.png?1363049320", "https://s3.amazonaws.com/files.d20.io/images/779453/MDmeMWOQ_lARfvFoT1n3KQ/thumb.png?1363049317", "https://s3.amazonaws.com/files.d20.io/images/779460/my8VEGyYcJIHZN2uXP6QXQ/thumb.png?1363049321", "https://s3.amazonaws.com/files.d20.io/images/779455/nuz5AefdQSB6H4mvUXoqhw/thumb.png?1363049318", "https://s3.amazonaws.com/files.d20.io/images/779457/kQBunq7iXGmHNqZQCa5MCA/thumb.png?1363049319", "https://s3.amazonaws.com/files.d20.io/images/779463/6n_z7Gwd7eacm3-HC-f-mg/thumb.png?1363049322", "https://s3.amazonaws.com/files.d20.io/images/779462/aVz3qCe2QM2nWhn3BoT9rg/thumb.png?1363049321", "https://s3.amazonaws.com/files.d20.io/images/779461/4PuFJYddJWJjj4uL5S3mxQ/thumb.png?1363049321"]
        };
        for (var t in d20.utils.defaultDiceTokens)
            d20.utils.defaultDiceTokens[t] = _.map(d20.utils.defaultDiceTokens[t], function(e) {
                return escape(e + "")
            });
        d20.utils.hexToRgb = function(e) {
            return e[4] || (e = e.replace(/./g, "$&$&").slice(1)),
            ["0x" + e[1] + e[2] | 0, "0x" + e[3] + e[4] | 0, "0x" + e[5] + e[6] | 0]
        }
        ;
        var i = {}
          , n = function() {
            console.log("Do refresh link cache!");
            var e = {};
            d20.Campaign.characters.each(function(t) {
                var i = t.get("inplayerjournals").split(",");
                (window.is_gm || -1 !== _.indexOf(i, "all") || window.currentPlayer && -1 !== _.indexOf(i, window.currentPlayer.id)) && (e[t.get("name").toLowerCase()] = {
                    type: "character",
                    id: t.id
                })
            }),
            d20.Campaign.handouts.each(function(t) {
                var i = t.get("inplayerjournals").split(",");
                (window.is_gm || -1 !== _.indexOf(i, "all") || window.currentPlayer && -1 !== _.indexOf(i, window.currentPlayer.id)) && (e[t.get("name").toLowerCase()] = {
                    type: "handout",
                    id: t.id
                })
            }),
            i = e
        }
        ;
        d20.utils.refreshLinkCache = _.debounce(n, 100),
        d20.utils.autoLink = function(e) {
            var t = /\[[^\]]+\]/g;
            return e = e.replace(t, function(e) {
                e = e.substring(1, e.length - 1);
                var t = i[e.toLowerCase()];
                return t ? "<a href='http://journal.roll20.net/" + t.type + "/" + t.id + "'>" + e + "</a>" : "[" + e + "]"
            })
        }
        ;
        var r = $("#textchat-notifier")
          , o = !1;
        d20.utils.textchatNotify = function(e, t) {
            (o !== !0 || t === !0) && (e === !1 ? r.hide() : r.show().text(e),
            t === !0 && (o = e !== !1 ? !0 : !1))
        }
        ,
        d20.utils.getParentsUntil = function(e, t, i) {
            var n = [];
            if (i)
                var r = i.charAt(0);
            for (; e && e !== document && (!t || t !== e); e = e.parentNode)
                i ? ("." === r && e.classList.contains(i.substr(1)) && n.push(e),
                "#" === r && e.id === i.substr(1) && n.push(e),
                "[" === r && e.hasAttribute(i.substr(1, i.length - 1)) && n.push(e),
                e.tagName.toLowerCase() === i && n.push(e)) : n.push(e);
            return n
        }
    }(),
    window.ucfirst = function(e) {
        return e.charAt(0).toUpperCase() + e.slice(1)
    }
    ,
    function(e, t, i) {
        function n(t, i) {
            this.element = t,
            this.options = e.extend({}, o, i),
            this._defaults = o,
            this._name = r,
            this.init()
        }
        var r = "addClear"
          , o = {
            closeSymbol: "&#10006;",
            color: "#CCC",
            top: -1,
            right: 8,
            returnFocus: !0,
            showOnLoad: !1,
            onClear: null ,
            hideOnBlur: !1,
            tabbable: !0
        };
        n.prototype = {
            init: function() {
                var t, n = e(this.element), r = this, o = this.options;
                n.wrap("<span style='position:relative;' class='add-clear-span'></span>");
                var a = o.tabbable ? "" : " tabindex='-1'";
                t = e("<a href='#clear' style='display: none;'" + a + ">" + o.closeSymbol + "</a>"),
                n.after(t),
                n.next().css({
                    color: o.color,
                    "text-decoration": "none",
                    display: "none",
                    "line-height": 1,
                    overflow: "hidden",
                    position: "absolute",
                    right: o.right,
                    top: o.top
                }, this),
                n.val().length >= 1 && o.showOnLoad === !0 && t.css({
                    display: "block"
                }),
                n.focus(function() {
                    e(this).val().length >= 1 && t.css({
                        display: "block"
                    })
                }),
                n.blur(function(e) {
                    o.hideOnBlur && setTimeout(function() {
                        var n = e.relatedTarget || e.explicitOriginalTarget || i.activeElement;
                        n !== t[0] && t.css({
                            display: "none"
                        })
                    }, 0)
                });
                var s = function() {
                    t.css(e(this).val().length >= 1 ? {
                        display: "block"
                    } : {
                        display: "none"
                    })
                }
                  , l = function() {
                    n.off("keyup", s),
                    n.off("cut", s),
                    l = s,
                    s.call(this)
                }
                ;
                n.on("keyup", s),
                n.on("cut", function() {
                    var e = this;
                    setTimeout(function() {
                        s.call(e)
                    }, 0)
                }),
                n.on("input", function() {
                    l.call(this)
                }),
                o.hideOnBlur && t.blur(function() {
                    t.css({
                        display: "none"
                    })
                }),
                t.click(function(t) {
                    var i = e(r.element);
                    i.val("").trigger("keyup"),
                    e(this).css({
                        display: "none"
                    }),
                    o.returnFocus === !0 && i.focus(),
                    o.onClear && o.onClear(i),
                    t.preventDefault()
                })
            }
        },
        e.fn[r] = function(t) {
            return this.each(function() {
                e.data(this, "plugin_" + r) || e.data(this, "plugin_" + r, new n(this,t))
            })
        }
    }(jQuery, window, document),
    d20.models = {},
    d20.undo = {
        stack: [],
        currentGroup: {}
    },
    $(function() {
        var e = function(e, t) {
            return !(t.left > e.right || t.right < e.left || t.top > e.bottom || t.bottom < e.top)
        }
          , t = function() {
            if (this.view._animsinprogress[this.animkey] = !1,
            !this.view._animsinprogress.top && !this.view._animsinprogress.left) {
                var e = this.view.model.get("lastmove").split(",");
                if (e.length > 2 * this.step - 1)
                    this.view._animsinprogress.top = !0,
                    this.view._animsinprogress.left = !0,
                    this.view.graphic.animate("left", e.length > 2 * this.step ? e[2 * this.step] : this.view.model.get("left"), {
                        duration: 350,
                        onChange: d20.engine.renderAll,
                        onComplete: _.bind(t, {
                            view: this.view,
                            animkey: "left",
                            step: this.step + 1
                        })
                    }),
                    this.view.graphic.animate("top", e.length > 2 * this.step ? e[2 * this.step + 1] : this.view.model.get("top"), {
                        duration: 350,
                        onChange: d20.engine.renderAll,
                        onComplete: _.bind(t, {
                            view: this.view,
                            animkey: "top",
                            step: this.step + 1
                        })
                    });
                else {
                    "image" != this.view.model.get("type") || "objects" != this.view.model.get("layer") && "gmlayer" != this.view.model.get("layer") || !this.view.graphic.active || d20.token_editor.showRadialMenu(this.view.graphic, !0, !0);
                    var i = this;
                    _.each(d20.engine.showLastPaths, function(e) {
                        "modified" === e.type && e.obj === i.view.graphic && (e.fadestart = +new Date)
                    })
                }
            }
        }
          , i = function(e, i, n, r) {
            if (e.graphic && !e.model.collection.page != d20.Campaign.activePage()) {
                var o = {}
                  , a = r && r.changes || {};
                a.width && "image" == e.model.get("type") && (n.scaleX = 1),
                a.height && "image" == e.model.get("type") && (n.scaleY = 1);
                for (var s = 0; s < i.length; s++) {
                    var l = i[s]
                      , c = l;
                    r && r.changes[l] && e.graphic.get(l) != n[c] && (o[l] = n[c],
                    delete n[l],
                    delete a[l])
                }
                if (!a.left && !a.top || "image" != e.model.get("type") || "objects" != e.model.get("layer") && "gmlayer" != e.model.get("layer") || !e.graphic.active || d20.token_editor.showRadialMenu(e.graphic, !0, !0),
                e.graphic.set(n),
                e.graphic.setCoords(),
                o.top || o.left) {
                    var d = e.model.get("lastmove").split(",");
                    d.length > 2 && (o.left = d[0],
                    o.top = d[1],
                    d20.engine.showLastPaths.push({
                        obj: e.graphic,
                        type: "modified"
                    }))
                }
                _.each(o, function(i, n) {
                    void 0 === e._animsinprogress && (e._animsinprogress = {}),
                    e._animsinprogress[n] = !0,
                    e.graphic.animate(n, i, {
                        duration: 350,
                        onChange: d20.engine.renderAll,
                        onComplete: "top" == n || "left" == n ? _.bind(t, {
                            view: e,
                            animkey: n,
                            step: d && d.length > 2 ? 1 : 2
                        }) : !1
                    })
                }),
                d20.engine.debounced_renderAll()
            }
        }
          , n = Backbone.Model.extend({
            defaults: {
                top: 0,
                left: 0,
                width: 0,
                height: 0,
                z_index: 0,
                text: "",
                font_size: 16,
                rotation: 0,
                color: "#000000",
                page_id: 0,
                type: "text",
                font_family: "unset",
                layer: "",
                controlledby: "",
                groupwith: ""
            },
            initialize: function() {
                if (_.bindAll(this, "toJSON"),
                this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                if ("" === this.get("layer") && this.set({
                    layer: window.currentEditingLayer,
                    controlledby: window.currentPlayer.id
                }, {
                    silent: !0
                }),
                "unset" == this.get("font_family")) {
                    var t = $("#font-family");
                    this.set(t.length > 0 ? {
                        font_family: $("#font-family").val()
                    } : {
                        font_family: "Arial"
                    })
                }
                this.view = new o({
                    model: this
                }),
                this.allowDelays = {
                    update: !0,
                    "delete": !0
                }
            },
            isNew: function() {
                return !this.persisted
            },
            toJSON: function() {
                var e = _.clone(this.attributes);
                return 0 == e.page_id && this.collection && (e.page_id = this.collection.page.id),
                e
            },
            currentPlayerControls: function() {
                if (window.is_gm)
                    return !0;
                var e = this.get("controlledby").split(",");
                return -1 != _.indexOf(e, window.currentPlayer.id) || -1 != _.indexOf(e, "all") ? !0 : !1
            },
            addToGroup: function(e) {
                _.isArray(e) || (e = [e]),
                e = _.without(e, this.id);
                var t, i = this.get("groupwith");
                t = "" == i ? [] : i.split(","),
                this.save({
                    groupwith: _.union(t, e).join(",")
                })
            },
            clearGroup: function() {
                this.save({
                    groupwith: ""
                })
            },
            selectGroup: function() {
                var e = this
                  , t = this.get("groupwith");
                if ("" != t) {
                    var i = t.split(",");
                    _.each(i, function(t) {
                        var i = e.collection.page.thepaths.get(t);
                        i || (i = e.collection.page.thegraphics.get(t)),
                        i || (i = e.collection.page.thetexts.get(t)),
                        i && i.view && i.view.graphic && d20.engine.selectAdd(i.view.graphic)
                    })
                }
            }
        })
          , r = Backbone.Collection.extend({
            model: n
        })
          , o = Backbone.View.extend({
            initialize: function() {
                _.bindAll(this, "modified", "deleted", "bindToGraphic");
                var e = this;
                if (this.model.get("existing_shape"))
                    this.graphic = this.model.get("existing_shape"),
                    this.graphic.model = this.model,
                    this.graphic.hasRotatingPoint = !0,
                    this.graphic.lineHeight = 1.6,
                    this.model.unset("existing_shape"),
                    this.trackShapeIfNecessary();
                else {
                    var t = new fabric.Text(this.model.get("text"),{
                        fontFamily: this.model.get("font-family")
                    });
                    this.graphic = t,
                    this.graphic.model = this.model,
                    this.graphic.hasRotatingPoint = !0,
                    this.graphic.lineHeight = 1.6,
                    this.model.collection.page.id == d20.Campaign.activePage().id && (this.syncToEditor(),
                    d20.engine.canvas.add(t),
                    this.trackShapeIfNecessary())
                }
                this.graphic.textAlign = "left",
                this.model.bind("change", function(t, i) {
                    t.collection.page.id == d20.Campaign.activePage().id && e.syncToEditor(i)
                }),
                this.model.bind("remote_update", function() {
                    var t = d20.engine.canvas.getActiveGroup();
                    t && t.contains(e.graphic) && d20.engine.canvas.deactivateAllWithDispatch()
                }),
                this.model.bind("change:layer", function(e) {
                    if ("" != e.previous("layer")) {
                        this.view.trackShapeIfNecessary(),
                        d20.Campaign.activePage().debounced_reorderByZ();
                        var t = this;
                        _.defer(function() {
                            -1 !== _.indexOf(d20.engine.selected(), t.view.graphic) && d20.engine.unselect()
                        })
                    }
                }),
                this.model.bind("remove", function() {
                    this.collection.page.id === d20.Campaign.activePage().id && (d20.engine.canvas.remove(e.graphic),
                    d20.engine.debounced_renderAll()),
                    !this.collection.massdelete && window.is_gm && e.deleted(!0)
                }),
                this.debounced_modified = _.debounce(this.modified, 1e3)
            },
            syncToEditor: function(e) {
                var t, n;
                this.model.get("top") ? (t = this.model.get("top"),
                n = this.model.get("left")) : (t = this.model.get("y") + Math.floor(this.model.get("height") / 2),
                n = this.model.get("x") + Math.floor(this.model.get("width") / 2));
                var r = {
                    fontSize: parseFloat(this.model.get("font_size")),
                    fill: this.model.get("color"),
                    top: t,
                    left: n,
                    fontFamily: this.model.get("font_family"),
                    text: this.model.get("text"),
                    angle: this.model.get("rotation"),
                    textAlign: "left"
                }
                  , o = [];
                i(this, o, r, e)
            },
            modified: function(e, t) {
                if (!e) {
                    var i = this.model.toJSON();
                    d20.undo.newAction(i.id, function(e) {
                        var t = d20.Campaign.pages.get(i.page_id).thetexts.get(e);
                        t && (delete i.id,
                        delete i.page_id,
                        delete i.containingButtonId,
                        t.save(i),
                        t.view.syncToEditor(),
                        t.view.modified(!0))
                    })
                }
                newvals = {
                    top: this.graphic.get("top"),
                    left: this.graphic.get("left"),
                    width: this.graphic.get("width"),
                    height: this.graphic.get("height"),
                    font_size: parseInt(this.graphic.get("fontSize"), 10),
                    rotation: this.graphic.get("angle"),
                    color: this.graphic.get("fill"),
                    text: this.graphic.get("text"),
                    font_family: this.graphic.get("fontFamily").replace(/'/g, "")
                },
                t || this.model.save(newvals)
            },
            deleted: function(e) {
                var t = this.model.toJSON();
                d20.undo.newAction(t.id, function() {
                    var e = d20.Campaign.pages.get(t.page_id)
                      , i = t.id;
                    delete t.containingButtonId,
                    delete t.page_id,
                    delete t.id;
                    var n = e.addText({
                        text: t.text,
                        top: t.top,
                        left: t.left,
                        fontSize: t.font_size,
                        fontFamily: t.font_family,
                        color: t.color
                    });
                    n.save({
                        color: t.color,
                        text: t.text,
                        font_size: t.font_size,
                        font_family: t.font_family
                    }),
                    n.view.syncToEditor(),
                    n.view.modified(!0),
                    d20.undo.updateStack(i, n.id)
                }),
                e !== !0 && this.model.destroy()
            },
            trackShapeIfNecessary: function() {
                if (this.graphic) {
                    var e = this.model.get("controlledby").split(",");
                    this.graphic.selectable = window.currentPlayer && this.model.get("layer") == window.currentEditingLayer && (window.is_gm || -1 !== _.indexOf(e, "all") || -1 !== _.indexOf(e, window.currentPlayer.id)) ? !0 : !1
                }
            },
            getCurrentZIndex: function() {
                return d20.engine.canvas.getObjects().indexOf(this.graphic)
            }
        })
          , a = Backbone.Model.extend({
            defaults: {
                path: "",
                z_index: 0,
                fill: "transparent",
                stroke: "#000000",
                page_id: 0,
                type: "path",
                rotation: 0,
                layer: "",
                stroke_width: 5,
                controlledby: "",
                groupwith: "",
                width: 0,
                height: 0,
                top: 0,
                left: 0,
                scaleX: 1,
                scaleY: 1
            },
            initialize: function() {
                if (_.bindAll(this, "toJSON"),
                this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                "" === this.get("layer") && this.set({
                    layer: window.currentEditingLayer,
                    controlledby: window.currentPlayer.id
                }, {
                    silent: !0
                }),
                this.checkForUpgrade(),
                this.view = new l({
                    model: this
                }),
                this.allowDelays = {
                    update: !0,
                    "delete": !0
                }
            },
            isNew: function() {
                return !this.persisted
            },
            toJSON: function() {
                var e = _.clone(this.attributes);
                return 0 == e.page_id && this.collection && (e.page_id = this.collection.page.id),
                e
            },
            currentPlayerControls: function() {
                if (window.is_gm)
                    return !0;
                var e = this.get("controlledby").split(",");
                return -1 != _.indexOf(e, window.currentPlayer.id) || -1 != _.indexOf(e, "all") ? !0 : !1
            },
            addToGroup: function(e) {
                _.isArray(e) || (e = [e]),
                e = _.without(e, this.id);
                var t, i = this.get("groupwith");
                t = "" == i ? [] : i.split(","),
                this.save({
                    groupwith: _.union(t, e).join(",")
                })
            },
            clearGroup: function() {
                this.save({
                    groupwith: ""
                })
            },
            selectGroup: function() {
                var e = this
                  , t = this.get("groupwith");
                if ("" != t) {
                    var i = t.split(",");
                    _.each(i, function(t) {
                        var i = e.collection.page.thepaths.get(t);
                        i || (i = e.collection.page.thegraphics.get(t)),
                        i || (i = e.collection.page.thetexts.get(t)),
                        i && i.view && i.view.graphic && d20.engine.selectAdd(i.view.graphic)
                    })
                }
            },
            checkForUpgrade: function() {
                if ("[" != this.get("path")[0]) {
                    console.log("Old style path!");
                    var e = d20.engine.convertAbsolutePathStringtoFabric(this.get("path"));
                    this.set(e)
                }
            }
        })
          , s = Backbone.Collection.extend({
            model: a
        })
          , l = Backbone.View.extend({
            initialize: function() {
                _.bindAll(this, "modified", "deleted", "trackShapeIfNecessary", "bindToGraphic");
                var e = this;
                if (this.model.get("existing_shape"))
                    this.graphic = this.model.get("existing_shape"),
                    this.graphic.model = this.model,
                    this.graphic.hasRotatingPoint = !0,
                    this.graphic.perPixelTargetFind = !0,
                    this.trackShapeIfNecessary(),
                    this.model.unset("existing_shape");
                else {
                    var t = new fabric.Path(JSON.parse(this.model.get("path")));
                    e.graphic = t,
                    e.graphic.model = e.model,
                    e.graphic.hasRotatingPoint = !0,
                    e.graphic.perPixelTargetFind = !0,
                    e.model.collection.page.id == d20.Campaign.activePage().id && (e.syncToEditor(),
                    d20.engine.canvas.add(t),
                    e.trackShapeIfNecessary(),
                    d20.Campaign.activePage().debounced_reorderByZ())
                }
                this.model.bind("change", function(t, i) {
                    t.collection.page.id == d20.Campaign.activePage().id && e.syncToEditor(i)
                }),
                this.model.bind("remote_update", function() {
                    var t = d20.engine.canvas.getActiveGroup();
                    t && t.contains(e.graphic) && d20.engine.canvas.deactivateAllWithDispatch()
                }),
                this.model.bind("change:layer", function(e) {
                    if ("" != e.previous("layer")) {
                        this.view.trackShapeIfNecessary(),
                        d20.Campaign.activePage().debounced_reorderByZ();
                        var t = this;
                        _.defer(function() {
                            -1 !== _.indexOf(d20.engine.selected(), t.view.graphic) && d20.engine.unselect()
                        })
                    }
                }),
                this.model.bind("remove", function() {
                    this.collection.page.id === d20.Campaign.activePage().id && (d20.engine.canvas.remove(e.graphic),
                    d20.engine.debounced_renderAll()),
                    !this.collection.massdelete && window.is_gm && e.deleted(!0)
                }),
                this.debounced_modified = _.debounce(this.modified, 1e3)
            },
            trackShapeIfNecessary: function() {
                if (this.graphic) {
                    var e = this.model.get("controlledby").split(",");
                    this.graphic.selectable = window.currentPlayer && this.model.get("layer") == window.currentEditingLayer && (window.is_gm || -1 !== _.indexOf(e, "all") || -1 !== _.indexOf(e, window.currentPlayer.id)) ? !0 : !1,
                    this.graphic.hasRotatingPoint = "walls" == this.model.get("layer") ? !1 : !0
                }
            },
            syncToEditor: function(e) {
                var t = {
                    strokeWidth: this.model.get("stroke_width"),
                    stroke: this.model.get("stroke"),
                    angle: this.model.get("rotation"),
                    width: this.model.get("width"),
                    height: this.model.get("height"),
                    fill: this.model.get("fill"),
                    top: this.model.get("top"),
                    left: this.model.get("left"),
                    scaleX: this.model.get("scaleX"),
                    scaleY: this.model.get("scaleY")
                }
                  , n = [];
                i(this, n, t, e)
            },
            modified: function(e, t) {
                if (!e) {
                    var i = this.model.toJSON();
                    d20.undo.newAction(i.id, function(e) {
                        var t = d20.Campaign.pages.get(i.page_id).thepaths.get(e);
                        t && (delete i.id,
                        delete i.page_id,
                        t.save(i))
                    })
                }
                newvals = {
                    fill: this.graphic.get("fill"),
                    path: JSON.stringify(this.graphic.get("path")),
                    stroke: this.graphic.get("stroke"),
                    rotation: this.graphic.get("angle"),
                    stroke_width: this.graphic.get("strokeWidth"),
                    left: this.graphic.get("left"),
                    top: this.graphic.get("top"),
                    width: this.graphic.get("width"),
                    height: this.graphic.get("height"),
                    scaleX: this.graphic.get("scaleX"),
                    scaleY: this.graphic.get("scaleY")
                },
                t || this.model.save(newvals)
            },
            deleted: function(e) {
                var t = this.model.toJSON();
                t.path = this.graphic.get("path"),
                d20.undo.newAction(t.id, function() {
                    var e = d20.Campaign.pages.get(t.page_id)
                      , i = t.id;
                    delete t.page_id,
                    delete t.id;
                    var n = e.addPath({
                        stroke: t.stroke,
                        fill: t.fill,
                        stroke_width: t.stroke_width,
                        path: t.path,
                        top: t.top,
                        left: t.left,
                        scaleX: t.scaleX,
                        scaleY: t.scaleY,
                        width: t.width,
                        height: t.height
                    });
                    d20.undo.updateStack(i, n.id)
                }),
                e !== !0 && this.model.destroy()
            },
            getCurrentZIndex: function() {
                return d20.engine.canvas.getObjects().indexOf(this.graphic)
            }
        })
          , c = d20.models.Graphic = Backbone.Model.extend({
            defaults: {
                left: 0,
                top: 0,
                width: 0,
                height: 0,
                z_index: 0,
                imgsrc: "",
                rotation: 0,
                type: "image",
                page_id: 0,
                layer: "",
                isdrawing: !1,
                locked: !1,
                cardid: "",
                flipv: !1,
                fliph: !1,
                name: "",
                gmnotes: "",
                controlledby: "",
                represents: "",
                bar1_value: "",
                bar1_max: "",
                bar1_link: "",
                bar2_value: "",
                bar2_max: "",
                bar2_link: "",
                bar3_value: "",
                bar3_max: "",
                bar3_link: "",
                aura1_radius: "",
                aura1_color: "#FFFF99",
                aura1_square: !1,
                aura2_radius: "",
                aura2_color: "#59E594",
                aura2_square: !1,
                tint_color: "transparent",
                status_dead: !1,
                statusmarkers: "",
                showname: !1,
                showplayers_name: !1,
                showplayers_bar1: !1,
                showplayers_bar2: !1,
                showplayers_bar3: !1,
                showplayers_aura1: !1,
                showplayers_aura2: !1,
                playersedit_name: !0,
                playersedit_bar1: !0,
                playersedit_bar2: !0,
                playersedit_bar3: !0,
                playersedit_aura1: !0,
                playersedit_aura2: !0,
                light_radius: "",
                light_dimradius: "",
                light_otherplayers: !1,
                light_hassight: !1,
                light_angle: "",
                light_losangle: "",
                light_multiplier: 1,
                groupwith: "",
                sides: "",
                currentSide: 0,
                lastmove: ""
            },
            initialize: function() {
                if (_.bindAll(this, "toJSON", "mapRepresentsToPlayer", "toggleSettings", "clearMarkers", "findCorrespondingCharacter"),
                this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                if (this.findCorrespondingCharacter(),
                "" === this.get("layer")) {
                    var t = window.currentPlayer.id;
                    "" !== this.get("cardid") ? t = "all" : window.is_gm && (t = ""),
                    this.set({
                        layer: window.currentEditingLayer,
                        controlledby: t
                    }, {
                        silent: !0
                    })
                }
                this.view = new h({
                    model: this
                });
                var i = this;
                this.bind("showtokeneditor", function() {
                    i.tokensettingsview || (i.tokensettingsview = new g({
                        model: i
                    })),
                    i.tokensettingsview.showDialog()
                }),
                this.bind("change:controlledby", function() {
                    window.is_gm || this.view.trackShapeIfNecessary()
                }),
                this.bind("change:represents", function() {
                    this.findCorrespondingCharacter(),
                    this.view.trackShapeIfNecessary()
                }),
                _.defer(function() {
                    if (i.character) {
                        var e = ["bar1", "bar2", "bar3"]
                          , t = {};
                        _.each(e, function(e) {
                            if ("" != i.get(e + "_link")) {
                                var n = i.character.attribs.get(i.get(e + "_link"));
                                n && (i.get(e + "_value") !== n.get("current") && (t[e + "_value"] = n.get("current")),
                                i.get(e + "_max") !== n.get("max") && (t[e + "_max"] = n.get("max")))
                            }
                        }),
                        _.keys(t).length > 0 && i.save(t)
                    }
                })
            },
            isNew: function() {
                return !this.persisted
            },
            toJSON: function() {
                var e = _.clone(this.attributes);
                return 0 == e.page_id && this.collection && (e.page_id = this.collection.page.id),
                e
            },
            toggleSettings: function(e) {
                var t = {};
                t[e] = this.get(e) ? !1 : !0,
                this.save(t)
            },
            clearMarkers: function() {
                this.save({
                    statusmarkers: ""
                })
            },
            currentPlayerControls: function() {
                if (window.is_gm)
                    return !0;
                var e = this.getOverriddenValue("controlledby").split(",");
                return -1 != _.indexOf(e, window.currentPlayer.id) || -1 != _.indexOf(e, "all") ? !0 : !1
            },
            addToGroup: function(e) {
                _.isArray(e) || (e = [e]),
                e = _.without(e, this.id);
                var t, i = this.get("groupwith");
                t = "" == i ? [] : i.split(","),
                this.save({
                    groupwith: _.union(t, e).join(",")
                })
            },
            clearGroup: function() {
                this.save({
                    groupwith: ""
                })
            },
            selectGroup: function() {
                var e = this
                  , t = this.get("groupwith");
                if ("" != t) {
                    var i = t.split(",");
                    _.each(i, function(t) {
                        var i = e.collection.page.thepaths.get(t);
                        i || (i = e.collection.page.thegraphics.get(t)),
                        i || (i = e.collection.page.thetexts.get(t)),
                        i && i.view && i.view.graphic && d20.engine.selectAdd(i.view.graphic)
                    })
                }
            },
            findCorrespondingCharacter: function() {
                var e = this;
                if (this.character && (this.character.off("change:represents"),
                this.character.attribs.off("change")),
                this.character = !1,
                "" !== this.get("represents")) {
                    var t = d20.Campaign.characters.get(this.get("represents"));
                    t && (this.character = t,
                    this.character.on("change:controlledby", function() {
                        console.log("char cb changed"),
                        e.view.trackShapeIfNecessary()
                    }),
                    this.character.attribs.on("change", function() {
                        if (e.collection.page.id == d20.Campaign.activePage().id) {
                            var t = d20.engine.selected();
                            "image" == e.get("type") && 1 == t.length && t[0] == e.view.graphic && d20.token_editor.showRadialMenu(e.view.graphic, !0, !0)
                        }
                    }))
                }
            },
            getOverriddenValue: function(e) {
                var t = this.get(e);
                if (this.character)
                    if (-1 !== e.indexOf("bar")) {
                        var i = e.split("_")[0]
                          , n = this.get(i + "_link");
                        if ("" !== n) {
                            "sheetattr_" === n.substring(0, 10) && (n = n.substring(10, n.length));
                            try {
                                t = this.character.autoCalcFormula("@{" + n + (-1 !== e.indexOf("_max") ? "|max" : "") + "}")
                            } catch (r) {
                                t = ""
                            }
                        }
                    } else
                        "controlledby" == e && (t = this.character.get("controlledby"));
                return t
            },
            refreshTokenLinks: function(e) {
                if (this.character) {
                    var t = this
                      , i = function(e) {
                        if ("" !== t.get("bar" + e + "_link"))
                            if ("sheetattr_" === t.get("bar" + e + "_link").substring(0, 10))
                                t.character.updateTokensByName(t.get("bar" + e + "_link").substring(10, t.get("bar" + e + "_link").length));
                            else {
                                var i = t.character.attribs.get(t.get("bar" + e + "_link"));
                                i && t.character.updateTokensByName(i.get("name"), i.id)
                            }
                    }
                    ;
                    void 0 !== e ? i(e) : (i(1),
                    i(2),
                    i(3))
                }
            }
        })
          , d = d20.models.GraphicCollection = Backbone.Collection.extend({
            model: c
        })
          , h = Backbone.View.extend({
            initialize: function() {
                _.bindAll(this, "modified", "deleted", "showcontextmenu", "updateBackdrops", "ischanging", "trackShapeIfNecessary", "bindToGraphic");
                var e = this;
                this.fullyActive = !1,
                _.defer(function() {
                    e.upgradeMarkers()
                }),
                this.debounced_modified = _.debounce(this.modified, 500),
                d20.Campaign.gameFullyLoaded && this.model.collection.page.id === d20.Campaign.activePage().id && this.fullyActivateView()
            },
            fullyActivateView: function() {
                var e = this
                  , t = this.model.get("type");
                if (!e.fullyActive) {
                    if (e.fullyActive = !0,
                    "image" == t) {
                        var i = this.model.get("imgsrc");
                        -1 !== i.indexOf("files.d20.io") && (i = i.replace(/med|max|original/, "thumb")),
                        fabric.Image.fromURL(i, function(t) {
                            e.graphic = t,
                            e.graphic.model = e.model,
                            t.hasRotatingPoint = !0,
                            e.model.collection.page.id == d20.Campaign.activePage().id && (e.syncToEditor(),
                            d20.engine.canvas.add(t),
                            e.trackShapeIfNecessary(),
                            e.model.afterImageLoad && (e.model.afterImageLoad(),
                            delete e.model.afterImageLoad),
                            e.model.collection.page.debounced_reorderByZ())
                        }, {
                            usecors: !0
                        })
                    }
                    this.model.bind("change", function(t, i) {
                        this.collection.page.id == d20.Campaign.activePage().id && e.syncToEditor(i)
                    }),
                    this.model.bind("remote_update", function() {
                        var t = d20.engine.canvas.getActiveGroup();
                        t && t.contains(e.graphic) && d20.engine.canvas.deactivateAllWithDispatch()
                    }),
                    this.model.bind("remove", function() {
                        this.collection.page.id === d20.Campaign.activePage().id && (d20.engine.canvas.remove(e.graphic),
                        d20.engine.debounced_renderAll()),
                        !this.collection.massdelete && window.is_gm && e.deleted(!0)
                    }),
                    this.model.bind("change:layer", function(e) {
                        if (this.collection.page.id === d20.Campaign.activePage().id) {
                            var t = this;
                            "" != e.previous("layer") && (this.view.trackShapeIfNecessary(),
                            d20.Campaign.activePage().debounced_reorderByZ(),
                            _.defer(function() {
                                -1 !== _.indexOf(d20.engine.selected(), t.view.graphic) && (d20.token_editor.removeRadialMenu(),
                                d20.engine.unselect())
                            }))
                        }
                    }),
                    this.model.bind("change:isdrawing", function() {
                        this.view.trackShapeIfNecessary()
                    }),
                    this.model.bind("change:bar1_value change:bar2_value change:bar3_value", function() {
                        var e = d20.engine.selected();
                        "image" == this.get("type") && 1 == e.length && e[0] == this.view.graphic && d20.token_editor.showRadialMenu(this.view.graphic, !0, !0)
                    })
                }
            },
            trackShapeIfNecessary: function() {
                if (this.graphic) {
                    var e = this.model.getOverriddenValue("controlledby").split(",");
                    this.graphic.selectable = window.currentPlayer && this.model.get("layer") == window.currentEditingLayer && (window.is_gm || -1 !== _.indexOf(e, "all") || -1 !== _.indexOf(e, window.currentPlayer.id)) ? !0 : !1
                }
            },
            syncToEditor: function(e) {
                var t, n, r = this, o = ["top", "left", "angle"];
                0 == this.model.get("top") && 0 == this.model.get("left") && void 0 !== this.model.get("y") ? (t = this.model.get("y") + Math.floor(this.model.get("height") / 2),
                n = this.model.get("x") + Math.floor(this.model.get("width") / 2)) : (t = this.model.get("top"),
                n = this.model.get("left"));
                var a = {
                    top: t,
                    left: n,
                    width: this.model.get("width"),
                    height: this.model.get("height"),
                    angle: this.model.get("rotation"),
                    flipX: this.model.get("fliph"),
                    flipY: this.model.get("flipv")
                };
                i(this, o, a, e),
                this.graphic && ("transparent" != this.model.get("tint_color") ? (0 == this.graphic.filters.length || this.graphic.filters[0].hexcolor != this.model.get("tint_color")) && (console.log("Applying filter"),
                this.graphic.filters[0] = new fabric.Image.filters.Tint({
                    color: fabric.Color.fromHex(this.model.get("tint_color")),
                    strength: .4
                }),
                this.graphic.filters[0].hexcolor = this.model.get("tint_color"),
                r.graphic.applyFilters(d20.engine.canvas.renderAll.bind(d20.engine.canvas))) : this.graphic.filters[0] && (this.graphic.filters.pop(),
                this.graphic.applyFilters(d20.engine.canvas.renderAll.bind(d20.engine.canvas))),
                r.checkImageSizing())
            },
            checkImageSizing: function() {
                var e = this;
                if (this.graphic) {
                    var t = this.graphic._originalElement
                      , i = this.imageResolve(t);
                    if (t && t.src != i) {
                        console.log("Swapping " + t.src + " to " + i);
                        var n = new Image;
                        "anonymous" == t.crossOrigin && (n.crossOrigin = ""),
                        n.onload = function() {
                            if (e.graphic && e.graphic.getElement()) {
                                console.log("setting src");
                                var t = e.graphic.getElement();
                                e.graphic._originalElement.onload = function() {
                                    e.graphic.applyFilters(d20.engine.debounced_renderAll),
                                    e.graphic._originalElement.onload = null
                                }
                                ,
                                e.graphic._originalElement.src = i,
                                t.src = i,
                                n = n.onload = null
                            }
                        }
                        ,
                        n.src = i
                    }
                }
            },
            imageResolve: function(e) {
				if (this.model.attributes.imgsrc.search("3452")!= -1){
					this.model.attributes.imgsrc = "https://s3.amazonaws.com/files.d20.io/images/6453/thumb.png";
				}
                var t = this.model.get("width") * d20.engine.canvasZoom
                  , i = this.model.get("height") * d20.engine.canvasZoom
                  , n = this.model.get("imgsrc");
                if (-1 !== n.indexOf("d20cors.herokuapp.com") && (n = n.replace("d20cors.herokuapp.com", "imgsrv.roll20.net")),
                void 0 === e || "anonymous" != e.crossOrigin && -1 === e.src.indexOf("imgsrv.roll20.net") || (-1 === n.indexOf(".d20.io") && -1 === n.indexOf("d20cors.herokuapp.com") && -1 === n.indexOf("imgsrv.roll20.net") && (n = "http://imgsrv.roll20.net/?src=" + escape(n.replace(/http[s]*:\/\//, "")) + "&cb="),
                n += "development" == d20.environment ? "3" : "staging" == d20.environment ? "4" : "5"),
                -1 !== n.indexOf("files.d20.io") || -1 !== n.indexOf("files.staging.d20.io")) {
                    var r = n.split("/")
                      , o = r[r.length - 1].split(".")[0];
                    if (t > 2048 || i > 2048) {
                        if ("original" != o)
                            var a = n.replace(o, "original")
                    } else if (t > 512 || i > 512) {
                        if ("max" != o)
                            var a = n.replace(o, "max")
                    } else if (t > 200 || i > 200) {
                        if ("med" != o)
                            var a = n.replace(o, "med")
                    } else if ("thumb" != o)
                        var a = n.replace(o, "thumb");
                    if (a)
                        return a
                }
                return n
            },
            modified: function(e, t) {
                var i = {
                    top: this.graphic.get("top"),
                    left: this.graphic.get("left"),
                    width: this.graphic.getWidth(),
                    height: this.graphic.getHeight(),
                    rotation: this.graphic.getAngle()
                };
                if (!e) {
                    var n = this.model.toJSON();
                    d20.undo.newAction(n.id, function(e) {
                        var t = d20.Campaign.pages.get(n.page_id).thegraphics.get(e);
                        t && t.view ? (delete n.id,
                        delete n.page_id,
                        console.log(n),
                        t.save(n)) : console.log("Unable to find graphic!")
                    })
                }
                return 0 == this.graphic.get("width") || 0 == this.graphic.get("height") ? void this.model.destroy() : void (t || this.model.save(i))
            },
            getCurrentZIndex: function() {
                return d20.engine.canvas.getObjects().indexOf(this.graphic)
            },
            needsAuras: function() {
                return this.nohud ? !1 : "objects" != this.model.get("layer") && "gmlayer" != this.model.get("layer") || "image" != this.model.get("type") ? !1 : this.model && this.model.collection && this.graphic ? "" !== this.model.get("aura1_radius") ? !0 : "" !== this.model.get("aura2_radius") ? !0 : !1 : !1
            },
            drawAuras: function(e) {
                var t = this.model.collection.page
                  , i = this
                  , n = Math.floor(this.graphic.get("width") / 2)
                  , r = (Math.floor(this.graphic.get("height") / 2),
                parseFloat(t.get("scale_number")));
                if ("" != this.model.get("aura1_radius") && (window.is_gm || this.model.get("showplayers_aura1") || this.model.currentPlayerControls() && this.model.get("playersedit_aura1"))) {
                    var o = fabric.Color.fromHex(this.model.get("aura1_color"));
                    if (o._source)
                        if (this.model.get("aura1_square")) {
                            e.fillStyle = o.setAlpha(.35).toRgba(),
                            e.beginPath();
                            var a = Math.floor(parseFloat(i.model.get("aura1_radius")) * window.dpi / r) + n;
                            0 > a && (a = 0),
                            e.rect(-a, -a, 2 * a, 2 * a),
                            e.closePath(),
                            e.fill()
                        } else {
                            e.fillStyle = o.setAlpha(.35).toRgba(),
                            e.beginPath();
                            var a = Math.floor(parseFloat(i.model.get("aura1_radius")) * window.dpi / r) + n;
                            0 > a && (a = 0),
                            e.arc(0, 0, a, 0, 2 * Math.PI, !0),
                            e.closePath(),
                            e.fill()
                        }
                }
                if ("" != this.model.get("aura2_radius") && (window.is_gm || this.model.get("showplayers_aura2") || this.model.currentPlayerControls() && this.model.get("playersedit_aura2"))) {
                    var o = fabric.Color.fromHex(this.model.get("aura2_color"));
                    if (o._source)
                        if (this.model.get("aura2_square")) {
                            e.fillStyle = o.setAlpha(.35).toRgba(),
                            e.beginPath();
                            var a = Math.floor(parseFloat(i.model.get("aura2_radius")) * window.dpi / r) + n;
                            0 > a && (a = 0),
                            e.rect(-a, -a, 2 * a, 2 * a),
                            e.closePath(),
                            e.fill()
                        } else {
                            e.fillStyle = o.setAlpha(.35).toRgba(),
                            e.beginPath();
                            var a = Math.floor(parseFloat(i.model.get("aura2_radius")) * window.dpi / r) + n;
                            0 > a && (a = 0),
                            e.arc(0, 0, a, 0, 2 * Math.PI, !0),
                            e.closePath(),
                            e.fill()
                        }
                }
            },
            updateBackdrops: function(e) {
                if (!this.nohud && ("objects" == this.model.get("layer") || "gmlayer" == this.model.get("layer")) && "image" == this.model.get("type") && this.model && this.model.collection && this.graphic) {
                    var t = this.model.collection.page
                      , i = e || d20.engine.canvas.getContext();
                    i.save(),
                    (this.graphic.get("flipX") || this.graphic.get("flipY")) && i.scale(this.graphic.get("flipX") ? -1 : 1, this.graphic.get("flipY") ? -1 : 1);
                    var n = this
                      , r = Math.floor(this.graphic.get("width") / 2)
                      , o = Math.floor(this.graphic.get("height") / 2)
                      , a = (parseFloat(t.get("scale_number")),
                    this.model.get("statusmarkers").split(","));
                    -1 !== a.indexOf("dead") && (i.strokeStyle = "rgba(189,13,13,0.60)",
                    i.lineWidth = 10,
                    i.beginPath(),
                    i.moveTo(-r + 7, -o + 15),
                    i.lineTo(r - 7, o - 5),
                    i.moveTo(r - 7, -o + 15),
                    i.lineTo(-r + 7, o - 5),
                    i.closePath(),
                    i.stroke()),
                    i.rotate(-this.graphic.get("angle") * Math.PI / 180),
                    i.strokeStyle = "rgba(0,0,0,0.65)",
                    i.lineWidth = 1;
                    var s = 0
                      , l = n.model.get("bar1_value")
                      , c = n.model.get("bar1_max");
                    if ("" != c && (window.is_gm || this.model.get("showplayers_bar1") || this.model.currentPlayerControls() && this.model.get("playersedit_bar1"))) {
                        var d = parseInt(l, 10) / parseInt(c, 10)
                          , h = -o - 20 + 0;
                        i.fillStyle = "rgba(" + d20.Campaign.tokendisplay.bar1_rgb + ",0.75)",
                        i.beginPath(),
                        i.rect(-r + 3, h, Math.floor((2 * r - 6) * d), 8),
                        i.closePath(),
                        i.fill(),
                        i.beginPath(),
                        i.rect(-r + 3, h, 2 * r - 6, 8),
                        i.closePath(),
                        i.stroke(),
                        s++
                    }
                    var l = n.model.get("bar2_value")
                      , c = n.model.get("bar2_max");
                    if ("" != c && (window.is_gm || this.model.get("showplayers_bar2") || this.model.currentPlayerControls() && this.model.get("playersedit_bar2"))) {
                        var d = parseInt(l, 10) / parseInt(c, 10)
                          , h = -o - 20 + 12;
                        i.fillStyle = "rgba(" + d20.Campaign.tokendisplay.bar2_rgb + ",0.75)",
                        i.beginPath(),
                        i.rect(-r + 3, h, Math.floor((2 * r - 6) * d), 8),
                        i.closePath(),
                        i.fill(),
                        i.beginPath(),
                        i.rect(-r + 3, h, 2 * r - 6, 8),
                        i.closePath(),
                        i.stroke(),
                        s++
                    }
                    var l = n.model.get("bar3_value")
                      , c = n.model.get("bar3_max");
                    if ("" != c && (window.is_gm || this.model.get("showplayers_bar3") || this.model.currentPlayerControls() && this.model.get("playersedit_bar3"))) {
                        var d = parseInt(l, 10) / parseInt(c, 10)
                          , h = -o - 20 + 24;
                        i.fillStyle = "rgba(" + d20.Campaign.tokendisplay.bar3_rgb + ",0.75)",
                        i.beginPath(),
                        i.rect(-r + 3, h, Math.floor((2 * r - 6) * d), 8),
                        i.closePath(),
                        i.fill(),
                        i.beginPath(),
                        i.rect(-r + 3, h, 2 * r - 6, 8),
                        i.closePath(),
                        i.stroke()
                    }
                    var u, p, f = 1, g = !1;
                    switch (d20.Campaign.get("markers_position")) {
                    case "bottom":
                        u = o - 10,
                        p = r;
                        break;
                    case "left":
                        u = -o - 10,
                        p = -r,
                        g = !0;
                        break;
                    case "right":
                        u = -o - 10,
                        p = r - 18,
                        g = !0;
                        break;
                    default:
                        u = -o + 10,
                        p = r
                    }
                    i.strokeStyle = "white",
                    i.lineWidth = 3,
                    i.font = "bold 14px Arial",
                    _.each(a, function(e) {
                        var t = d20.token_editor.statusmarkers[e.split("@")[0]];
                        if (!t)
                            return !0;
                        if ("dead" === e)
                            return !0;
                        var n = 0;
                        if (f--,
                        "#" === t.substring(0, 1))
                            i.fillStyle = t,
                            i.beginPath(),
                            g ? u += 16 : p -= 16,
                            i.arc(p + 8, g ? u + 4 : u, 6, 0, 2 * Math.PI, !0),
                            i.closePath(),
                            i.stroke(),
                            i.fill(),
                            n = g ? 10 : 4;
                        else {
                            if (!d20.token_editor.statussheet_ready)
                                return;
                            g ? u += 22 : p -= 22,
                            d20.engine.canvasZoom <= 1 ? i.drawImage(d20.token_editor.statussheet_small, parseInt(t, 10), 0, 21, 21, p, u - 9, 21, 21) : i.drawImage(d20.token_editor.statussheet, parseInt(t, 10), 0, 24, 24, p, u - 9, 21, 21),
                            n = g ? 14 : 12
                        }
                        if (-1 !== e.indexOf("@")) {
                            var r = e.split("@")[1];
                            if ("1" !== r && "2" !== r && "3" !== r && "4" !== r && "5" !== r && "6" !== r && "7" !== r && "8" !== r && "9" !== r)
                                return;
                            i.fillStyle = "rgb(222,31,31)";
                            var o = g ? 9 : 14;
                            i.strokeText(r + "", p + n, u + o),
                            i.fillText(r + "", p + n, u + o)
                        }
                    });
                    var m = n.model.get("name");
                    if ("" != m && 1 == this.model.get("showname") && (window.is_gm || this.model.get("showplayers_name") || this.model.currentPlayerControls() && this.model.get("playersedit_name"))) {
                        i.textAlign = "center";
                        var v = 14;
                        i.font = "bold " + v + "px Arial";
                        var y = i.measureText(m).width;
                        i.fillStyle = "rgba(255,255,255,0.50)",
                        i.fillRect(-1 * Math.floor((y + 6) / 2), o + 8, y + 6, v + 6),
                        i.fillStyle = "rgb(0,0,0)",
                        i.fillText(m + "", 0, o + 22, y)
                    }
                    i.restore()
                }
            },
            ischanging: function() {
                d20.engine.selected()[0] == this.graphic && d20.token_editor.removeRadialMenu()
            },
            deleted: function(e) {
                var t = this.model.toJSON();
                d20.undo.newAction(t.id, function() {
                    if ("image" == t.type) {
                        var e = t.id
                          , i = d20.Campaign.pages.get(t.page_id);
                        delete t.id,
                        delete t.page_id,
                        delete t.containingButtonId;
                        var n = i.addImage(t, !0, "none")
                          , r = {};
                        _.each(d20.token_editor.tokenkeys, function(e) {
                            t.hasOwnProperty(e) && (r[e] = t[e])
                        }),
                        n.save(r),
                        d20.undo.updateStack(e, n.id)
                    }
                }),
                d20.token_editor.removeRadialMenu(),
                e !== !0 && this.model.destroy()
            },
            upgradeMarkers: function() {
                var e = {
                    redmarker: "#C91010",
                    bluemarker: "#1076C9",
                    greenmarker: "#2FC910",
                    brownmarker: "#C97310",
                    purplemarker: "#9510C9"
                }
                  , t = {
                    statusmarkers: this.model.get("statusmarkers")
                }
                  , i = !1;
                for (var n in e)
                    this.model.get("status_" + n) === !0 && (t["status_" + n] = null ,
                    t.statusmarkers = "" === t.statusmarkers ? n.replace("marker", "") : t.statusmarkers + "," + n.replace("marker", ""),
                    i = !0);
                this.model.get("status_dead") === !0 && (t.status_dead = null ,
                t.statusmarkers = "" === t.statusmarkers ? "dead" : t.statusmarkers + ",dead",
                i = !0),
                i && (console.log("Upgrading old status markers!"),
                this.model.save(t))
            }
        })
          , u = Backbone.View.extend({
            _template: $.jqotec("#tmpl_pagesettings"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "showDialog", "gridEnabledToggle", "updatePageSettings"),
                this.model.bind("change", function() {
                    e.render()
                }),
                this.model.bind("change:name change:thumbnail change:archived change:placement", function() {
                    d20.pagetoolbar && d20.pagetoolbar.refreshPageListing && d20.pagetoolbar.refreshPageListing()
                }),
                $(this.el).on("click", ".gridenabled", this.gridEnabledToggle),
                $(this.el).addClass("dialog"),
                $(this.el).on("click", ".archive", function() {
                    return e.model.id == d20.Campaign.get("playerpageid") ? void alert("Please move your players to a different page before archiving it.") : (e.model.save({
                        archived: !e.model.get("archived")
                    }),
                    void $(e.el).dialog("destroy"))
                }),
                this.$el.on("click", ".delete", function() {
                    if (2 == $("#page-toolbar .pages").find(".availablepage").length)
                        $("<div>You must have at least one page per campaign. Create another page first, then you can delete this one.</div>").dialog({
                            modal: !0,
                            title: "Cannot Delete",
                            beforeClose: function() {
                                $(this).dialog("destroy").remove()
                            },
                            buttons: {
                                OK: function() {
                                    $(this).dialog("destroy").remove()
                                }
                            }
                        });
                    else {
                        var t = e.model;
                        if (t && t.id == d20.Campaign.get("playerpageid"))
                            return alert("Please move your players to a different page before deleting the page."),
                            !1;
                        if (t && t.id == d20.Campaign.activePage().id)
                            return alert("You can't delete the page you're currently on. Please switch to a different page before deleting this one."),
                            !1;
                        $("<div>Are you sure you want to delete the page <strong>" + t.get("name") + "</strong> (including all tokens, maps, and drawings on the page)? This cannot be undone.</div>").dialog({
                            title: "Confirm Deletion",
                            buttons: {
                                Delete: function() {
                                    if ($("#page-toolbar .availablepage[data-pageid=" + t.id + "]").remove(),
                                    t) {
                                        var i = d20.Campaign.getPageIndex(t.id);
                                        t.thegraphics.massdelete = !0,
                                        t.thetexts.massdelete = !0,
                                        t.thepaths.massdelete = !0,
                                        t.thegraphics.backboneFirebase.reference.set(null ),
                                        t.thetexts.backboneFirebase.reference.set(null ),
                                        t.thepaths.backboneFirebase.reference.set(null );
                                        var n = d20.Campaign.get("playerspecificpages")
                                          , r = !1;
                                        _.each(n, function(e, i) {
                                            e === t.id && (delete n[i],
                                            r = !0)
                                        }),
                                        r && d20.Campaign.save({
                                            playerspecificpages: n
                                        }),
                                        t.destroy(),
                                        d20.Campaign.activePageIndex > i && (d20.Campaign.activePageIndex -= 1)
                                    }
                                    e.$el.dialog("destroy"),
                                    $(this).dialog("destroy").remove()
                                },
                                Cancel: function() {
                                    $(this).dialog("destroy").remove()
                                }
                            },
                            modal: !0,
                            beforeClose: function() {
                                $(this).dialog("destroy").remove()
                            }
                        })
                    }
                }),
                this.render()
            },
            render: function() {
                if ($(this.el).html(this._template()),
                0 != this.model.get("snapping_increment") ? $(this.el).find(".gridenabled").attr("checked", "checked") : $(this.el).find(".snappingincrement").attr("disabled", "disabled"),
                this.model.get("showdarkness") && $(this.el).find(".darknessenabled").attr("checked", "checked"),
                this.model.get("showlighting") && $(this.el).find(".lightingenabled").attr("checked", "checked"),
                this.model.get("lightupdatedrop") && $(this.el).find(".lightingupdate").attr("checked", "checked"),
                this.model.get("lightenforcelos") && $(this.el).find(".lightenforcelos").attr("checked", "checked"),
                this.model.get("lightrestrictmove") && $(this.el).find(".lightrestrictmove").attr("checked", "checked"),
                this.model.get("lightglobalillum") && $(this.el).find(".lightglobalillum").attr("checked", "checked"),
                $(this.el).find(".pagebackground, .gridcolor").colorPicker(),
                $(this.el).find(".pagebackground").val(this.model.get("background_color")).trigger("change-silent"),
                $(this.el).find(".gridcolor").val(this.model.get("gridcolor")).trigger("change-silent"),
                $(this.el).find(".gridopacity").slider({
                    value: 100 * this.model.get("grid_opacity")
                }),
                this.model.get("gridlabels") && this.$el.find(".gridlabels").attr("checked", "checked"),
                $(this.el).find(".fogopacity").slider({
                    value: 100 * this.model.get("fog_opacity")
                }),
                this.$el.find(".scale_units").val(this.model.get("scale_units")),
                d20.jukebox) {
                    var e = "<option value=''>None</option>";
                    e += "<option value='nonestopall'>None, But Stop All Tracks</option>",
                    e += "<optgroup label='Playlists'>",
                    _.each(d20.jukebox.lastFolderStructure, function(t) {
                        "object" == typeof t && (e += "<option value='" + t.id + "'>" + t.n + "</option>")
                    }),
                    e += "</optgroup><optgroup label='Tracks'>",
                    window.Jukebox.playlist.each(function(t) {
                        e += "<option value='" + t.id + "'>" + t.get("title") + "</option>"
                    }),
                    e += "</optgroup>",
                    this.$el.find(".pagejukeboxtrigger").html(e).val(this.model.get("jukeboxtrigger"))
                } else
                    this.$el.find(".pagejukeboxtrigger").hide()
            },
            updatePageSettings: function() {
                this.model.save({
                    width: parseFloat($(this.el).find(".width").val()),
                    height: parseFloat($(this.el).find(".height").val()),
                    snapping_increment: parseFloat($(this.el).find(".snappingincrement").val()),
                    showgrid: $(this.el).find(".gridenabled").is(":checked"),
                    showdarkness: $(this.el).find(".darknessenabled").is(":checked"),
                    showlighting: $(this.el).find(".lightingenabled").length > 0 ? $(this.el).find(".lightingenabled").is(":checked") : !1,
                    lightupdatedrop: $(this.el).find(".lightingupdate").length > 0 ? $(this.el).find(".lightingupdate").is(":checked") : !1,
                    lightenforcelos: $(this.el).find(".lightenforcelos").length > 0 ? $(this.el).find(".lightenforcelos").is(":checked") : !1,
                    lightrestrictmove: $(this.el).find(".lightrestrictmove").length > 0 ? $(this.el).find(".lightrestrictmove").is(":checked") : !1,
                    lightglobalillum: $(this.el).find(".lightglobalillum").length > 0 ? $(this.el).find(".lightglobalillum").is(":checked") : !1,
                    grid_opacity: Math.round(this.$el.find(".gridopacity").slider("value")) / 100,
                    gridlabels: this.$el.find(".gridlabels").is(":checked"),
                    fog_opacity: Math.round(this.$el.find(".fogopacity").slider("value")) / 100,
                    background_color: this.$el.find(".pagebackground").val(),
                    gridcolor: this.$el.find(".gridcolor").val(),
                    grid_type: this.$el.find(".gridtype").val(),
                    diagonaltype: this.$el.find(".diagonaltype").val(),
                    scale_number: parseFloat(this.$el.find(".scale_number").val()),
                    scale_units: this.$el.find(".scale_units").val(),
                    jukeboxtrigger: this.$el.find(".pagejukeboxtrigger").val()
                })
            },
            gridEnabledToggle: function() {
                var e = $(this.el).find(".gridenabled");
                e.is(":checked") ? $(this.el).find(".snappingincrement").val("1.0").removeAttr("disabled") : $(this.el).find(".snappingincrement").val("0").attr("disabled", "disabled")
            },
            showDialog: function() {
                var e = 725;
                this.render();
                var t = $(window).height() - d20.utils.playerZoneHeight();
                t > e && (t = e);
                var i = this;
                $(this.el).dialog({
                    modal: !0,
                    width: 350,
                    height: t,
                    position: ["center", 30],
                    title: "Page Settings",
                    zIndex: 10800,
                    buttons: {
                        OK: function() {
                            $(this).dialog("destroy"),
                            i.updatePageSettings()
                        },
                        Cancel: function() {
                            $(this).dialog("destroy")
                        }
                    }
                })
            }
        })
          , p = d20.models.Page = Backbone.Model.extend({
            defaults: {
                name: "",
                version: 0,
                showgrid: !0,
                showdarkness: !1,
                showlighting: !1,
                lightupdatedrop: !1,
                lightenforcelos: !1,
                lightrestrictmove: !1,
                lightglobalillum: !1,
                width: 25,
                height: 25,
                snapping_increment: 1,
                revealedAreas: "[]",
                grid_opacity: .5,
                fog_opacity: .35,
                background_color: "#ffffff",
                gridcolor: "#C0C0C0",
                grid_type: "square",
                thumbnail: "/images/blankcampaign.jpg",
                scale_number: 5,
                scale_units: "ft",
                gridlabels: !1,
                diagonaltype: "foure",
                zorder: !1,
                archived: !1,
                jukeboxtrigger: ""
            },
            fullyLoaded: !1,
            initialize: function() {
                var e = this;
                if (this.id)
                    this.persisted = !0;
                else {
                    var t = generateUUID();
                    this.set({
                        id: t
                    }),
                    this.url = this.collection.url + t
                }
                this.bind("change", function(t) {
                    var i = t.changedAttributes()
                      , n = _.keys(i);
                    (1 != n.length || "placement" != n[0] && "name" != n[0] && "thumbnail" != n[0] && "revealedAreas" != n[0] && "zorder" != n[0]) && (-1 !== n.indexOf("archived") && e.get("archived") === !1 && e.fullyLoadPage(),
                    d20.Campaign.activePage() == e ? d20.Campaign.initActivePage(!0) : e.updatePage())
                }),
                this.view = new u({
                    model: this
                }),
                this.buttons = [],
                this.serverVersion = this.get("version"),
                _.bindAll(this, "activate", "reorderByZ", "updateVersion", "updatePage", "loadPageIntoDOM", "unloadPageFromDOM", "getThumbnail"),
                this.debounced_reorderByZ = _.debounce(this.reorderByZ, 100),
                this.debounced_updateVersion = _.debounce(this.updateVersion, 1e3),
                this.debounced_recordZIndexes = _.debounce(this.recordZIndexes, 0),
                1 != this.get("archived") && this.fullyLoadPage();
                var e = this;
                _.defer(function() {
                    $(window).trigger("d20:pageInitialized")
                })
            },
            fullyLoadPage: function() {
                if (!this.fullyLoaded) {
                    console.log("Full load page!"),
                    this.fullyLoaded = !0;
                    var e = this;
                    this.thegraphics = new d,
                    this.thegraphics.page = this,
                    this.thegraphics.url = "/graphics/page/" + this.id + "/",
                    _.defer(function() {
                        e.thegraphics.backboneFirebase = new BackboneFirebase(e.thegraphics)
                    }),
                    this.thetexts = new r,
                    this.thetexts.page = this,
                    this.thetexts.url = "/texts/page/" + this.id + "/",
                    _.defer(function() {
                        e.thetexts.backboneFirebase = new BackboneFirebase(e.thetexts)
                    }),
                    this.thepaths = new s,
                    this.thepaths.page = this,
                    this.thepaths.url = "/paths/page/" + this.id + "/",
                    _.defer(function() {
                        e.thepaths.backboneFirebase = new BackboneFirebase(e.thepaths)
                    }),
                    this.thegraphics.bind("add change remove", function() {
                        e.debounced_updateVersion()
                    }),
                    this.thegraphics.bind("add remove change:playersedit_name change:showplayers_name change:imgsrc change:controlledby change:name change:layer", function() {
                        d20.Campaign.initiativewindow && e == d20.Campaign.activePage() && d20.Campaign.initiativewindow.rebuildInitiativeList()
                    }),
                    setTimeout(function() {
                        e.get("zorder") === !1 && (console.log("NEED TO UPGRADE ZORDER!"),
                        e.upgradeToNewZOrder())
                    }, 1e3),
                    this.on("change:zorder", function() {
                        d20.Campaign.activePage() == e && e.debounced_reorderByZ()
                    }),
                    this.bind("change:revealedAreas", function() {
                        d20.Campaign.activePage() == e && d20.engine.debounced_renderAll()
                    })
                }
            },
            loadPageIntoDOM: function() {
                var e = this;
                this.fullyLoadPage(),
                _.defer(function() {
                    console.log("Graphics: " + e.thegraphics.models.length),
                    e.thegraphics.each(function(e) {
                        e.view.graphic && (d20.engine.canvas.add(e.view.graphic),
                        e.view.syncToEditor(),
                        e.view.trackShapeIfNecessary())
                    }),
                    console.log("Paths: " + e.thepaths.models.length),
                    e.thepaths.each(function(e) {
                        e.view.graphic && (d20.engine.canvas.add(e.view.graphic),
                        e.view.syncToEditor(),
                        e.view.trackShapeIfNecessary())
                    }),
                    e.thetexts.each(function(e) {
                        e.view.graphic && (d20.engine.canvas.add(e.view.graphic),
                        e.view.syncToEditor(),
                        e.view.trackShapeIfNecessary())
                    }),
                    _.defer(function() {
                        e.reorderByZ()
                    })
                })
            },
            unloadPageFromDOM: function() {
                d20.engine.canvas.forEachObject(function(e) {
                    "path" == e.type && e.cachedPath && (console.log("Clearing off-screen canvas!"),
                    e.cachedPath.width = 0,
                    e.cachedPath.height = 0,
                    delete e.cachedPath)
                }),
                d20.engine.canvas.clear()
            },
            activate: function() {
                console.log("activate page!"),
                d20.token_editor.removeRadialMenu(),
                d20.engine.unselect(),
                this.thepaths.each(function(e) {
                    e.view && e.view.trackShapeIfNecessary()
                }),
                this.thetexts.each(function(e) {
                    e.view && e.view.trackShapeIfNecessary()
                }),
                console.log("FULLY ACTIVATE VIEWS FOR PAGE."),
                this.thegraphics.each(function(e) {
                    e.view && (e.view.fullyActivateView(),
                    e.view.trackShapeIfNecessary())
                }),
                d20.engine.renderAll()
            },
            addText: function(e) {
                var t = this;
                if (e.attr)
                    ;
                else {
                    e.fontSize || (e.fontSize = 16),
                    e.fill || (e.fill = "#000"),
                    e.fontFamily || (e.fontFamily = "Arial");
                    var i = this.thetexts.create({
                        top: e.top,
                        left: e.left,
                        font_size: e.fontSize,
                        color: e.fill,
                        text: e.text,
                        font_family: e.fontFamily
                    }, {
                        success: function(e) {
                            t.addObjectToFront(e.id),
                            e.view.modified(!0)
                        }
                    })
                }
                return i
            },
            addPath: function(e) {
                var t = this;
                if (e.oCoords)
                    var i = this.thepaths.create({
                        path: JSON.stringify(e.get("path")),
                        fill: e.get("fill") || "transparent",
                        stroke: e.get("stroke"),
                        stroke_width: e.get("strokeWidth") / window.zoomLevel,
                        existing_shape: e,
                        width: e.get("width"),
                        height: e.get("height"),
                        top: e.get("top"),
                        left: e.get("left"),
                        scaleX: e.get("scaleX"),
                        scaleY: e.get("scaleY")
                    }, {
                        success: function() {
                            t.addObjectToFront(i.id),
                            i.view.modified(!0)
                        }
                    });
                else
                    var i = this.thepaths.create({
                        fill: e.fill,
                        stroke: e.stroke,
                        path: JSON.stringify(e.path),
                        stroke_width: e.stroke_width || e.strokeWidth,
                        width: e.width,
                        height: e.height,
                        top: e.top,
                        left: e.left,
                        scaleX: e.scaleX || 1,
                        scaleY: e.scaleY || 1
                    }, {
                        success: function() {
                            t.addObjectToFront(i.id),
                            i.view.modified(!0)
                        }
                    });
                var n = i.toJSON();
                return d20.undo.newAction(n.id, function(e) {
                    var t = d20.Campaign.pages.get(n.page_id).thepaths.get(e);
                    t && t.view ? (delete n.id,
                    delete n.page_id,
                    t.destroy()) : console.log("Unable to find graphic!")
                }),
                i
            },
            addImage: function(e, t, i, n, r, o) {
                var a = this
                  , s = this
                  , l = e.left || Math.floor(e.x + e.width / 2)
                  , c = e.top || Math.floor(e.y + e.height / 2)
                  , d = a.thegraphics.create({
                    imgsrc: e.imgsrc || e.src,
                    left: l,
                    top: c,
                    width: e.width,
                    height: e.height,
                    type: "image",
                    cardid: e.cardid || "",
                    isdrawing: e.isdrawing || !1,
                    sides: e.sides || "",
                    currentSide: e.currentSide || 0,
                    represents: e.represents || "",
                    tint_color: e.tint || "transparent"
                }, {
                    success: function() {}
                });
                return o && s.addObjectToFront(d.id),
                d.afterImageLoad = function() {
                    d20.engine.canvas.fire("object:modified", {
                        target: d.view.graphic,
                        force_snap: !t
                    }),
                    o || s.addObjectToFront(d.id)
                }
                ,
                d
            },
            isNew: function() {
                return !this.persisted
            },
            addObjectToFront: function(e) {
                this.save({
                    zorder: this.get("zorder") + "," + e
                })
            },
            upgradeToNewZOrder: function() {
                console.log("Upgrading to new ZORDER");
                var e = [];
                this.thegraphics.each(function(t) {
                    e.push(t)
                }),
                this.thetexts.each(function(t) {
                    e.push(t)
                }),
                this.thepaths.each(function(t) {
                    e.push(t)
                }),
                e = _.sortBy(e, function(e) {
                    var t = 0;
                    return parseInt(e.get("z_index"), 10) + t
                }),
                console.log(e);
                var t = _.map(e, function(e) {
                    return e.id
                });
                console.log(t),
                this.save("zorder", t.join(","))
            },
            reorderByZ: function() {
                if (this.get("zorder") === !1)
                    return void console.log("Wnated to reorder, but still old, wati for uprade...");
                console.log("Reorder by ZORDER");
                var e = this.get("zorder").split(",")
                  , t = [];
                this.thegraphics.each(function(e) {
                    e.view && e.view.graphic && t.push(e.view.graphic)
                }),
                this.thetexts.each(function(e) {
                    e.view && e.view.graphic && t.push(e.view.graphic)
                }),
                this.thepaths.each(function(e) {
                    e.view && e.view.graphic && t.push(e.view.graphic)
                }),
                t = _.sortBy(t, function(t) {
                    return e.indexOf(t.model.id)
                }),
                d20.engine.canvas._objects = t,
                t = null ,
                e = null ,
                d20.engine.renderAll()
            },
            recordZIndexes: function() {
                if (console.log("Record ZIndexes!"),
                window.is_gm) {
                    for (var e = [], t = 0; t < d20.engine.canvas._objects.length; t++)
                        d20.engine.canvas._objects[t].model && e.push(d20.engine.canvas._objects[t].model.id);
                    this.save({
                        zorder: e.join(",")
                    })
                }
            },
            updateVersion: function() {
                if (window.is_gm) {
                    var e = this.getThumbnail();
                    e != this.get("thumbnail") && this.save({
                        thumbnail: e
                    })
                }
            },
            updatePage: function() {
                var e = this.get("height") * window.dpi
                  , t = this.get("width") * window.dpi;
                $(this.container).css({
                    width: t + "px",
                    height: e + "px",
                    "background-color": this.get("background_color")
                }),
                d20.engine.snapTo = this.get("snapping_increment") * window.dpi
            },
            getThumbnail: function() {
                var e = ""
                  , t = 0;
                this.thegraphics.each(function(i) {
                    if ("image" != i.get("type"))
                        return !0;
                    var n = i.get("width") + i.get("height");
                    n > t && (t = n,
                    e = i.get("imgsrc"))
                });
                var i = e;
                if (-1 !== i.indexOf("files.d20.io") || -1 !== i.indexOf("files.staging.d20.io")) {
                    var n = i.split("/")
                      , r = n[n.length - 1].split(".")[0];
                    "thumb" != r && (e = i.replace(r, "thumb"))
                }
                return e
            }
        })
          , f = Backbone.Collection.extend({
            model: p,
            url: "/pages/",
            initialize: function() {
                window.is_gm && this.on("change:name change:thumbnail change:placement", function() {
                    d20.pagetoolbar.refreshPageListing()
                })
            }
        })
          , g = Backbone.View.extend({
            initialize: function() {
                this._template = $(window.is_gm ? "#tmpl_tokeneditor" : "#tmpl_tokeneditor_player"),
                _.bindAll(this, "render", "updateModel", "showDialog"),
                this.$el = $(this.el),
                this.$el.addClass("dialog");
                var e = this;
                this.$el.on("click", ".delete", function() {
                    var t = $("<div class='dialog'>Are you sure you want to delete this token? This cannot be undone.</div>");
                    t.dialog({
                        modal: !0,
                        title: "Confirm Deletion",
                        buttons: {
                            "Delete Character": function() {
                                e.model.destroy(),
                                $(this).dialog("destroy").remove()
                            },
                            Cancel: function() {
                                $(this).dialog("destroy").remove()
                            }
                        },
                        beforeClose: function() {
                            $(this).dialog("destroy").remove()
                        }
                    })
                }),
                this.$el.on("change", "select.bar1_link, select.bar2_link, select.bar3_link", function() {
                    e.updateModel(),
                    e.render(),
                    e.$el.find(".chosen").chosen()
                }),
                this.$el.on("change", "select.represents", function() {
                    e.updateModel(),
                    e.model.character && e.model.save({
                        name: e.model.character.get("name")
                    }),
                    e.render(),
                    e.$el.find(".chosen").chosen()
                }),
                this.$el.on("click", ".nav li a", function() {
                    e.$el.find(".nav li").removeClass("active"),
                    e.$el.find(".tab-pane").hide(),
                    e.$el.find(".tab-pane." + $(this).attr("data-tab")).show(),
                    $(this).parents("li").addClass("active")
                }),
                this.$el.on("keydown", function(e) {
                    13 == e.which && $(this).find("input").trigger("blur")
                })
            },
            availAttribs: function() {
                var e = []
                  , t = {};
                return this.model.character.attribs.each(function(i) {
                    -1 === i.get("name").indexOf("repeating_") && (e.push({
                        id: i.id,
                        name: i.get("name")
                    }),
                    t[i.get("name").toLowerCase()] = !0)
                }),
                d20.journal.customSheets && d20.journal.customSheets.availableAttributes && _.each(d20.journal.customSheets.availableAttributes, function(i, n) {
                    return -1 !== n.toLowerCase().indexOf("_max") ? !0 : -1 !== n.toLowerCase().indexOf("repeating_") ? !0 : void (void 0 === t[n.toLowerCase()] && e.push({
                        id: "sheetattr_" + n,
                        name: n
                    }))
                }),
                e = _.sortBy(e, function(e) {
                    return e.name
                }),
                t = null ,
                e
            },
            render: function() {
                var e = this
                  , t = ((new Date).getTime(),
                this.$el.find(".nav li.active a"));
                if (t = t.length > 0 ? t.attr("data-tab") : !1,
                this.$el.html(this._template.jqote(this.model)),
                this.$el.attr("data-tokenid", this.model.id),
                window.is_gm) {
                    var i = !1
                      , n = d20.utils.handleHTMLOutput(this.model.get("gmnotes"));
                    "SINGLESPACED!!" == n.substring(0, 14) && (n = n.substring(14, n.length),
                    i = !0),
                    this.$el.find(".gmnotes").redactor(d20.utils.defaultRedactorSettings),
                    this.$el.find(".gmnotes").redactor("set", n, !1),
                    i && this.$el.find("textarea.gmnotes").redactor("getObject").$editor.addClass("singlespaced")
                }
                this.model.character && (this.$el.find(".bar1_link").val(this.model.get("bar1_link")),
                this.$el.find(".bar2_link").val(this.model.get("bar2_link")),
                this.$el.find(".bar3_link").val(this.model.get("bar3_link"))),
                this.$el.find(".name").val(this.model.get("name")).focus(),
                this.$el.find(".represents").val(this.model.get("represents")),
                this.model.get("showname") && this.$el.find(".showname").attr("checked", "checked"),
                this.model.get("showplayers_name") && this.$el.find(".showplayers_name").attr("checked", "checked"),
                this.model.get("showplayers_bar1") && this.$el.find(".showplayers_bar1").attr("checked", "checked"),
                this.model.get("showplayers_bar2") && this.$el.find(".showplayers_bar2").attr("checked", "checked"),
                this.model.get("showplayers_bar3") && this.$el.find(".showplayers_bar3").attr("checked", "checked"),
                this.model.get("showplayers_aura1") && this.$el.find(".showplayers_aura1").attr("checked", "checked"),
                this.model.get("showplayers_aura2") && this.$el.find(".showplayers_aura2").attr("checked", "checked"),
                this.model.get("playersedit_name") && this.$el.find(".playersedit_name").attr("checked", "checked"),
                this.model.get("playersedit_bar1") && this.$el.find(".playersedit_bar1").attr("checked", "checked"),
                this.model.get("playersedit_bar2") && this.$el.find(".playersedit_bar2").attr("checked", "checked"),
                this.model.get("playersedit_bar3") && this.$el.find(".playersedit_bar3").attr("checked", "checked"),
                this.model.get("playersedit_aura1") && this.$el.find(".playersedit_aura1").attr("checked", "checked"),
                this.model.get("playersedit_aura2") && this.$el.find(".playersedit_aura2").attr("checked", "checked"),
                this.model.get("aura1_square") && this.$el.find(".aura1_square").attr("checked", "checked"),
                this.model.get("aura2_square") && this.$el.find(".aura2_square").attr("checked", "checked"),
                this.model.get("light_otherplayers") && this.$el.find(".light_otherplayers").attr("checked", "checked"),
                this.model.get("light_hassight") && this.$el.find(".light_hassight").attr("checked", "checked"),
                this.$el.find(".bar1_value").val(this.model.get("bar1_value")),
                this.$el.find(".bar1_max").val(this.model.get("bar1_max")),
                this.$el.find(".bar2_value").val(this.model.get("bar2_value")),
                this.$el.find(".bar2_max").val(this.model.get("bar2_max")),
                this.$el.find(".bar3_value").val(this.model.get("bar3_value")),
                this.$el.find(".bar3_max").val(this.model.get("bar3_max")),
                this.$el.find(".aura1_radius").val(this.model.get("aura1_radius")),
                this.$el.find(".aura2_radius").val(this.model.get("aura2_radius")),
                this.$el.find(".aura1_color").val(this.model.get("aura1_color")),
                this.$el.find(".aura2_color").val(this.model.get("aura2_color")),
                this.$el.find(".tint_color").val(this.model.get("tint_color")),
                this.$el.find(".light_radius").val(this.model.get("light_radius")),
                this.$el.find(".light_dimradius").val(this.model.get("light_dimradius")),
                this.$el.find(".light_angle").val(this.model.get("light_angle")),
                this.$el.find(".light_losangle").val(this.model.get("light_losangle")),
                this.$el.find(".light_multiplier").val(this.model.get("light_multiplier")),
                this.$el.find(".colorpicker").colorPicker();
                var r = this.model.get("controlledby").split(",");
                _.each(r, function(t) {
                    e.$el.find(".controlledby option[value=" + t + "]").attr("selected", "selected")
                }),
                t ? this.$el.find(".nav li a[data-tab=" + t + "]").trigger("click") : this.$el.find(".nav li:first-child a").trigger("click")
            },
            updateModel: function() {
                var e = [];
                if (this.$el.find(".controlledby option:selected").each(function() {
                    e.push($(this).val())
                }),
                window.is_gm)
                    var t = {
                        gmnotes: d20.utils.handleHTMLInput((this.$el.find("textarea.gmnotes").redactor("getObject").$editor.hasClass("singlespaced") ? "SINGLESPACED!!" : "") + this.$el.find("textarea.gmnotes").redactor("get")),
                        controlledby: this.$el.find(".controlledby").length > 0 ? e.join(",") : this.model.get("controlledby"),
                        represents: this.$el.find(".represents").val(),
                        showname: this.$el.find(".showname").is(":checked"),
                        showplayers_name: this.$el.find(".showplayers_name").is(":checked"),
                        showplayers_bar1: this.$el.find(".showplayers_bar1").is(":checked"),
                        showplayers_bar2: this.$el.find(".showplayers_bar2").is(":checked"),
                        showplayers_bar3: this.$el.find(".showplayers_bar3").is(":checked"),
                        playersedit_name: this.$el.find(".playersedit_name").is(":checked"),
                        playersedit_bar1: this.$el.find(".playersedit_bar1").is(":checked"),
                        playersedit_bar2: this.$el.find(".playersedit_bar2").is(":checked"),
                        playersedit_bar3: this.$el.find(".playersedit_bar3").is(":checked"),
                        bar1_value: this.$el.find(".bar1_value").val(),
                        bar1_max: this.$el.find(".bar1_max").val(),
                        bar1_link: this.$el.find(".bar1_link").length > 0 ? this.$el.find(".bar1_link").val() : this.model.get("bar1_link"),
                        bar2_value: this.$el.find(".bar2_value").val(),
                        bar2_max: this.$el.find(".bar2_max").val(),
                        bar2_link: this.$el.find(".bar2_link").length > 0 ? this.$el.find(".bar2_link").val() : this.model.get("bar2_link"),
                        bar3_value: this.$el.find(".bar3_value").val(),
                        bar3_max: this.$el.find(".bar3_max").val(),
                        bar3_link: this.$el.find(".bar3_link").length > 0 ? this.$el.find(".bar3_link").val() : this.model.get("bar3_link"),
                        aura1_radius: this.$el.find(".aura1_radius").val(),
                        aura1_color: this.$el.find(".aura1_color").val(),
                        aura2_radius: this.$el.find(".aura2_radius").val(),
                        aura2_color: this.$el.find(".aura2_color").val(),
                        tint_color: this.$el.find(".tint_color").val(),
                        light_radius: this.$el.find(".light_radius").length > 0 ? this.$el.find(".light_radius").val() : "",
                        light_dimradius: this.$el.find(".light_dimradius").length > 0 ? this.$el.find(".light_dimradius").val() : "",
                        light_otherplayers: this.$el.find(".light_otherplayers").length > 0 ? this.$el.find(".light_otherplayers").is(":checked") : !1,
                        light_hassight: this.$el.find(".light_hassight").length > 0 ? this.$el.find(".light_hassight").is(":checked") : !1,
                        light_angle: this.$el.find(".light_angle").length > 0 ? this.$el.find(".light_angle").val() : "",
                        light_losangle: this.$el.find(".light_losangle").length > 0 ? this.$el.find(".light_losangle").val() : "",
                        light_multiplier: this.$el.find(".light_multiplier").length > 0 ? parseFloat(this.$el.find(".light_multiplier").val()) : 1,
                        showplayers_aura1: this.$el.find(".showplayers_aura1").is(":checked"),
                        showplayers_aura2: this.$el.find(".showplayers_aura2").is(":checked"),
                        playersedit_aura1: this.$el.find(".playersedit_aura1").is(":checked"),
                        playersedit_aura2: this.$el.find(".playersedit_aura2").is(":checked"),
                        aura1_square: this.$el.find(".aura1_square").is(":checked"),
                        aura2_square: this.$el.find(".aura2_square").is(":checked"),
                        name: d20.utils.strip_tags(this.$el.find(".name").val())
                    };
                else {
                    var t = {
                        bar1_value: this.$el.find(".bar1_value").val(),
                        bar1_max: this.$el.find(".bar1_max").val(),
                        bar2_value: this.$el.find(".bar2_value").val(),
                        bar2_max: this.$el.find(".bar2_max").val(),
                        bar3_value: this.$el.find(".bar3_value").val(),
                        bar3_max: this.$el.find(".bar3_max").val(),
                        aura1_radius: this.$el.find(".aura1_radius").val(),
                        aura1_color: this.$el.find(".aura1_color").val(),
                        aura2_radius: this.$el.find(".aura2_radius").val(),
                        aura2_color: this.$el.find(".aura2_color").val(),
                        aura1_square: this.$el.find(".aura1_square").length > 0 ? this.$el.find(".aura1_square").is(":checked") : void 0,
                        aura2_square: this.$el.find(".aura2_square").length > 0 ? this.$el.find(".aura2_square").is(":checked") : void 0,
                        name: this.$el.find("input.name").val()
                    };
                    _.each(t, function(e, i) {
                        void 0 == e && delete t[i]
                    })
                }
                if (this.model.character) {
                    var i = this
                      , n = function(e) {
                        var n;
                        if (n = window.is_gm ? t["bar" + e + "_link"] : i.model.get("bar" + e + "_link"),
                        "" !== n && i.model.get("bar" + e + "_link") == n) {
                            var r, o = {};
                            if (o.current = t["bar" + e + "_value"],
                            o.max = t["bar" + e + "_max"],
                            "sheetattr_" === n.substring(0, 10)) {
                                var a = n.substring(10, n.length);
                                if (i.model.character.attribs.each(function(e) {
                                    return e.get("name").toLowerCase() === a.toLowerCase() ? (r = e,
                                    !1) : void 0
                                }),
                                d20.journal.customSheets && d20.journal.customSheets.reservedAttributes[a.toLowerCase()] && delete o.current,
                                d20.journal.customSheets && d20.journal.customSheets.reservedAttributes[a.toLowerCase() + "_max"] && delete o.max,
                                !r && _.keys(o).length > 0 && (void 0 !== o.current && "" !== o.current || void 0 !== o.max && "" !== o.max)) {
                                    console.log("No existing attribute found, creating..."),
                                    o.name = a;
                                    var s = i.model.character.attribs.create(o);
                                    delete o.name,
                                    r = s
                                }
                            } else {
                                r = i.model.character.attribs.get(n);
                                var a = r.get("name");
                                d20.journal.customSheets && d20.journal.customSheets.reservedAttributes[a.toLowerCase()] && delete o.current,
                                d20.journal.customSheets && d20.journal.customSheets.reservedAttributes[a.toLowerCase() + "_max"] && delete o.max
                            }
                            r && (r.syncedSave(o),
                            delete t["bar" + e + "_value"],
                            delete t["bar" + e + "_max"],
                            window.is_gm && "sheetattr_" === n.substring(0, 10) && (t["bar" + e + "_link"] = r.id))
                        } else
                            _.defer(function() {
                                i.model.refreshTokenLinks(e),
                                i.render()
                            })
                    }
                    ;
                    n(1),
                    n(2),
                    n(3)
                }
                return this.model.save(t),
                !0
            },
            showDialog: function() {
                var e = this;
                if (this.render(),
                0 != this.$el.find("input").length) {
                    var t = 500;
                    window.is_gm && (t = 675);
                    var i = $(window).height() - d20.utils.playerZoneHeight();
                    i > t && (i = t);
                    var n = 350;
                    window.is_gm && (n = 675),
                    this.$el.dialog({
                        modal: !1,
                        width: n,
                        height: i,
                        position: ["center", 30],
                        title: "Edit Token",
                        zIndex: 10500,
                        buttons: {
                            "Save Changes": function() {
                                e.updateModel() && $(this).dialog("destroy")
                            },
                            Cancel: function() {
                                $(this).dialog("destroy")
                            }
                        }
                    }),
                    this.$el.find(".chosen").chosen()
                }
            }
        })
          , m = Backbone.View.extend({
            _template: $("#tmpl_custfxeditor"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "updateModel", "showDialog"),
                this.$el = $(this.el),
                this.$el.on("click", ".delete", function() {
                    var t = $("<div class='dialog'>Are you sure you want to delete this FX? This cannot be undone.</div>");
                    t.dialog({
                        modal: !0,
                        title: "Confirm Deletion",
                        buttons: {
                            "Delete FX": function() {
                                e.model.destroy(),
                                $(this).dialog("destroy").remove(),
                                e.$el.dialog("destroy"),
                                d20.fx.changeFx()
                            },
                            Cancel: function() {
                                $(this).dialog("destroy").remove()
                            }
                        },
                        beforeClose: function() {
                            $(this).dialog("destroy").remove()
                        }
                    })
                }),
                this.$el.on("keyup", ".name", function(e) {
                    if (32 == e.which || 189 == e.which) {
                        var t = $(this).val();
                        $(this).val(t.replace(/ |-/g, ""))
                    }
                }),
                this.$el.on("click", ".testcustfx", function() {
                    e.updateModel()
                })
            },
            render: function() {
                this.$el.html(this._template.jqote(this.model)),
                this.$el.addClass("dialog").addClass("largedialog"),
                this.$el.attr("data-custfxid", this.model.id),
                this.$el.find(".name").val(this.model.get("name")),
                this.$el.find(".definition").html(this.formatJSON(this.model.get("definition")))
            },
            updateModel: function() {
                var e = this.validateJSON(this.$el.find(".definition").val());
                if (e) {
                    var t = {
                        name: d20.utils.strip_tags(this.$el.find(".name").val()),
                        definition: e
                    };
                    return this.model.save(t),
                    d20.fx.refreshCustFxList(),
                    !0
                }
                return this.showError(),
                !1
            },
            validateJSON: function(e) {
                try {
                    var t = JSON.parse(e);
                    return -1 === t.angle && -1 === t.duration && (t.duration = 25),
                    t
                } catch (i) {
                    return !1
                }
            },
            formatJSON: function(e) {
                var t = [];
                return _.each(e, function(e, i) {
                    e = "string" == typeof e ? '"' + e + '"' : e,
                    t.push("array" == typeof e || "object" == typeof e ? '	"' + i + '": ' + JSON.stringify(e).replace(/,/g, ", ") : '	"' + i + '": ' + e)
                }),
                "{\n" + t.join(",\n") + "\n}"
            },
            showError: function() {
                this.$el.find(".definition").addClass("has-error").one("focus", function() {
                    $(this).removeClass("has-error")
                })
            },
            showDialog: function() {
                var e = this;
                this.render();
                var t = 500
                  , i = $(window).height() - d20.utils.playerZoneHeight();
                i > t && (i = t),
                this.$el.dialog({
                    modal: !1,
                    width: 425,
                    height: i,
                    position: ["center", 30],
                    title: "Edit FX",
                    zIndex: 10500,
                    buttons: {
                        "Save Changes": function() {
                            e.updateModel() && $(this).dialog("destroy")
                        },
                        Cancel: function() {
                            $(this).dialog("destroy")
                        }
                    }
                }),
                this.$el.find(".chosen").chosen()
            }
        })
          , v = Backbone.Model.extend({
            defaults: {
                name: "",
                definition: {
                    maxParticles: 100,
                    emissionRate: 3,
                    size: 35,
                    sizeRandom: 15,
                    lifeSpan: 10,
                    lifeSpanRandom: 3,
                    speed: 3,
                    speedRandom: 1.5,
                    gravity: {
                        x: .01,
                        y: .01
                    },
                    angle: 0,
                    angleRandom: 180,
                    duration: -1,
                    startColour: [220, 35, 0, 1],
                    startColourRandom: [62, 0, 0, .25],
                    endColour: [220, 35, 0, 0],
                    endColourRandom: [60, 60, 60, 0]
                }
            },
            initialize: function() {
                if (this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                this.view = new m({
                    model: this
                })
            },
            isNew: function() {
                return !this.persisted
            }
        })
          , y = Backbone.Collection.extend({
            model: v,
            url: "/custfxs/",
            initialize: function() {
                console.log(window.Campaign),
                this.on("add remove change:name", function() {
                    window.currentPlayer && d20.fx.refreshCustFxList()
                })
            }
        })
          , b = Backbone.View.extend({
            _template: $("#tmpl_macroeditor"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "updateModel", "showDialog"),
                this.$el = $(this.el);
                var e = this;
                this.$el.on("click", ".delete", function() {
                    var t = $("<div class='dialog'>Are you sure you want to delete this macro? This cannot be undone.</div>");
                    t.dialog({
                        modal: !0,
                        title: "Confirm Deletion",
                        buttons: {
                            "Delete Macro": function() {
                                e.model.destroy(),
                                $(this).dialog("destroy").remove(),
                                e.$el.dialog("destroy")
                            },
                            Cancel: function() {
                                $(this).dialog("destroy").remove()
                            }
                        },
                        beforeClose: function() {
                            $(this).dialog("destroy").remove()
                        }
                    })
                }),
                this.$el.on("keyup", ".name", function(e) {
                    if (32 == e.which) {
                        var t = $(this).val();
                        $(this).val(t.substring(0, t.length - 1).replace(" ", "") + "-")
                    }
                }),
                this.$el.on("click", ".testmacro", function() {
                    var t = d20.utils.strip_tags(e.convertFromTokenizer(e.$el.find(".macro")));
                    d20.textchat.doChatInput(t)
                })
            },
            render: function() {
                var e = this;
                this.$el.html(this._template.jqote(this.model)),
                this.$el.addClass("dialog").addClass("largedialog"),
                this.$el.attr("data-macroid", this.model.id),
                this.$el.find(".name").val(this.model.get("name")),
                this.$el.find(".macro").html(this.convertForTokenizer(d20.utils.strip_tags(this.model.get("action")))),
                this.model.get("istokenaction") === !0 && this.$el.find(".istokenaction").attr("checked", "checked");
                var t = this.model.get("visibleto").split(",");
                _.each(t, function(t) {
                    e.$el.find(".visibleto option[value=" + t + "]").attr("selected", "selected")
                })
            },
            updateModel: function() {
                var e = {
                    name: d20.utils.strip_tags(this.$el.find(".name").val()),
                    action: d20.utils.strip_tags(this.convertFromTokenizer(this.$el.find(".macro"))),
                    istokenaction: this.$el.find(".istokenaction").is(":checked")
                };
                if (window.is_gm) {
                    var t = [];
                    this.$el.find(".visibleto option:selected").each(function() {
                        t.push($(this).val())
                    }),
                    e.visibleto = t.join(",")
                }
                this.model.save(e)
            },
            showDialog: function() {
                var e = this;
                this.render();
                var t = 500
                  , i = $(window).height() - d20.utils.playerZoneHeight();
                i > t && (i = t),
                this.$el.dialog({
                    modal: !1,
                    width: 425,
                    height: i,
                    position: ["center", 30],
                    title: "Edit Macro",
                    zIndex: 10500,
                    buttons: {
                        "Save Changes": function() {
                            $(this).dialog("destroy"),
                            e.updateModel()
                        },
                        Cancel: function() {
                            $(this).dialog("destroy")
                        }
                    }
                }),
                this.$el.find(".chosen").chosen(),
                this.$el.find(".macro").atwho("@", {
                    cache: !1,
                    tpl: "<li data-value='{${charname}|${name}}'>${name} <small>${charname}</small></li>",
                    callbacks: {
                        filter: function(e) {
                            var t = []
                              , i = -1 !== e.indexOf("|");
                            if (d20.Campaign.characters.each(function(n) {
                                if (1 == n.get("archived"))
                                    return !0;
                                var r = n.get("inplayerjournals").split(",")
                                  , o = {};
                                (window.is_gm || -1 !== _.indexOf(r, "all") || window.currentPlayer && -1 !== _.indexOf(r, window.currentPlayer.id)) && (n.attribs.each(function(r) {
                                    if ("repeating_" === r.get("name").substring(0, 10))
                                        return !0;
                                    var a = (i ? n.get("name") + "|" : "") + r.get("name")
                                      , s = a.score(e);
                                    s > 0 && (t.push({
                                        name: r.get("name").replace("'", "&apos;"),
                                        charname: n.get("name").replace("'", "&apos;"),
                                        score: s
                                    }),
                                    o[r.get("name").toLowerCase()] = !0)
                                }),
                                d20.journal.customSheets && d20.journal.availableAttributes && _.each(d20.journal.customSheets.availableAttributes, function(r, a) {
                                    if (void 0 !== o[a.toLowerCase()])
                                        return !0;
                                    var s = (i ? n.get("name") + "|" : "") + a
                                      , l = s.score(e);
                                    l > 0 && t.push({
                                        name: a.replace("'", "&apos;"),
                                        charname: n.get("name").replace("'", "&apos;"),
                                        score: l
                                    })
                                }),
                                o = null )
                            }),
                            d20.journal.customSheets && d20.journal.availableAttributes) {
                                var n = ["selected", "target"];
                                _.each(n, function(n) {
                                    _.each(d20.journal.customSheets.availableAttributes, function(r, o) {
                                        var a = (i ? n + "|" : "") + o
                                          , s = a.score(e);
                                        s > 0 && t.push({
                                            name: o.replace("'", "&apos;"),
                                            charname: n,
                                            score: s
                                        })
                                    })
                                })
                            }
                            return t = _.sortBy(t, function(e) {
                                return -e.score
                            })
                        },
                        sorter: function(e, t) {
                            return t
                        }
                    }
                }),
                this.$el.find(".macro").atwho("%", {
                    cache: !1,
                    tpl: "<li data-value='{${charname}|${name}}'>${name} <small>${charname}</small></li>",
                    callbacks: {
                        filter: function(e) {
                            var t = []
                              , i = -1 !== e.indexOf("|");
                            if (d20.Campaign.characters.each(function(n) {
                                if (1 == n.get("archived"))
                                    return !0;
                                var r = n.get("inplayerjournals").split(",")
                                  , o = {};
                                (window.is_gm || -1 !== _.indexOf(r, "all") || window.currentPlayer && -1 !== _.indexOf(r, window.currentPlayer.id)) && (n.abilities.each(function(r) {
                                    var a = (i ? n.get("name") + "|" : "") + r.get("name")
                                      , s = a.score(e);
                                    s > 0 && (t.push({
                                        name: r.get("name").replace("'", "&apos;"),
                                        charname: n.get("name").replace("'", "&apos;"),
                                        score: s
                                    }),
                                    o[r.get("name").toLowerCase()] = !0)
                                }),
                                d20.journal.customSheets && d20.journal.availableRolls && _.each(d20.journal.customSheets.availableRolls, function(r, a) {
                                    if (void 0 !== o[a.toLowerCase()])
                                        return !0;
                                    var s = (i ? n.get("name") + "|" : "") + a
                                      , l = s.score(e);
                                    l > 0 && t.push({
                                        name: a.replace("'", "&apos;"),
                                        charname: n.get("name").replace("'", "&apos;"),
                                        score: l
                                    })
                                }),
                                o = null )
                            }),
                            d20.journal.customSheets && d20.journal.availableRolls) {
                                var n = ["selected", "target"];
                                _.each(n, function(n) {
                                    _.each(d20.journal.customSheets.availableRolls, function(r, o) {
                                        var a = (i ? n + "|" : "") + o
                                          , s = a.score(e);
                                        s > 0 && t.push({
                                            name: o.replace("'", "&apos;"),
                                            charname: n,
                                            score: s
                                        })
                                    })
                                })
                            }
                            return t = _.sortBy(t, function(e) {
                                return -e.score
                            })
                        },
                        sorter: function(e, t) {
                            return t
                        }
                    }
                }),
                this.$el.find(".macro").atwho("#", {
                    cache: !1,
                    callbacks: {
                        filter: function(e) {
                            var t = [];
                            return d20.Campaign.players.each(function(i) {
                                i.macros.each(function(n) {
                                    return "" == n.get("name") ? !0 : void ((i.id == window.currentPlayer.id || n.visibleToCurrentPlayer()) && -1 !== n.get("name").indexOf(e) && t.push({
                                        name: n.get("name"),
                                        val: n.get("name"),
                                        id: n.id
                                    }))
                                })
                            }),
                            t
                        }
                    }
                })
            },
            convertFromTokenizer: function(e) {
                return e.val()
            },
            convertForTokenizer: function(e) {
                return console.log(e),
                e
            }
        })
          , w = Backbone.Model.extend({
            defaults: {
                name: "",
                action: "",
                visibleto: "",
                istokenaction: !1
            },
            initialize: function() {
                if (this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                this.view = new b({
                    model: this
                })
            },
            isNew: function() {
                return !this.persisted
            },
            visibleToCurrentPlayer: function() {
                if (!window.currentPlayer)
                    return !1;
                var e = this.get("visibleto").split(",");
                return -1 != _.indexOf(e, window.currentPlayer.id) || -1 != _.indexOf(e, "all") ? !0 : !1
            }
        })
          , x = Backbone.Collection.extend({
            model: w,
            initialize: function() {
                this.on("add remove change:name", function(e) {
                    window.currentPlayer && (this.player.id == window.currentPlayer.id || e.visibleToCurrentPlayer()) && (d20.player_settings.refreshRollsList(),
                    d20.player_settings.refreshMacroBar())
                }),
                this.on("change:visibleto", function() {
                    window.currentPlayer && (d20.player_settings.refreshRollsList(),
                    d20.player_settings.refreshMacroBar())
                })
            }
        })
          , E = Backbone.View.extend({
            _template: $("#tmpl_player_view"),
            initialize: function() {
                var e = this;
                this.model.bind("change", function() {
                    e.render()
                }),
                this.render(),
                this.removeTimeout = !1,
                this.wasonline = !1
            },
            render: function() {
                var e = this
                  , t = this.model;
                if ("" === this.model.get("d20userid") && "" === this.model.get("displayname"))
                    return void console.log("invalid 20 user id and display name");
                if (this.$el.hasClass("player") || (this.$el.addClass("player"),
                this.$el.attr("id", "player_" + this.model.id),
                this.$el.html(this._template.jqote(this.model))),
                !this.model.get("online")) {
                    if (console.log("Player " + this.model.id + " is offline..."),
                    window.currentPlayer == this.model)
                        return;
                    return void (!this.removeTimeout && this.wasonline && (this.removeTimeout = setTimeout(function() {
                        e.appended && (e.$el.attr("style", ""),
                        e.$el.remove(),
                        e.appended = !1),
                        e.removeTimeout = !1,
                        "internal" === d20ext.videotype && 0 === d20.Campaign.players.filter(function(e) {
                            return e.get("online") && "none" !== e.get("videobroadcasttype") && e !== window.currentPlayer
                        }).length && d20.internalwebrtc.disconnect()
                    }, 5e3)))
                }
                this.wasonline = !0,
                this.removeTimeout && (clearTimeout(this.removeTimeout),
                this.removeTimeout = !1);
                var i = $("#playerzone");
                if (!this.appended && i.length > 0) {
                    if (playercount = i[0].children.length,
                    playerappendid = $(this.$el).attr("id").split(/_(.+)/)[1],
                    1 == i[0].children.length)
                        i.prepend(this.$el);
                    else {
                        playerlist = [];
                        for (var n = 0; playercount > n; n++)
                            playerlist.push(i[0].children[n].id.substring(7, i[0].children[n].id.length));
                        for (var r = !1, n = 0; n < playerlist.length; n++)
                            if (playerappendid < playerlist[n]) {
                                console.log("Adding myself before " + playerlist[n]),
                                beforeplayer = "#player_" + playerlist[n];
                                var o = i.find(beforeplayer);
                                if (o.length > 0) {
                                    o.before(this.$el),
                                    r = !0;
                                    break
                                }
                            }
                        r || i.find("#macrobar").before(this.$el)
                    }
                    this.$el.find(".colorpicker").colorPicker(),
                    this.$el.find(".colorpicker").bind("change", function() {
                        e.model.set({
                            color: $(this).val()
                        }).save()
                    }),
                    this.$el.droppable({
                        accept: ".draggablecard, .cardinhand, .handout, .character",
                        hoverClass: "dropping",
                        tolerance: "pointer",
                        greedy: !0,
                        drop: function(e, i) {
                            var n = i.draggable
                              , r = $(n);
                            if (console.log("Card dropped onto player!"),
                            e.originalEvent.dropHandled = !0,
                            r.hasClass("handout") || r.hasClass("character")) {
                                if (!window.is_gm)
                                    return;
                                var o = "handout";
                                r.hasClass("character") && (o = "character");
                                var a = d20.Campaign[o + "s"].get(r.attr("handout" == o ? "data-itemid" : "data-itemid"));
                                if (!a)
                                    return void console.log("Can't find handout/character!");
                                if ("character" === o)
                                    return;
                                var s = a.get("inplayerjournals").split(",");
                                -1 === s.indexOf(t.id) && (s.push(t.id),
                                a.save({
                                    inplayerjournals: s.join(",")
                                })),
                                d20.textchat.sendShout({
                                    type: "showhandout",
                                    jid: a.id,
                                    jtype: o,
                                    time: (new Date).getTime(),
                                    playerid: t.id
                                })
                            } else {
                                var l = r.parents(".deckstack")
                                  , c = r.parents(".deckpile");
                                if (l.length > 0 || c.length > 0) {
                                    var d = d20.Campaign.decks.get((l.length > 0 ? l : c).attr("data-deckid"));
                                    if (!d)
                                        return void console.log("Unable to find deck!");
                                    var h = r.attr("data-cardid");
                                    if ("nextcard" == h) {
                                        $(".tipsy").remove();
                                        var u = d.drawCard();
                                        h = d.cardAtIndex(u).id,
                                        l.on("currentCardRemoved.nextcard", function() {
                                            d.finishDrawingCard(u, !0)
                                        })
                                    }
                                    "true" === r.attr("data-resetdeckstack") && d.save({
                                        currentCardShown: !1
                                    });
                                    var p = d.cards.get(h);
                                    if (!p)
                                        return void console.log("Unable to find card!");
                                    var f;
                                    f = $(e.target).hasClass("player") ? $(e.target).attr("id").replace("player_", "") : $(e.target).parents(".player").attr("id").replace("player_", "");
                                    var g = d20.Campaign.players.get(f);
                                    if (!g)
                                        return void console.log("Unable to find player!");
                                    d20.Campaign.hands.addCardToHandForPlayer(p, g),
                                    l.trigger("currentCardRemoved"),
                                    c.trigger("chosenCardPlayed", n),
                                    r.remove(),
                                    d20.decks.lastDragCard = !1
                                } else if (r.parents(".handcontainer").length > 0) {
                                    var m = d20.Campaign.hands.get(r.parents(".handcontainer").attr("data-handid"));
                                    if (!m)
                                        return void console.log("Unable to find hand!");
                                    var p = d20.decks.cardByID(r.attr("data-cardid"));
                                    if (!p)
                                        return void console.log("Unable to find card!");
                                    var f;
                                    f = $(e.target).hasClass("player") ? $(e.target).attr("id").replace("player_", "") : $(e.target).parents(".player").attr("id").replace("player_", "");
                                    var g = d20.Campaign.players.get(f);
                                    if (g.id == m.get("parentid"))
                                        return;
                                    var v = !1;
                                    if (d20.Campaign.cardtrades.each(function(e) {
                                        (e.isInitOrRec() || e.isInitOrRec(f)) && (v = !0)
                                    }),
                                    v)
                                        return void alert("There is already a trade pending that involves either you or the target player. Please wait for that trade to be concluded before beginning another trade.");
                                    d20.Campaign.cardtrades.create({
                                        initiated_by: window.currentPlayer.id,
                                        received_by: f,
                                        initiator_cards: p.id
                                    }),
                                    r.addClass("trading"),
                                    d20.decks.lastDragCard = !1
                                }
                            }
                        }
                    }),
                    this.$el.find(".playername, .video").addClass("player-bookmark"),
                    this.$el.find(".playername, .video").draggable({
                        revert: !0,
                        revertDuration: 0,
                        helper: function() {
                            var t = $("<div class='playerdrag'><img class='avatar' src='/users/avatar/" + e.model.get("d20userid") + "/150' /> " + e.model.get("displayname") + "</div>");
                            return t
                        },
                        appendTo: "body",
                        scroll: !1
                    }).addTouch(),
                    "internal" === d20ext.videotype && d20.internalwebrtc.updateDraggable(),
                    this.appended = !0
                }
                this.$el.find(".playername .name").text(this.model.get("displayname")),
                this.$el.find(".colorpicker").length > 0 ? this.$el.find(".colorpicker").val(this.model.get("color")).trigger("change-silent") : this.$el.find("div.playercolor").css({
                    "background-color": this.model.get("color")
                }),
                d20.internalwebrtc.connect()
            }
        })
          , T = Backbone.Model.extend({
            defaults: {
                d20username: "",
                d20userid: "",
                displayname: "",
                speakingas: "",
                online: !1,
                color: "#13B9F0",
                macrobar: "",
                showmacrobar: !1,
                videoplayersize: fabric.isTouchSupported ? "small" : "regular",
                videoplayerlocation: "bottom",
                videobroadcasttype: "both",
                videoreceivetype: "both",
                tddiceenabled: !1,
                apptddiceenabled: !0,
                disableagency: !1,
                diceiconsenabled: !0,
                chatavatarsenabled: !0,
                chattimestampsenabled: !1,
                chatbeepenabled: !0,
                lastActive: 0,
                advShortcuts: !1,
                usePopouts: !1,
                journalfolderstatus: "",
                jukeboxfolderstatus: "",
                globalvolume: 100,
                alphatokenactions: !0,
                lastpage: "",
                librarytab: "marketplace",
                recentuploadsfilter: !1,
                bigsearchstyle: !1
            },
            initialize: function() {
                var e = this;
                if (this.id)
                    this.persisted = !0;
                else {
                    var t = generateUUID();
                    this.set({
                        id: t
                    }),
                    this.url = this.collection.url + t
                }
                this.macros = new x,
                this.macros.url = "/macros/player/" + this.id + "/",
                this.macros.player = this,
                _.defer(function() {
                    e.macros.backboneFirebase = new BackboneFirebase(e.macros)
                }),
                _.defer(function() {
                    e.view = new E({
                        model: e
                    }),
                    window.currentPlayer == e && (e.get("showmacrobar") && ($("#showmacrobar").attr("checked", "checked"),
                    $("#playerzone").addClass("showmacrobar")),
                    e.get("tddiceenabled") && ($("#enable3ddice").attr("checked", "checked"),
                    d20.tddice && d20.tddice.canRoll3D() && !d20.tddice.sceneInitialized && d20.tddice.addRenderer()),
                    e.get("disableagency") && $("#autoroll").attr("checked", "checked"),
                    "library" === e.get("librarytab") ? $("#switchtouserlibrary").trigger("click") : $("#switchtomarketplacelibrary").trigger("click"),
                    $("#imagedialog .recentuploadsfilter").addClass(e.get("recentuploadsfilter") === !0 ? "filtered" : "notfiltered"),
                    e.get("bigsearchstyle") === !0 ? ($("#imagedialog .searchstyle").addClass("filtered"),
                    $("#librarysearchroot").addClass("fullsizesearch")) : ($("#imagedialog .searchstyle").addClass("notfiltered"),
                    $("#librarysearchroot").removeClass("fullsizesearch")),
                    d20.library && (d20.library.buildRecentUploads(),
                    d20.library.validateFolderStructure()),
                    $("#videoplayersize").val(e.get("videoplayersize")).trigger("change"),
                    $("#videobroadcasttype").val(e.get("videobroadcasttype")),
                    $("#videoreceivetype").val(e.get("videoreceivetype")),
                    e.on("change:macrobar", function() {
                        d20.player_settings.refreshRollsList(),
                        d20.player_settings.refreshMacroBar()
                    }),
                    d20.player_settings.refreshMacroBar(),
                    e.on("change:diceiconsenabled", function() {
                        this.get("diceiconsenabled") ? ($("#textchat").removeClass("withouticons"),
                        $("#diceiconsenabled").attr("checked", "checked")) : ($("#textchat").addClass("withouticons"),
                        $("#diceiconsenabled").removeAttr("checked"))
                    }),
                    e.on("change:chatavatarsenabled", function() {
                        this.get("chatavatarsenabled") ? ($("#textchat").removeClass("withoutavatars"),
                        $("#chatavatarsenabled").attr("checked", "checked")) : ($("#textchat").addClass("withoutavatars"),
                        $("#chatavatarsenabled").removeAttr("checked"))
                    }),
                    e.on("change:chattimestampsenabled", function() {
                        this.get("chattimestampsenabled") ? ($("#textchat").addClass("withtimestamps"),
                        $("#chattimestampsenabled").attr("checked", "checked")) : ($("#textchat").removeClass("withtimestamps"),
                        $("#chattimestampsenabled").removeAttr("checked"))
                    }),
                    e.get("alphatokenactions") && $("#alphatokenactionsenabled").attr("checked", "checked"),
                    e.on("change:chatbeepenabled", function() {
                        this.get("chatbeepenabled") ? $("#chatbeepenabled").attr("checked", "checked") : $("#chatbeepenabled").removeAttr("checked")
                    }),
                    e.on("change:advShortcuts", function() {
                        this.get("advShortcuts") === !0 ? (Mousetrap.unpause(),
                        $("#useAdvShortcuts").attr("checked", "checked")) : (Mousetrap.pause(),
                        $("#useAdvShortcuts").removeAttr("checked"))
                    }),
                    e.on("change:usePopouts", function() {
                        this.get("usePopouts") === !0 ? $("#usePopouts").attr("checked", "checked") : $("#usePopouts").removeAttr("checked")
                    }),
                    e.on("change:globalvolume", function() {
                        window.is_playerapp || (d20.jukebox.globalVolume = Math.pow(this.get("globalvolume") / 100, 2),
                        console.log("Global Volume: " + this.get("globalvolume") + "=" + d20.jukebox.globalVolume),
                        window.Jukebox.scanForNewPlays(),
                        $("#globalvolume").slider("value", this.get("globalvolume")))
                    }),
                    e.trigger("change:diceiconsenabled"),
                    e.trigger("change:chatavatarsenabled"),
                    e.trigger("change:chattimestampsenabled"),
                    e.trigger("change:chatbeepenabled"),
                    e.trigger("change:advShortcuts"),
                    e.trigger("change:usePopouts"),
                    e.trigger("change:globalvolume"))
                }),
                this.on("change:color", function() {
                    e.updateCSSRules()
                }),
                this.updateCSSRules()
            },
            isNew: function() {
                return !this.persisted
            },
            addToMacroBar: function(e) {
                var t = this.get("macrobar").split(",");
                t.push(e),
                this.save({
                    macrobar: _.uniq(t).join(",")
                }),
                this.get("showmacrobar") === !1 && (this.save({
                    showmacrobar: !0
                }),
                $("#playerzone").addClass("showmacrobar"),
                $("#showmacrobar").attr("checked", "checked"))
            },
            removeFromMacroBar: function(e) {
                for (var t = this.get("macrobar").split(","), i = !1, n = 0; n < t.length; n++)
                    -1 !== t[n].indexOf(e) && (i = t[n]);
                i && this.set({
                    macrobar: _.without(t, i).join(",")
                }).save()
            },
            addMacroNickname: function(e, t) {
                for (var i = this.get("macrobar").split(","), n = !1, r = 0; r < i.length; r++)
                    -1 !== i[r].indexOf(e) && (minfo = i[r].split("|"),
                    minfo[2] || (minfo[2] = "#"),
                    minfo[3] = encodeURIComponent(t),
                    n = minfo.join("|"),
                    i[r] = n);
                n && this.set({
                    macrobar: i.join(",")
                }).save()
            },
            changeMacroColor: function(e, t) {
                for (var i = this.get("macrobar").split(","), n = !1, r = 0; r < i.length; r++)
                    -1 !== i[r].indexOf(e) && (minfo = i[r].split("|"),
                    minfo[2] = t,
                    n = minfo.join("|"),
                    i[r] = n);
                n && this.set({
                    macrobar: i.join(",")
                }).save()
            },
            getMacroBar: function() {
                return this.get("macrobar").split(",")
            },
            updateCSSRules: function() {
                var e = {};
                e["#textchat .rollresult.player-" + this.id + " .diceroll .backing"] = "{ color: " + this.get("color") + "; text-shadow: 0px 0px 3px " + this.get("color") + ";}",
                d20.utils.addCSSRules(e)
            }
        })
          , C = Backbone.Collection.extend({
            model: T,
            url: "/players/"
        })
          , R = Backbone.View.extend({
            _template: $.jqotec("#tmpl_campaignsettings"),
            initialize: function() {
                _.bindAll(this, "render"),
                this.model.bind("change", this.render),
                $(this.el).addClass("dialog"),
                this.$el = $(this.el)
            },
            render: function() {
                $(this.el).html(this._template())
            },
            updatecampaignSettings: function() {}
        });
        d20.models.InitiativeWindow = Backbone.View.extend({
            el: $("#initiativewindow"),
            initialize: function() {
                _.bindAll(this, "render", "showWindow", "_rebuildInitiativeList", "endRounds", "recordOrderFromList", "handlePageChange", "cleanList"),
                this.rebuildInitiativeList = _.debounce(this._rebuildInitiativeList, 50);
                var e = this;
                this.windowopen = !1;
                try {
                    this.model.currentOrderArray = JSON.parse(this.model.get("turnorder") || "[]")
                } catch (t) {
                    this.model.currentOrderArray = []
                }
                this.model.bind("change:turnorder", function() {
                    try {
                        e.model.currentOrderArray = JSON.parse(e.model.get("turnorder") || "[]")
                    } catch (t) {
                        e.model.currentOrderArray = []
                    }
                    e.rebuildInitiativeList()
                }),
                this.model.bind("change:initiativepage", function() {
                    e.handlePageChange()
                }),
                $("#startrounds").on(clicktype, function() {
                    this.windowopen || e.model.set({
                        initiativepage: !0
                    }).save()
                }),
                this.handlePageChange(),
                $("#initiativewindow").on(clicktype, ".initiative.editable", function() {
                    if ($(this).find("input").length > 0)
                        return void $(this).find("input").focus().select();
                    var e = $.trim($(this).text());
                    $(this).html("<input type='text' value='" + e + "'/>"),
                    $(this).find("input").focus().select()
                }),
                $("#initiativewindow").on("keydown", ".initiative.editable", function(t) {
                    if (13 == t.which)
                        return e.recordOrderFromList(),
                        !1;
                    if (9 == t.which && window.is_gm) {
                        var i = $(this).parents("li.token").next();
                        return 0 == i.length && (i = $(this).parents("ul").find("li:first-child")),
                        i.find(".initiative").trigger("click"),
                        !1
                    }
                }),
                this.$el.on("mouseenter", "li", function() {
                    var e = $(this).attr("data-tokenid");
                    if ("-1" !== e) {
                        var t = d20.Campaign.activePage().thegraphics.get(e);
                        t && (d20.engine.highlightToken = t,
                        d20.engine.debounced_renderAll())
                    }
                }),
                this.$el.on("mouseleave", "li", function() {
                    d20.engine.highlightToken = !1,
                    d20.engine.debounced_renderAll()
                }),
                window.is_gm && (this.$el.on("click", ".remove", function() {
                    var t = parseInt($(this).parents("li").attr("data-currentindex"), 10);
                    d20.engine.highlightToken = !1,
                    d20.engine.debounced_renderTop();
                    var i = e.cleanList();
                    i.splice(t, 1),
                    e.model.save({
                        turnorder: JSON.stringify(i)
                    })
                }),
                $("#initiativewindow_settings").on("click", ".sortlist_numeric", function() {
                    e.recordOrderFromList();
                    var t = e.cleanList();
                    t = _.sortBy(t, function(e) {
                        return parseFloat(e.pr)
                    }),
                    e.model.set({
                        turnorder: JSON.stringify(t)
                    }).save(),
                    $("#initiativewindow_settings").dialog("close")
                }),
                $("#initiativewindow_settings").on("click", ".sortlist_numericdesc", function() {
                    e.recordOrderFromList();
                    var t = e.cleanList();
                    t = _.sortBy(t, function(e) {
                        return parseFloat(e.pr)
                    }),
                    t.reverse(),
                    e.model.set({
                        turnorder: JSON.stringify(t)
                    }).save(),
                    $("#initiativewindow_settings").dialog("close")
                }),
                $("#initiativewindow_settings").on("click", ".sortlist_alpha", function() {
                    e.recordOrderFromList();
                    var t = e.cleanList();
                    t = _.sortBy(t, function(e) {
                        return e.pr
                    }),
                    e.model.set({
                        turnorder: JSON.stringify(t)
                    }).save(),
                    $("#initiativewindow_settings").dialog("close")
                }),
                $("#initiativewindow_settings").on("click", ".sortlist_alphadesc", function() {
                    e.recordOrderFromList();
                    var t = e.cleanList();
                    t = _.sortBy(t, function(e) {
                        return e.pr
                    }),
                    t.reverse(),
                    e.model.set({
                        turnorder: JSON.stringify(t)
                    }).save(),
                    $("#initiativewindow_settings").dialog("close")
                }),
                $("#initiativewindow_settings").on("click", ".sortlist_card", function() {
                    e.recordOrderFromList();
                    var t = e.cleanList();
                    t = _.sortBy(t, function(e) {
                        e.pr = e.pr + "";
                        var t = window.escape(e.pr.substring(e.pr.length - 1, e.pr.length))
                          , i = e.pr.substring(0, e.pr.length - 1)
                          , n = 0;
                        if ("BJo" == e.pr || "RJo" == e.pr)
                            n = 1500;
                        else if ("%u2666" === t || "%u2665" === t || "%u2660" === t || "%u2663" === t) {
                            switch (i) {
                            case "A":
                                n = 14;
                                break;
                            case "K":
                                n = 13;
                                break;
                            case "Q":
                                n = 12;
                                break;
                            case "Ja":
                                n = 11;
                                break;
                            default:
                                n = parseInt(i, 10)
                            }
                            switch (t) {
                            case "%u2666":
                                n += .2;
                                break;
                            case "%u2665":
                                n += .3;
                                break;
                            case "%u2660":
                                n += .4;
                                break;
                            case "%u2663":
                                n += .1
                            }
                            n = 100 * n
                        } else
                            n = parseInt(e.pr, 10);
                        return _.isFinite(n) || (n = 0),
                        n
                    }),
                    t.reverse(),
                    e.model.set({
                        turnorder: JSON.stringify(t)
                    }).save(),
                    $("#initiativewindow_settings").dialog("close")
                }),
                $("#initiativewindow_settings").on("click", ".clearlist", function() {
                    e.clearList()
                }),
                $("#initiativewindow_settings").on("click", ".addcustom", function() {
                    e.recordOrderFromList(),
                    e.addTokenToList("-1", $("#initiativewindow_settings input.customentry").val(), $("#initiativewindow_settings input.customformula").val()),
                    $("#initiativewindow_settings input.customentry").val("")
                }),
                $("#initiativewindow_settings input.customentry").on("keyup", function(e) {
                    return 13 === e.which ? ($("#initiativewindow_settings .addcustom").trigger("click"),
                    !1) : void 0
                }))
            },
            cleanList: function() {
                var e, t = [];
                return e = this.model.currentOrderArray,
                this.windowopen ? (_.each(e, function(e) {
                    if ("-1" === e.id)
                        t.push(e);
                    else {
                        var i;
                        if (d20.Campaign.pages.each(function(t) {
                            return t.get("archived") === !0 ? !0 : void (t.thegraphics.get(e.id) && (i = t.thegraphics.get(e.id),
                            e._pageid = t.id))
                        }),
                        !i && window.is_gm)
                            return !0;
                        t.push(e)
                    }
                }),
                t) : e
            },
            _rebuildInitiativeList: function() {
                var e = this;
                if (this.windowopen) {
                    var t = this.cleanList();
                    if (0 == t.length)
                        $("#initiativewindow .characterlist").html("<p style='padding: 5px;'>There aren't currently any tokens on this page that take a turn!</p><p style='padding: 5px;'>Right-click a token and choose 'Add a Turn'. You can also use the shortcut Ctrl+U to quickly add groups.</p>");
                    else {
                        var i = -1
                          , n = "";
                        _.each(t, function(e) {
                            i++;
                            var t, r = "", o = !1;
                            if ("-1" === e.id)
                                r = e.custom,
                                o = window.is_gm;
                            else {
                                if (!e._pageid || e._pageid !== d20.Campaign.activePage().id && !window.is_gm)
                                    return !0;
                                if (t = d20.Campaign.pages.get(e._pageid).thegraphics.get(e.id),
                                !t || "map" == t.get("layer") || !window.is_gm && "gmlayer" == t.get("layer"))
                                    return !0;
                                (window.is_gm || t.get("showplayers_name") || t.currentPlayerControls() && t.get("playersedit_name")) && (r = t.get("name")),
                                (window.is_gm || t.currentPlayerControls()) && (o = !0)
                            }
                            var a = {
                                name: r,
                                pr: e.pr,
                                id: e.id,
                                avatar: t ? t.get("imgsrc") : "",
                                layer: t ? t.get("layer") : "objects",
                                idx: i,
                                iseditable: o
                            };
                            n += $("#tmpl_initiativecharacter").jqote(a)
                        }),
                        $("#initiativewindow .characterlist").html(n)
                    }
                    $("#initiativewindow .initiative.editable").droppable({
                        accept: ".draggablecard, .rolled",
                        tolerance: "pointer",
                        greedy: !0,
                        hoverClass: "dropping",
                        drop: function(t, i) {
                            console.log("Dropped onto initiative window!"),
                            e.recordOrderFromList(),
                            t.originalEvent.dropHandled = !0;
                            var n, r = $(i.draggable);
                            if (r.hasClass("rolled"))
                                n = parseInt(r.text(), 10);
                            else {
                                if (!r.hasClass("draggablecard"))
                                    return;
                                var o = r.attr("data-cardid")
                                  , a = d20.decks.cardByID(o);
                                if (!a)
                                    return void console.log("Couldn't find card!");
                                n = a.getAbbreviation()
                            }
                            var s = parseInt($(this).parents("li").attr("data-currentindex"), 10);
                            e.updateTokenInList(s, {
                                pr: n
                            })
                        }
                    }),
                    window.is_gm && $("#initiativewindow .characterlist").sortable({
                        containment: "parent",
                        axis: "y",
                        helper: "placeholder",
                        forceHelperSize: !0,
                        tolerance: "pointer",
                        stop: function() {
                            e.recordOrderFromList()
                        }
                    }).addTouch()
                }
            },
            updateTokenInList: function(e, t) {
                var i = this.cleanList()
                  , n = 0
                  , r = [];
                _.each(i, function(e) {
                    var t, i = !1;
                    "-1" === e.id ? i = window.is_gm : (t = d20.Campaign.pages.get(e._pageid).thegraphics.get(e.id),
                    (window.is_gm || t.currentPlayerControls()) && (i = !0)),
                    r[n] = i,
                    n++
                });
                for (var o in t)
                    r[e] && (i[e][o] = t[o]);
                console.log("Saving"),
                this.model.get("turnorder") === JSON.stringify(i) ? this.model.trigger("change:turnorder") : this.model.save({
                    turnorder: JSON.stringify(i)
                })
            },
            addTokenToList: function(e, t, i) {
                if (window.is_gm) {
                    var n = this.cleanList()
                      , r = {
                        id: e,
                        pr: "0",
                        custom: t ? t : ""
                    };
                    i && (r.formula = i),
                    n.push(r),
                    this.model.save({
                        turnorder: JSON.stringify(n)
                    })
                }
            },
            recordOrderFromList: function() {
                var e = this.cleanList();
                if ($("#initiativewindow .characterlist li").each(function() {
                    var t = parseInt($(this).attr("data-currentindex"), 10);
                    $(this).find(".initiative input").length > 0 && (e[t].pr = $(this).find(".initiative input").val())
                }),
                window.is_gm) {
                    var t = -1;
                    e = _.sortBy(e, function() {
                        t++;
                        var e = $("#initiativewindow .characterlist li[data-currentindex=" + t + "]");
                        return e.length > 0 ? $("#initiativewindow .characterlist li").index(e) : 1e3
                    })
                }
                this.model.save({
                    turnorder: JSON.stringify(e)
                })
            },
            showWindow: function() {
                var e = this
                  , t = {};
                window.is_gm && (t = {
                    y: function() {
                        $("#initiativewindow_settings").dialog({
                            modal: !1,
                            title: "Turn Order Settings",
                            beforeClose: function() {}
                        })
                    },
                    "]": function() {
                        e.nextTurn()
                    }
                }),
                this.$el.dialog({
                    modal: !1,
                    width: 160,
                    height: 350,
                    title: "Turn Order",
                    zIndex: 10500,
                    position: [60, $(window).height() - d20.utils.playerZoneHeight() - 400],
                    buttons: t,
                    closeOnEscape: !1,
                    beforeClose: function() {
                        window.is_gm && _.defer(function() {
                            e.windowopen && e.endRounds()
                        }),
                        e.$el.parents(".ui-dialog").removeClass("dialog-collapsed")
                    }
                }),
                window.is_gm || this.$el.parents(".ui-dialog").find(".ui-dialog-titlebar-close").remove(),
                this.$el.parents(".ui-dialog").find(".ui-button").addClass("pictos").addClass("bigbuttonwithicons")
            },
            endRounds: function() {
                this.model.save({
                    initiativepage: !1
                })
            },
            nextTurn: function() {
                this.recordOrderFromList();
                var e = this.cleanList();
                if (!(e.length < 2)) {
                    var t = e.splice(0, 1);
                    e.push(t[0]);
                    var i = e[0];
                    if (i.formula) {
                        console.log("Entering formula loop");
                        try {
                            if (console.log("Doing calc"),
                            i.pr = parseInt(i.pr, 10) + parseInt(i.formula, 10),
                            !_.isFinite(i.pr))
                                throw i.pr = 0,
                                "NaN"
                        } catch (n) {
                            console.log("Caught error");
                            var r = {
                                who: "error",
                                type: "error",
                                content: "The turn order calculation " + i.formula + " is invalid."
                            };
                            d20.textchat.incoming(!1, r)
                        }
                    }
                    console.log("Setting updated turn order"),
                    this.model.set({
                        turnorder: JSON.stringify(e)
                    }).save()
                }
            },
            handlePageChange: function() {
                var e = this.model.get("initiativepage");
                return e && !this.windowopen ? (this.rebuildInitiativeList(),
                this.showWindow(),
                void (this.windowopen = !0)) : !e && this.windowopen ? (this.$el.dialog("close"),
                void (this.windowopen = !1)) : void 0
            },
            clearList: function() {
                var e = this;
                $("<div>Are you sure you want to clear the turns list?</div>").dialog({
                    title: "Confirm",
                    buttons: {
                        Clear: function() {
                            $(this).dialog("destroy").remove(),
                            e.model.set({
                                turnorder: JSON.stringify([])
                            }).save()
                        },
                        Cancel: function() {
                            $(this).dialog("destroy").remove()
                        }
                    },
                    beforeClose: function() {
                        $(this).dialog("destroy").remove()
                    },
                    modal: !0
                })
            }
        });
        var S = Backbone.Model.extend({
            defaults: {
                name: "",
                avatar: "",
                placement: 99
            },
            initialize: function() {
                if (this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                this.editor = new k({
                    model: this
                }),
                this.allowDelays = {
                    update: !0
                },
                this.isNew()
            },
            isNew: function() {
                return !this.persisted
            },
            getAbbreviation: function() {
                for (var e = this.get("name").split(" "), t = "", i = 0; 3 > i && i < e.length; i++) {
                    var n;
                    switch (e[i].toLowerCase()) {
                    case "one":
                        n = "1";
                        break;
                    case "two":
                    case "tw":
                        n = "2";
                        break;
                    case "three":
                        n = "3";
                        break;
                    case "four":
                        n = "4";
                        break;
                    case "five":
                        n = "5";
                        break;
                    case "six":
                        n = "6";
                        break;
                    case "seven":
                        n = "7";
                        break;
                    case "eight":
                        n = "8";
                        break;
                    case "nine":
                        n = "9";
                        break;
                    case "ten":
                        n = "10";
                        break;
                    case "jack":
                        n = "Ja";
                        break;
                    case "joker":
                        n = "Jo";
                        break;
                    case "of":
                        n = "";
                        break;
                    case "spades":
                        n = "\u2660";
                        break;
                    case "clubs":
                        n = "\u2663";
                        break;
                    case "diamonds":
                        n = "\u2666";
                        break;
                    case "hearts":
                        n = "\u2665";
                        break;
                    default:
                        n = e[i].toString().substring(0, 1).toUpperCase()
                    }
                    t += n
                }
                return t
            }
        })
          , k = Backbone.View.extend({
            _template: $("#tmpl_cardeditor"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "showDialog", "updateModel"),
                this.model.bind("change", function() {
                    e.$el.is(":visible") && e.render()
                }),
                this.$el.on("click", ".deletecard", function() {
                    var t = $("<div>Are you sure you want to delete this card? This cannot be undone.</div>");
                    t.dialog({
                        modal: !0,
                        title: "Confirm Deletion",
                        buttons: {
                            Delete: function() {
                                e.model.destroy(),
                                e.$el.dialog("destroy"),
                                t.dialog("destroy").remove()
                            },
                            Cancel: function() {
                                t.dialog("destroy").remove()
                            }
                        },
                        beforeClose: function() {
                            t.dialog("destroy").remove()
                        }
                    })
                })
            },
            render: function() {
                var e = this;
                this.$el.html(this._template.jqote(this.model)),
                this.$el.find(".name").val(this.model.get("name")),
                d20.utils.setupAvatar(this.$el.find(".avatar"), e)
            },
            showDialog: function() {
                var e = this;
                this.render(),
                this.$el.dialog({
                    title: this.model.get("name"),
                    width: 275,
                    height: 500,
                    buttons: {
                        "Save Changes": function() {
                            e.updateModel(),
                            e.$el.dialog("destroy")
                        },
                        Cancel: function() {
                            e.$el.dialog("destroy")
                        }
                    },
                    beforeClose: function() {
                        $(this).dialog("destroy")
                    }
                });
                var e = this
            },
            updateModel: function() {
                var e = {};
                e.name = this.$el.find(".name").val(),
                this.model.save(e)
            }
        })
          , M = Backbone.Collection.extend({
            model: S,
            initialize: function() {
                this.on("add", function() {
                    d20.decks.refreshDecksList()
                })
            }
        })
          , A = Backbone.Model.extend({
            defaults: {
                currentHand: "",
                type: "playerhand",
                parentid: "",
                controlledby: "",
                currentView: "bydeck",
                currentMeta: ""
            },
            initialize: function() {
                _.bindAll(this, "currentPlayerVisibleCardBacks");
                var e = this;
                if (this.hasDeckIDs = [],
                this.id)
                    this.persisted = !0;
                else {
                    var t = generateUUID();
                    this.set({
                        id: t
                    }),
                    this.url = this.collection.url + t
                }
                this.rebuildDeckIdList = function() {
                    for (var t = e.currentHandArray(), i = [], n = 0; n < t.length; n++) {
                        var r = e.cardAtIndex(n);
                        r.collection && i.push(r.collection.deck.id)
                    }
                    e.hasDeckIDs = _.uniq(i),
                    e.view && e.view.render()
                }
                ;
                var i = _.debounce(this.rebuildDeckIdList, 100);
                this.bind("change:currentHand", function() {
                    i()
                }),
                i(),
                this.view = new H({
                    model: this
                })
            },
            cardAtIndex: function(e) {
                var t = this.currentHandArray()[e];
                return d20.decks.cardByID(t)
            },
            addCard: function(e, t) {
                var i = this.currentHandArray();
                if (i.push(e),
                t) {
                    var n = this.currentMeta();
                    n[e] = t,
                    this.save({
                        currentHand: i.join(","),
                        currentMeta: JSON.stringify(n)
                    })
                } else
                    this.save({
                        currentHand: i.join(",")
                    })
            },
            allCards: function() {
                for (var e = [], t = this.currentHandArray(), i = 0; i < t.length; i++)
                    e.push(this.cardAtIndex(i));
                return e
            },
            cardsByDeck: function(e) {
                return _.filter(this.allCards(), function(t) {
                    return t.collection && t.collection.deck.id === e
                })
            },
            currentHandArray: function() {
                var e = this.get("currentHand");
                return "" == e ? [] : e.split(",")
            },
            currentMeta: function() {
                var e;
                try {
                    e = JSON.parse(this.get("currentMeta"))
                } catch (t) {
                    e = {}
                }
                return e
            },
            currentPlayerPermissions: function(e) {
                if (0 == this.currentHandArray().length)
                    return {
                        seenum: !1,
                        seefronts: !1
                    };
                if ("playerhand" == this.get("type") && this.get("parentid") == window.currentPlayer.id)
                    return {
                        seenum: !0,
                        seefronts: !0
                    };
                var t = e.collection.deck;
                return window.is_gm ? {
                    seenum: t.get("gm_seenumcards"),
                    seefronts: t.get("gm_seefrontofcards")
                } : {
                    seenum: t.get("players_seenumcards"),
                    seefronts: t.get("players_seefrontofcards")
                }
            },
            removeCardsByID: function(e) {
                for (var t = this.currentHandArray(), i = this.currentMeta(), n = 0; n < e.length; n++) {
                    var r = _.indexOf(t, e[n]);
                    -1 !== r && t.splice(r, 1),
                    delete i[e[n]]
                }
                this.save({
                    currentHand: t.join(","),
                    currentMeta: JSON.stringify(i)
                })
            },
            currentPlayerVisibleCardBacks: function() {
                for (var e = [], t = {}, i = this.allCards(), n = 0; n < i.length; n++)
                    i[n].collection && (t[i[n].collection.deck.id] ? t[i[n].collection.deck.id]++ : t[i[n].collection.deck.id] = 1);
                for (var n = 0; n < this.hasDeckIDs.length; n++) {
                    var r = {
                        num: t[this.hasDeckIDs[n]] || 0
                    }
                      , o = d20.Campaign.decks.get(this.hasDeckIDs[n]);
                    "playerhand" == this.get("type") && this.get("parentid") == window.currentPlayer.id && (r.shownum = !0),
                    r.shownum = o.get(window.is_gm ? "gm_seenumcards" : "players_seenumcards"),
                    r.avatar = o.get("avatar"),
                    e.push(r)
                }
                return e
            }
        })
          , H = Backbone.View.extend({
            _template: $("#tmpl_hand"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "showDialog"),
                this.model.bind("change:currentView", function() {
                    e.$el.is(":visible") && e.render()
                }),
                _.defer(function() {
                    if ("playerhand" == e.model.get("type")) {
                        var t = d20.Campaign.players.get(e.model.get("parentid"));
                        t && t.view && t.view.$el.find(".deckhands").append(e.$el)
                    }
                    e.render()
                }),
                this.$el.on("click", ".cardback", function(t) {
                    e.$el.find(".handcontainer").hasClass("open") ? e.hideDialog() : e.showDialog(),
                    t.stopPropagation()
                }),
                this.$el.on("click", ".bycard", function() {
                    e.model.save({
                        currentView: "bycard"
                    })
                }),
                this.$el.on("click", ".bydeck", function() {
                    e.model.save({
                        currentView: "bydeck"
                    })
                }),
                this.debounced_captureHandFromDom = _.debounce(this.captureHandFromDom, 100),
                this.$el.on("sortupdate", ".cardgroup", function() {
                    console.log("Capture hand from dom!"),
                    e.debounced_captureHandFromDom()
                }),
                this.$el.on("postTabletopPlay", ".cardgroup", function(t, i) {
                    var n = e.model.currentMeta();
                    n[i.get("cardid")] && (console.log("Setting meta for " + i.get("cardid")),
                    i.save(n[i.get("cardid")]))
                })
            },
            render: function() {
                var t = this
                  , i = !1
                  , n = 0
                  , r = 0;
                this.$el.find(".handcontainer").hasClass("open") && (i = !0,
                n = this.$el.find(".handcontainer").scrollTop(),
                r = this.$el.find(".handcontainer").css("left"));
                var o = [];
                this.$el.find(".trading").each(function() {
                    o.push($(this).attr("data-cardid"))
                }),
                this.$el.html(this._template.jqote({
                    model: this.model,
                    showopen: i,
                    oldoffset: r,
                    metaData: this.model.currentMeta()
                })),
                this.$el.find(".handcontainer").scrollTop(n),
                _.defer(function() {
                    if ("playerhand" == t.model.get("type") && t.model.get("parentid") == window.currentPlayer.id) {
                        for (var i = 0; i < o.length; i++)
                            t.$el.find(".cardinhand[data-cardid=" + o[i] + "]").addClass("trading");
                        var n = t.$el.find(".handcontainer");
                        t.$el.find(".handcontainer .cardgroup").sortable({
                            forcePlaceholderSize: !0,
                            appendTo: "body",
                            helper: "clone",
                            beforeStop: function(t, i) {
                                var r = {
                                    left: i.position.left,
                                    top: i.position.top,
                                    right: i.position.left + $(i.item).width(),
                                    bottom: i.position.top + $(i.item).height()
                                }
                                  , o = n.offset()
                                  , a = {
                                    left: o.left,
                                    top: o.top,
                                    right: o.left + n.width(),
                                    bottom: o.top + n.height()
                                };
                                e(r, a) ? (console.log("Card sorted!"),
                                t.originalEvent.dropHandled = !0) : console.log("Card played to tabletop?")
                            },
                            out: function(e, t) {
                                t.item.isOutOfList = !0
                            },
                            over: function(e, t) {
                                t.item.isOutOfList = !1
                            },
                            scroll: !1
                        })
                    }
                })
            },
            showDialog: function() {
                400 * this.$el.parents(".player").find(".handcontainer.open").length;
                this.$el.find(".handcontainer").addClass("open")
            },
            hideDialog: function() {
                this.$el.find(".handcontainer").removeClass("open")
            },
            captureHandFromDom: function() {
                var e = [];
                this.$el.find(".handcontainer .cardinhand").each(function() {
                    e.push($(this).attr("data-cardid"))
                });
                var t = this.model.currentMeta();
                _.each(t, function(i, n) {
                    -1 === e.indexOf(n) && delete t[n]
                }),
                this.model.save({
                    currentHand: e.join(","),
                    currentMeta: JSON.stringify(t)
                })
            }
        })
          , P = Backbone.Collection.extend({
            model: A,
            url: "/hands/",
            initialize: function() {
                this.playerHands = {},
                this.deckHands = {},
                this.on("add", function(e) {
                    if ("playerhand" == e.get("type"))
                        if (this.playerHands[e.get("parentid")]) {
                            console.log("Merging all hands for player together...");
                            var t = this.playerHands[e.get("parentid")][0];
                            t.save({
                                currentHand: _.union(t.currentHandArray(), e.currentHandArray()).join(",")
                            }),
                            e.view && e.view.$el && e.view.$el.hide(),
                            e.destroy()
                        } else
                            this.playerHands[e.get("parentid")] = [],
                            this.playerHands[e.get("parentid")].push(e)
                })
            },
            addCardToHandForPlayer: function(e, t, i) {
                var n = !1;
                if (this.playerHands[t.id] && this.playerHands[t.id].length > 0 && (n = this.playerHands[t.id][0]),
                n)
                    n.addCard(e.id, i);
                else {
                    var r = d20.Campaign.hands.create({
                        type: "playerhand",
                        parentid: t.id,
                        currentHand: e.id
                    });
                    r.rebuildDeckIdList()
                }
                d20.decks.refreshDiscardPiles()
            }
        })
          , O = Backbone.Model.extend({
            defaults: {
                initiated_by: "",
                received_by: "",
                initiator_cards: "",
                receiver_cards: "",
                initiator_accepts: !1,
                receiver_accepts: !1
            },
            initialize: function() {
                if (this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                console.log("Trade initialized");
                return this.isInitOrRec() ? (this.view = new D({
                    model: this
                }),
                this.bind("remove", function() {
                    this.view.$el.dialog("destroy"),
                    this.view.$el.off(),
                    this.view.$el.remove(),
                    console.log("view should be closed."),
                    $(".cardinhand.trading").removeClass("trading")
                }),
                this.bind("change:initiator_accepts change:receiver_accepts", function() {
                    var e = this;
                    if (this.get("initiator_accepts") && this.get("receiver_accepts") && this.isInitOrRec()) {
                        console.log("Performing trade...");
                        var t = this.cardsOf("initiator")
                          , i = this.cardsOf("receiver")
                          , n = [];
                        $("#player_" + window.currentPlayer.id + " .trading").each(function() {
                            var e = $(this).parents(".handcontainer").attr("data-handid");
                            n.push(e),
                            $(this).remove()
                        }),
                        n = _.uniq(n);
                        for (var r = 0; r < n.length; r++) {
                            var o = d20.Campaign.hands.get(n[r]);
                            o.view.captureHandFromDom()
                        }
                        _.defer(function() {
                            "initiator" == e.isInitOrRec() ? (_.each(i, function(e) {
                                d20.Campaign.hands.addCardToHandForPlayer(e, window.currentPlayer)
                            }),
                            e.save({
                                initiator_done: !0
                            })) : (_.each(t, function(e) {
                                d20.Campaign.hands.addCardToHandForPlayer(e, window.currentPlayer)
                            }),
                            e.save({
                                receiver_done: !0
                            }))
                        })
                    }
                }),
                void this.bind("change:initiator_done change:receiver_done", function() {
                    var e = this;
                    this.get("initiator_done") && this.get("receiver_done") && "initiator" == this.isInitOrRec() && _.defer(function() {
                        e.destroy()
                    })
                })) : void console.log("I am not involved, ignoring.")
            },
            isInitOrRec: function(e) {
                return e || (e = window.currentPlayer.id),
                e == this.get("initiated_by") ? "initiator" : e == this.get("received_by") ? "receiver" : !1
            },
            cardsOf: function(e) {
                for (var t = this, i = [], n = this.get(e + "_cards"), r = "" == n ? [] : n.split(","), o = 0; o < r.length; o++) {
                    var a = d20.decks.cardByID(r[o]);
                    a ? i.push(a) : (console.log("Unable to find card " + r[o]),
                    _.defer(function() {
                        t.destroy()
                    }))
                }
                return i
            },
            addCardToType: function(e, t) {
                var i = this.cardsOf(t)
                  , n = _.pluck(i, "id");
                n.push(e);
                var r = {};
                r[t + "_cards"] = n.join(","),
                r.initiator_accepts = !1,
                r.receiver_accepts = !1,
                this.save(r)
            }
        })
          , D = Backbone.View.extend({
            _template: $("#tmpl_cardtrade"),
            initialize: function() {
                var e = this;
                this.model.bind("change", function() {
                    e.render()
                }),
                this.render(),
                this.showDialog(),
                this.$el.on("click", ".accepttrade", function() {
                    e.acceptTrade()
                }),
                this.$el.on("click", ".declinetrade", function() {
                    e.cancelTrade()
                })
            },
            render: function() {
                var e = this;
                this.$el.html(this._template.jqote({
                    model: this.model,
                    initiator: d20.Campaign.players.get(this.model.get("initiated_by")).toJSON(),
                    receiver: d20.Campaign.players.get(this.model.get("received_by")).toJSON()
                })),
                this.$el.find(".dropzone").droppable({
                    accept: ".cardinhand, .draggablecard",
                    hoverClass: "dropping",
                    drop: function(t, i) {
                        t.originalEvent.dropHandled = !0;
                        var n = $(i.draggable);
                        if (!n.hasClass("trading")) {
                            var r = e.model
                              , o = r.isInitOrRec();
                            o && (r.addCardToType(n.attr("data-cardid"), o),
                            n.addClass("trading"))
                        }
                    }
                })
            },
            showDialog: function() {
                var e = this;
                this.$el.dialog({
                    title: "Trade Cards",
                    modal: !1,
                    width: 700,
                    height: 500,
                    beforeClose: function() {
                        return _.defer(function() {
                            e.cancelTrade()
                        }),
                        !1
                    }
                })
            },
            cancelTrade: function() {
                this.model.destroy()
            },
            acceptTrade: function() {
                var e = this.model.isInitOrRec();
                this.model.save("initiator" == e ? {
                    initiator_accepts: !0
                } : {
                    receiver_accepts: !0
                })
            }
        })
          , L = Backbone.Collection.extend({
            url: "/cardtrades/",
            model: O
        })
          , I = Backbone.Model.extend({
            defaults: {
                name: "",
                currentDeck: "",
                currentIndex: -1,
                currentCardShown: !0,
                showplayers: !0,
                playerscandraw: !0,
                avatar: "",
                shown: !1,
                players_seenumcards: !0,
                players_seefrontofcards: !1,
                gm_seenumcards: !0,
                gm_seefrontofcards: !1,
                infinitecards: !1,
                cardSequencer: -1,
                cardsplayed: "faceup",
                defaultheight: "",
                defaultwidth: "",
                discardpilemode: "none",
                discardPile: "",
                deckpilemode: "none",
                treatasdrawing: !0
            },
            initialize: function() {
                var e = this;
                if (_.bindAll(this, "currentCardImage", "shuffle", "drawCard", "finishDrawingCard", "imageForCardAtIndex"),
                this.updateDiscardPile = _.debounce(this._updateDiscardPile, 100),
                this.id)
                    this.persisted = !0;
                else {
                    var t = generateUUID();
                    this.set({
                        id: t
                    }),
                    this.url = this.collection.url + t
                }
                this.cards = new M,
                this.cards.url = "/decks/" + this.id + "/cards/",
                this.cards.deck = this,
                this.editor = new F({
                    model: this
                }),
                this.stack = new B({
                    model: this
                }),
                this.discardpile = new j({
                    model: this
                }),
                this.deckpile = new N({
                    model: this
                }),
                _.defer(function() {
                    e.cards.backboneFirebase = new BackboneFirebase(e.cards),
                    e.get("shown") && e.stack.showDeck(!0)
                }),
                this.allowDelays = {
                    update: !0
                },
                this.bind("change:players_seenumcards change:players_seefrontofcards change:gm_seenumcards change:gm_seefrontofcards", function() {
                    console.log("deck settings changed!");
                    var e = this.findCardsInPlay()
                      , t = [];
                    _.each(e, function(e) {
                        "hand" == e.type && t.push(e.id)
                    }),
                    _.uniq(t),
                    _.each(t, function(e) {
                        d20.Campaign.hands.get(e).view.render()
                    })
                }),
                this.isNew()
            },
            isNew: function() {
                return !this.persisted
            },
            deckOrder: function() {
                return _.isArray(this.get("currentDeck")) ? this.get("currentDeck") : "" == this.get("currentDeck") ? [] : this.get("currentDeck").split(",")
            },
            imageForCardAtIndex: function(e, t) {
                var i, n = this.deckOrder()[e], r = this.cards.get(n);
                return i = r ? r.get("avatar") : this.get("avatar"),
                t ? i : (-1 !== i.indexOf("files.d20.io") && (i = i.replace("/med", "/thumb")),
                i)
            },
            currentCardImage: function(e) {
                return this.imageForCardAtIndex(this.get("currentIndex"), e)
            },
            cardAtIndex: function(e) {
                var t = this.deckOrder()[e];
                return this.cards.get(t)
            },
            currentCard: function() {
                return this.cardAtIndex(this.get("currentIndex"))
            },
            recallCount: function() {
                var e = this.findCardsInPlay()
                  , t = 0
                  , i = 0;
                _.each(e, function(e) {
                    "hand" == e.type ? t++ : "graphic" == e.type && i++
                });
                var n = this.cards.length - t - i;
                return n = 0 > n ? 0 : n,
                {
                    inhands: t,
                    ontable: i,
                    unplayed: n,
                    total: this.cards.length
                }
            },
            findCardsInPlay: function() {
                var e = []
                  , t = _.pluck(this.cards.models, "id")
                  , i = this;
                return d20.Campaign.hands.each(function(n) {
                    if (-1 != _.indexOf(n.hasDeckIDs, i.id))
                        for (var r = n.currentHandArray(), o = 0; o < r.length; o++)
                            -1 != _.indexOf(t, r[o]) && e.push({
                                type: "hand",
                                id: n.id,
                                cardid: r[o],
                                index: o
                            })
                }),
                d20.Campaign.pages.each(function(i) {
                    return i.thegraphics ? void i.thegraphics.each(function(i) {
                        if ("" !== i.get("cardid")) {
                            if (-1 == _.indexOf(t, i.get("cardid")))
                                return;
                            e.push({
                                type: "graphic",
                                id: i.id,
                                cardid: i.get("cardid"),
                                pageid: i.collection.page.id
                            })
                        }
                    }) : !0
                }),
                e
            },
            shuffle: function() {
                var e = []
                  , t = []
                  , i = this.findCardsInPlay()
                  , n = this;
                if (this.cards.each(function(e) {
                    (0 === $.grep(i, function(t) {
                        return t.cardid === e.id
                    }).length || n.get("infinitecards")) && t.push(e.id)
                }),
                0 == t.length)
                    return void alert("All cards for this deck are either in player hands or in play on the table. Recall cards to shuffle the deck.");
                for (; t.length > 0; ) {
                    var r = Math.floor(Math.random() * t.length)
                      , o = t.splice(r, 1);
                    e.push(o[0])
                }
                this.set({
                    currentDeck: e.join(","),
                    discardPile: "",
                    currentIndex: -1,
                    cardSequencer: 0
                }).save()
            },
            drawCard: function(e) {
                var t = this.findCardsInPlay();
                if (void 0 === e && (e = this.get("currentIndex")),
                0 == this.cards.length)
                    return void alert("Error. This deck doesn't seem to have any cards! Add some cards to the deck before drawing from it.");
                var i = this.deckOrder();
                if (0 == i.length) {
                    if (0 != t.length)
                        return void alert("It looks like you're at the end of the deck. Shuffle the deck to draw more cards.");
                    console.log("Auto shuffling"),
                    this.shuffle()
                }
                var n = e + 1;
                if (!this.get("infinitecards"))
                    for (; n < i.length && 0 !== $.grep(t, function(e) {
                        return e.cardid === i[n]
                    }).length; )
                        console.log("Skipping card, it's already been played to the tabletop."),
                        n++;
                return !this.get("infinitecards") || this.get("infinitecardstype") && "random" !== this.get("infinitecardstype") ? this.get("infinitecards") && "cycle" === this.get("infinitecardstype") ? n % this.cards.length === 0 ? (this.shuffle(),
                0) : n % this.cards.length : n > this.deckOrder().length - 1 ? (console.log("Returning -1!"),
                -1) : n : Math.floor(Math.random() * this.cards.length)
            },
            finishDrawingCard: function(e, t) {
                this.set({
                    currentIndex: e,
                    currentCardShown: !t,
                    cardSequencer: this.get("cardSequencer") + 1
                }).save(),
                this.updateDiscardPile()
            },
            recallCards: function(e) {
                var t = this.findCardsInPlay();
                _.each(t, function(t) {
                    if ("all" == e || e == t.type) {
                        if ("hand" == t.type) {
                            var i = d20.Campaign.hands.get(t.id)
                              , n = i.get("currentHand")
                              , r = new RegExp(t.cardid + "[,]*","g");
                            i.set({
                                currentHand: n.replace(r, "")
                            }).save()
                        }
                        if ("graphic" == t.type) {
                            var o = d20.Campaign.pages.get(t.pageid).thegraphics.get(t.id);
                            o.destroy()
                        }
                    }
                })
            },
            _updateDiscardPile: function() {
                var e = this
                  , t = this.getDiscardPile()
                  , i = this.findCardsInPlay()
                  , n = -1
                  , r = !1;
                _.each(this.deckOrder(), function(o) {
                    return n++,
                    n >= e.get("currentIndex") && (n != e.get("currentIndex") || 0 != e.get("currentCardShown")) ? !0 : 0 !== $.grep(i, function(e) {
                        return e.cardid === o
                    }).length ? (-1 !== t.indexOf(o) && (t = _.without(t, o),
                    r = !0),
                    !0) : void (-1 === t.indexOf(o) && (r = !0,
                    t.push(o)))
                }),
                r && this.save({
                    discardPile: t.join(",")
                })
            },
            getDiscardPile: function() {
                return "" === this.get("discardPile") ? [] : this.get("discardPile").split(",")
            },
            toJSON: function() {
                var e = _.clone(this.attributes);
                return delete e.cards,
                _.isArray(e.currentDeck) && (e.currentDeck = e.currentDeck.join(",")),
                e
            }
        })
          , F = Backbone.View.extend({
            _template: $("#tmpl_deckeditor"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "showDialog", "updateModel"),
                this.model.bind("change", function() {
                    e.$el.is(":visible") && e.render()
                }),
                this.model.cards.bind("add remove change", function() {
                    e.$el.is(":visible") && e.render()
                }),
                this.$el.on("click", ".deletedeck", function() {
                    var t = $("<div>Are you sure you want to delete this deck? This cannot be undone.</div>");
                    t.dialog({
                        modal: !0,
                        title: "Confirm Deletion",
                        buttons: {
                            Delete: function() {
                                e.model.destroy(),
                                e.$el.dialog("destroy"),
                                t.dialog("destroy").remove()
                            },
                            Cancel: function() {
                                t.dialog("destroy").remove()
                            }
                        },
                        beforeClose: function() {
                            t.dialog("destroy").remove()
                        }
                    })
                }),
                this.$el.on("click", ".dupedeck", function() {
                    var t = e.model.toJSON();
                    delete t.id,
                    delete t.currentDeck,
                    delete t.currentIndex;
                    var i = e.model.collection.create(t);
                    e.model.cards.each(function(e) {
                        t = e.toJSON(),
                        delete t.id,
                        i.cards.create(t)
                    })
                }),
                this.$el.on("click", ".card", function() {
                    var t = $(this).attr("data-card-id")
                      , i = e.model.cards.get(t);
                    i && i.editor.showDialog()
                }),
                this.$el.on("click", ".addcard", function() {
                    e.updateModel();
                    var t = e.model.cards.create({
                        name: "New Card"
                    });
                    t.editor.showDialog()
                })
            },
            render: function() {
                var e = this;
                this.$el.html(this._template.jqote(this.model)),
                this.$el.find(".name").val(this.model.get("name")),
                this.model.get("showplayers") && this.$el.find(".showplayers").attr("checked", "checked"),
                this.model.get("playerscandraw") && this.$el.find(".playerscandraw").attr("checked", "checked"),
                this.model.get("players_seenumcards") && this.$el.find(".players_seenumcards").attr("checked", "checked"),
                this.model.get("players_seefrontofcards") && this.$el.find(".players_seefrontofcards").attr("checked", "checked"),
                this.model.get("gm_seenumcards") && this.$el.find(".gm_seenumcards").attr("checked", "checked"),
                this.model.get("gm_seefrontofcards") && this.$el.find(".gm_seefrontofcards").attr("checked", "checked"),
                this.model.get("infinitecards") ? (this.$el.find(".infinitecards").attr("checked", "checked"),
                this.$el.find(".infinitecardstype input").prop("disabled", !1),
                this.$el.find(".infinitecardstype").removeClass("inputs-disabled"),
                this.model.get("infinitecardstype") ? this.$el.find(".infinitecardstype input[value='" + this.model.get("infinitecardstype") + "']").prop("checked", !0) : this.$el.find(".infinitecardstype input").first().prop("checked", !0)) : (this.$el.find(".infinitecardstype input").prop("disabled", !0),
                this.$el.find(".infinitecardstype").addClass("inputs-disabled"),
                this.$el.find(".infinitecardstype input").first().prop("checked", !0)),
                this.$el.find(".cardsplayed").val(this.model.get("cardsplayed")),
                this.$el.find(".defaultwidth").val(this.model.get("defaultwidth")),
                this.$el.find(".defaultheight").val(this.model.get("defaultheight")),
                this.$el.find(".discardpilemode").val(this.model.get("discardpilemode")),
                this.$el.find(".deckpilemode").val(this.model.get("deckpilemode")),
                this.$el.find(".treatasdrawing").val(this.model.get("treatasdrawing").toString()),
                this.model.cards.each(function(t) {
                    e.$el.find("tbody").append("<tr class='card' data-card-id='" + t.id + "'><td>" + ("" != t.get("avatar") ? "<img src='" + t.get("avatar") + "' />" : "") + "</td><td>" + t.get("name") + "</td></tr>")
                }),
                this.$el.find(".infinitecards").on("change", function() {
                    $(this).is(":checked") ? (e.$el.find(".infinitecardstype input").prop("disabled", !1),
                    e.$el.find(".infinitecardstype").removeClass("inputs-disabled")) : (e.$el.find(".infinitecardstype input").prop("disabled", !0),
                    e.$el.find(".infinitecardstype").addClass("inputs-disabled"))
                }),
                d20.utils.setupAvatar(this.$el.find(".avatar"), e)
            },
            showDialog: function() {
                var e = this;
                this.render();
                var t = 775
                  , i = $(window).height() - d20.utils.playerZoneHeight();
                i > t && (i = t),
                this.$el.dialog({
                    title: this.model.get("name"),
                    width: 400,
                    height: i,
                    position: ["center", 30],
                    buttons: {
                        "Save Changes": function() {
                            e.updateModel(),
                            e.$el.dialog("destroy")
                        },
                        Cancel: function() {
                            e.$el.dialog("destroy")
                        }
                    },
                    beforeClose: function() {
                        $(this).dialog("destroy")
                    }
                });
                var e = this
            },
            updateModel: function() {
                var e = {};
                e.showplayers = this.$el.find(".showplayers").is(":checked"),
                e.playerscandraw = this.$el.find(".playerscandraw").is(":checked"),
                e.name = this.$el.find(".name").val(),
                e.players_seefrontofcards = this.$el.find(".players_seefrontofcards").is(":checked"),
                e.players_seenumcards = this.$el.find(".players_seenumcards").is(":checked"),
                e.gm_seefrontofcards = this.$el.find(".gm_seefrontofcards").is(":checked"),
                e.gm_seenumcards = this.$el.find(".gm_seenumcards").is(":checked"),
                e.infinitecards = this.$el.find(".infinitecards").is(":checked"),
                e.infinitecardstype = this.$el.find(".infinitecardstype input:checked").val(),
                e.cardsplayed = this.$el.find(".cardsplayed").val(),
                e.defaultwidth = this.$el.find(".defaultwidth").val(),
                e.defaultheight = this.$el.find(".defaultheight").val(),
                e.discardpilemode = this.$el.find(".discardpilemode").val() || "none",
                e.deckpilemode = this.$el.find(".deckpilemode").val() || "none",
                e.treatasdrawing = "false" === this.$el.find(".treatasdrawing").val() ? !1 : !0,
                this.model.save(e)
            }
        })
          , B = Backbone.View.extend({
            _template: $("#tmpl_deckstack"),
            initialize: function() {
                _.bindAll(this, "render", "showDeck");
                var e = this;
                this.$el.addClass("adeck"),
                this.model.bind("change:playerscandraw change:currentCardShown change:cardSequencer change:discardpilemode change:name change:deckpilemode", function() {
                    e.$el.is(":visible") && e.render()
                }),
                this.model.bind("change:shown change:showplayers", function() {
                    e.model.get("shown") ? e.showDeck(!0) : e.hideDeck(!0)
                }),
                this.$el.on("currentCardRemoved", function() {
                    e.model.save({
                        currentCardShown: !1
                    })
                }),
                this.model.bind("remove", function() {
                    e.$el.remove()
                })
            },
            render: function() {
                this.$el.html(this._template.jqote(this.model)),
                this.$el.find(".drawable").length > 0 && this.$el.find(".draggablecard").draggable({
                    revert: !0,
                    distance: 10,
                    revertDuration: 0,
                    helper: "clone",
                    appendTo: "body",
                    scroll: !1
                }).addTouch()
            },
            showDeck: function(e) {
                return window.is_gm || this.model.get("showplayers") ? (this.render(),
                this.$el.appendTo($("#showndecks")),
                void (e || this.model.save({
                    shown: !0
                }))) : void (this.$el.is(":visible") && this.$el.remove())
            },
            hideDeck: function(e) {
                this.$el.remove(),
                e || this.model.save({
                    shown: !1
                })
            }
        })
          , j = Backbone.View.extend({
            _template: $("#tmpl_discardhand"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "showDialog"),
                this.model.on("change:discardPile", function() {
                    e.$el.is(":visible") && e.render()
                }),
                this.$el.on("click", ".drawnext", function() {
                    var t = e.getPileCards();
                    "drawtop" === e.model.get("discardpilemode") ? d20.Campaign.hands.addCardToHandForPlayer(t[t.length - 1], window.currentPlayer) : d20.Campaign.hands.addCardToHandForPlayer(t[0], window.currentPlayer)
                })
            },
            getPileCards: function() {
                var e = [];
                return _.each(this.model.getDiscardPile(), function(t) {
                    e.push(d20.decks.cardByID(t))
                }),
                e
            },
            render: function() {
                var e = this
                  , t = !1
                  , i = 0
                  , n = 0;
                this.$el.is(":visible") && (i = this.$el.parents(".ui-dialog-content").scrollTop()),
                e.model.updateDiscardPile();
                var r = {};
                r.id = this.model.id,
                r.allCards = this.getPileCards(),
                r.discardmode = this.model.get("discardpilemode"),
                this.$el.html(this._template.jqote({
                    model: r,
                    showopen: t,
                    oldoffset: n
                })),
                this.$el.find(".cardinhand").draggable({
                    revert: !0,
                    distance: 10,
                    revertDuration: 0,
                    helper: "clone",
                    appendTo: "body",
                    scroll: !1
                }).addTouch(),
                this.$el.parents(".ui-dialog-content").scrollTop(i)
            },
            showDialog: function() {
                this.render();
                var e = 165;
                ("choosefronts" === this.model.get("discardpilemode") || "choosebacks" === this.model.get("discardpilemode")) && (e = 400);
                var t = $(window).height() - d20.utils.playerZoneHeight();
                t > e && (t = e),
                this.$el.dialog({
                    model: !1,
                    title: this.model.get("name") + " Discard Pile",
                    height: t,
                    width: 440
                })
            }
        })
          , N = Backbone.View.extend({
            _template: $("#tmpl_discardhand"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "showDialog"),
                this.model.on("change:currentDeck change:currentIndex", function() {
                    e.$el.is(":visible") && e.render()
                })
            },
            getPileCards: function() {
                var e = this
                  , t = []
                  , i = this.model.findCardsInPlay()
                  , n = [];
                console.log("getPileCards"),
                this.model.get("discardpilemode") && "none" !== this.model.get("discardpilemode") && (this.model.updateDiscardPile(),
                n = this.model.getDiscardPile()),
                this.model.cards.each(function(r) {
                    (e.model.get("infinitecards") === !0 || 0 === $.grep(i, function(e) {
                        return e.cardid === r.id
                    }).length && -1 === n.indexOf(r.id)) && t.push(d20.decks.cardByID(r.id))
                });
                var r = this.model.deckOrder()
                  , o = this.model.get("currentIndex");
                return t = _.sortBy(t, function(e) {
                    var t = r.indexOf(e.id);
                    return -1 === t ? 1e4 : o > t ? t + 1e3 : t
                })
            },
            render: function() {
                var e = this
                  , t = !1
                  , i = 0
                  , n = 0;
                this.$el.is(":visible") && (i = this.$el.parents(".ui-dialog-content").scrollTop());
                var r = {};
                r.id = this.model.id,
                r.allCards = this.getPileCards(),
                r.discardmode = -1 !== this.model.get("deckpilemode").indexOf("choosebacks") ? "choosebacks" : "choosefronts",
                this.$el.html(this._template.jqote({
                    model: r,
                    showopen: t,
                    oldoffset: n
                })),
                this.$el.parents(".ui-dialog-content").scrollTop(i),
                this.$el.find(".cardinhand").draggable({
                    revert: !0,
                    distance: 10,
                    revertDuration: 0,
                    helper: "clone",
                    appendTo: "body",
                    scroll: !1
                }).addTouch(),
                e.model.get("infinitecards") === !0 ? this.$el.find(".cardinhand").on("dragstop", function() {
                    setTimeout(function() {
                        e.render()
                    }, 0)
                }) : this.$el.on("chosenCardPlayed", function(t, i) {
                    if (!t.chosenHandled) {
                        t.chosenHandled = !0;
                        var n = $(i)
                          , r = n.attr("data-cardid");
                        if (r) {
                            var o = e.model.deckOrder()
                              , a = o.indexOf(r);
                            if (-1 !== a) {
                                o = _.without(o, r),
                                o.splice(Math.max(e.model.get("currentIndex") - 1, 0), 0, r);
                                var s = e.model.get("currentIndex");
                                a > e.model.get("currentIndex") && (s += 1),
                                setTimeout(function() {
                                    e.model.save({
                                        currentDeck: o.join(","),
                                        currentIndex: s
                                    })
                                }, 100)
                            }
                        }
                    }
                })
            },
            showDialog: function() {
                this.render();
                var e = 400
                  , t = $(window).height() - d20.utils.playerZoneHeight();
                t > e && (t = e),
                this.$el.dialog({
                    model: !1,
                    title: this.model.get("name") + " Available Cards",
                    height: t,
                    width: 440
                })
            }
        })
          , z = Backbone.Collection.extend({
            model: I,
            url: "/decks/",
            initialize: function() {
                this.on("add change remove", function() {
                    d20.decks.refreshDecksList()
                })
            }
        })
          , U = Backbone.Model.extend({
            defaults: {
                name: "New Item",
                avatar: "",
                weight: 1
            },
            initialize: function() {
                if (this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                this.editor = new V({
                    model: this
                }),
                this.allowDelays = {
                    update: !0
                }
            }
        })
          , V = Backbone.View.extend({
            _template: $("#tmpl_tableitemeditor"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "showDialog", "updateModel"),
                this.model.bind("change", function() {
                    e.$el.is(":visible") && e.render()
                }),
                this.$el.on("click", ".deleteitem", function() {
                    var t = $("<div>Are you sure you want to delete this item? This cannot be undone.</div>");
                    t.dialog({
                        modal: !0,
                        title: "Confirm Deletion",
                        buttons: {
                            Delete: function() {
                                e.model.destroy(),
                                e.$el.dialog("destroy"),
                                t.dialog("destroy").remove()
                            },
                            Cancel: function() {
                                t.dialog("destroy").remove()
                            }
                        },
                        beforeClose: function() {
                            t.dialog("destroy").remove()
                        }
                    })
                })
            },
            render: function() {
                var e = this;
                this.$el.html(this._template.jqote(this.model)),
                this.$el.find(".name").val(this.model.get("name")),
                this.$el.find(".weight").val(this.model.get("weight")),
                d20.utils.setupAvatar(this.$el.find(".avatar"), e)
            },
            showDialog: function() {
                var e = this;
                this.render(),
                this.$el.dialog({
                    title: this.model.get("name"),
                    width: 275,
                    height: 500,
                    buttons: {
                        "Save Changes": function() {
                            e.updateModel(),
                            e.$el.dialog("destroy")
                        },
                        Cancel: function() {
                            e.$el.dialog("destroy")
                        }
                    },
                    beforeClose: function() {
                        $(this).dialog("destroy")
                    }
                });
                var e = this
            },
            updateModel: function() {
                var e = {};
                e.name = this.$el.find(".name").val();
                var t = parseInt(this.$el.find(".weight").val(), 10);
                e.weight = _.isFinite(t) ? t : 0,
                this.model.save(e)
            }
        })
          , W = Backbone.Collection.extend({
            model: U,
            initialize: function() {
                this.on("add", function() {
                    d20.rollabletables.refreshTablesList()
                })
            }
        })
          , G = Backbone.Model.extend({
            defaults: {
                name: "new-table",
                showplayers: !0
            },
            initialize: function() {
                var e = this;
                if (this.id)
                    this.persisted = !0;
                else {
                    var t = generateUUID();
                    this.set({
                        id: t
                    }),
                    this.url = this.collection.url + t
                }
                this.tableitems = new W,
                this.tableitems.url = "/rollabletables/" + this.id + "/items/",
                this.tableitems.rollabletable = this,
                this.editor = new q({
                    model: this
                }),
                _.defer(function() {
                    e.tableitems.backboneFirebase = new BackboneFirebase(e.tableitems)
                }),
                this.allowDelays = {
                    update: !0
                }
            },
            createToken: function(e, t) {
                var i = 70
                  , n = 70
                  , r = [];
                if (this.tableitems.each(function(e) {
                    "" != e.get("avatar") && r.push(escape(e.get("avatar")))
                }),
                0 == r.length)
                    return !1;
                var o = {
                    x: e,
                    y: t,
                    width: i,
                    height: n,
                    imgsrc: unescape(r[0]),
                    imgwidth: i,
                    imgheight: n,
                    isdrawing: !0,
                    sides: r.join("|"),
                    currentSide: 0
                }
                  , a = d20.Campaign.activePage().addImage(o, !1, !1);
                return a
            },
            getWeightedArray: function() {
                var e = [];
                return this.tableitems.each(function(t) {
                    for (var i = parseInt(t.get("weight"), 10), n = 0; i > n; n++)
                        e.push(t.id)
                }),
                e
            }
        })
          , q = Backbone.View.extend({
            _template: $("#tmpl_rollabletableeditor"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "showDialog", "updateModel"),
                this.model.bind("change", function() {
                    e.$el.is(":visible") && e.render()
                }),
                this.model.tableitems.bind("add remove change", function() {
                    e.$el.is(":visible") && e.renderItems()
                }),
                this.$el.on("click", ".deleterollabletable", function() {
                    var t = $("<div>Are you sure you want to delete this rollable table? This cannot be undone.</div>");
                    t.dialog({
                        modal: !0,
                        title: "Confirm Deletion",
                        buttons: {
                            Delete: function() {
                                e.model.destroy(),
                                e.$el.dialog("destroy"),
                                t.dialog("destroy").remove()
                            },
                            Cancel: function() {
                                t.dialog("destroy").remove()
                            }
                        },
                        beforeClose: function() {
                            t.dialog("destroy").remove()
                        }
                    })
                }),
                this.$el.on("click", ".tableitem", function() {
                    var t = $(this).attr("data-tableitem-id")
                      , i = e.model.tableitems.get(t);
                    i && i.editor.showDialog()
                }),
                this.$el.on("click", ".addtableitem", function() {
                    e.updateModel();
                    var t = e.model.tableitems.create();
                    t.editor.showDialog(),
                    t.editor.$el.find(".name").focus().select()
                }),
                this.$el.on("keyup", ".name", function(e) {
                    if (32 == e.which) {
                        console.log("sapce!");
                        var t = $(this).val();
                        $(this).val(t.replace(/[ ]/g, "-"))
                    }
                })
            },
            render: function() {
                var e = this;
                this.$el.html(this._template.jqote(this.model)),
                this.$el.find(".name").val(d20.utils.strip_tags(this.model.get("name"))),
                this.model.get("showplayers") && this.$el.find(".showplayers").attr("checked", "checked"),
                e.renderItems()
            },
            renderItems: function() {
                var e = this;
                this.$el.find("tbody").html(""),
                this.model.tableitems.each(function(t) {
                    e.$el.find("tbody").append("<tr class='tableitem' data-tableitem-id='" + t.id + "'><td>" + ("" != t.get("avatar") ? "<img src='" + t.get("avatar") + "' />" : "") + "</td><td>" + d20.utils.strip_tags(t.get("name")) + "</td></tr>")
                })
            },
            showDialog: function() {
                var e = this;
                this.render();
                var t = 775
                  , i = $(window).height() - d20.utils.playerZoneHeight();
                i > t && (i = t),
                this.$el.dialog({
                    title: d20.utils.strip_tags(this.model.get("name")),
                    width: 400,
                    height: i,
                    position: ["center", 30],
                    buttons: {
                        "Save Changes": function() {
                            e.updateModel(),
                            e.$el.dialog("destroy")
                        },
                        Cancel: function() {
                            e.$el.dialog("destroy")
                        }
                    },
                    beforeClose: function() {
                        $(this).dialog("destroy")
                    }
                });
                var e = this
            },
            updateModel: function() {
                var e = {};
                e.showplayers = this.$el.find(".showplayers").is(":checked"),
                e.name = d20.utils.strip_tags(this.$el.find(".name").val()),
                this.model.save(e)
            }
        })
          , X = Backbone.Collection.extend({
            model: G,
            url: "/rollabletables/",
            initialize: function() {
                this.on("add change remove", function() {
                    d20.rollabletables.refreshTablesList()
                })
            },
            findTableByName: function(e) {
                for (var t = 0; t < this.models.length; t++)
                    if (this.models[t].get("name") === e)
                        return this.models[t];
                return null
            }
        })
          , Y = d20.models.CampaignModel = Backbone.Model.extend({
            defaults: {
                snapping_increment: 1,
                lastmodified: 0,
                turnorder: "",
                initiativepage: !1,
                playerspecificpages: !1,
                playerpageid: !1,
                bar1_color: "#7CC48A",
                bar2_color: "#7C9BC4",
                bar3_color: "#B31D1D",
                markers_position: "top",
                decksize: 50,
                journalfolder: "",
                jukeboxfolder: "",
                jukeboxplaylistplaying: !1,
                whisperGroups: "{}",
                videobandwidth: "medium",
                videopos: "{}",
                controlsvideopos: "player"
            },
            url: "/campaign/",
            initialize: function() {
                var e = this;
                if (_.bindAll(this, "activePage", "showSettings", "initActivePage", "switchPageById", "switchPageByIndex", "getPageIndex"),
                this.view = new R({
                    model: this
                }),
                this.activePageIndex = 0,
                this.pages = new f,
                this.players = new C,
                this.bootstrapped = !1,
                this.gameFullyLoaded = !1,
                window.d20ext.loading.showfunnymessage(),
                "tutorial" === window.GNTKN) {
                    var t = {};
                    t.child = function() {
                        return t
                    }
                    ,
                    t.on = function(e, t) {
                        if ("value" === e) {
                            var i = {};
                            i.val = function() {
                                return null
                            }
                            ,
                            t(i)
                        }
                    }
                    ,
                    t.update = function() {}
                    ,
                    t.set = function() {}
                    ,
                    this.parentRef = t,
                    _.defer(function() {
                        i()
                    })
                } else {
                    var t = new Firebase(window.FIREBASE_ROOT + window.campaign_storage_path + "/");
                    this.parentRef = t,
                    _.defer(function() {
                        t.authWithCustomToken(window.GNTKN, function(t, n) {
                            t ? alert("Invalid authentication token. Please reload and try again. If this error persists, please contact support.") : (console.log("Auth'ed."),
                            e.fbauthinfo = n,
                            i())
                        }, function() {
                            alert("Your session has expired. Hit OK to reload the page and resume editing your campaign."),
                            window.location.reload()
                        })
                    })
                }
                var i = function() {
                    console.log("Go post auth!"),
                    t.child("campaign").on("value", function(i) {
                        if (e.bootstrapped)
                            return void (i.val() && e.set(i.val()));
                        e.bootstrapped = !0,
                        console.log("initial setup"),
                        window.d20ext.loading.showfunnymessage();
                        var n = i.val();
                        n ? e.set(n) : (e.save(e.defaults),
                        n = {}),
                        window.is_gm && $("#decksize").slider({
                            value: e.get("decksize")
                        });
                        var r = !1;
                        t.child("players").on("value", function(t) {
                            if (!r) {
                                console.log("Got players value..."),
                                r = !0;
                                var i = _.toArray(t.val());
                                return e.players.reset(i),
                                e.players.backboneFirebase = new BackboneFirebase(e.players),
                                _.defer(function() {
                                    d20.decks.appendAllHands()
                                }),
                                e.joinGame() ? void (e.pages.length > 0 && d20.Campaign.handlePlayerPageChanges()) : void console.log("No active player, returning...")
                            }
                        }),
                        e.characters = new d20.models.CharacterCollection,
                        e.handouts = new d20.models.HandoutCollection,
                        e.decks = new z,
                        e.rollabletables = new X,
                        e.hands = new P,
                        e.cardtrades = new L,
                        e.custFx = new y;
                        var o = !1;
                        t.child("pages").on("value", function(t) {
                            if (!o) {
                                o = !0;
                                var i = t.val();
                                for (var n in i)
                                    i.hasOwnProperty(n) && (pg = i[n],
                                    pg.id || (i[n].id = n));
                                var r = _.toArray(i);
                                window.is_gm && 0 == r.length ? (console.log("Creating new page..."),
                                e.pages.create()) : e.pages.reset(r),
                                e.pages.backboneFirebase = new BackboneFirebase(e.pages),
                                console.log("We have " + r.length + " pages");
                                var a = e.get("playerpageid");
                                e.pages.get(a) || (console.log("can't find previous page!"),
                                e.set({
                                    playerpageid: e.pages.at(0).id
                                }),
                                window.is_gm && e.save(),
                                a = !1),
                                _.defer(function() {
                                    window.currentPlayer && d20.Campaign.handlePlayerPageChanges(),
                                    e.initiativewindow = new d20.models.InitiativeWindow({
                                        model: e
                                    }),
                                    setTimeout(function() {
                                        e.initiativewindow.rebuildInitiativeList()
                                    }, 1e3)
                                })
                            }
                        })
                    })
                }
                ;
                $(document).bind("d20:editingLayerChanged", function() {
                    e.activePage().activate()
                }),
                this.handlePlayerPageChanges = function(t) {
                    console.log("handle page changes");
                    var i = d20.Campaign.get("playerspecificpages");
                    console.log(i),
                    i && i[window.currentPlayer.id] && void 0 !== d20.Campaign.pages.get(i[window.currentPlayer.id]) ? t && d20.Campaign.activePage().id !== i[window.currentPlayer.id] ? e.switchPageById(i[window.currentPlayer.id]) : t || e.switchPageById(i[window.currentPlayer.id]) : window.is_gm && currentPlayer.get("lastpage") && "" != currentPlayer.get("lastpage") && void 0 !== d20.Campaign.pages.get(currentPlayer.get("lastpage")) ? e.switchPageById(currentPlayer.get("lastpage")) : e.get("playerpageid") ? t && d20.Campaign.activePage().id !== e.get("playerpageid") ? e.switchPageById(e.get("playerpageid")) : t || e.switchPageById(e.get("playerpageid")) : e.switchPageByIndex(0)
                }
                ,
                this.bind("change:playerpageid", function() {
                    !window.is_gm && window.currentPlayer && e.handlePlayerPageChanges(!0),
                    d20.pagetoolbar && d20.pagetoolbar.refreshPageListing && d20.pagetoolbar.refreshPageListing()
                }),
                this.bind("change:playerspecificpages", function() {
                    console.log("specific changed!"),
                    !window.is_gm && window.currentPlayer && e.handlePlayerPageChanges(!0),
                    d20.pagetoolbar && d20.pagetoolbar.refreshPageListing && d20.pagetoolbar.refreshPageListing()
                }),
                this.tokendisplay = {};
                var n = function() {
                    e.tokendisplay.bar1_rgb = d20.utils.hexToRgb(e.get("bar1_color")),
                    e.tokendisplay.bar2_rgb = d20.utils.hexToRgb(e.get("bar2_color")),
                    e.tokendisplay.bar3_rgb = d20.utils.hexToRgb(e.get("bar3_color")),
                    window.is_gm && ($("#campaignsettings .bar1_color").val(e.get("bar1_color")).trigger("change-silent"),
                    $("#campaignsettings .bar2_color").val(e.get("bar2_color")).trigger("change-silent"),
                    $("#campaignsettings .bar3_color").val(e.get("bar3_color")).trigger("change-silent"),
                    $("#campaignsettings .markers_position").val(e.get("markers_position"))),
                    d20.engine.debounced_renderAll()
                }
                ;
                this.on("change:bar1_color change:bar2_color change:bar3_color change:markers_position", function() {
                    n()
                }),
                this.on("change:journalfolder", function() {
                    d20.journal.refreshJournalList(),
                    d20.tutorial && d20.tutorial.active && $(document).trigger("folderChange")
                }),
                this.on("change:jukeboxfolder", function() {
                    d20.jukebox && d20.jukebox.refreshJukeboxList()
                }),
                this.on("change:whisperGroups", function() {
                    d20.internalwebrtc.updateWhisperGroups()
                }),
                n();
                var r = function() {
                    $("#showndecks").css("width", 2 * e.get("decksize") + "px")
                }
                ;
                window.is_gm && $("#decksize").on("slidechange", function() {
                    var t = $(this).slider("value");
                    e.save({
                        decksize: t
                    })
                }),
                this.on("change:decksize", function() {
                    r()
                }),
                r(),
                this.on("change:jukeboxplaylistplaying", function() {
                    if (d20.jukebox) {
                        d20.jukebox.playlistCurrentIdx = 0,
                        d20.jukebox.playedPlaylistOnce = !1;
                        var e = this.currentPlaylistPlayingID();
                        e !== !1 && (d20.jukebox.sharedPlaylistSeed = this.get("jukeboxplaylistplaying").split("|")[1],
                        d20.jukebox.randomizer = Alea(d20.jukebox.sharedPlaylistSeed)),
                        window.Jukebox.setPlaylistPlaying(e),
                        d20.jukebox.refreshJukeboxList()
                    }
                }),
                this.currentPlaylistPlayingID = function() {
                    return 0 == this.get("jukeboxplaylistplaying") ? !1 : this.get("jukeboxplaylistplaying").split("|")[0]
                }
            },
            activePage: function() {
                return this.pages.at(this.activePageIndex)
            },
            showSettings: function() {},
            switchPageById: function(e) {
                var t = this.getPageIndex(e);
                this.switchPageByIndex(t)
            },
            getPageIndex: function(e) {
                for (var t = 0; t < this.pages.length; t++)
                    if (this.pages.at(t).id == e)
                        return t;
                console.log("ERROR: Unable to find Page for ID: " + e)
            },
            switchPageByIndex: function(e) {
                var t = this;
                $(this.activePage().container).css("zIndex", 1),
                window.d20ext.loading.showfunnymessage();
                var i = setInterval(window.d20ext.loading.showfunnymessage, 500);
                this.pageSwitchTimeout && (console.log("Clearing existing timeout..."),
                clearTimeout(this.pageSwitchTimeout),
                this.pageSwitchTimeout = !1),
                $("#loading-overlay").show().animate({
                    opacity: 1,
                    duration: 300
                }, function() {
                    t.activePage() && t.activePage().unloadPageFromDOM(),
                    t.activePageIndex = e,
                    t.initActivePage(),
                    d20.Campaign.initiativewindow && d20.Campaign.initiativewindow.rebuildInitiativeList(),
                    clearInterval(i);
                    var n = 250;
                    window.d20ext.seenad || ($("#loading-overlay").find("h1").text("You will join the game shortly..."),
                    n = 6e4),
                    this.pageSwitchTimeout = setTimeout(function() {
                        this.pageSwitchTimeout = !1,
                        $("#loading-overlay").find("h1").text("Loading..."),
                        $("#loading-overlay").animate({
                            opacity: 0,
                            duration: 300
                        }, function() {
                            $("#loading-overlay").hide()
                        })
                    }, n)
                })
            },
            nextPage: function() {
                var e = this.activePageIndex + 1;
                e < this.pages.length && this.switchPageByIndex(e)
            },
            prevPage: function() {
                var e = this.activePageIndex - 1;
                e >= 0 && this.switchPageByIndex(e)
            },
            initActivePage: function(e) {
                if (window.dpi = 70,
                console.log("init active page!"),
                this.gameFullyLoaded || (this.gameFullyLoaded = !0),
                !this.activePage())
                    return void console.log("ERROR when initialize active page: no active page found.");
                e ? this.activePage().thegraphics.each(function(e) {
                    e.view.graphic && e.view.checkImageSizing()
                }) : (this.activePage().loadPageIntoDOM(),
                this.activePage().activate()),
                this.activePage().updatePage();
                var t = Math.round(this.activePage().get("width") * window.dpi * d20.engine.canvasZoom)
                  , i = Math.round(this.activePage().get("height") * window.dpi * d20.engine.canvasZoom);
                d20.engine.pageWidth = t,
                d20.engine.pageHeight = i,
                editor.css({
                    height: Math.round(i + (d20.engine.canvasZoom - 1) * d20.engine.padding * 2) + "px",
                    width: Math.round(t + (d20.engine.canvasZoom - 1) * d20.engine.padding * 2) + "px"
                }),
                d20.engine.backgroundColor = this.activePage().get("background_color"),
                "#FFFFF" == d20.engine.backgroundColor && (d20.engine.backgroundColor = "#ffffff"),
                d20.engine.debounced_renderAll(),
                $(document).trigger("d20:pagechanged"),
                setTimeout(function() {
                    $("#editor-wrapper").trigger("scroll")
                }, 50)
            },
            joinGame: function() {
                console.log("joining game...");
                var e = function() {
                    d20.textchat.startup(),
                    _.defer(function() {
                        console.log("Deferred finish joining..."),
                        d20.Campaign.characters.backboneFirebase = new BackboneFirebase(d20.Campaign.characters),
                        d20.Campaign.handouts.backboneFirebase = new BackboneFirebase(d20.Campaign.handouts),
                        d20.Campaign.decks.backboneFirebase = new BackboneFirebase(d20.Campaign.decks),
                        d20.Campaign.rollabletables.backboneFirebase = new BackboneFirebase(d20.Campaign.rollabletables),
                        d20.Campaign.hands.backboneFirebase = new BackboneFirebase(d20.Campaign.hands),
                        d20.Campaign.custFx.backboneFirebase = new BackboneFirebase(d20.Campaign.custFx),
                        _.defer(function() {
                            d20.Campaign.cardtrades.backboneFirebase = new BackboneFirebase(d20.Campaign.cardtrades),
                            $(document).trigger("d20:joinedgame")
                        }),
                        firebasePing();
                        var e = window.currentPlayer.get("color");
                        "#13B9F0" == e && (e = "#" + Math.floor(16777215 * Math.random()).toString(16)),
                        window.currentPlayer.save({
                            online: !0,
                            lastActive: (new Date).getTime(),
                            speakingas: "",
                            color: e
                        }),
                        d20.journal.refreshSpeakingAsOptions(),
                        setTimeout(function() {
                            $("#editor-wrapper").scrollLeft(125).scrollTop(125),
                            "webrtc" == d20ext.videotype && d20.opentokwebrtc.init(),
                            "internal" == d20ext.videotype ? d20.internalwebrtc.init() : "flash" == d20ext.videotype && d20.videochat.init(),
                            d20.jukebox && d20.jukebox.refreshJukeboxList()
                        }, 1e3)
                    }),
                    window.xlfeats === !0 && window.hasapiscripts && d20.apiclient.ready()
                }
                ;
                if ("tutorial" == window.GNTKN)
                    var t = this.players.create({
                        d20userid: window.d20_account_id,
                        displayname: window.d20_current_name
                    });
                else
                    var t = this.players.get(this.fbauthinfo.auth.playerid);
                if ($("#videobandwidth").val(this.get("videobandwidth")).trigger("change-silent"),
                t)
                    return window.currentPlayer = t,
                    e(),
                    !0;
                var i = this;
                return console.log("ERROR: NO EXISTING PLAYER"),
                $.post("/editor/clearplayeridcache", function() {
                    alert("We were unable to connect you to the game session. Please reload and try again. If this error persists, please contact support. ERROR CODE: NEP:" + i.fbauthinfo.auth.playerid)
                }),
                !1
            },
            isNew: function() {
                return !1
            },
            activeCharacters: function() {
                var e = [];
                return this.characters.each(function(t) {
                    1 == !t.get("archived") && e.push(t)
                }),
                _.sortBy(e, function(e) {
                    return e.get("name")
                })
            }
        })
          , J = Backbone.View.extend({
            _template: $("#tmpl_add_jukebox"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "showDialog", "search"),
                this.$el = $(this.el),
                this.$el.addClass("dialog"),
                this.render(),
                this.currentPlayingObj = !1,
                this.currentPlayInterval = !1;
                var t = _.debounce(this.search, 400);
                this.$el.find("#jukebox_search").bind("keyup", function() {
                    t()
                }),
                this.$el.on("click", ".play", function() {
                    e.$el.find(".pause").trigger("click");
                    var t = $(this).parents(".result")
                      , i = t.attr("data-track-id")
                      , n = t.attr("data-source");
                    if ("SoundCloud" === n)
                        e.currentPlayingObj = SC.stream(i),
                        e.currentPlayingObj.play({
                            onload: function() {
                                t.find(".title").text(t.attr("data-origtitle"))
                            }
                        }),
                        ga("send", {
                            hitType: "event",
                            eventCategory: "SoundCloud",
                            eventAction: "Play"
                        });
                    else if ("Tabletop Audio" === n)
                        e.currentPlayingObj = soundManager.createSound({
                            id: i,
                            url: "https://s3.amazonaws.com/cdn.roll20.net/ttaudio/" + i.split("-")[0]
                        }),
                        e.currentPlayingObj.play({
                            onload: function() {
                                t.find(".title").text(t.attr("data-origtitle"))
                            }
                        }),
                        ga("send", {
                            hitType: "event",
                            eventCategory: "Tabletop Audio",
                            eventAction: "Play"
                        });
                    else if ("Battlebards" === n) {
                        var r = i.split(".mp3-")[0];
                        r += ".mp3",
                        r = r.replace(/%20%2D%20/g, " - "),
                        r = encodeURIComponent(r),
                        $.post("/editor/audiourl/bb", {
                            trackurl: r
                        }, function(n) {
                            e.currentPlayingObj = soundManager.createSound({
                                id: i,
                                url: n
                            }),
                            e.currentPlayingObj.play({
                                onload: function() {
                                    t.find(".title").text(t.attr("data-origtitle"))
                                }
                            })
                        }),
                        ga("send", {
                            hitType: "event",
                            eventCategory: "Battlebards",
                            eventAction: "Play"
                        })
                    } else
                        "Incompetech" === n ? (e.currentPlayingObj = soundManager.createSound({
                            id: i,
                            url: "https://s3.amazonaws.com/cdn.roll20.net/incompetech/" + i.split("-")[0]
                        }),
                        e.currentPlayingObj.play({
                            onload: function() {
                                t.find(".title").text(t.attr("data-origtitle"))
                            }
                        }),
                        ga("send", {
                            hitType: "event",
                            eventCategory: "Incompetech",
                            eventAction: "Play"
                        })) : "Fanburst" === n && (e.currentPlayingObj = soundManager.createSound({
                            id: i,
                            url: "https://api.fanburst.com/tracks/" + i + "/stream?client_id=0fc1df8b-40a4-4391-b0f7-d0257edb6634"
                        }),
                        e.currentPlayingObj.play({
                            onload: function() {
                                t.find(".title").text(t.attr("data-origtitle"))
                            }
                        }),
                        ga("send", {
                            hitType: "event",
                            eventCategory: "Fanburst",
                            eventAction: "Play"
                        }));
                    t.find(".title").text("Loading..."),
                    $(this).removeClass("play").addClass("pause").find(".pictos").html("6"),
                    this.currentPlayInterval = setInterval(function() {
                        var i = Math.round(e.currentPlayingObj.position / e.currentPlayingObj.duration * 100);
                        t.find(".progress").css({
                            width: i + "%"
                        })
                    }, 1e3)
                }),
                this.$el.on("click", ".pause", function() {
                    this.currentPlayInterval && clearInterval(this.currentPlayInterval),
                    e.$el.find(".progress").css({
                        width: "0%"
                    });
                    var t = $(this).parents(".result");
                    t.find(".title").text(t.attr("data-origtitle")),
                    e.$el.find(".pause").removeClass("pause").addClass("play").find(".pictos").html("4"),
                    e.currentPlayingObj && e.currentPlayingObj.destruct()
                }),
                this.$el.on("click", ".add", function() {
                    var t = $(this).parents(".result")
                      , i = t.attr("data-track-id")
                      , n = t.attr("data-origtitle");
                    e.model.addToPlaylist(i, n, t.attr("data-source"))
                }),
                this.$el.on("click", ".nav li a", function() {
                    e.$el.find(".nav li.active").removeClass("active"),
                    e.$el.find(".tab-pane").each(function() {
                        this.style.display = "none"
                    }),
                    e.$el.find(".tab-pane." + $(this).attr("data-tab"))[0].style.display = "block",
                    $(this).parent().addClass("active")
                }),
                this.$el.on("change", "#ttaudio_filter", function() {
                    e.$el.find(".pause").trigger("click"),
                    e.$el.find("#ttaudio_results").html("");
                    var t = e.$el.find("#ttaudio_filter").val();
                    _.each(TTAUDIO, function(i) {
                        !t || "all" !== t && -1 === i[2].indexOf(t) || (trackdata = {
                            id: i[1] + "-" + (new Date).getTime(),
                            title: i[0],
                            tags: i[2]
                        },
                        e.$el.find("#ttaudio_results").append($("#tmpl_ttaudio_search_result").jqote(trackdata)))
                    })
                }),
                this.$el.on("change", "#battlebards_filter", function() {
                    e.$el.find(".pause").trigger("click"),
                    e.$el.find("#battlebards_results").html("");
                    var t = e.$el.find("#battlebards_filter").val();
                    _.each(BATTLEBARDS, function(i) {
                        !t || "all" !== t && -1 === i[2].indexOf(t) || (trackdata = {
                            id: i[1] + "-" + (new Date).getTime(),
                            title: i[0],
                            tags: i[2]
                        },
                        e.$el.find("#battlebards_results").append($("#tmpl_battlebards_search_result").jqote(trackdata)))
                    })
                }),
                this.$el.on("keyup", "#incompetech_search", _.debounce(function() {
                    e.$el.find(".pause").trigger("click"),
                    e.$el.find("#incompetech_results").html("");
                    var t = e.$el.find("#incompetech_search").val();
                    _.each(INCOMPETECH, function(i) {
                        ("" === t || t && (-1 != i[0].toLowerCase().indexOf(t.toLowerCase()) || -1 != i[2].toLowerCase().indexOf(t.toLowerCase()))) && (trackdata = {
                            id: i[1] + "-" + (new Date).getTime(),
                            title: i[0],
                            tags: i[2]
                        },
                        e.$el.find("#incompetech_results").append($("#tmpl_incompetech_search_result").jqote(trackdata)))
                    })
                }, 500)),
                this.$el.on("keyup", "#fanburst_search", _.debounce(function() {
                    var t = e.$el.find("#fanburst_results")
                      , i = e.$el.find("#fanburst_search").val();
                    e.$el.find(".pause").trigger("click"),
                    t.html(""),
                    $.ajax({
                        url: "https://api.fanburst.com/tracks/search?client_id=0fc1df8b-40a4-4391-b0f7-d0257edb6634&query=" + i,
                        dataType: "json"
                    }).done(function(e) {
                        _.each(e, function(e) {
                            trackdata = {
                                id: e.id,
                                title: e.title,
                                username: e.user.name
                            },
                            t.append($("#tmpl_fanburst_search_result").jqote(trackdata))
                        })
                    })
                }, 500))
            },
            render: function() {
                this.$el.html(this._template.jqote(this.model))
            },
            showDialog: function() {
                var e = this;
                $(this.el).dialog({
                    modal: !1,
                    width: 515,
                    height: $(window).height() - 250,
                    position: ["center", 30],
                    title: "Add Sound",
                    zIndex: 10500,
                    beforeClose: function() {
                        e.$el.find(".pause").trigger("click")
                    }
                }),
                this.$el.find(".nav li:first-child a").trigger("click"),
                this.$el.find("#ttaudio_filter").trigger("change"),
                this.$el.find("#battlebards_filter").trigger("change"),
                this.$el.find("#incompetech_search").trigger("keyup"),
                this.$el.find("#fanburst_search").trigger("keyup")
            },
            search: function() {
                var e = this
                  , t = this.$el.find("#jukebox_search").val();
                this.$el.find(".pause").trigger("click"),
                this.$el.find("#jukebox_results").html("<div class='alert'>Searching for music, please wait...</div>");
                var i = "";
                return -1 !== t.indexOf("soundcloud.com/") ? void $.getJSON("/editor/sc_url_to_id/?scurl=" + escape(t), function(i) {
                    e.$el.find("#jukebox_results").html(""),
                    i && i.id && i.streamable ? e.$el.find("#jukebox_results").append($("#tmpl_jukebox_search_result").jqote(i)) : e.$el.find("#jukebox_results").html("<div class='alert'>We were unable to find a public sound at the url '" + d20.utils.strip_tags(t) + "', sorry! Double-check to make sure that the sound is shared publicly and that streaming of the track is allowed.</div>")
                }) : ("background" == $("#jukebox_filter").val() ? i = "&tags=game,soundtrack,ambiance,ambient,instrumental,orchestral,roll20" : "soundeffect" == $("#jukebox_filter").val() && (i = "&tags=sound-effect,roll20"),
                void $.getJSON("https://api.soundcloud.com/tracks.json?client_id=bbee575fe431e873910d2a874e013989" + i + "&filter=streamable&q=" + escape(t), function(i) {
                    e.$el.find("#jukebox_results").html(""),
                    i && 0 != i.length ? _.each(i, function(t) {
                        e.$el.find("#jukebox_results").append($("#tmpl_jukebox_search_result").jqote(t))
                    }) : e.$el.find("#jukebox_results").html("<div class='alert'>We were unable to find any sounds for the keywords '" + t + "', sorry!</div>")
                }))
            }
        })
          , K = Backbone.View.extend({
            el: $("#jukebox"),
            _template: $("#tmpl_jukebox_row"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render"),
                this.debounced_render = _.debounce(this.render, 100),
                this.render(),
                this.$el.on("click", ".play", function() {
                    var t = $(this).parents(".jukeboxitem").attr("data-itemid")
                      , i = e.model.playlist.get(t);
                    if (!i) {
                        console.log("Unable to find jukebox item!");
                        var n = JSON.parse(d20.Campaign.get("jukeboxfolder"))
                          , r = $(this).parents(".dd-folder").attr("data-globalfolderid");
                        return _.each(n, function(e) {
                            "object" == typeof e && e.id == r && d20.Campaign.save(d20.Campaign.currentPlaylistPlayingID() == r ? {
                                jukeboxplaylistplaying: !1
                            } : {
                                jukeboxplaylistplaying: r + "|" + (new Date).getTime()
                            })
                        }),
                        void console.log("END SEARCH")
                    }
                    0 == i.get("playing") || 1 == i.get("softstop") ? (d20.Campaign.currentPlaylistPlayingID() !== !1 && d20.Campaign.save({
                        jukeboxplaylistplaying: !1
                    }),
                    i.play()) : (d20.Campaign.currentPlaylistPlayingID() !== !1 && d20.Campaign.save({
                        jukeboxplaylistplaying: !1
                    }),
                    i.stop())
                }),
                this.$el.on("change", ".slider", function() {
                    var t = $(this).parents("li").attr("data-itemid")
                      , i = e.model.playlist.get(t);
                    i.changeVolume($(this).val())
                }),
                this.$el.on("click", ".remove", function() {
                    var t = $(this).parents("li").attr("data-itemid")
                      , i = e.model.playlist.get(t);
                    i.destroy()
                }),
                this.$el.on("click", ".loop", function() {
                    var t = $(this).parents("li").attr("data-itemid")
                      , i = e.model.playlist.get(t);
                    i.set({
                        loop: $(this).is(":checked")
                    }).save()
                }),
                this.$el.on("click", ".title", function() {
                    if (!($(this).find("input").length > 0)) {
                        var t = $(this).parents("li").attr("data-itemid")
                          , i = e.model.playlist.get(t);
                        $(this).html("<input type='text'/>"),
                        $(this).find("input").val(d20.utils.strip_tags(i.get("title"))).focus().select()
                    }
                }),
                this.$el.on("keydown", ".title input", function(t) {
                    if (13 == t.which) {
                        var i = $(this).parents("li").attr("data-itemid")
                          , n = e.model.playlist.get(i)
                          , r = d20.utils.strip_tags($(this).val());
                        n.save({
                            title: r
                        }),
                        e.render()
                    }
                }),
                this.$el.on("click", "#addjukebox", function() {
                    e.model.searchView.showDialog(),
                    $("body").trigger("click")
                })
            },
            render: function() {
                _.defer(function() {
                    d20.jukebox.refreshJukeboxList()
                })
            }
        })
          , Z = Backbone.Model.extend({
            defaults: {
                track_id: "",
                title: "",
                playing: !1,
                volume: 30,
                loop: !1,
                softstop: !1,
                tags: ""
            },
            initialize: function() {
                if (this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
            },
            isNew: function() {
                return !this.persisted
            },
            play: function() {
                this.save({
                    playing: !0,
                    softstop: !1
                })
            },
            stop: function() {
                this.save({
                    playing: !1
                })
            },
            changeVolume: function(e) {
                e = 100 * Math.pow(e / 100, 2),
                this.save({
                    volume: e
                })
            },
            tagsArray: function() {
                try {
                    var e = JSON.parse(this.get("tags"))
                } catch (t) {
                    return []
                }
                return e
            },
            safeDestroy: function() {
                var e = this
                  , t = $("<div class='dialog'>Are you sure you want to delete this track? This cannot be undone.</div>");
                t.dialog({
                    modal: !0,
                    title: "Confirm Deletion",
                    buttons: {
                        "Delete Track": function() {
                            e.destroy(),
                            $(this).dialog("destroy")
                        },
                        Cancel: function() {
                            $(this).dialog("destroy")
                        }
                    },
                    beforeClose: function() {
                        $(this).dialog("destroy")
                    }
                })
            }
        })
          , Q = Backbone.Collection.extend({
            model: Z,
            initialize: function() {
                this.on("add change remove", function() {
                    this.jukebox.scanForNewPlays(),
                    this.jukebox.view.debounced_render()
                })
            }
        })
          , et = Backbone.Model.extend({
            defaults: {
                playlist: []
            },
            initialize: function() {
                if (_.bindAll(this, "addToPlaylist", "playByIndex", "_scanForNewPlays", "stopByIndex", "changeVolumeByIndex", "removeByIndex"),
                window.SC) {
                    var e = this;
                    this.soundObjs = {},
                    this.scanForNewPlays = _.debounce(this._scanForNewPlays, 500),
                    this.playlist = new Q,
                    this.playlist.jukebox = this,
                    this.playlist.url = "/jukeboxplaylist/",
                    _.defer(function() {
                        e.playlist.backboneFirebase = new BackboneFirebase(e.playlist)
                    }),
                    this.searchView = new J({
                        model: this
                    }),
                    this.view = new K({
                        model: this
                    }),
                    SC.initialize({
                        client_id: "bbee575fe431e873910d2a874e013989",
                        redirect_uri: "http://example.com/callback.html"
                    }),
                    soundManager.onready(function() {
                        e.scanForNewPlays()
                    })
                }
            },
            addToPlaylist: function(e, t, i) {
                this.playlist.create({
                    track_id: e,
                    title: t,
                    playing: !1,
                    volume: 30,
                    source: i
                })
            },
            _scanForNewPlays: function() {
                if (window.SC) {
                    console.log("Scan for new plays!");
                    var e = this
                      , t = [];
                    this.playlist.each(function(i) {
                        var n = i.get("track_id");
                        ("undefined" == typeof n || "" === n) && (n = i.get("soundcloud_id"),
                        i.save({
                            track_id: n,
                            soundcloud_id: ""
                        }));
                        var r = function() {
                            try {
                                if (1 !== e.soundObjs[n].playState) {
                                    ga("send", {
                                        hitType: "event",
                                        eventCategory: o,
                                        eventAction: "Play"
                                    });
                                    var t = function() {
                                        1 == i.get("loop") ? e.soundObjs[n].play({
                                            onfinish: t
                                        }) : (i.didAlreadyPlay = !0,
                                        d20.Campaign.get("jukeboxplaylistplaying") !== !1 ? window.Jukebox.setPlaylistPlaying(d20.Campaign.currentPlaylistPlayingID(), d20.jukebox.playlistCurrentIdx + 1) : window.is_gm && i.save({
                                            softstop: !0
                                        }))
                                    }
                                    ;
                                    e.soundObjs[n].play({
                                        onfinish: t
                                    })
                                }
                                e.soundObjs[n].setVolume(i.get("volume") * d20.jukebox.globalVolume)
                            } catch (r) {
                                console.log(r),
                                console.log("Unable to play music...Flash blocked?")
                            }
                        }
                          , o = i.get("source")
                          , a = !1;
                        if (i.get("playing") && 0 == i.get("softstop")) {
                            if (!e.soundObjs[n]) {
                                var o = i.get("source");
                                if ("Tabletop Audio" !== o && o)
                                    if ("Battlebards" === o) {
                                        var s = n.split(".mp3-")[0];
                                        s += ".mp3",
                                        s = s.replace(/%20%2D%20/g, " - "),
                                        s = encodeURIComponent(s),
                                        $.post("/editor/audiourl/bb", {
                                            trackurl: s
                                        }, function(t) {
                                            e.soundObjs[n] = soundManager.createSound({
                                                id: n,
                                                url: t
                                            }),
                                            r()
                                        }),
                                        a = !0
                                    } else
                                        e.soundObjs[n] = "Incompetech" === o ? soundManager.createSound({
                                            id: n,
                                            url: "https://s3.amazonaws.com/cdn.roll20.net/incompetech/" + n.split("-")[0]
                                        }) : "Fanburst" === o ? soundManager.createSound({
                                            id: n,
                                            url: "https://api.fanburst.com/tracks/" + n + "/stream?client_id=0fc1df8b-40a4-4391-b0f7-d0257edb6634"
                                        }) : SC.stream(n);
                                else
                                    e.soundObjs[n] = soundManager.createSound({
                                        id: n,
                                        url: "https://s3.amazonaws.com/cdn.roll20.net/ttaudio/" + n.split("-")[0]
                                    }),
                                    o || (i.source = "Tabletop Audio")
                            }
                            a || r()
                        }
                        i.get("playing") && t.push(n)
                    }),
                    _.each(this.soundObjs, function(i, n) {
                        if (-1 == _.indexOf(t, n)) {
                            try {
                                i.stop()
                            } catch (r) {
                                console.log("Unable to stop music...not playing in first place due to blocked Flash?")
                            }
                            delete e.soundObjs[n]
                        }
                    })
                }
            },
            stopAllTracks: function() {
                this.playlist.each(function(e) {
                    1 == e.get("playing") && e.save({
                        playing: !1
                    })
                })
            },
            setPlaylistPlaying: function(e, t) {
                var i = this;
                t || (t = 0);
                var n = e;
                if (console.log("Heard playingplaylist change to " + n),
                0 == n)
                    return console.log("False, returning"),
                    void this.stopAllTracks();
                var r, o = JSON.parse(d20.Campaign.get("jukeboxfolder"));
                if (_.each(o, function(e) {
                    "object" == typeof e && e.id == n && (r = e)
                }),
                !r)
                    return void console.error("Unable to find a playlist with ID: " + n);
                r.i = _.reject(r.i, function(e) {
                    return "string" != typeof e ? !0 : window.Jukebox.playlist.get(e) ? void 0 : !0
                });
                var a = !1;
                if ("s" == r.s)
                    t = d20.jukebox.randomizer.nextInt(r.i.length);
                else if ("b" == r.s)
                    t > r.i.length - 1 && (t = 0);
                else if ("a" == r.s) {
                    if (d20.jukebox.playedPlaylistOnce)
                        return;
                    d20.jukebox.playedPlaylistOnce = !0,
                    t = 0,
                    a = !0
                }
                this.stopAllTracks(),
                d20.jukebox.playlistCurrentIdx = t;
                for (var s = t; s < r.i.length; s++) {
                    var l = r.i[s];
                    console.log(l);
                    var c = i.playlist.get(l);
                    if (c ? (console.log("PLAYING TRACK"),
                    c.set({
                        playing: !0,
                        softstop: !1
                    }),
                    i.scanForNewPlays()) : console.log("Unable to find what I thought was the first track in the playlist: " + l),
                    !a)
                        break
                }
            }
        });
        Backbone.execute_notify = function(e, t) {
            $.get("/editor/updatefromrt/" + campaign_id, function(i) {
                "success" == i ? ($("#exit").attr("title", "Save & Exit (Auto-Saved: " + currentTime() + ")"),
                e && e()) : t && t()
            })
        }
        ,
        window.d20ext.finalPageLoad = function() {
            console.log("Final page load."),
            d20.Campaign = new Y,
            window.Campaign = d20.Campaign,
            window.Jukebox = new et
        }
        ,
        window.d20ext.showGoogleAd = function() {
            $("#lr_interstitial_table").remove(),
            d20.adtype = "google";
            var e = e || {};
            e.cmd = e.cmd || [],
            function() {
                var e = document.createElement("script");
                e.async = !0,
                e.type = "text/javascript";
                var t = "https:" == document.location.protocol;
                e.src = (t ? "https:" : "http:") + "//www.googletagservices.com/tag/js/gpt.js";
                var i = document.getElementsByTagName("script")[0];
                i.parentNode.insertBefore(e, i)
            }(),
            e.cmd.push(function() {
                e.defineSlot("/34541132/LoadingScreen", [640, 360], "dfp-1349445796341-0").addService(e.pubads()),
                e.pubads().enableSingleRequest(),
                e.enableServices()
            }),
            e.cmd.push(function() {
                e.display("dfp-1349445796341-0")
            });
            var t = 15;
            $("#loading-overlay").find("p").addClass("countdowntext").text(t + "");
            var i = setInterval(function() {
                return 1 > t ? (clearInterval(i),
                window.d20ext.seenad = !0,
                $("#loading-overlay").find("div").hide(),
                window.currentPlayer && d20.Campaign.pages.length > 0 && d20.Campaign.handlePlayerPageChanges(),
                void $.get("/editor/startping/true")) : (t -= 1,
                void $("#loading-overlay").find("p").text(t + ""))
            }, 1e3);
            window.googletag = e
        }
        ,
        d20.undo.lastActionSeen = new Date,
        d20.undo.newAction = function(e, t) {
            var i = new Date;
            i - d20.undo.lastActionSeen > 100 && _.size(d20.undo.currentGroup) > 0 && d20.undo.pushGroupToStack(),
            d20.undo.currentGroup[e] = {
                id: e,
                func: t,
                order: _.size(d20.undo.currentGroup)
            },
            d20.undo.lastActionSeen = i
        }
        ,
        d20.undo.pushGroupToStack = function() {
            _.size(d20.undo.currentGroup) > 0 && (d20.undo.stack.push(d20.undo.currentGroup),
            d20.undo.currentGroup = {})
        }
        ,
        d20.undo.doUndo = function() {
            if (d20.undo.pushGroupToStack(),
            0 != d20.undo.stack.length) {
                d20.engine.unselect();
                for (var e = d20.undo.stack.pop(), t = _.sortBy(e, function(e) {
                    return e.order
                }), i = 0; i < t.length; i++)
                    t[i].func(t[i].id)
            }
        }
        ,
        d20.undo.updateStack = function(e, t) {
            d20.undo.pushGroupToStack();
            for (var i = 0; i < d20.undo.stack.length; i++) {
                var n = d20.undo.stack[i];
                n[e] && (n[t] = n[e],
                n[t].id = t,
                delete n[e])
            }
        }
    }),
    d20.models = d20.models || {},
    function() {
        d20.models.CharacterEditorView = Backbone.View.extend({
            _template: $("#tmpl_charactereditor"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "updateModel", "showDialog"),
                this.model.bind("change:avatar change:defaulttoken", function() {
                    e.$el.is(":visible") && (e.render(),
                    e.$el.find(".chosen").chosen()),
                    d20.engine && d20.engine.debounced_renderAll()
                }),
                $(this.el).addClass("dialog"),
                this.$el = $(this.el);
                var e = this;
                this.$el.on("click", ".delete", function() {
                    e.model.safeDestroy()
                }),
                this.$el.on("click", ".archive", function() {
                    e.model.set({
                        archived: !e.model.get("archived")
                    }).save(),
                    e.$el.dialog("destroy")
                }),
                this.$el.on("click", ".duplicate", function() {
                    var t = e.model.toJSON();
                    delete t.id,
                    t.name = "Copy of " + t.name;
                    var i = e.model.collection.create(t);
                    setTimeout(function() {
                        var t = i.get("attrorder");
                        e.model.attribs.each(function(e) {
                            var n = e.toJSON();
                            delete n.id;
                            var r = i.attribs.create(n);
                            t = t.replace(e.id, r.id),
                            r = null
                        });
                        var n = i.get("abilorder");
                        e.model.abilities.each(function(e) {
                            var t = e.toJSON();
                            delete t.id;
                            var r = i.abilities.create(t);
                            n = n.replace(e.id, r.id),
                            r = null
                        }),
                        i.save({
                            abilorder: n,
                            attrorder: t
                        });
                        var r = {};
                        e.model._blobcache.bio && (r.bio = e.model._blobcache.bio),
                        e.model._blobcache.gmnotes && (r.gmnotes = e.model._blobcache.gmnotes),
                        e.model._blobcache.defaulttoken && (r.defaulttoken = e.model._blobcache.defaulttoken),
                        Object.keys(r).length > 0 && i.updateBlobs(r)
                    }, 100)
                }),
                this.$el.on("click", ".nav li a", function() {
                    e.$el.find(".nav li.active").removeClass("active"),
                    e.$el.find(".tab-pane").each(function() {
                        this.style.display = "none"
                    }),
                    e.$el.find(".tab-pane." + $(this).attr("data-tab"))[0].style.display = "block",
                    $(this).parent().addClass("active")
                }),
                this.$el.on("click", ".defaulttoken button", function() {
                    var t = d20.engine.selected();
                    if (t && 0 != t.length) {
                        var i = t[0];
                        if ("image" === i.type && i.model) {
                            var n = i.model.toJSON()
                              , r = {};
                            delete n.id;
                            for (var o in n)
                                n[o] !== i.model.defaults[o] && (r[o] = n[o]);
                            e.updateModel();
                            var a = JSON.stringify(r);
                            a !== e.model._blobcache.defaulttoken && (e.model.updateBlobs({
                                defaulttoken: a
                            }),
                            e.model.save({
                                defaulttoken: (new Date).getTime()
                            }))
                        }
                    }
                }),
                this.$el.on("click", ".defaulttoken .remove", function() {
                    var t = $("<div class='dialog'>Are you sure you want to delete the default token?</div>");
                    t.dialog({
                        modal: !0,
                        title: "Confirm Deletion",
                        buttons: {
                            "Yes, Delete": function() {
                                e.updateModel(),
                                $(this).dialog("destroy").remove(),
                                e.model.updateBlobs({
                                    defaulttoken: null
                                }),
                                e.model.save({
                                    defaulttoken: ""
                                })
                            },
                            Cancel: function() {
                                $(this).dialog("destroy").remove()
                            }
                        },
                        beforeClose: function() {
                            $(this).dialog("destroy").remove()
                        }
                    })
                })
            },
            addBlob: function(e) {
                var t = this;
                this.$el.find("." + e).html("Loading..."),
                this.model._getLatestBlob(e, function(i) {
                    var n = d20.utils.handleHTMLOutput(i)
                      , r = !1;
                    "SINGLESPACED!!" == n.substring(0, 14) && (n = n.substring(14, n.length),
                    r = !0),
                    t.$el.find("." + e).redactor(d20.utils.defaultRedactorSettings),
                    t.$el.find("." + e).redactor("set", n, !1),
                    r && t.$el.find("textarea." + e).redactor("getObject").$editor.addClass("singlespaced")
                })
            },
            addDefaultToken: function() {
                var e = this;
                this.model._getLatestBlob("defaulttoken", function(t) {
                    var i = JSON.parse(t);
                    e.$el.find(".defaulttoken img").attr("src", i.imgsrc)
                })
            },
            render: function() {
                console.log("Render character editor");
                var e = this;
                if (this.$el.html(this._template.jqote(this.model)),
                this.$el.attr("data-characterid", this.model.id),
                this.$el.find(".name").val(this.model.get("name")),
                this.addBlob("bio"),
                window.is_gm) {
                    this.addBlob("gmnotes"),
                    "" !== this.model.get("defaulttoken") && this.addDefaultToken();
                    var t = this.model.get("controlledby").split(",");
                    _.each(t, function(t) {
                        e.$el.find(".controlledby option[value=" + t + "]").attr("selected", "selected")
                    });
                    var i = this.model.get("inplayerjournals").split(",");
                    _.each(i, function(t) {
                        e.$el.find(".inplayerjournals option[value=" + t + "]").attr("selected", "selected")
                    }),
                    this.tagEditor = new $.TextboxList(this.$el.find(".tags"),{
                        encode: function() {},
                        decode: function() {},
                        startEditableBit: !1,
                        inBetweenEditableBits: !1,
                        unique: !0,
                        plugins: {
                            autocomplete: {
                                minLength: 2
                            }
                        }
                    });
                    var n = this.tagEditor.plugins.autocomplete;
                    n.setValues(_.map(d20.journal.possibletags, function(e) {
                        return [null , e.tag, null ]
                    }));
                    for (var r = this.model.tagsArray(), o = 0; o < r.length; o++)
                        this.tagEditor.add(r[o])
                }
                d20.utils.setupAvatar(this.$el.find(".avatar"), e),
                this.$el.find(".tab-pane").show()
            },
            updateModel: function() {
                var e = {}
                  , t = {};
                if (window.is_gm) {
                    var i = d20.utils.handleHTMLInput((this.$el.find("textarea.bio").redactor("getObject").$editor.hasClass("singlespaced") ? "SINGLESPACED!!" : "") + this.$el.find("textarea.bio").redactor("get"));
                    i !== this.model._blobcache.bio && (t.bio = i);
                    var n = d20.utils.handleHTMLInput((this.$el.find("textarea.gmnotes").redactor("getObject").$editor.hasClass("singlespaced") ? "SINGLESPACED!!" : "") + this.$el.find("textarea.gmnotes").redactor("get"));
                    n !== this.model._blobcache.gmnotes && (t.gmnotes = n),
                    Object.keys(t).length > 0 && this.model.updateBlobs(t);
                    var r = [];
                    this.$el.find(".controlledby option:selected").each(function() {
                        r.push($(this).val())
                    });
                    var o = [];
                    if (this.$el.find(".inplayerjournals option:selected").each(function() {
                        o.push($(this).val())
                    }),
                    e = {
                        name: d20.utils.strip_tags(this.$el.find(".name").val()),
                        controlledby: r.join(","),
                        inplayerjournals: o.join(",")
                    },
                    t.bio && (e.bio = (new Date).getTime()),
                    t.gmnotes && (e.gmnotes = (new Date).getTime()),
                    this.tagEditor) {
                        for (var a = this.tagEditor.getValues(), s = [], l = 0; l < a.length; l++)
                            s.push(a[l][1]);
                        e.tags = JSON.stringify(s)
                    }
                } else {
                    var i = d20.utils.handleHTMLInput((this.$el.find("textarea.bio").redactor("getObject").$editor.hasClass("singlespaced") ? "SINGLESPACED!!" : "") + this.$el.find("textarea.bio").redactor("get"));
                    i !== this.model._blobcache.bio && (t.bio = i),
                    Object.keys(t).length > 0 && (this.model._blobcache.bio = i,
                    this.model.updateBlobs(t)),
                    t.bio && (e.bio = (new Date).getTime()),
                    e.name = d20.utils.strip_tags(this.$el.find(".name").val())
                }
                this.model.save(e)
            },
            showDialog: function(e) {
                var t = this;
                this.render();
                var i = 500;
                window.is_gm && (i = 750);
                var n = $(window).height() - d20.utils.playerZoneHeight();
                n > i && (n = i),
                $(this.el).dialog({
                    modal: !1,
                    width: 700,
                    height: n,
                    position: ["center", 60],
                    title: "Edit " + this.model.get("name"),
                    zIndex: 10500,
                    buttons: {
                        "Save Changes": function() {
                            t.$el.find(".abil.editing .saveabil").trigger("click"),
                            t.$el.find(".attrib").trigger("dosave");
                            var i = t.$el.find("ul.nav li.active a").attr("data-tab");
                            $(this).dialog("destroy"),
                            t.updateModel(),
                            _.defer(function() {
                                t.model.view.showDialog(e),
                                _.defer(function() {
                                    t.model.view.$el.find("ul.nav li a[data-tab=" + i + "]").trigger("click")
                                })
                            })
                        },
                        Cancel: function() {
                            var i = t.$el.find("ul.nav li.active a").attr("data-tab");
                            $(this).dialog("destroy"),
                            t.$el.find(".attrib").trigger("doclose"),
                            t.$el.find(".abil.editing").trigger("doclose"),
                            _.defer(function() {
                                t.model.view.showDialog(e),
                                _.defer(function() {
                                    t.model.view.$el.find("ul.nav li a[data-tab=" + i + "]").trigger("click")
                                })
                            })
                        }
                    },
                    beforeClose: function() {
                        console.log("before close!");
                        var i = t.$el.find("ul.nav li.active a").attr("data-tab");
                        t.$el.find(".abil.editing").trigger("doclose"),
                        $(this).dialog("destroy"),
                        _.defer(function() {
                            t.model.view.showDialog(e),
                            _.defer(function() {
                                t.model.view.$el.find("ul.nav li a[data-tab=" + i + "]").trigger("click")
                            })
                        })
                    }
                }),
                this.$el.find(".chosen").chosen()
            }
        }),
        d20.models.CharacterView = Backbone.View.extend({
            _template: $("#tmpl_characterviewer"),
            initialize: function() {
                _.bindAll(this, "render", "showDialog");
                var e = this;
                this.model.bind("change:blob_bio change:avatar " + (window.is_gm ? "change:blob_gmnotes" : ""), function() {
                    e.render()
                }),
                this.model.bind("change:name", function() {
                    d20.journal.customSheets ? (e.updateSheetValues("character_name"),
                    e.updateSheetValues("name")) : e.render()
                }),
                $(this.el).addClass("dialog").addClass("characterdialog"),
                this.$el = $(this.el),
                this.debounced_updateSheetValues = _.debounce(this._updateSheetValues, 100),
                this._dirtySheetAttributes = [],
                this.updateSheetValues = function(t) {
                    void 0 !== t && (e._dirtySheetAttributes.push(t.toLowerCase()),
                    e._dirtySheetAttributes.push(t.toLowerCase() + "_max")),
                    e.debounced_updateSheetValues()
                }
                ,
                this.flushSheetValueUpdates = function() {
                    e._updateSheetValues()
                }
                ,
                this.model.attribs.on("change", function(t) {
                    e.updateSheetValues(t.get("name"))
                }),
                this.model.attribs.on("add", function(t) {
                    e.updateSheetValues(t.get("name"))
                }),
                this.model.attribs.on("remove", function(t) {
                    e.updateSheetValues(t.get("name"))
                }),
                this._attribsHaveAttrived = !1,
                this._pendingRenderForAttribs = !1;
                var t = function() {
                    e._attribsHaveAttrived = !0,
                    e._pendingRenderForAttribs && (e.render(),
                    e._pendingRenderForAttribs = !1)
                }
                  , i = _.debounce(t, 100);
                this.model.attribs.on("initial_load", function() {
                    e._attribsHaveAttrived || i()
                }),
                this.rebindViewEvents(),
                this.changedByMe = !1
            },
            rebindViewEvents: function() {
                var e = this;
                this.$el.on("click", function() {
                    console.log("CLICKED")
                }),
                this.$el.on("click", ".addattrib", function() {
                    var t = e.model.attribs.create();
                    e.$el.find(".attributes .body").append(t.view.$el),
                    t.view.rebindEvents(e.model),
                    t.view.$el.find(".attrname").trigger("click")
                }),
                this.$el.on("click", ".addabil", function() {
                    var t = 0;
                    e.model.abilities.each(function(e) {
                        -1 !== e.get("name").indexOf("New Ability") && t++
                    });
                    var i = e.model.abilities.create({
                        name: "New Ability " + t
                    });
                    e.$el.find(".abilities .body").append(i.view.$el),
                    i.view.rebindEvents(e.model),
                    i.view.$el.find(".abilname").trigger("click")
                }),
                this.allTabs = {};
                var t, i;
                this.$el.on("click", ".nav li a", function() {
                    if (e.allTabs) {
                        t && t.removeClass("active"),
                        i && (i.style.display = "none");
                        var n = $(this).attr("data-tab");
                        e.allTabs[n] && (e.allTabs[n].style.display = "block",
                        i = e.allTabs[n],
                        $(this).parent().addClass("active"),
                        t = $(this).parent())
                    }
                }),
                this.$el[0].addEventListener("blur", function(t) {
                    var i = $(t.target);
                    i.parentsUntil(this.$el, ".charsheet").length > 0 && (i.is("input[type=text]") || i.is("input[type=number]") || i.is("textarea")) && e.saveSheetValues(i[0])
                }, !0),
                this.$el.on("click", ".charsheet input[type=number]", function() {
                    var e = $(this);
                    e.is(":focus") || e.focus()
                }),
                this.$el.on("keyup", ".charsheet input[type=text], .charsheet input[type=number]", function(e) {
                    13 == e.which && $(this).trigger("blur")
                }),
                this.$el.on("click", ".charsheet .btn", function() {
                    void 0 !== document.activeElement && void 0 !== document.activeElement.name && document.activeElement.name.length > 0 && document.activeElement.blur()
                }),
                this.$el.on("click", "a", function() {
                    var e = $(this).attr("href");
                    if (-1 !== e.indexOf("journal.roll20.net")) {
                        var t = e.split("/")[3]
                          , i = e.split("/")[4]
                          , n = d20.Campaign[t + "s"].get(i);
                        if (n) {
                            var r = n.get("inplayerjournals").split(",");
                            (window.is_gm || -1 !== _.indexOf(r, "all") || window.currentPlayer && -1 !== _.indexOf(r, window.currentPlayer.id)) && n.view.showDialog()
                        }
                        return $("#existing" + t + "s").find("tr[data-" + t + "id=" + i + "]").trigger("click"),
                        !1
                    }
                }),
                this.$el.on("change", ".charsheet select", function() {
                    e.saveSheetValues(this)
                }),
                this.$el.on("click", ".charsheet input[type=checkbox], .charsheet input[type=radio]", function() {
                    console.log("CLICKED: radio/checkbox", this),
                    e.saveSheetValues(this)
                }),
                this.$el.on("click", ".charsheet .repcontrol_add", function() {
                    var t = $(this).parents(".repcontrol").prev(".repcontainer")
                      , i = generateUUID().replace(/_/g, "Z")
                      , n = t.prev("fieldset").html()
                      , r = $("<div>" + n + "</div>")
                      , o = t.attr("data-groupname");
                    r.find("input[type=radio]").each(function() {
                        var e = $(this)
                          , t = e.attr("name").substring(5, e.attr("name").length);
                        e.attr("name", "attr_" + i + "_" + o + "_" + t),
                        e.attr("data-attrname", t)
                    }),
                    t.append("<div class='repitem' data-reprowid='" + i + "'><div class='itemcontrol'><button class='btn btn-danger pictos repcontrol_del'>#</button><a class='btn repcontrol_move'>\u2261</a></div>" + r.html() + "</div>"),
                    setTimeout(function() {
                        e.rebindCompendiumDropTargets()
                    }, 0)
                }),
                this.$el.on("click", ".charsheet .repcontrol_edit", function() {
                    var t = $(this).parents(".repcontrol").prev(".repcontainer");
                    t.hasClass("editmode") ? (t.removeClass("editmode"),
                    $(this).text("Modify"),
                    $(this).next(".repcontrol_add").show()) : (t.addClass("editmode"),
                    $(this).text("Done"),
                    $(this).next(".repcontrol_add").hide(),
                    t.sortable({
                        axis: "y",
                        handle: ".repcontrol_move",
                        items: ".repitem",
                        update: function() {
                            var i = [];
                            t.find(".repitem").each(function() {
                                i.push($(this).attr("data-reprowid"))
                            });
                            var n = "_reporder_" + t.attr("data-groupname")
                              , r = e.model.attribs.find(function(e) {
                                return e.get("name").toLowerCase() === n
                            });
                            r ? r.syncedSave({
                                current: i.join(",")
                            }) : e.model.attribs.create({
                                name: n,
                                current: i.join(",")
                            }),
                            d20.journal.notifyWorkersOfAttrChanges(e.model.id, [n], "player")
                        }
                    }))
                }),
                this.$el.on("click", ".charsheet .repcontrol_del", function() {
                    var t = $(this).parents(".repitem")
                      , i = $(this).parents(".repcontainer");
                    e.deleteRepeatingRow(i.attr("data-groupname"), t.attr("data-reprowid"))
                }),
                this.$el.on("click", ".charsheet button[type=roll]", function(t) {
                    t.preventDefault();
                    var i = e.model.expandReferencesInRoll($(this).attr("value"), $(this));
                    d20.textchat.doChatInput(i)
                })
            },
            addBlob: function(e) {
                var t = this;
                this.$el.find("." + e).html("Loading..."),
                this.model._getLatestBlob(e, function(i) {
                    var n = d20.utils.handleHTMLOutput(i, !0)
                      , r = !1;
                    "SINGLESPACED!!" == n.substring(0, 14) && (n = n.substring(14, n.length),
                    r = !0),
                    t.$el.find("." + e).html(n),
                    r && t.$el.find("." + e).addClass("singlespaced")
                })
            },
            render: function() {
                if (!this._attribsHaveAttrived)
                    return console.log("DELAY RENDER FOR ATTRIBUTES!"),
                    void (this._pendingRenderForAttribs = !0);
                var e = (new Date).getTime();
                console.log("--- RENDER CHARACTIVE VIEW ----");
                var t = this
                  , i = this.$el.find(".nav li.active a");
                if (i = i.length > 0 ? i.attr("data-tab") : !1,
                this.$el.html(this._template.jqote(this.model)),
                this.$el.attr("data-characterid", this.model.id),
                this.$el.find(".nav li a").each(function() {
                    t.allTabs[$(this).attr("data-tab")] = t.$el.find(".tab-pane." + $(this).attr("data-tab"))[0],
                    t.allTabs[$(this).attr("data-tab")].style.display = "none",
                    $(this).parent().removeClass("active")
                }),
                this.addBlob("bio"),
                window.is_gm && this.addBlob("gmnotes"),
                i ? this.$el.find(".nav li a[data-tab=" + i + "]").trigger("click") : this.$el.find(".nav li:first-child a").trigger("click"),
                this.model.currentPlayerControls()) {
                    $attrtable = this.$el.find(".attributes .body"),
                    $abiltable = this.$el.find(".abilities .body"),
                    $attrtable.addClass("editable"),
                    $abiltable.addClass("editable");
                    var n = this.model.get("attrorder").split(",")
                      , r = _.sortBy(this.model.attribs.models, function(e, t) {
                        var i = n.indexOf(e.id);
                        return -1 === i ? t + 1e3 : i
                    });
                    _.each(r, function(e) {
                        return -1 !== e.get("name").toLowerCase().indexOf("repeating_") ? !0 : (e.view.$el.appendTo($attrtable),
                        void e.view.rebindEvents(t.model))
                    });
                    var n = this.model.get("abilorder").split(",")
                      , r = _.sortBy(this.model.abilities.models, function(e, t) {
                        var i = n.indexOf(e.id);
                        return -1 === i ? t + 1e3 : i
                    });
                    _.each(r, function(e) {
                        e.view.$el.appendTo($abiltable),
                        e.view.rebindEvents(t.model)
                    }),
                    $attrtable.sortable({
                        items: ".attrib",
                        handle: ".handle",
                        distance: 5,
                        update: function() {
                            var e = [];
                            $attrtable.find(".attrib").each(function() {
                                var t = $(this).attr("data-attrid");
                                e.push(t)
                            }),
                            t.model.save({
                                attrorder: e.join(",")
                            })
                        },
                        axis: "y"
                    }),
                    $abiltable.sortable({
                        items: ".abil",
                        handle: ".handle",
                        distance: 5,
                        update: function() {
                            var e = [];
                            $abiltable.find(".abil").each(function() {
                                var t = $(this).attr("data-abilid");
                                e.push(t)
                            }),
                            t.model.save({
                                abilorder: e.join(",")
                            })
                        },
                        axis: "y"
                    }),
                    this.$el.find(".draggableresult").draggable({
                        revert: !0,
                        distance: 10,
                        revertDuration: 0,
                        helper: "clone",
                        appendTo: "body",
                        scroll: !1
                    }).addTouch(),
                    this.$charsheet = this.$el.find(".charsheet"),
                    this.$sheetform = this.$el.find(".sheetform"),
                    this.$charsheet.length > 0 && d20.journal.useCustomSheets && (console.log("Redoing charsheet html"),
                    this.$charsheet.remove(),
                    this.$charsheet.html(d20.journal.customSheets.layouthtml),
                    this.$charsheet.addClass("lang-" + window.customcharsheet_lang),
                    t.setupRepeatingControls(),
                    window.is_playerapp || t.$charsheet.find("button[type=roll]").draggable({
                        revert: !0,
                        distance: 10,
                        revertDuration: 0,
                        helper: "clone",
                        appendTo: "body",
                        scroll: !1,
                        cancel: !1,
                        connectToSortable: "#macrobar_macros",
                        start: function() {
                            return t.childWindow ? !1 : void $(this).attr("data-characterid", t.model.id)
                        }
                    }).addTouch(),
                    t.updateSheetValues("all"),
                    this.hasBeenOpenedOnce || _.defer(function() {
                        d20.journal.notifyWorkersOfFirstOpen(t.model.id),
                        this.hasBeenOpenedOnce = !0
                    })),
                    console.log((new Date).getTime() - e + "ms to end of html")
                }
            },
            _updateSheetValues: function() {
                if (this.$charsheet) {
                    console.log("Really updating character sheet values");
                    var e = (new Date).getTime();
                    this._ignoreSheetSaves = !0;
                    var t = this
                      , i = {};
                    this.$charsheet.find("fieldset").each(function() {
                        var e = "<div><div class='repitem'><div class='itemcontrol'><button class='btn btn-danger pictos repcontrol_del'>#</button><a class='btn repcontrol_move'>\u2261</a></div>" + $(this).html() + "</div></div>"
                          , n = $(this).next(".repcontainer")
                          , r = n.attr("data-groupname");
                        if (n.length < 1 || "" === r)
                            return !0;
                        var o = r + "_"
                          , a = {};
                        t.model.attribs.each(function(e) {
                            if (e.get("name").toLowerCase().substring(0, o.length) === o.toLowerCase()) {
                                var t = (e.get("name").toLowerCase().split("_"),
                                (e.get("name") + "").split("_")[2])
                                  , i = e.get("name").substring(o.length + t.length + 1, e.get("name").length);
                                if (a[t] || (a[t] = {}),
                                void 0 !== a[t][i.toLowerCase()])
                                    return;
                                a[t][i.toLowerCase()] = {
                                    current: e.get("current"),
                                    max: e.get("max")
                                }
                            }
                        });
                        var s = t.model.repeatingKeyOrder(a, r)
                          , l = s.length
                          , c = n.find(".repitem").length;
                        if (c > l) {
                            var d, h = l - 1;
                            d = n.find(0 > h ? ".repitem" : ".repitem:gt(" + h + ")"),
                            t._dirtySheetAttributes.push(r + "_" + d.eq(0).attr("data-reprowid")),
                            d.remove()
                        } else if (l > c)
                            for (var u = $(e), p = c; l > p; p++) {
                                var f = generateUUID();
                                u.find("input[type=radio]").each(function() {
                                    var e = $(this)
                                      , t = e.attr("data-attrname") || e.attr("name").substring(5, e.attr("name").length);
                                    e.attr("name", "attr_" + f + "_" + r + "_" + t),
                                    e.attr("data-attrname", t)
                                }),
                                n.append(u.html())
                            }
                        var g = 0;
                        _.each(s, function(e) {
                            var t = n.find(".repitem").eq(g);
                            t.attr("data-reprowid", e),
                            "-" === e.substring(0, 1) && e.toLowerCase() === e && t.addClass("repitembroken"),
                            g++
                        }),
                        i[r] = a,
                        a = null
                    }),
                    t.$charsheet.find("button[type=roll]").draggable({
                        revert: !0,
                        distance: 10,
                        revertDuration: 0,
                        helper: "clone",
                        appendTo: "body",
                        scroll: !1,
                        cancel: !1,
                        connectToSortable: "#macrobar_macros",
                        start: function() {
                            return t.childWindow ? !1 : void ($(this).parents(".repcontainer").length > 0 ? $(this).attr("data-characterid", t.model.id + "/" + $(this).closest(".repcontainer").attr("data-groupname") + "_" + $(this).closest(".repitem").attr("data-reprowid") + "_" + encodeURIComponent($(this).attr("name").substring(5, $(this).attr("name").length))) : $(this).attr("data-characterid", t.model.id))
                        }
                    }).addTouch(),
                    console.log("Setting up repeating sections took until " + ((new Date).getTime() - e) + "ms");
                    var n = function(e, r) {
                        if (!(r > 99)) {
                            if (d20.journal.customSheets.attrDeps[e])
                                for (var o = 0; o < d20.journal.customSheets.attrDeps[e].length; o++)
                                    -1 === t._dirtySheetAttributes.indexOf(d20.journal.customSheets.attrDeps[e][o]) && (t._dirtySheetAttributes.push(d20.journal.customSheets.attrDeps[e][o]),
                                    n(d20.journal.customSheets.attrDeps[e][o], r++));
                            if ("repeating_" === e.substring(0, 10)) {
                                var a = "repeating_" + e.split("_")[1]
                                  , s = e.split("_");
                                for (var l in d20.journal.customSheets.availableAttributes)
                                    if (l.substring(0, a.length) === a) {
                                        var c = l.split("_");
                                        if (c.splice(2, 0, s[2]),
                                        c.splice(0, 3),
                                        l = c.join("_"),
                                        -1 === t._dirtySheetAttributes.indexOf(l) && (t._dirtySheetAttributes.push(l),
                                        -1 === s[2].indexOf("$"))) {
                                            var d = t.model.repeatingKeyOrder(i[a] || {}, a)
                                              , h = d.indexOf(s[2]);
                                            if (-1 !== h) {
                                                var u = a + "_$" + h + "_" + s.splice(3);
                                                t._dirtySheetAttributes.push(u),
                                                n(u, r + 1)
                                            }
                                        }
                                    }
                            }
                        }
                    }
                      , r = !1;
                    if (-1 !== t._dirtySheetAttributes.indexOf("all"))
                        r = !0,
                        console.log("Updating ALL VALUES");
                    else
                        for (var o = t._dirtySheetAttributes.length, a = 0; o > a; a++)
                            n(t._dirtySheetAttributes[a].toLowerCase(), 1);
                    var s = {};
                    _.each(t._dirtySheetAttributes, function(e) {
                        s[e] = !0
                    }),
                    console.log("Finding list of dirty attributes took until " + ((new Date).getTime() - e) + "ms"),
                    this.changedByMe !== !1 && (d20.journal.notifyWorkersOfAttrChanges(t.model.id, t._dirtySheetAttributes, this.changedByMe),
                    this.changedByMe = !1);
                    var l = this.$charsheet[0].querySelectorAll('*[name^="attr_"]');
                    console.log("Querytest took until " + ((new Date).getTime() - e) + "ms");
                    var c = {};
                    t.model.attribs.each(function(e) {
                        var t = e.get("name").toLowerCase();
                        c[t] || (c[t] = {
                            current: e.get("current"),
                            max: e.get("max"),
                            id: e.id
                        })
                    }),
                    console.log("Attribute cache compliation took until " + ((new Date).getTime() - e) + "ms"),
                    _.each(l, function(e) {
                        var n = e.getAttribute("data-attrname")
                          , o = e.name || e.getAttribute("name")
                          , a = null !== n ? n : o.substring(5, o.length);
                        if (r || s[a.toLowerCase()]) {
                            var l = $(e);
                            if (d20.utils.getParentsUntil(e, t.$charsheet[0], "fieldset").length > 0)
                                return !0;
                            var d, h = d20.utils.getParentsUntil(e, t.$charsheet[0], ".repcontainer"), u = [];
                            h.length > 0 && (u = $(h[0]),
                            d = d20.utils.getParentsUntil(e, u[0], ".repitem")[0].getAttribute("data-reprowid"),
                            a = u.attr("data-groupname") + "_" + d + "_" + a);
                            var p, f = "current", g = a.split("_");
                            "max" === g[g.length - 1] && (f = "max",
                            a = a.substring(0, a.length - 4));
                            var m;
                            if ("character_name" === a)
                                m = t.model.get("name");
                            else if (l.attr("disabled")) {
                                var v = l.attr("data-formula");
                                try {
                                    var y = {};
                                    u.length > 0 && (p = u.attr("data-groupname"),
                                    void 0 !== d && i[p] && i[p][d] && (y = i[p][d]),
                                    p += "_"),
                                    m = t.model.autoCalcFormula(v, y, p),
                                    void 0 !== l.data("data-prev-value") && l.data("data-prev-value") != m && t.model.updateTokensByName(a),
                                    l.data("data-prev-value", m)
                                } catch (b) {
                                    console.log("ERROR parsing formula: " + v),
                                    console.log(b)
                                }
                            } else {
                                var w = c[a.toLowerCase()];
                                void 0 !== w && void 0 !== w[f] && "" !== w[f] && (m = w[f])
                            }
                            if (void 0 !== m && "string" == typeof m && -1 !== m.indexOf("@{") && d20.journal.updateSheetDeps(a, m),
                            (!r || "span" === l[0].tagName.toLowerCase()) && void 0 === m) {
                                var x = (a + ("max" === f ? "_max" : "")).toLowerCase();
                                if ("repeating_" === x.substring(0, 10) && (!d20.journal.customSheets || void 0 === d20.journal.customSheets.availableAttributes[x])) {
                                    var E = x.split("_");
                                    isNaN(E[2]) && "-" !== E[2].substring(0, 1) || (E.splice(2, 1),
                                    x = E.join("_"))
                                }
                                d20.journal.customSheets && d20.journal.customSheets.availableAttributes && void 0 !== d20.journal.customSheets.availableAttributes[x] && (m = d20.journal.customSheets.availableAttributes[x])
                            }
                            "input" === l[0].tagName.toLowerCase() && "checkbox" === l.attr("type") ? void 0 !== m && (m == l.attr("value") ? l.attr("checked", "checked") : l.removeAttr("checked")) : "input" === l[0].tagName.toLowerCase() && "radio" === l.attr("type") ? void 0 !== m && (m == l.attr("value") ? l.attr("checked", "checked") : l.removeAttr("checked")) : "span" === l[0].tagName.toLowerCase() ? void 0 !== m && (e.hasAttribute("data-i18n-dynamic") ? l.text(i18n(m, "[" + m + "]")) : l.text() !== m && l.text(m)) : void 0 !== m && l.val() !== m && (void 0 !== x && console.log("FILLED IN A DEFAULT VALUE FOR " + a),
                            l.val(m))
                        }
                    }),
                    i = null ,
                    c = null ,
                    s = null ,
                    this._ignoreSheetSaves = !1,
                    t._dirtySheetAttributes = [],
                    console.log("Set values (including auto-calcuating variables) took until " + ((new Date).getTime() - e) + "ms"),
                    0 == this.$sheetform.find(".charsheet").length && (console.log("Appending to sheetform"),
                    this.$sheetform.append(this.$charsheet),
                    console.log("Appending to screen took until " + ((new Date).getTime() - e) + "ms")),
                    this.rebindCompendiumDropTargets(),
                    console.log("Took " + ((new Date).getTime() - e) + "ms")
                }
            },
            rebindCompendiumDropTargets: function() {
                var e = this;
                this.$charsheet.find(".sheet-compendium-drop-target").not(".ui-droppable").each(function() {
                    $(this).parentsUntil(this.$charsheet, "fieldset").length > 0 || $(this).droppable({
                        hoverClass: "dropping",
                        tolerance: "pointer",
                        activeClass: "active-drop-target",
                        drop: function(t, i) {
                            console.log("Compendium item dropped onto target!");
                            var n = $(i.helper[0]).attr("data-pagename");
                            console.log("https://app.roll20.net/compendium/" + COMPENDIUM_BOOK_NAME + "/" + n + ".json?plaintext=true"),
                            $.get("https://app.roll20.net/compendium/" + COMPENDIUM_BOOK_NAME + "/" + n + ".json?plaintext=true", function(i) {
                                var n = i.data;
                                n.Name = i.name,
                                n.Content = i.content;
                                var r = $(t.target);
                                r.find("*[accept]").each(function() {
                                    var t = $(this)
                                      , i = t.attr("accept");
                                    n[i] && ("input" === t[0].tagName.toLowerCase() && "checkbox" === t.attr("type") ? t.attr("value") == n[i] ? t.attr("checked", "checked") : t.removeAttr("checked") : "input" === t[0].tagName.toLowerCase() && "radio" === t.attr("type") ? t.attr("value") == n[i] ? t.attr("checked", "checked") : t.removeAttr("checked") : "select" === t[0].tagName.toLowerCase() ? t.find("option").each(function() {
                                        var e = $(this);
                                        (e.attr("value") === n[i] || e.text() === n[i]) && e.attr("selected", "selected")
                                    }) : $(this).val(n[i]),
                                    e.saveSheetValues(this))
                                })
                            })
                        }
                    })
                })
            },
            saveSheetValues: function(e) {
                if (this._ignoreSheetSaves)
                    return void console.log("Ignoring saves...");
                var t = this
                  , i = $(e);
                if ("undefined" == typeof i.attr("name") || -1 === i.attr("name").indexOf("attr_"))
                    return void console.log("no attr name");
                if (i.attr("disabled"))
                    return void console.log("attr disabled");
                var n = !1
                  , r = "current"
                  , o = void 0 !== i.attr("data-attrname") ? i.attr("data-attrname") : i.attr("name").substring(5, i.attr("name").length)
                  , a = i.parentsUntil(t.$charsheet, ".repitem");
                if (a.length > 0) {
                    var s = a.parentsUntil(t.$charsheet, ".repcontainer");
                    o = s.attr("data-groupname") + "_" + a.attr("data-reprowid") + "_" + o
                }
                if ("_max" === o.substring(o.length - 4, o.length) && (r = "max",
                o = o.substring(0, o.length - 4)),
                "character_name" === o.toLowerCase())
                    return void this.model.save({
                        name: d20.utils.strip_tags(i.val())
                    });
                n = this.model.attribs.find(function(e) {
                    return e.get("name").toLowerCase() === o.toLowerCase()
                });
                var l = {};
                "input" === i[0].tagName.toLowerCase() && "checkbox" === i.attr("type") ? l[r] = d20.utils.strip_tags(i.is(":checked") ? i.attr("value") : "0") : "input" === i[0].tagName.toLowerCase() && "radio" === i.attr("type") ? (console.log("input type radio", 'value = "' + d20.utils.strip_tags(i.attr("value")) + '"'),
                l[r] = d20.utils.strip_tags(i.attr("value"))) : l[r] = d20.utils.strip_tags(i.val());
                var c = "" === l[r] || "undefined" == typeof l[r] ? !0 : !1;
                if (n)
                    n.syncedSave(l);
                else {
                    if (c)
                        return void console.log("blankVal, don't save");
                    l.name = o;
                    var d = this.model.attribs.create(l);
                    d.syncedSave(l),
                    -1 === l.name.indexOf("repeating_") && t.$el.find(".attributes .body").append(d.view.$el),
                    d.view.rebindEvents(this.model)
                }
                this.changedByMe = "player"
            },
            deleteRepeatingRow: function(e, t) {
                if (!this._ignoreSheetSaves) {
                    console.log("DELETE REPEATING ROW: " + e + "_" + t);
                    var i = e + "_" + t + "_"
                      , n = i.split("_");
                    if (3 > n || "" === n[2] || "-" !== n[2].substring(0, 1) && isNaN(n[2]))
                        return void console.log("ERROR: Invalid attempt to delete repeating row: " + i);
                    var r = [];
                    this.model.attribs.each(function(e) {
                        e.get("name").toLowerCase().substring(0, i.length) === i.toLowerCase() && r.push(e)
                    }),
                    (0 === r.length || isNaN(t) && t === t.toLowerCase()) && this.$charsheet.find('div[data-reprowid="' + t + '"]').remove();
                    for (var o = 0; o < r.length; o++)
                        r[o].destroy();
                    d20.journal.notifyWorkersOfRowDeleted(this.model.id, e, t, "player")
                }
            },
            setupRepeatingControls: function() {
                this.$charsheet.find("fieldset").each(function() {
                    var e, t = this.classList;
                    return _.each(t, function(t) {
                        return "repeating_" === t.substring(0, 10) ? (e = t.toLowerCase().replace("'", "&quot;"),
                        !1) : void 0
                    }),
                    e ? ($(this).hide(),
                    $(this).after("<div class='repcontrol' data-groupname='" + e + "'><button class='btn repcontrol_edit'>Modify</button><button class='btn repcontrol_add'>+Add</button></div>"),
                    void $(this).after("<div class='repcontainer' data-groupname='" + e + "'></div>")) : !0
                })
            },
            showDialog: function(e) {
                if (console.log("Show Character View Dialog!"),
                this.childWindow) {
                    if (null !== this.childWindow.top)
                        return console.log("Already has child window!"),
                        void this.childWindow.focus();
                    console.log("Orphaned child window."),
                    this.$el.remove(),
                    this.rebindViewEvents(),
                    this.needsRebind = !0,
                    this.childWindow = null
                }
                if (!$(this.el).is(":visible")) {
                    var t = this;
                    if (t.render(),
                    !e && window.currentPlayer.get("usePopouts") === !0 || "waspopout" == e)
                        return void this.showPopout();
                    var i = this.model.get("name");
                    i = "<button class='showpopout btn pictos' style='margin-right: 15px;'>|</button>" + i,
                    window.is_gm ? i += "<button class='broadcastcharacter btn'>Show to Players</button> <button class='editcharacter btn'>Edit</button>" : this.model.currentPlayerControls() && (i += "<button class='editcharacter btn'>Edit</button>"),
                    i += "<button class='zoomoptions btn'><span class='pictos'>s</span></button><div class='zoomoptionsmenu'><button class='zoomin'><span class='pictos'>&</span></button><button class='zoomdisplay'>100%</button><button class='zoomout'><span class='pictos'>_</span></button></div>";
                    var n = 500;
                    window.is_gm && (n = 750);
                    var r = $(window).height() - d20.utils.playerZoneHeight();
                    r > n && (r = n);
                    var o = 900
                      , a = $(window).width() - 100;
                    a > o && (a = o);
                    var s = $(this.el).parent()
                      , l = ["center", 30];
                    s.length > 0 && s.hasClass("ui-dialog") && (l = [parseInt(s.css("left").replace("px", ""), 10), parseInt(s.css("top").replace("px", ""), 10)],
                    a = parseInt(s[0].style.width.replace("px", ""), 10) + 1,
                    r = "auto" === s[0].style.height ? r : parseInt(s[0].style.height.replace("px", ""), 10)),
                    $(this.el).dialog({
                        modal: !1,
                        width: a,
                        height: r,
                        position: l,
                        title: i,
                        zIndex: 10500,
                        beforeClose: function() {
                            var e = this;
                            setTimeout(function() {
                                t.childWindow || $(e).find(".tab-content").html("")
                            }, 100)
                        }
                    }),
                    this.$el.parent().find(".ui-dialog-titlebar button").on("mousedown", function() {
                        return !1
                    }),
                    this.$el.parent().find(".zoomoptionsmenu").on("dblclick", function() {
                        return !1
                    });
                    var c = this.$el.parent().find(".ui-dialog-titlebar").siblings(".dialog")
                      , d = this.$el.parent().find(".ui-dialog-titlebar .zoomoptionsmenu .zoomin")
                      , h = this.$el.parent().find(".ui-dialog-titlebar .zoomoptionsmenu .zoomout")
                      , u = this.$el.parent().find(".ui-dialog-titlebar .zoomoptionsmenu");
                    c[0].addEventListener("mousewheel", function(e) {
                        e.altKey === !0 && (u.show(),
                        e.wheelDelta > 0 ? $(d).trigger("click") : $(h).trigger("click"))
                    }),
                    c[0].addEventListener("MozMousePixelScroll", function(e) {
                        e.altKey === !0 && (e.stopPropagation(),
                        e.preventDefault(),
                        u.show(),
                        e.detail > 0 ? $(d).trigger("click") : $(h).trigger("click"))
                    });
                    var p = $(this.el).parent();
                    p.length > 0 && p.hasClass("ui-dialog") && (p[0].style.height = r + "px")
                }
            },
            showPopout: function() {
                var e = this
                  , t = e.$el.parent()
                  , i = 900
                  , n = 750;
                console.log(e.$el),
                console.log(t),
                t.hasClass("ui-dialog") && e.$el.hasClass("ui-dialog-content") && (console.log("Was a dialog!"),
                i = t.width(),
                n = t.height(),
                e.$el.dialog("destroy")),
                this.childWindow = window.open("/editor/popout", "Popout" + e.model.id, "menubar=0,location=0,toolbar=0,status=0,scrollbars=1,width=" + i + ",height=" + n),
                window.allChildWindows.push(this.childWindow),
                this.childWindow.onload = function() {
                    d20.journal.customSheets && d20.journal.customSheets.styleel && (console.log("Setting style element in child window."),
                    $(d20.journal.customSheets.styleel).clone().appendTo(e.childWindow.document.head)),
                    e.$el.appendTo(e.childWindow.document.getElementById("containerdiv")),
                    e.childWindow.document.title = e.model.get("name"),
                    e.$el.show().css("height", "auto"),
                    e.model.currentPlayerControls() && (e.childWindow.document.getElementById("editobject").style.display = "block",
                    e.childWindow.document.getElementById("editobject").addEventListener("click", function() {
                        console.log("Heard edit!");
                        var t = e.model;
                        t ? (t.editview.showDialog("waspopout"),
                        t.view.childWindow.close(),
                        setTimeout(function() {
                            window.focus()
                        }, 500)) : alert("ERROR: Unable to find character to edit.")
                    }))
                }
                ,
                this.childWindow.onbeforeunload = function() {
                    e.$el.appendTo(t.hasClass("ui-dialog") ? t : $("body")),
                    e.$el.find(".tab-content").html(""),
                    e.$el.hide(),
                    window.allChildWindows = _.without(window.allChildWindows, e.childWindow),
                    e.childWindow = null
                }
            }
        }),
        d20.models.AbilityModel = Backbone.Model.extend({
            defaults: {
                name: "Untitled_Ability",
                description: "",
                action: "",
                order: -1,
                istokenaction: !1
            },
            initialize: function() {
                if (this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                this.view = new d20.models.AbilityView({
                    model: this
                })
            },
            isNew: function() {
                return !this.persisted
            }
        }),
        d20.models.AbilityCollection = Backbone.Collection.extend({
            model: d20.models.AbilityModel,
            initialize: function() {
                this.on("add remove change:name", function() {
                    d20.player_settings && d20.player_settings.debounced_refreshMacroBar()
                })
            }
        }),
        d20.models.AbilityView = Backbone.View.extend({
            _template: $("#tmpl_cs_ability"),
            initialize: function() {
                _.bindAll(this, "render");
                var e = this;
                this.$el.addClass("abil"),
                this.$el.attr("data-abilid", this.model.id),
                this.model.bind("remove", function() {
                    e.$el.remove()
                }),
                this.model.bind("change", function() {
                    e.render()
                }),
                e.render()
            },
            render: function() {
                this.$el.html(this._template.jqote(this.model)),
                this.$el.find(".action").val(this.convertForTokenizer(d20.utils.strip_tags(this.model.get("action")))),
                this.model.get("istokenaction") && this.$el.find(".istokenaction").attr("checked", "checked");
                var e = window.currentPlayer.get("macrobar");
                -1 !== e.indexOf(this.model.id) ? this.$el.find(".showinmacrobar").attr("checked", "checked") : this.$el.find(".showinmacrobar").removeAttr("checked")
            },
            rebindEvents: function(e) {
                var t = this;
                this.$el.on("click", ".editabil", function() {
                    if (t.$el.parentsUntil(".ui-dialog", ".body").hasClass("editable")) {
                        t.$el.addClass("editing");
                        var e = t.$el.find(".abilname");
                        e.html("<input type='text' />"),
                        e.find("input").val(t.model.get("name")).focus()
                    }
                }),
                this.$el.on("click", ".saveabil", function() {
                    if (t.$el.parentsUntil(".ui-dialog", ".body").hasClass("editable")) {
                        t.$el.removeClass("editing"),
                        t.saveValues();
                        var e = t.$el.find(".abilname");
                        e.text(t.model.get("name"))
                    }
                }),
                this.$el.on("click", ".deleteabil", function() {
                    if (t.$el.parentsUntil(".ui-dialog", ".body").hasClass("editable")) {
                        var e = $("<div>Are you sure you want to delete this ability? This cannot be undone.</div>");
                        e.dialog({
                            modal: !0,
                            buttons: {
                                "Yes, Delete": function() {
                                    d20.Campaign.players.each(function(e) {
                                        e.removeFromMacroBar(t.model.id)
                                    }),
                                    t.model.destroy(),
                                    e.dialog("destroy").remove()
                                },
                                "No, Cancel": function() {
                                    e.dialog("destroy").remove()
                                }
                            },
                            beforeClose: function() {
                                e.dialog("destroy").remove()
                            },
                            title: "Confirm Deletion"
                        })
                    }
                }),
                this.$el.on("keyup", ".abilname input", function(e) {
                    if (32 == e.which) {
                        console.log("sapce!");
                        var t = $(this).val();
                        $(this).val(t.substring(0, t.length - 1).replace(" ", "") + "-")
                    }
                }),
                d20.Campaign && (this.$el.find(".action").atwho("@", {
                    cache: !1,
                    tpl: "<li data-value='{${name}}'>${name}</li>",
                    callbacks: {
                        filter: function(t) {
                            var i = []
                              , n = !1
                              , r = {};
                            return e.attribs.each(function(o) {
                                if ("repeating_" === o.get("name").substring(0, 10))
                                    return !0;
                                var a = (n ? e.get("name") + "|" : "") + o.get("name")
                                  , s = a.score(t);
                                s > 0 && (i.push({
                                    name: o.get("name").replace("'", "&apos;"),
                                    score: s
                                }),
                                r[o.get("name").toLowerCase()] = !0)
                            }),
                            d20.journal.customSheets && d20.journal.availableAttributes && _.each(d20.journal.customSheets.availableAttributes, function(o, a) {
                                if (void 0 !== r[a.toLowerCase()])
                                    return !0;
                                var s = (n ? e.get("name") + "|" : "") + a
                                  , l = s.score(t);
                                l > 0 && i.push({
                                    name: a.replace("'", "&apos;"),
                                    score: l
                                })
                            }),
                            r = null ,
                            i = _.sortBy(i, function(e) {
                                return -e.score
                            })
                        },
                        sorter: function(e, t) {
                            return t
                        }
                    }
                }),
                this.$el.find(".action").atwho("#", {
                    cache: !1,
                    callbacks: {
                        filter: function(e) {
                            var t = [];
                            return d20.Campaign.players.each(function(i) {
                                i.macros.each(function(n) {
                                    return "" == n.get("name") ? !0 : void ((i.id == window.currentPlayer.id || n.visibleToCurrentPlayer()) && -1 !== n.get("name").toLowerCase().indexOf(e) && t.push({
                                        name: n.get("name"),
                                        val: n.get("name"),
                                        id: n.id
                                    }))
                                })
                            }),
                            t
                        }
                    }
                }),
                this.$el.on("click", ".testabil", function() {
                    var e = d20.utils.strip_tags(t.convertFromTokenizer(t.$el.find(".action")));
                    e = e.replace(/@{[^}]+}/g, function(e) {
                        if (-1 === e.indexOf("|")) {
                            var i = "@{" + t.model.collection.character.get("name") + "|" + e.substring(2, e.length);
                            return i
                        }
                        return e
                    }),
                    d20.textchat.doChatInput(e)
                }),
                this.$el.on("click", ".rollabil", function() {
                    d20.textchat.doChatInput("%{" + t.model.collection.character.get("name") + "|" + t.model.get("name") + "}")
                }),
                this.$el.on("click", ".showinmacrobar", function() {
                    $(this).is(":checked") ? window.currentPlayer.addToMacroBar(t.$el.parents(".abilities").attr("data-characterid") + "|" + t.model.id) : window.currentPlayer.removeFromMacroBar(t.model.id)
                }),
                this.$el.on("click", ".istokenaction", function() {
                    t.model.save($(this).is(":checked") ? {
                        istokenaction: !0
                    } : {
                        istokenaction: !1
                    })
                }))
            },
            saveValues: function() {
                var e = {
                    name: this.$el.find(".abilname input").length > 0 ? d20.utils.strip_tags(this.$el.find(".abilname input").val()) : this.model.get("name"),
                    action: d20.utils.strip_tags(this.convertFromTokenizer(this.$el.find(".action"))),
                    istokenaction: this.$el.find(".istokenaction").is(":checked")
                };
                this.model.save(e)
            },
            convertFromTokenizer: function(e) {
                return e.val()
            },
            convertForTokenizer: function(e) {
                return e
            }
        }),
        d20.models.AttributeModel = Backbone.Model.extend({
            defaults: {
                name: "Untitled",
                current: "",
                max: ""
            },
            initialize: function() {
                if (this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                this.view = new d20.models.AttributeView({
                    model: this
                })
            },
            isNew: function() {
                return !this.persisted
            },
            syncedSave: function(e) {
                this.save(e),
                this.collection.character.updateTokensByName(this.get("name"), this.id)
            }
        }),
        d20.models.AttributeCollection = Backbone.Collection.extend({
            model: d20.models.AttributeModel,
            initialize: function() {
                this.on("change", function() {
                    d20.engine && d20.engine.debounced_renderAll()
                }),
                this.on("add", function() {})
            }
        }),
        d20.models.AttributeView = Backbone.View.extend({
            _template: $("#tmpl_cs_attribute"),
            initialize: function() {
                _.bindAll(this, "render", "rebindEvents", "saveValues");
                var e = this;
                this.$el.addClass("attrib"),
                this.$el.attr("data-attrid", this.model.id),
                this.model.bind("remove", function() {
                    e.$el.remove()
                }),
                this.model.bind("change", function() {
                    e.render()
                }),
                this.renderedOnce = !1
            },
            render: function() {
                this.renderedOnce = !0,
                this.$el.html(this._template.jqote(this.model))
            },
            rebindEvents: function() {
                var e = this;
                this.renderedOnce || this.render(),
                this.$el.on("click", ".attrname", function() {
                    if (e.$el.parentsUntil(".ui-dialog", ".body").hasClass("editable")) {
                        var t = $(this);
                        if (!(t.find("input").length > 0)) {
                            var i = t.text();
                            t.html("<input type='text' />"),
                            t.find("input").val(i).focus()
                        }
                    }
                }),
                this.$el.on("keydown", ".attrname", function(t) {
                    13 == t.which && (e.saveValues(),
                    e.render())
                }),
                this.$el.on("click", ".deleteattr", function() {
                    e.$el.parentsUntil(".ui-dialog", ".body").hasClass("editable") && e.model.destroy()
                }),
                this.$el[0].addEventListener("blur", function(t) {
                    var i = $(t.target);
                    i.is("input") && setTimeout(function() {
                        var t = e.$el.find("input:focus").attr("name");
                        e.saveValues(),
                        e.$el.find("input[name=" + t + "]").focus()
                    }, 100)
                }, !0),
                this.$el.on("dosave", function() {
                    e.saveValues(),
                    e.$el.find(".attrname input").each(function() {
                        $(this).parentsUntil(".ui-dialog", ".attrname").text(e.model.get("name"))
                    })
                }),
                this.$el.on("doclose", function() {
                    e.$el.find(".attrname input").each(function() {
                        $(this).parentsUntil(".ui-dialog", ".attrname").text(e.model.get("name"))
                    })
                })
            },
            saveValues: function() {
                var e = {
                    name: this.$el.find(".attrname input").length > 0 ? d20.utils.strip_tags(this.$el.find(".attrname input").val()) : this.model.get("name"),
                    current: d20.utils.strip_tags(this.$el.find(".current input").val()),
                    max: d20.utils.strip_tags(this.$el.find(".max input").val())
                };
                this.model.syncedSave(e)
            }
        }),
        d20.models.Character = Backbone.Model.extend({
            defaults: {
                name: "",
                bio: "",
                gmnotes: "",
                avatar: "",
                inplayerjournals: "",
                controlledby: "",
                defaulttoken: "",
                tags: "",
                archived: !1,
                attrorder: "",
                abilorder: ""
            },
            initialize: function() {
                var e = this;
                if (this.id)
                    this.persisted = !0;
                else {
                    var t = generateUUID();
                    this.set({
                        id: t
                    }),
                    this.url = this.collection.url + t
                }
                this.allowDelays = {
                    update: !0
                },
                this.attribs = new d20.models.AttributeCollection,
                this.attribs.url = "/char-attribs/char/" + this.id + "/",
                this.attribs.character = this,
                this.abilities = new d20.models.AbilityCollection,
                this.abilities.url = "/char-abils/char/" + this.id + "/",
                this.abilities.character = this,
                _.defer(function() {
                    e.attribs.backboneFirebase = new BackboneFirebase(e.attribs),
                    e.abilities.backboneFirebase = new BackboneFirebase(e.abilities),
                    e.attribs.backboneFirebase.reference.once("value", function() {
                        e.attribs.trigger("initial_load")
                    })
                }),
                this.view = new d20.models.CharacterView({
                    model: this
                }),
                this.editview = new d20.models.CharacterEditorView({
                    model: this
                }),
                this.on("change:controlledby", function() {
                    e.attribs.each(function(e) {
                        e.view && e.view.render()
                    }),
                    e.abilities.each(function(e) {
                        e.view && e.view.render()
                    }),
                    e.view.$el.is(":visible") && e.view.render(),
                    window.currentPlayer && d20.player_settings && d20.player_settings.refreshMacroBar()
                }),
                this._blobcache = {}
            },
            isNew: function() {
                return !this.persisted
            },
            currentPlayerControls: function() {
                if (window.is_gm)
                    return !0;
                var e = this.get("controlledby").split(",");
                return -1 != _.indexOf(e, window.currentPlayer.id) || -1 != _.indexOf(e, "all") ? !0 : !1
            },
            tagsArray: function() {
                try {
                    var e = JSON.parse(this.get("tags"))
                } catch (t) {
                    return []
                }
                return e
            },
            _getLatestBlob: function(e, t) {
                if (this._blobcache[e])
                    return void t(this._blobcache[e]);
                var i = this
                  , n = !1;
                d20.Campaign.parentRef.child("char-blobs").child(this.id).child(e).on("value", function(r) {
                    i._blobcache[e] = r.val() ? r.val() : "",
                    n ? i.trigger("change:blob_" + e) : t(i._blobcache[e]),
                    n = !0
                })
            },
            updateBlobs: function(e) {
                if (d20.tutorial && d20.tutorial.active)
                    for (var t in e)
                        this._blobcache[t] = e[t];
                else
                    d20.Campaign.parentRef.child("char-blobs").child(this.id).update(e)
            },
            autoCalcFormula: function(formula, additionalAttrs, defaultValuesPrefix, dolog) {
                var character = this, varreg = /(@{[^}]+})/gm, prevformula;
                defaultValuesPrefix || (defaultValuesPrefix = "");
                for (var i = 0; 99 > i && (formula = formula.replace(varreg, function(e) {
                    var t, i;
                    e = e.substring(2, e.length - 1);
                    var n = e.split("|");
                    i = n[0];
                    var r = "current";
                    if ("-" === n[0].substring(0, 1) && (t = character.attribs.get(n[0]),
                    i = t.get("name")),
                    n.length > 1 && "max" === n[1] && (r = "max"),
                    !t) {
                        if ("repeating_" === i.substring(0, 10) && -1 !== i.indexOf("$")) {
                            var o = i.split("_");
                            if (o.length > 3 && void 0 !== o[2] && "$" === o[2].substring(0, 1)) {
                                var a = parseInt(o[2].replace("$", ""), 10)
                                  , s = []
                                  , l = o[0] + "_" + o[1];
                                character.attribs.each(function(e) {
                                    if (e.get("name").toLowerCase().substring(0, l.length) === l.toLowerCase()) {
                                        var t = e.get("name").split("_");
                                        t.length > 2 && void 0 !== t[2] && s.push(t[2])
                                    }
                                }),
                                s = _.uniq(s),
                                s = character.repeatingKeyOrder(s, l),
                                void 0 !== s[a] ? (o[2] = s[a],
                                i = o.join("_")) : console.log("ERROR in auto-calc formula: You tried to use the repeating section row at index " + a + " for " + l + ", but there doesn't seem to be a row at that index.")
                            }
                        }
                        t = character.attribs.find(function(e) {
                            return e.get("name").toLowerCase() == i.toLowerCase()
                        })
                    }
                    var c = void 0;
                    if (t && (c = t.get("max" == r ? "max" : "current")),
                    !c && additionalAttrs && void 0 !== additionalAttrs[i.toLowerCase()] && (c = additionalAttrs[i.toLowerCase()][r]),
                    !(void 0 === c || "" === c || d20.journal.customSheets && d20.journal.customSheets.reservedAttributes[i.toLowerCase() + ("max" === r ? "_max" : "")]))
                        return c;
                    var d = void 0;
                    return "" !== defaultValuesPrefix && d20.journal.customSheets && d20.journal.customSheets.availableAttributes && void 0 !== d20.journal.customSheets.availableAttributes[(defaultValuesPrefix + i + ("max" === r ? "_max" : "")).toLowerCase()] ? d = d20.journal.customSheets.availableAttributes[(defaultValuesPrefix + i + ("max" === r ? "_max" : "")).toLowerCase()] : d20.journal.customSheets && d20.journal.customSheets.availableAttributes && void 0 !== d20.journal.customSheets.availableAttributes[(i + ("max" === r ? "_max" : "")).toLowerCase()] && (d = d20.journal.customSheets.availableAttributes[(i + ("max" === r ? "_max" : "")).toLowerCase()]),
                    void 0 !== c && void 0 === d ? c : void 0 !== d ? d : (console.log("ERROR: Unable to find attribute " + e + " in auto-calc formula."),
                    "")
                }),
                prevformula !== formula); i++)
                    prevformula = formula;
                prevformula = null ;
                var filterreg = /(floor)|([0-9\.]+)|(\()|(\))|(ceil)|(round)|(abs)|(\+)|(\/)|(\-)|(\*)|(%)/gi
                  , finalString = "";
                formula.replace(filterreg, function(e) {
                    finalString += e
                });
                var result;
                try {
                    !function() {
                        "use strict";
                        var floor = Math.floor
                          , round = Math.round
                          , ceil = Math.ceil
                          , abs = Math.abs;
                        dolog && console.log(finalString),
                        result = eval(finalString)
                    }()
                } catch (e) {
                    result = formula
                }
                return ("" === result || void 0 === result) && (result = formula),
                result
            },
            updateTokensByName: function(e, t) {
                var i = this;
                e = e.toLowerCase(),
                this.attribs.each(function(i) {
                    t || i.get("name").toLowerCase() === e && (t = i.id)
                }),
                d20.Campaign.pages.each(function(n) {
                    return n.thegraphics ? void n.thegraphics.each(function(n) {
                        if (n.get("represents") === i.id) {
                            var r = {};
                            (void 0 !== t && n.get("bar1_link") === t || n.get("bar1_link").toLowerCase() === "sheetattr_" + e) && (r.bar1_value = i.autoCalcFormula("@{" + (t ? t : e) + "}"),
                            r.bar1_max = i.autoCalcFormula("@{" + (t ? t : e) + "|max}")),
                            (void 0 !== t && n.get("bar2_link") === t || n.get("bar2_link").toLowerCase() === "sheetattr_" + e) && (r.bar2_value = i.autoCalcFormula("@{" + (t ? t : e) + "}"),
                            r.bar2_max = i.autoCalcFormula("@{" + (t ? t : e) + "|max}")),
                            (void 0 !== t && n.get("bar3_link") === t || n.get("bar3_link").toLowerCase() === "sheetattr_" + e) && (r.bar3_value = i.autoCalcFormula("@{" + (t ? t : e) + "}"),
                            r.bar3_max = i.autoCalcFormula("@{" + (t ? t : e) + "|max}")),
                            _.keys(r).length > 0 && n.save(r)
                        }
                    }) : !0
                })
            },
            broadcastToPlayers: function(e) {
                var t = this;
                if ("" !== this.get("inplayerjournals") || e)
                    d20.textchat.sendShout({
                        type: "showcharacter",
                        jid: this.id,
                        jtype: "character",
                        time: (new Date).getTime(),
                        playerid: "all"
                    });
                else {
                    var i = $("<div>This character isn't currently shared with any players. Do you want to share with all players in the game?</div>");
                    i.dialog({
                        buttons: {
                            "Show to Everyone": function() {
                                t.save({
                                    inplayerjournals: ["all"].join(",")
                                }),
                                setTimeout(function() {
                                    t.broadcastToPlayers(!0)
                                }, 100),
                                i.dialog("close")
                            },
                            Cancel: function() {
                                setTimeout(function() {
                                    t.broadcastToPlayers(!0)
                                }, 0),
                                i.dialog("close")
                            }
                        },
                        beforeClose: function() {
                            i.dialog("destroy")
                        },
                        title: "Not Visible to Players"
                    })
                }
            },
            safeDestroy: function() {
                var e = this
                  , t = $("<div class='dialog'>Are you sure you want to delete this character? This cannot be undone.</div>");
                t.dialog({
                    modal: !0,
                    title: "Confirm Deletion",
                    buttons: {
                        "Delete Character": function() {
                            d20.Campaign.players.each(function(t) {
                                t.removeFromMacroBar(e.id)
                            }),
                            e.attribs.backboneFirebase.reference.set(null ),
                            e.abilities.backboneFirebase.reference.set(null ),
                            e.updateBlobs({
                                gmnotes: null ,
                                notes: null ,
                                defaulttoken: null
                            }),
                            e.destroy(),
                            $(this).dialog("destroy").remove(),
                            e.editview.$el.is(":visible") && e.editview.$el.dialog("destroy")
                        },
                        Cancel: function() {
                            $(this).dialog("destroy").remove()
                        }
                    },
                    beforeClose: function() {
                        $(this).dialog("destroy").remove()
                    }
                })
            },
            expandReferencesInRoll: function(e, t) {
                var i = this
                  , n = t.parents(".repitem")
                  , r = n.length > 0 ? !0 : !1
                  , o = ""
                  , a = {};
                r && (o = n.parent().attr("data-groupname") + "_" + n.attr("data-reprowid"),
                n.find('*[name^="attr_"]').each(function() {
                    if ("span" !== this.tagName.toLowerCase()) {
                        var e = $(this)
                          , t = void 0 !== e.attr("data-attrname") ? e.attr("data-attrname") : e.attr("name").substring(5, e.attr("name").length);
                        "input" === e[0].tagName.toLowerCase() && "checkbox" === e.attr("type") ? (void 0 === a[t.toLowerCase()] && (a[t.toLowerCase()] = "0"),
                        e.is(":checked") && (a[t.toLowerCase()] = d20.utils.strip_tags(e.attr("value")))) : "input" === e[0].tagName.toLowerCase() && "radio" === e.attr("type") ? e.is(":checked") && (a[t.toLowerCase()] = d20.utils.strip_tags(e.attr("value"))) : a[t.toLowerCase()] = d20.utils.strip_tags(e.val())
                    }
                }));
                var s = d20.utils.strip_tags(e);
                s = s.split("\\n").join("\n");
                for (var l = 0; 99 > l; l++) {
                    var c;
                    if (s = s.replace(/@{[^}]+}/g, function(e) {
                        var t = e.split("|");
                        if (1 === t.length || 2 === t.length && "max}" === t[1].toLowerCase()) {
                            var n = e.substring(2, e.length - 1);
                            if (r) {
                                var o = 2 === t.length && "max}" === t[1].toLowerCase() ? t[0].substring(2, t[0].length) + "_max" : n;
                                if (void 0 !== a[o.toLowerCase()])
                                    return a[o.toLowerCase()]
                            }
                            var s = "@{" + i.get("name") + "|" + n + "}";
                            return s
                        }
                        return e
                    }),
                    s === c)
                        break;
                    c = s
                }
                c = null ;
                for (var l = 0; 99 > l && (s = s.replace(/\(~[^\)]+\)/g, function(e) {
                    var t = e.split("|");
                    if (t.length < 2) {
                        var n = i.id
                          , a = e.substring(2, e.length);
                        return r && (a = o + "_" + a.split("_").splice(2).join("_")),
                        "(~" + n + "|" + a
                    }
                    return e
                }),
                s !== c); l++)
                    c = s;
                return c = null ,
                s
            },
            repeatingKeyOrder: function(e, t) {
                if (!t)
                    return void console.error("ERROR: Did not include a groupname when using repeatingKeyOrder");
                var i;
                i = _.isArray(e) ? e : _.keys(e);
                var n = []
                  , r = []
                  , o = [];
                _.each(i, function(e) {
                    "-" === e.substring(0, 1) ? r.push(e) : isNaN(e) ? r.push(e) : n.push(e)
                }),
                r.sort();
                var a = "_reporder_" + t
                  , s = this.attribs.find(function(e) {
                    return e.get("name").toLowerCase() === a
                });
                if (s) {
                    console.log("Foudn a pre-defined key order!");
                    var l = s.get("current").split(",");
                    _.each(l, function(e) {
                        -1 !== i.indexOf(e) && o.push(e)
                    })
                }
                return n.length > 0 && (n = _.sortBy(n, function(e) {
                    return parseInt(e, 10)
                }),
                o = _.union(o, n)),
                o = _.union(o, r),
                alleys = null ,
                n = null ,
                r = null ,
                o
            }
        }),
        d20.models.CharacterCollection = Backbone.Collection.extend({
            model: d20.models.Character,
            url: "/characters/",
            initialize: function() {
                this.on("add change remove", function() {
                    d20.journal && d20.journal.refreshJournalList(),
                    d20.utils && d20.utils.refreshLinkCache()
                }),
                this.on("add", function() {
                    d20.player_settings && d20.player_settings.refreshMacroBar()
                })
            }
        }),
        d20.models.HandoutEditorView = Backbone.View.extend({
            _template: $("#tmpl_handouteditor"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "updateModel", "showDialog"),
                this.model.bind("change:avatar", function() {
                    e.$el.is(":visible") && (e.render(),
                    e.$el.find(".chosen").chosen())
                }),
                $(this.el).addClass("dialog"),
                this.$el = $(this.el);
                var e = this;
                this.$el.on("click", ".delete", function() {
                    e.model.safeDestroy()
                }),
                this.$el.on("click", ".archive", function() {
                    e.model.set({
                        archived: !e.model.get("archived")
                    }).save(),
                    e.$el.dialog("destroy")
                })
            },
            addBlob: function(e) {
                var t = this;
                this.$el.find("." + e).html("Loading..."),
                this.model._getLatestBlob(e, function(i) {
                    var n = d20.utils.handleHTMLOutput(i)
                      , r = !1;
                    "SINGLESPACED!!" == n.substring(0, 14) && (n = n.substring(14, n.length),
                    r = !0),
                    t.$el.find("." + e).redactor(d20.utils.defaultRedactorSettings),
                    t.$el.find("." + e).redactor("set", n, !1),
                    r && t.$el.find("textarea." + e).redactor("getObject").$editor.addClass("singlespaced")
                })
            },
            render: function() {
                var e = this;
                if (this.$el.html(this._template.jqote(this.model)),
                this.$el.attr("data-handoutid", this.model.id),
                this.$el.find(".name").val(this.model.get("name")),
                this.addBlob("notes"),
                d20.utils.setupAvatar(this.$el.find(".avatar"), e),
                window.is_gm) {
                    this.addBlob("gmnotes");
                    var t = this.model.get("controlledby").split(",");
                    _.each(t, function(t) {
                        e.$el.find(".controlledby option[value=" + t + "]").attr("selected", "selected")
                    });
                    var i = this.model.get("inplayerjournals").split(",");
                    _.each(i, function(t) {
                        e.$el.find(".inplayerjournals option[value=" + t + "]").attr("selected", "selected")
                    }),
                    this.tagEditor = new $.TextboxList(this.$el.find(".tags"),{
                        encode: function() {},
                        decode: function() {},
                        startEditableBit: !1,
                        inBetweenEditableBits: !1,
                        unique: !0,
                        plugins: {
                            autocomplete: {
                                minLength: 2
                            }
                        }
                    });
                    var n = this.tagEditor.plugins.autocomplete;
                    n.setValues(_.map(d20.journal.possibletags, function(e) {
                        return [null , e.tag, null ]
                    }));
                    for (var r = this.model.tagsArray(), o = 0; o < r.length; o++)
                        this.tagEditor.add(r[o])
                }
            },
            updateModel: function() {
                var e = {}
                  , t = {};
                if (window.is_gm) {
                    var i = d20.utils.handleHTMLInput((this.$el.find("textarea.notes").redactor("getObject").$editor.hasClass("singlespaced") ? "SINGLESPACED!!" : "") + this.$el.find("textarea.notes").redactor("get"));
                    i !== this.model._blobcache.notes && (t.notes = i);
                    var n = d20.utils.handleHTMLInput((this.$el.find("textarea.gmnotes").redactor("getObject").$editor.hasClass("singlespaced") ? "SINGLESPACED!!" : "") + this.$el.find("textarea.gmnotes").redactor("get"));
                    n !== this.model._blobcache.gmnotes && (t.gmnotes = n),
                    Object.keys(t).length > 0 && this.model.updateBlobs(t);
                    var r = [];
                    this.$el.find(".controlledby option:selected").each(function() {
                        r.push($(this).val())
                    });
                    var o = [];
                    if (this.$el.find(".inplayerjournals option:selected").each(function() {
                        o.push($(this).val())
                    }),
                    e = {
                        name: d20.utils.strip_tags(this.$el.find(".name").val()),
                        inplayerjournals: o.join(","),
                        controlledby: r.join(",")
                    },
                    t.notes && (e.notes = (new Date).getTime()),
                    t.gmnotes && (e.gmnotes = (new Date).getTime()),
                    this.tagEditor) {
                        for (var a = this.tagEditor.getValues(), s = [], l = 0; l < a.length; l++)
                            s.push(a[l][1]);
                        e.tags = JSON.stringify(s)
                    }
                } else {
                    var i = d20.utils.handleHTMLInput((this.$el.find("textarea.notes").redactor("getObject").$editor.hasClass("singlespaced") ? "SINGLESPACED!!" : "") + this.$el.find("textarea.notes").redactor("get"));
                    i !== this.model._blobcache.notes && (t.notes = i),
                    Object.keys(t).length > 0 && this.model.updateBlobs(t),
                    t.notes && (e.notes = (new Date).getTime()),
                    e.name = d20.utils.strip_tags(this.$el.find(".name").val())
                }
                this.model.save(e)
            },
            showDialog: function(e) {
                var t = this;
                this.render();
                var i = 775
                  , n = $(window).height() - d20.utils.playerZoneHeight();
                n > i && (n = i),
                $(this.el).dialog({
                    modal: !1,
                    width: 550,
                    height: n,
                    position: ["center", 30],
                    title: "Edit " + this.model.get("name"),
                    zIndex: 10500,
                    buttons: {
                        "Save Changes": function() {
                            $(this).dialog("destroy"),
                            t.updateModel(),
                            _.defer(function() {
                                t.model.view.showDialog(e)
                            })
                        },
                        Cancel: function() {
                            $(this).dialog("destroy"),
                            _.defer(function() {
                                t.model.view.showDialog(e)
                            })
                        }
                    },
                    beforeClose: function() {
                        $(this).dialog("destroy"),
                        _.defer(function() {
                            t.model.view.showDialog(e)
                        })
                    }
                }),
                this.$el.find(".chosen").chosen()
            }
        }),
        d20.models.HandoutView = Backbone.View.extend({
            _template: $("#tmpl_handoutviewer"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "showDialog"),
                this.model.bind("change:name change:avatar change:blob_notes", function() {
                    e.$el.is(":visible") && e.render()
                }),
                $(this.el).addClass("dialog"),
                this.$el = $(this.el);
                var e = this;
                this.$el.on("click", ".lightly", function() {
                    return window.fakeLightly($(this).attr("href"), e.childWindow ? $(e.childWindow.document) : null ),
                    !1
                }),
                this.$el.on("click", "a", function() {
                    var e = $(this).attr("href");
                    if (-1 !== e.indexOf("journal.roll20.net")) {
                        var t = e.split("/")[3]
                          , i = e.split("/")[4]
                          , n = d20.Campaign[t + "s"].get(i);
                        if (n) {
                            var r = n.get("inplayerjournals").split(",");
                            (window.is_gm || -1 !== _.indexOf(r, "all") || window.currentPlayer && -1 !== _.indexOf(r, window.currentPlayer.id)) && n.view.showDialog()
                        }
                        return $("#existing" + t + "s").find("tr[data-" + t + "id=" + i + "]").trigger("click"),
                        !1
                    }
                })
            },
            addBlob: function(e) {
                var t = this;
                this.$el.find("." + e).html("Loading..."),
                this.model._getLatestBlob(e, function(i) {
                    var n = d20.utils.handleHTMLOutput(i, !0)
                      , r = !1;
                    "SINGLESPACED!!" == n.substring(0, 14) && (n = n.substring(14, n.length),
                    r = !0),
                    t.$el.find("." + e).html(n),
                    r && t.$el.find("." + e).addClass("singlespaced")
                })
            },
            render: function() {
                this.$el.html(this._template.jqote(this.model)),
                this.$el.attr("data-handoutid", this.model.id),
                this.addBlob("notes"),
                window.is_gm && this.addBlob("gmnotes")
            },
            showDialog: function(e) {
                if (this.childWindow)
                    return console.log("Already has child window!"),
                    void this.childWindow.focus();
                if (!$(this.el).is(":visible")) {
                    var t = this;
                    if (t.render(),
                    !e && window.currentPlayer.get("usePopouts") === !0 || "waspopout" == e)
                        return void this.showPopout();
                    var i = this.model.get("name");
                    i = "<button class='showpopout btn pictos' style='margin-right: 15px;'>|</button>" + i,
                    window.is_gm ? i += "<button class='broadcasthandout btn'>Show to Players</button> <button class='edithandout btn'>Edit</button>" : this.model.currentPlayerControls() && (i += "<button class='edithandout btn'>Edit</button>"),
                    i += "<button class='zoomoptions btn'><span class='pictos'>s</span></button><div class='zoomoptionsmenu'><button class='zoomin'><span class='pictos'>&</span></button><button class='zoomdisplay'>100%</button><button class='zoomout'><span class='pictos'>_</span></button></div>";
                    var n = 550
                      , r = $(window).height() - d20.utils.playerZoneHeight();
                    r > n && (r = n);
                    var o = 550
                      , a = $(this.el).parent()
                      , s = ["center", 30];
                    a.length > 0 && a.hasClass("ui-dialog") && (s = [parseInt(a.css("left").replace("px", ""), 10), parseInt(a.css("top").replace("px", ""), 10)],
                    o = parseInt(a[0].style.width.replace("px", ""), 10) + 1,
                    r = "auto" === a[0].style.height ? r : parseInt(a[0].style.height.replace("px", ""), 10) + 9),
                    $(this.el).dialog({
                        modal: !1,
                        height: r,
                        position: s,
                        width: o,
                        title: i,
                        zIndex: 10500
                    }),
                    this.$el.parent().find(".ui-dialog-titlebar button").on("mousedown", function() {
                        return !1
                    }),
                    this.$el.parent().find(".zoomoptionsmenu").on("dblclick", function() {
                        return !1
                    });
                    var l = this.$el.parent().find(".ui-dialog-titlebar").siblings(".dialog")
                      , c = this.$el.parent().find(".ui-dialog-titlebar .zoomoptionsmenu .zoomin")
                      , d = this.$el.parent().find(".ui-dialog-titlebar .zoomoptionsmenu .zoomout")
                      , h = this.$el.parent().find(".ui-dialog-titlebar .zoomoptionsmenu");
                    l[0].addEventListener("mousewheel", function(e) {
                        e.altKey === !0 && (h.show(),
                        e.wheelDelta > 0 ? $(c).trigger("click") : $(d).trigger("click"))
                    }),
                    l[0].addEventListener("MozMousePixelScroll", function(e) {
                        console.log("HEARD SCROLL"),
                        e.altKey === !0 && (e.stopPropagation(),
                        e.preventDefault(),
                        h.show(),
                        e.detail > 0 ? $(c).trigger("click") : $(d).trigger("click"))
                    });
                    var u = $(this.el).parent();
                    u.length > 0 && u.hasClass("ui-dialog") && (u[0].style.height = r + "px")
                }
            },
            showPopout: function() {
                var e = this
                  , t = e.$el.parent()
                  , i = 900
                  , n = 750;
                t.hasClass("ui-dialog") && (i = t.width(),
                n = t.height(),
                e.$el.dialog("close")),
                this.childWindow = window.open("/editor/popout", "Popout" + e.model.id, "menubar=0,location=0,toolbar=0,status=0,scrollbars=1,width=" + i + ",height=" + n),
                window.allChildWindows.push(this.childWindow),
                this.childWindow.onload = function() {
                    e.$el.appendTo(e.childWindow.document.getElementById("containerdiv")),
                    e.childWindow.document.title = e.model.get("name"),
                    e.$el.show().css("height", "auto"),
                    e.model.currentPlayerControls() && (e.childWindow.document.getElementById("editobject").style.display = "block",
                    e.childWindow.document.getElementById("editobject").addEventListener("click", function() {
                        console.log("Heard edit!");
                        var t = e.model;
                        t ? (t.editview.showDialog("waspopout"),
                        t.view.childWindow.close(),
                        setTimeout(function() {
                            window.focus()
                        }, 500)) : alert("ERROR: Unable to find character to edit.")
                    }))
                }
                ,
                this.childWindow.onbeforeunload = function() {
                    e.$el.appendTo(t.hasClass("ui-dialog") ? t : $("body")),
                    e.$el.find(".tab-content").html(""),
                    e.$el.hide(),
                    window.allChildWindows = _.without(window.allChildWindows, e.childWindow),
                    e.childWindow = null
                }
            }
        }),
        d20.models.Handout = Backbone.Model.extend({
            defaults: {
                name: "Mysterious Note",
                notes: "",
                avatar: "",
                inplayerjournals: "",
                archived: !1,
                tags: "",
                controlledby: ""
            },
            initialize: function() {
                if (this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                this.allowDelays = {
                    update: !0
                },
                this._blobcache = {},
                this.view = new d20.models.HandoutView({
                    model: this
                }),
                this.editview = new d20.models.HandoutEditorView({
                    model: this
                })
            },
            isNew: function() {
                return !this.persisted
            },
            currentPlayerControls: function() {
                if (window.is_gm)
                    return !0;
                var e = this.get("controlledby").split(",");
                return -1 != _.indexOf(e, window.currentPlayer.id) || -1 != _.indexOf(e, "all") ? !0 : !1
            },
            tagsArray: function() {
                try {
                    var e = JSON.parse(this.get("tags"))
                } catch (t) {
                    return []
                }
                return e
            },
            _getLatestBlob: function(e, t) {
                if (this._blobcache[e])
                    return void t(this._blobcache[e]);
                var i = this
                  , n = !1;
                d20.Campaign.parentRef.child("hand-blobs").child(this.id).child(e).on("value", function(r) {
                    i._blobcache[e] = r.val() ? r.val() : "",
                    n ? i.trigger("change:blob_" + e) : t(i._blobcache[e]),
                    n = !0
                })
            },
            updateBlobs: function(e) {
                if (d20.tutorial && d20.tutorial.active)
                    for (var t in e)
                        this._blobcache[t] = e[t];
                else
                    d20.Campaign.parentRef.child("hand-blobs").child(this.id).update(e)
            },
            broadcastToPlayers: function(e) {
                var t = this;
                if ("" !== this.get("inplayerjournals") || e)
                    d20.textchat.sendShout({
                        type: "showhandout",
                        jid: this.id,
                        jtype: "handout",
                        time: (new Date).getTime(),
                        playerid: "all"
                    });
                else {
                    var i = $("<div>This handout isn't currently shared with any players. Do you want to share with all players in the game?</div>");
                    i.dialog({
                        buttons: {
                            "Show to Everyone": function() {
                                t.save({
                                    inplayerjournals: ["all"].join(",")
                                }),
                                setTimeout(function() {
                                    t.broadcastToPlayers(!0)
                                }, 100),
                                i.dialog("close")
                            },
                            Cancel: function() {
                                setTimeout(function() {
                                    t.broadcastToPlayers(!0)
                                }, 0),
                                i.dialog("close")
                            }
                        },
                        beforeClose: function() {
                            i.dialog("destroy")
                        },
                        title: "Not Visible to Players"
                    })
                }
            },
            safeDestroy: function() {
                var e = this
                  , t = $("<div class='dialog'>Are you sure you want to delete this handout? This cannot be undone.</div>");
                t.dialog({
                    modal: !0,
                    title: "Confirm Deletion",
                    buttons: {
                        "Delete Handout": function() {
                            e.updateBlobs({
                                gmnotes: null ,
                                notes: null
                            }),
                            e.destroy(),
                            $(this).dialog("destroy"),
                            e.editview.$el.is(":visible") && e.editview.$el.dialog("destroy")
                        },
                        Cancel: function() {
                            $(this).dialog("destroy")
                        }
                    },
                    beforeClose: function() {
                        $(this).dialog("destroy")
                    }
                })
            }
        }),
        d20.models.HandoutCollection = Backbone.Collection.extend({
            model: d20.models.Handout,
            url: "/handouts/",
            initialize: function() {
                this.bind("add remove change", function() {
                    d20.journal && d20.journal.refreshJournalList(),
                    d20.utils && d20.utils.refreshLinkCache()
                })
            }
        })
    }(),
    d20.uploader = {},
    $(function() {
        $(document).on("click", ".dropbox .btn", function() {
            $(this).siblings(".manual").click()
        })
    }),
    function(e) {
        var t = {
            init: function(i) {
                return this.each(function() {
                    var n = e(this)
                      , r = this;
                    e.each(i, function(e, t) {
                        n.data(e, t)
                    }),
                    this.uploadFailed = function() {
                        n.find(".status").html("<div class='alert alert-danger'>An error occurred. Please try again.</div>"),
                        n.trigger("uploadfailed")
                    }
                    ,
                    this.uploadCanceled = function() {
                        n.find(".status").html("<div class='alert alert-danger'>The upload was canceled or your connection was interrupted.</div>"),
                        n.trigger("uploadcanceled")
                    }
                    ,
                    this.doTransfer = function(t, i) {
                        n.find(".status").append("<div class='progress progress-striped active'><div class='bar' style='width: 0%;'></div></div>"),
                        n.trigger("uploadstarted");
                        var r = function(e, t) {
                            var i = new XMLHttpRequest;
                            return "withCredentials"in i ? i.open(e, t, !0) : "undefined" != typeof XDomainRequest ? (i = new XDomainRequest,
                            i.open(e, t)) : i = null ,
                            i
                        }
                        ;
                        t.files.length > 0 ? e.each(t.files, function(o, a) {
                            var s = {};
                            if (s.multiUploadNum = o,
                            s.multiUploadTotal = t.files.length,
                            n.data("allowMultiple") === !1 && o > 0)
                                return !1;
                            if (a.size > (window.largefeats === !0 ? 10485760 : 5242880))
                                return void n.trigger("uploadfailed");
                            s.size = a.size,
                            s.width = 200,
                            s.height = 200;
                            var l = this
                              , c = a.type || "application/octet-stream"
                              , d = a.name || a.fileName || "";
                            d = d.toLowerCase(),
                            console.log(d),
                            s.filename = d;
                            var h, u, p = null , f = function(e) {
                                var t = new XMLHttpRequest;
                                t.upload.addEventListener("progress", l.uploadProgress, !1),
                                t.addEventListener("error", l.uploadFailed, !1),
                                t.addEventListener("abort", l.uploadCanceled, !1);
                                t.upload;
                                t.open(n.data("method") || "POST", n.data("url") + "/?pn=" + e, !0),
                                t.setRequestHeader("X-Requested-With", "XMLHttpRequest"),
                                t.onload = function(e) {
                                    n.find(".bar").css("width", "100%");
                                    var t = JSON.parse(e.target.response);
                                    if (t) {
                                        var r = {
                                            base: t[0].url.split("?")[0],
                                            width: t[0].width,
                                            height: t[0].height
                                        };
                                        n.trigger("uploadcomplete", [r, i])
                                    } else
                                        n.trigger("uploadcomplete", [e.target.response, i]);
                                    console.log("upload complete triggered")
                                }
                                ,
                                t.upload.onprogress = function(e) {
                                    if (e.lengthComputable) {
                                        var t = Math.round(100 * e.loaded / e.total);
                                        console.log(t),
                                        n.find(".bar").css("width", t + "%"),
                                        n.trigger("uploadprogress", t)
                                    } else
                                        n.find(".progress").remove()
                                }
                                ;
                                var r = new FormData;
                                r.append("filecontents", a),
                                t.send(r)
                            }
                            , g = [[100, 100, "mini"], [200, 200, "thumb"], [512, 512, "med"], [2048, 2048, "max"], [1e4, 1e4, "original"]], m = 0, v = function(t) {
                                var i = g[t][0]
                                  , n = g[t][1];
                                console.log("Uploading a size: " + i + "x" + n),
                                void 0 === h && (h = document.createElement("canvas"),
                                u = h.getContext("2d"));
                                var r = document.createElement("img")
                                  , o = new FileReader;
                                o.onload = function(e) {
                                    console.log("Reader load!"),
                                    r.src = e.target.result
                                }
                                ,
                                r.onload = function() {
                                    console.log("img load!"),
                                    console.log(r.width);
                                    var o = r.width
                                      , a = r.height;
                                    o > a ? o > i && (a *= i / o,
                                    o = i) : a > n && (o *= n / a,
                                    a = n),
                                    h.width = o,
                                    h.height = a,
                                    u.drawImage(r, 0, 0, o, a),
                                    h.toBlob(function(i) {
                                        e.post("/image_library/s3putsign/" + s.imageid, {
                                            name: g[t][2] + (-1 !== c.indexOf("png") ? ".png" : ".jpg"),
                                            type: c,
                                            size: i.size
                                        }, function(e) {
                                            p = JSON.parse(e),
                                            s.url = p.base + p.additional,
                                            s.base = p.base,
                                            s.width = o,
                                            s.height = a,
                                            y(i, h.toDataURL(c))
                                        })
                                    }, c)
                                }
                                ,
                                o.readAsDataURL(a)
                            }
                            , y = function(e) {
                                {
                                    var t = r("PUT", s.url);
                                    t.upload
                                }
                                t.setRequestHeader("X-Requested-With", "XMLHttpRequest"),
                                t.setRequestHeader("Content-Type", c),
                                t.setRequestHeader("Cache-Control", "max-age=31104000,public"),
                                t.setRequestHeader("x-amz-acl", "public-read"),
                                t.onload = function() {
                                    n.find(".bar").css("width", "100%"),
                                    s.numCompleted++,
                                    s.numCompleted >= s.numToComplete ? setTimeout(function() {
                                        console.log(s),
                                        n.trigger("uploadcomplete", [s, i])
                                    }, 250) : v(s.numCompleted)
                                }
                                ,
                                t.upload.onprogress = function(e) {
                                    if (e.lengthComputable) {
                                        var t = Math.round(100 * e.loaded / e.total);
                                        t *= s.numCompleted / s.numToComplete,
                                        t = Math.max(t, m),
                                        m = t,
                                        console.log(t),
                                        n.find(".bar").css("width", t + "%"),
                                        n.trigger("uploadprogress", t)
                                    } else
                                        n.find(".progress").remove()
                                }
                                ,
                                t.addEventListener("error", l.uploadFailed, !1),
                                t.addEventListener("abort", l.uploadCanceled, !1),
                                t.send(e)
                            }
                            ;
                            if (-1 !== a.type.indexOf("pdf")) {
                                var b = e("<div></p>It looks like you're uploading a PDF. We'll convert it into an image for you, but we need to know what page you want to use (you can upload multiple times to do multiple pages). If it's a single-page PDF, just leave this set to 1.</p><p>Page Number: <input type='text' value='1' style='width: 50px;' /></p></div>");
                                b.dialog({
                                    modal: !0,
                                    width: 300,
                                    title: "PDF Page Number?",
                                    buttons: {
                                        Continue: function() {
                                            f(parseInt(b.find("input").val(), 10) - 1),
                                            b.dialog("destroy").remove(),
                                            b = !1
                                        },
                                        Cancel: function() {
                                            b.dialog("destroy").remove(),
                                            b = !1
                                        }
                                    },
                                    beforeClose: function() {
                                        b.dialog("destroy").remove(),
                                        b = !1
                                    }
                                })
                            } else
                                m = 0,
                                e.post("/image_library/reqimage", {
                                    name: d,
                                    type: c,
                                    size: a.size
                                }, function(e) {
                                    return console.log(e),
                                    "overquota" === e || "toolarge" === e ? void n.trigger("uploadcomplete", [e, i]) : (s.imageid = e,
                                    s.numToComplete = g.length,
                                    s.numCompleted = 0,
                                    s.filename = d,
                                    void v(0))
                                })
                        }) : n.trigger("uploadfailed")
                    }
                    ,
                    n.bind("dragenter.dndUploader", t.dragEnter),
                    n.bind("dragover.dndUploader", t.dragOver),
                    n.bind("drop.dndUploader", t.drop),
                    n.bind("triggermanual", function() {
                        r.doTransfer(n.find(".manual")[0])
                    });
                    var o = n.children(".inner");
                    o.length > 0 && o.find(".manual").bind("change", _.bind(t.manualUpload, this))
                })
            },
            dragEnter: function(e) {
                return void 0 !== e.namespace || e.dataTransfer && e.dataTransfer.types && -1 !== e.dataTransfer.types[0].indexOf("text") ? void 0 : (e.stopPropagation(),
                e.preventDefault(),
                !1)
            },
            dragOver: function(e) {
                return void 0 !== e.namespace || e.dataTransfer && e.dataTransfer.types && -1 !== e.dataTransfer.types[0].indexOf("text") ? void 0 : (e.stopPropagation(),
                e.preventDefault(),
                !1)
            },
            drop: function(t) {
                if (!(void 0 !== t.namespace || t.originalEvent.dataTransfer && 0 == t.originalEvent.dataTransfer.files.length || t.dataTransfer && t.dataTransfer.types && -1 !== t.dataTransfer.types[0].indexOf("text"))) {
                    console.log("DROP ON FILE UPLOAD"),
                    t.stopPropagation(),
                    t.preventDefault(),
                    d20.uploader.lastDropX = t.originalEvent.pageX,
                    d20.uploader.lastDropY = t.originalEvent.pageY;
                    var i = (e(this),
                    t.originalEvent.dataTransfer);
                    return this.doTransfer(i),
                    !1
                }
            },
            manualUpload: function(t) {
                t.stopPropagation(),
                this.doTransfer(e(this).children(".inner").find(".manual")[0])
            }
        };
        e.fn.dndUploader = function(i) {
            return t[i] ? t[i].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof i && i ? void e.error("Method " + i + " does not exist on jQuery.dndUploader") : t.init.apply(this, arguments)
        }
    }(jQuery),
    function(e) {
        "use strict";
        var t, i = e.Uint8Array, n = e.HTMLCanvasElement, r = n && n.prototype, o = /\s*;\s*base64\s*(?:;|$)/i, a = "toDataURL", s = function(e) {
            for (var n, r, o, a = e.length, s = new i(a / 4 * 3 | 0), l = 0, c = 0, d = [0, 0], h = 0, u = 0; a--; )
                r = e.charCodeAt(l++),
                n = t[r - 43],
                255 !== n && n !== o && (d[1] = d[0],
                d[0] = r,
                u = u << 6 | n,
                h++,
                4 === h && (s[c++] = u >>> 16,
                61 !== d[1] && (s[c++] = u >>> 8),
                61 !== d[0] && (s[c++] = u),
                h = 0));
            return s
        }
        ;
        i && (t = new i([62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, 0, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51])),
        n && !r.toBlob && (r.toBlob = function(e, t) {
            if (t || (t = "image/png"),
            this.mozGetAsFile)
                return void e(this.mozGetAsFile("canvas", t));
            if (this.msToBlob && /^\s*image\/png\s*(?:$|;)/i.test(t))
                return void e(this.msToBlob());
            var n, r = Array.prototype.slice.call(arguments, 1), l = this[a].apply(this, r), c = l.indexOf(","), d = l.substring(c + 1), h = o.test(l.substring(0, c));
            Blob.fake ? (n = new Blob,
            n.encoding = h ? "base64" : "URI",
            n.data = d,
            n.size = d.length) : i && (n = h ? new Blob([s(d)],{
                type: t
            }) : new Blob([decodeURIComponent(d)],{
                type: t
            })),
            e(n)
        }
        ,
        r.toBlobHD = r.toDataURLHD ? function() {
            a = "toDataURLHD";
            var e = this.toBlob();
            return a = "toDataURL",
            e
        }
        : r.toBlob)
    }("undefined" != typeof self && self || "undefined" != typeof window && window || this.content || this),
    d20.namegen = !1,
    function() {
        function e(e, t) {
            for (var i; ; )
                if (i = Math.floor(Math.random() * (t - e + 1) + e),
                i >= e && t >= i)
                    return i
        }
        var t = new Array(["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["ae", 7],["ai", 7],["ao", 7],["au", 7],["aa", 7],["ea", 7],["eo", 7],["eu", 7],["ee", 7],["ia", 7],["io", 7],["iu", 7],["ii", 7],["oa", 7],["oe", 7],["oi", 7],["ou", 7],["oo", 7],["eau", 7],["'", 4],["y", 7])
          , i = new Array(["b", 7],["c", 7],["d", 7],["f", 7],["g", 7],["h", 7],["j", 7],["k", 7],["l", 7],["m", 7],["n", 7],["p", 7],["qu", 6],["r", 7],["s", 7],["t", 7],["v", 7],["w", 7],["x", 7],["y", 7],["z", 7],["sc", 7],["ch", 7],["gh", 7],["ph", 7],["sh", 7],["th", 7],["wh", 6],["ck", 5],["nk", 5],["rk", 5],["sk", 7],["wk", 0],["cl", 6],["fl", 6],["gl", 6],["kl", 6],["ll", 6],["pl", 6],["sl", 6],["br", 6],["cr", 6],["dr", 6],["fr", 6],["gr", 6],["kr", 6],["pr", 6],["sr", 6],["tr", 6],["ss", 5],["st", 7],["str", 6],["b", 7],["c", 7],["d", 7],["f", 7],["g", 7],["h", 7],["j", 7],["k", 7],["l", 7],["m", 7],["n", 7],["p", 7],["r", 7],["s", 7],["t", 7],["v", 7],["w", 7],["b", 7],["c", 7],["d", 7],["f", 7],["g", 7],["h", 7],["j", 7],["k", 7],["l", 7],["m", 7],["n", 7],["p", 7],["r", 7],["s", 7],["t", 7],["v", 7],["w", 7],["br", 6],["dr", 6],["fr", 6],["gr", 6],["kr", 6])
          , n = function(n, r) {
            void 0 == n && (n = 3),
            void 0 == r && (r = 6);
            for (var o = "", a = "", s = e(n, r), l = e(0, 1), c = 1; s >= c; c++) {
                for (; ; )
                    if (o = l ? t[e(0, t.length - 1)] : i[e(0, i.length - 1)],
                    1 == c) {
                        if (2 & o[1])
                            break
                    } else if (c == s) {
                        if (1 & o[1])
                            break
                    } else if (4 & o[1])
                        break;
                a += o[0],
                l = 1 - l
            }
            return a = a.slice(0, 1).toUpperCase() + a.slice(1)
        }
        ;
        d20.namegen = n
    }(),
    $(function() {
        $("#manageimagelibrary").on("click", function() {
            var e = 930
              , t = 800
              , i = $(window).height() - 100;
            i > t && (i = t);
            var n = $(window).width() - 50;
            n > e && (n = e);
            var r = $("<div id='imagelibrarypopup'><iframe src='https://marketplace.roll20.net/library/?inapp=true' width='" + n + "' height='" + (i - 90) + "' frameborder='0'></iframe></div>");
            r.dialog({
                modal: !1,
                title: "Your Library | <a href='https://marketplace.roll20.net/' target='_blank' style='color: #80C;'>Go to the Marketplace &rarr;</a>",
                beforeClose: function() {
                    r.dialog("destroy").remove()
                },
                width: n + 40,
                height: i,
                zIndex: 11e3
            })
        });
        var e;
        $("#imagedialog").on("click", "a.buyart", function() {
            var t = 940
              , i = 550
              , n = $(window).height() - d20.utils.playerZoneHeight();
            n > i && (n = i),
            e && e.dialog("destroy").remove(),
            e = $("<div><iframe src='" + $(this).attr("data-href") + "' width='" + t + "' height='" + (n - 75) + "' frameborder='0'></iframe></div>").dialog({
                modal: !1,
                title: "Purchase Asset",
                beforeClose: function() {
                    $(this).dialog("destroy").remove(),
                    e = !1
                },
                width: t + 60,
                height: n + 20
            })
        }),
        d20.engine.marketplaceDrop = {
            lastDrop: !1
        },
        d20.engine.marketplaceDrop.doDrop = function(e, t) {
            $("#imagelibrarypopup").parents(".ui-dialog").removeClass("collapsed");
            var i = Math.floor(e / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] / d20.engine.canvasZoom)
              , n = Math.floor((t - Math.floor(d20.engine.marketplaceDrop.lastDrop.height / 2)) / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] / d20.engine.canvasZoom)
              , r = Math.floor(d20.engine.pageWidth / d20.engine.canvasZoom) - 5
              , o = Math.floor(d20.engine.pageHeight / d20.engine.canvasZoom) - 5;
            i > r && (i = r),
            n > o && (n = o),
            0 > n && (n = 0),
            0 > i && (i = 0);
            var a = d20.engine.marketplaceDrop.lastDrop.width
              , s = d20.engine.marketplaceDrop.lastDrop.height;
            0 != d20.engine.snapTo && "map" != window.currentEditingLayer && (a = d20.engine.snapTo,
            s = d20.engine.snapTo);
            var l = {
                x: i,
                y: n,
                width: a,
                height: s,
                imgsrc: d20.engine.marketplaceDrop.lastDrop.src,
                imgwidth: a,
                imgheight: s,
                represents: ""
            };
            console.log(l);
            d20.Campaign.activePage().addImage(l, !1, !1);
            d20.engine.marketplaceDrop.lastDrop = !1
        }
        ;
        var t = function(t) {
            if (console.log("MESSAGE RECEIVED"),
            console.log(t),
            "setpurchased" == t.data && "https://marketplace.roll20.net" == t.origin)
                $("#imagedialog .keywords").trigger("keyup"),
                e.dialog("destroy"),
                e = !1;
            else if ("{" == t.data.substring(0, 1) && "https://marketplace.roll20.net" == t.origin) {
                var i = JSON.parse(t.data)
                  , n = $("#imagelibrarypopup").parents(".ui-dialog");
                "dragstart" == i.type ? (n.addClass("collapsed"),
                d20.engine.marketplaceDrop.lastDrop = i) : "dragend" == i.type && d20.engine.marketplaceDrop.doDrop(i.x, i.y)
            }
        }
        ;
        window.addEventListener("message", t, !1)
    }),
    $("#secondary-toolbar").on("mousedown mouseup mousemove touchstart touchmove touchend", function(e) {
        e.stopPropagation()
    });
    var $body = $("body");
    $("#editor").live("shape_selected", function(e, t) {
        if ("select" == d20.engine.mode) {
            if ($("#secondary-toolbar").hide(),
            $("#secondary-toolbar .mode").hide(),
            "image" == t.type) {
                if ($body.addClass("tokenselected"),
                1 != d20.engine.selected().length || "objects" != window.currentEditingLayer && "gmlayer" != window.currentEditingLayer ? ($("#radial-menu input").trigger("blur"),
                d20.token_editor.removeRadialMenu()) : d20.token_editor.showRadialMenu(t),
                t.model) {
                    var i = [];
                    if ("" !== t.model.get("represents")) {
                        var n = d20.Campaign.characters.get(t.model.get("represents"));
                        n && (n.abilities.each(function(e) {
                            return e.get("istokenaction") !== !0 ? !0 : void i.push({
                                type: "ability",
                                macroid: n.id + "|" + e.id,
                                name: e.get("name"),
                                abilid: e.id
                            })
                        }),
                        d20.journal.customSheets && d20.journal.customSheets.tokenActions && _.each(d20.journal.customSheets.tokenActions, function(e) {
                            i.push({
                                type: "ability",
                                macroid: "selected|" + e,
                                name: e
                            })
                        }))
                    }
                    if (d20.Campaign.players.each(function(e) {
                        e.macros.each(function(t) {
                            t.get("istokenaction") !== !0 || e.id != window.currentPlayer.id && !t.visibleToCurrentPlayer() || i.push({
                                type: "macro",
                                name: t.get("name"),
                                macroid: e.id + "|" + t.id
                            })
                        })
                    }),
                    n)
                        var r = n.get("abilorder").split(",");
                    i = currentPlayer.get("alphatokenactions") ? _.sortBy(i, function(e) {
                        return e.name.toLowerCase()
                    }) : _.sortBy(i, function(e) {
                        return "macro" === e.type ? "2" + e.name : n && r ? r.indexOf(e.abilid) : "1"
                    }),
                    i.length > 0 && ($("#secondary-toolbar").show(),
                    $("#secondary-toolbar .tokenactions").html($("#tmpl_tokenactions").jqote({
                        actions: i
                    })).show())
                }
                return
            }
            $body.removeClass("tokenselected"),
            d20.token_editor.removeRadialMenu(),
            $("#secondary-toolbar").show(),
            $("#secondary-toolbar ." + t.type).show()
        }
    }),
    $("#editor").live("nothing_selected", function() {
        $body.removeClass("tokenselected"),
        "select" == d20.engine.mode && ($("#secondary-toolbar .mode").hide(),
        $("#secondary-toolbar").hide(),
        $(".colorpicker").colorPicker.hide(),
        $("#radial-menu input").trigger("blur"),
        d20.token_editor.removeRadialMenu()),
        d20.engine.lightOnlySelected = !1
    }),
    $(document).ready(function() {
        $("#select").bind(clicktype, onSelect),
        $("#measure").bind(clicktype, function() {
            setMode("measure")
        }),
        $("#fxtools").bind(clicktype, function() {
            setMode("fxtools")
        }),
        $("#rect").bind(clicktype, onRect),
        $("#path").bind(clicktype, onPath),
        $("#text").bind(clicktype, onText),
        $("#editinglayer").on(clicktype, "li", function() {
            var e = $(this);
            $("#editinglayer").removeClass(window.currentEditingLayer),
            $("#drawingtools .choosepath").show(),
            "polygon" !== d20.engine.mode && $("#drawingtools").hasClass("polygon") && $("#drawingtools").removeClass("polygon").addClass("path"),
            e.hasClass("chooseobjects") ? window.currentEditingLayer = "objects" : e.hasClass("choosemap") ? window.currentEditingLayer = "map" : e.hasClass("choosegmlayer") ? window.currentEditingLayer = "gmlayer" : e.hasClass("choosewalls") && (window.currentEditingLayer = "walls",
            $("#drawingtools .choosepath").hide(),
            "path" !== d20.engine.mode && $("#drawingtools").removeClass("path").addClass("polygon")),
            $("#editinglayer").addClass(window.currentEditingLayer),
            $(document).trigger("d20:editingLayerChanged")
        }),
        $("#zoompanel").on("change", "select", function() {
            var e = parseInt($(this).val(), 10) / 100;
            d20.engine.setZoom(e)
        }),
        $("#zoompanel select").val("100"),
        $("#fogcontrols").bind(clicktype, function() {
            d20.engine.fog.points = [],
            setMode($(this).hasClass("reveal") ? "fog-reveal" : $(this).hasClass("polygonreveal") ? "fog-polygonreveal" : "fog-hide")
        }),
        $("#fogcontrols .choosereveal").bind(clicktype, function() {
            $("#fogcontrols").removeClass("hide").removeClass("polygonreveal").addClass("reveal")
        }),
        $("#fogcontrols .choosepolygonreveal").bind(clicktype, function() {
            $("#fogcontrols").removeClass("hide").removeClass("reveal").addClass("polygonreveal")
        }),
        $("#fogcontrols .choosehide").bind(clicktype, function() {
            $("#fogcontrols").removeClass("reveal").removeClass("polygonreveal").addClass("hide")
        }),
        $("#fogcontrols .chooseclearfog").bind(clicktype, function() {
            var e = $("<div>Are you sure you want to delete all revealed areas and reset the map back to completely hidden?</div>");
            return e.dialog({
                title: "Confirm Reset",
                modal: !0,
                buttons: {
                    "Reset Fog": function() {
                        d20.canvas_overlay.resetFog(),
                        e.dialog("destroy").remove()
                    },
                    Cancel: function() {
                        e.dialog("destroy").remove()
                    }
                },
                beforeClose: function() {
                    e.dialog("destroy").remove()
                }
            }),
            !1
        }),
        $("#drawingtools .chooserect").bind(clicktype, function() {
            return setMode("rect"),
            !1
        }),
        $("#drawingtools .choosetext").bind(clicktype, function() {
            return setMode("text"),
            !1
        }),
        $("#drawingtools .choosepath").bind(clicktype, function() {
            return setMode("path"),
            !1
        }),
        $("#drawingtools .choosedrawselect").bind(clicktype, function() {
            $("#drawingtools").removeClass("text path").addClass("drawselect")
        }),
        $("#drawingtools .choosepolygon").bind(clicktype, function() {
            return setMode("polygon"),
            !1
        }),
        $("#drawingtools .choosecleardrawings").bind(clicktype, function() {
            var e = $("<div>Are you sure you want to delete all drawings, text, and images marked as drawings on the current layer? This cannot be undone.</div>");
            return e.dialog({
                title: "Confirm Clear",
                modal: !0,
                buttons: {
                    Clear: function() {
                        setMode("select"),
                        d20.engine.unselect(),
                        d20.engine.selectAll(!0);
                        var t = d20.engine.selected();
                        d20.engine.canvas.deactivateAllWithDispatch();
                        for (var i = 0; i < t.length; i++)
                            t[i].model.destroy();
                        e.dialog("destroy").remove()
                    },
                    Cancel: function() {
                        e.dialog("destroy").remove()
                    }
                },
                beforeClose: function() {
                    e.dialog("destroy").remove()
                }
            }),
            !1
        }),
        $("#drawingtools").bind(clicktype, function() {
            $(this).hasClass("rect") ? setMode("rect") : $(this).hasClass("text") ? setMode("text") : $(this).hasClass("path") ? setMode("path") : $(this).hasClass("drawselect") ? setMode("drawselect") : $(this).hasClass("polygon") && setMode("polygon")
        }),
        $("#select .chooseselect").bind(clicktype, function() {
            return setMode("select"),
            !1
        }),
        $("#select .choosepan").bind(clicktype, function() {
            return setMode("pan"),
            !1
        }),
        $("#helpsite").bind(clicktype, function() {
            $(window).height() / 2 - 275,
            $(window).width() - 50 - 960;
            window.open("https://wiki.roll20.net")
        }),
        $("#helpsite .showshortcuts").bind(clicktype, function() {
            return -1 != navigator.appVersion.indexOf("Mac") ? $("#shortcut-help").find(".platform-pc").hide() : $("#shortcut-help").find(".platform-mac").hide(),
            $("#shortcut-help").dialog({
                title: "Keyboard Shortcuts",
                width: 700
            }),
            !1
        }),
        $("#helpsite .showbugs").bind(clicktype, function() {
            $(window).height() / 2 - 275,
            $(window).width() - 50 - 960;
            return window.open("https://app.roll20.net/forum/category/18"),
            !1
        }),
        $("#editor").bind("showhelp", function() {
            var e = $($("#tmpl_help_overview").jqote());
            e.appendTo("body"),
            e.dialog({
                title: "Welcome to Roll20!",
                width: 680,
                height: 530,
                zIndex: 10005,
                beforeClose: function() {
                    e.dialog("destroy").remove()
                }
            }),
            e.on("click", "a.noshow", function() {
                $.post("/editor/disable_tutorial/startvideo"),
                e.dialog("destroy")
            })
        });
        var e = $("#dicerollerdialog");
        $("#diceroller").bind(clicktype, function() {
            var t = 600
              , i = $(window).height() - 200;
            i > t && (i = t),
            e.dialog({
                title: "Dice Roller",
                width: 375,
                height: i,
                position: ["center", 30],
                beforeClose: function() {
                    e.dialog("destroy")
                }
            })
        }),
        e.on(clicktype, "a.basicroll", function() {
            var e = $(this).attr("data-dice");
            d20.textchat.doChatInput("/roll 1" + e)
        }),
        e.on(clicktype, "button.rolladvanced", function() {
            var t = e.find(".numdice").val()
              , i = e.find("select.dicetype").val()
              , n = e.find(".addition").val()
              , r = e.find("input[name=exploding]:checked").val()
              , o = "" == e.find(".targetnum").val() ? "" : e.find(".targettype").val() + e.find(".targetnum").val();
            d20.textchat.doChatInput("" != o ? "/roll {" + t + i + r + ("0" != n ? " + " + n : "") + "}" + o : "/roll " + t + i + r + ("0" != n ? " + " + n : ""))
        }),
        e.on(clicktype, "button.reroll", function() {
            var e = $.trim($(this).parents("tr").find("td.formula").text());
            d20.textchat.doChatInput("/roll " + e)
        }),
        $("#switchtoview").bind("click", function() {
            window.location = "/editor/setcampaign/" + campaign_id + "/read"
        }),
        $("#switchtoedit").bind("click", function() {
            window.location = "/editor/setcampaign/" + campaign_id + "/edit"
        }),
        $("#rightsidebar").tabs(),
        $("#rightsidebar").bind("tabsselect", function(e, t) {
            if ("#textchat" == $(t.tab).attr("href")) {
                if ($("#textchattab").removeClass("alertify"),
                d20.textchat && (d20.textchat.tabIsFocused = !0),
                d20.textchat.childWindow)
                    return console.log("Cancel showing"),
                    e.preventDefault(),
                    d20.textchat.childWindow.focus(),
                    !1;
                $("#textchat-input").show()
            } else
                d20.textchat.lastScrollTop || (d20.textchat.lastScrollTop = $("#textchat").scrollTop()),
                $("#textchat-input").hide(),
                d20.textchat.tabIsFocused = !1
        }),
        $("#rightsidebar").bind("tabsshow", function(e, t) {
            "#textchat" == $(t.tab).attr("href") && d20.textchat.lastScrollTop && ($("#textchat").scrollTop(d20.textchat.lastScrollTop),
            d20.textchat.lastScrollTop = !1)
        }),
        $("#gridaligninstructions .cancelgridalign").on("click", function() {
            setMode("select")
        }),
        $(document).on("click", ".canceltargeting", function() {
            console.log("Attempt to cancel targeting"),
            d20.engine.nextTargetCallback && d20.engine.nextTargetCallback(!1),
            setMode("select"),
            $("#targetinginstructions").hide()
        })
    }),
    $(function() {
        $(".colorpicker").colorPicker()
    }),
    $(function() {
        $("#editor").live("shape_selected", function(e, t) {
            "text" == t.type && (console.log(t.model.get("font_size")),
            $("#font-size").val(t.model.get("font_size")),
            $("#font-color").val(t.get("fill")).trigger("change-silent"),
            $("#font-family").val(t.get("fontFamily").replace(/'/g, "")))
        }),
        $("#font-size").bind("change.textedit", function() {
            if (textarea = $(".texteditor"),
            textarea.length > 0)
                textarea.css("font-size", $(this).val() + "px").focus().trigger("keyup");
            else {
                var e = d20.engine.selected();
                if (e.length < 1)
                    return !0;
                for (var t = 0; t < e.length; t++)
                    if (e[0] && "text" == e[0].type) {
                        var i = e[t];
                        console.log(parseInt($(this).val(), 10)),
                        i.set("fontSize", parseInt($(this).val()), 10),
                        d20.engine.canvas.fire("object:modified", {
                            target: i
                        })
                    }
            }
        }),
        $("#font-color").live("change", function() {
            if (textarea = $(".texteditor"),
            textarea.length > 0)
                textarea.css("color", $(this).val()).trigger("keyup");
            else {
                var e = d20.engine.selected();
                if (e.length < 1)
                    return !0;
                for (var t = 0; t < e.length; t++)
                    if (e[0] && "text" == e[0].type) {
                        var i = e[t];
                        i.set("fill", $(this).val()),
                        d20.engine.canvas.fire("object:modified", {
                            target: i
                        })
                    }
            }
        }),
        $("#font-family").live("change", function() {
            if (textarea = $(".texteditor"),
            textarea.length > 0)
                textarea.css("font-family", $(this).val()).focus().trigger("keyup");
            else {
                var e = d20.engine.selected();
                if (e.length < 1)
                    return !0;
                for (var t = 0; t < e.length; t++)
                    if (e[0] && "text" == e[0].type) {
                        var i = e[t];
                        i.set("fontFamily", $(this).val()),
                        d20.engine.canvas.fire("object:modified", {
                            target: i
                        })
                    }
            }
        })
    }),
    $(function() {
        $("#editor").live("shape_selected", function(e, t) {
            if ("rect" == t.type) {
                $("#rect_fill").val(t.attr("fill")).trigger("change-silent"),
                $("#rect_strokecolor").val(t.attr("stroke")).trigger("change-silent");
                var i = parseInt(t.getBBox().width)
                  , n = parseInt(t.getBBox().height);
                if (i > n)
                    var r = .01 * i;
                else
                    var r = .01 * n;
                var o = Math.round(parseInt(t.attr("r")) / r);
                $("#roundness").val(o)
            }
        }),
        $("#roundness").bind("change", function() {
            if (svgeditor.selected.length < 1)
                return !0;
            for (var e = 0; e < svgeditor.selected.length; e++)
                if ("rect" == svgeditor.selected[e].type) {
                    var t = parseInt(svgeditor.selected[e].getBBox().width)
                      , i = parseInt(svgeditor.selected[e].getBBox().height);
                    if (t > i)
                        var n = .01 * t;
                    else
                        var n = .01 * i;
                    var r = parseInt($(this).val()) * n;
                    svgeditor.selected[e].setAttr("r", r),
                    $(svgeditor.selected[e].node).trigger("modified")
                }
        }),
        $("#rect_fill").live("change", function() {
            if (svgeditor.selected.length < 1)
                return !0;
            for (var e = 0; e < svgeditor.selected.length; e++)
                if (svgeditor.selected[e] && "rect" == svgeditor.selected[e].type) {
                    var t = svgeditor.selected[e];
                    t.setAttr("fill", $(this).val()),
                    $(t.node).trigger("modified")
                }
        }),
        $("#rect_strokecolor").live("change", function() {
            if (svgeditor.selected.length < 1)
                return !0;
            for (var e = 0; e < svgeditor.selected.length; e++)
                if (svgeditor.selected[0] && "rect" == svgeditor.selected[e].type) {
                    var t = svgeditor.selected[e];
                    t.setAttr("stroke", $(this).val()),
                    $(t.node).trigger("modified")
                }
        })
    }),
    $(function() {
        $("#editor").live("shape_selected", function(e, t) {
            "path" == t.type && ($("#path_strokecolor").val(t.get("stroke")).trigger("change-silent"),
            $("#path_fillcolor").val(t.get("fill")).trigger("change-silent"),
            $("#path_width").val(parseInt(t.get("strokeWidth"), 10) + ""))
        }),
        $("#path_strokecolor").live("change", function() {
            d20.engine.canvas.freeDrawingBrush.color = $(this).val();
            var e = d20.engine.selected();
            if (e.length < 1)
                return !0;
            for (var t = 0; t < e.length; t++)
                if (e[0] && "path" == e[0].type) {
                    var i = e[t];
                    i.set("stroke", $(this).val()),
                    d20.engine.canvas.fire("object:modified", {
                        target: i
                    })
                }
        }),
        $("#path_fillcolor").live("change", function() {
            d20.engine.canvas.freeDrawingBrush.fill = $(this).val();
            var e = d20.engine.selected();
            if (e.length < 1)
                return !0;
            for (var t = 0; t < e.length; t++)
                if (e[0] && "path" == e[0].type) {
                    var i = e[t];
                    i.set("fill", $(this).val()),
                    d20.engine.canvas.fire("object:modified", {
                        target: i
                    })
                }
        }),
        $("#path_width").live("change", function() {
            d20.engine.canvas.freeDrawingBrush.width = parseInt($(this).val(), 10);
            var e = d20.engine.selected();
            if (e.length < 1)
                return !0;
            for (var t = 0; t < e.length; t++)
                if (e[0] && "path" == e[0].type) {
                    var i = e[t];
                    i.set("strokeWidth", parseInt($(this).val(), 10)),
                    d20.engine.canvas.fire("object:modified", {
                        target: i
                    })
                }
        })
    }),
    d20.clipboard = {},
    function() {
        d20.clipboard.doCopy = function() {
            var e, t = [], i = d20.engine.canvas.getActiveGroup(), n = !1;
            if (i ? (e = i.getObjects(),
            n = [i.left, i.top]) : e = [d20.engine.canvas.getActiveObject()],
            0 != e.length && null != e[0]) {
                for (var r = e, o = 0; o < r.length; o++) {
                    var a = JSON.parse(JSON.stringify(r[o]));
                    n || (n = [a.left, a.top],
                    a.left = 0,
                    a.top = 0);
                    var s = {}
                      , l = r[o].model.toJSON();
                    _.each(d20.token_editor.tokenkeys, function(e) {
                        l.hasOwnProperty(e) && (s[e] = l[e])
                    }),
                    t.push({
                        type: r[o].type,
                        attrs: a,
                        modelattrs: s,
                        oldid: r[o].model.id,
                        groupwith: l.groupwith
                    })
                }
                d20.clipboard.contents = JSON.stringify(t),
                d20.clipboard.fromPage = d20.Campaign.activePage().id,
                d20.clipboard.groupOrigin = n
            }
        }
        ,
        d20.clipboard.doPaste = function() {
            var e = {};
            try {
                objects = JSON.parse(d20.clipboard.contents)
            } catch (t) {
                return void console.log("clipboard contents invalid.")
            }
            var i = 0
              , n = 0;
            d20.clipboard.fromPage == d20.Campaign.activePage().id && (i = (parseInt(2 * Math.random()) - 1 | 1) * d20.engine.snapTo,
            n = (parseInt(2 * Math.random()) - 1 | 1) * d20.engine.snapTo),
            d20.engine && d20.engine.lastMousePos && (d20.clipboard.groupOrigin = [d20.engine.lastMousePos[0], d20.engine.lastMousePos[1]]);
            for (var r = 0; r < objects.length; r++) {
                var o = objects[r];
                o.attrs.left = o.attrs.left + d20.clipboard.groupOrigin[0],
                o.attrs.top = o.attrs.top + d20.clipboard.groupOrigin[1];
                var a = d20.Campaign.activePage().get("width") * window.dpi - window.dpi
                  , s = d20.Campaign.activePage().get("height") * window.dpi - window.dpi;
                if (o.attrs.left > a && (o.attrs.left = a),
                o.attrs.top > s && (o.attrs.top = s),
                "image" == o.type) {
                    var l = o.attrs
                      , c = (l.src,
                    l.src);
                    l.imgsrc = c;
                    var d = d20.Campaign.activePage().addImage(l, !0, !1, !1, !1, !0);
                    if (o.modelattrs && o.modelattrs.represents) {
                        var h = d20.Campaign.characters.get(o.modelattrs.represents);
                        if (h) {
                            console.log(h);
                            var u, p;
                            "" != o.modelattrs.bar1_link && (-1 !== o.modelattrs.bar1_link.indexOf("sheetattr_") ? (p = o.modelattrs.bar1_link.split("sheetattr_")[1],
                            setTimeout(function() {
                                h.updateTokensByName(p)
                            }, .5)) : (u = h.attribs.get(o.modelattrs.bar1_link),
                            p = u.get("name"),
                            setTimeout(function() {
                                h.updateTokensByName(p, o.modelattrs.bar1_link)
                            }, .5))),
                            "" != o.modelattrs.bar2_link && (-1 !== o.modelattrs.bar2_link.indexOf("sheetattr_") ? (p = o.modelattrs.bar2_link.split("sheetattr_")[1],
                            setTimeout(function() {
                                h.updateTokensByName(p)
                            }, .5)) : (u = h.attribs.get(o.modelattrs.bar2_link),
                            p = u.get("name"),
                            setTimeout(function() {
                                h.updateTokensByName(p, o.modelattrs.bar2_link)
                            }, .5))),
                            "" != o.modelattrs.bar3_link && (-1 !== o.modelattrs.bar3_link.indexOf("sheetattr_") ? (p = o.modelattrs.bar3_link.split("sheetattr_")[1],
                            setTimeout(function() {
                                h.updateTokensByName(p)
                            }, .5)) : (u = h.attribs.get(o.modelattrs.bar3_link),
                            p = u.get("name"),
                            setTimeout(function() {
                                h.updateTokensByName(p, o.modelattrs.bar3_link)
                            }, .5)))
                        }
                    } else if ("text" == o.type)
                        var d = d20.Campaign.activePage().addText(o.attrs);
                    else if ("path" == o.type)
                        var d = d20.Campaign.activePage().addPath(o.attrs);
                    d && (d.save(o.modelattrs),
                    e[o.oldid] = d,
                    setMode("select"))
                } else if ("text" == o.type)
                    var d = d20.Campaign.activePage().addText(o.attrs);
                else if ("path" == o.type)
                    var d = d20.Campaign.activePage().addPath(o.attrs);
                d && (d.save(o.modelattrs),
                e[o.oldid] = d,
                setMode("select"))
            }
            for (var r = 0; r < objects.length; r++) {
                var o = objects[r];
                _.each(e, function(e, t) {
                    console.log(t + " is now " + e.id),
                    o.groupwith = o.groupwith.replace(t, e.id)
                }),
                e[o.oldid].set({
                    groupwith: o.groupwith
                })
            }
        }
    }(),
    $(function() {
        $("#copy").live(clicktype, function() {
            d20.clipboard.doCopy()
        }),
        $("#paste").live(clicktype, function() {
            d20.clipboard.doPaste()
        })
    }),
    $(function() {
        $("#fork").live(clicktype, function() {
            window.location = "/browse/fork/" + campaign_id
        })
    }),
    $.fn.tipsy && !window.mobilesafari && $("#toolbar .button").tipsy({
        live: !0,
        gravity: $.fn.tipsy.autoNS,
        opacity: 1,
        delayIn: 500
    }),
    $("#secondary-toolbar select").bind("click", function(e) {
        e.stopPropagation()
    }),
    $(function() {
        var e = $("#zoomslider");
        e.slider({
            orientation: "vertical",
            min: 10,
            max: 250,
            value: 100,
            slide: function(e, t) {
                var i = parseInt(t.value, 10) / 100;
                d20.engine.slideZoom(i, !0)
            }
        }).addTouch(),
        e.on("dblclick", function() {
            d20.engine.setZoom(1, !1, !0)
        })
    }),
    d20.pagetoolbar = {
        noReload: !1,
        noClosing: !1
    },
    $(function() {
        if (window.is_gm) {
            $("#page-toolbar").show();
            var e = function() {
                return $("#page-toolbar .pages input").length > 0 ? !0 : !1
            }
              , t = function() {
                $("#page-toolbar").css({
                    top: "-" + $("#page-toolbar").height() + "px"
                }).addClass("closed"),
                $("#page-toolbar .handle").css({
                    bottom: "-30px"
                }),
                $("#page-toolbar .pages").hide()
            }
            ;
            t(),
            $(window).bind("resize", t);
            var i = function() {
                console.log("capture page order!");
                var e = {}
                  , t = 0;
                $("#page-toolbar .pages .chooseablepage").each(function() {
                    e[$(this).attr("data-pageid")] = t;
                    var i = d20.Campaign.pages.get($(this).attr("data-pageid"));
                    i && i.save({
                        placement: t
                    }),
                    t++
                }),
                d20.pagetoolbar.noReload = !1,
                d20.pagetoolbar.refreshPageListing()
            }
              , n = function() {
                if (!d20.Campaign || e() || d20.pagetoolbar.noReload)
                    return !1;
                console.log("refershing page listings!");
                var t = $("#page-toolbar .pages")
                  , n = ""
                  , r = 1;
                n = "<div class='availablepage' data-pageid='create'><img class='pagethumb' src='" + d20.siteURL + "/images/blankcampaignnew.jpg' /><span>Create New Page</span></div>";
                for (var o = d20.Campaign.pages.sortBy(function(e) {
                    return parseInt(e.get("placement"), 10)
                }), a = 0, s = d20.Campaign.get("playerspecificpages"), l = 0; l < o.length; l++) {
                    var c = o[l];
                    if (c.get("archived"))
                        a++;
                    else {
                        var d = new Date
                          , h = (d.getTime(),
                        c.get("name"));
                        ("" == h || null == h) && (h = "Untitled"),
                        "<" == h.charAt(0) && (h = h.substring(1));
                        var u = "<div class='availablepage chooseablepage";
                        d20.Campaign && c == d20.Campaign.activePage() && (u += " activepage");
                        var p = c.get("thumbnail");
                        if (u += "' data-pageid='" + c.id + "'><img class='pagethumb' data-pageversion='" + c.get("version") + "' src='" + p + "' /><span>" + h + "</span>",
                        (d20.Campaign.get("playerpageid") == c.id || !d20.Campaign.get("playerpageid") && 0 == l) && (u += "<div class='playerbookmark'><img src='/images/playerribbon.png' /></div>"),
                        s) {
                            var f = 0;
                            for (var g in s)
                                if (s[g] === c.id) {
                                    var m = d20.Campaign.players.get(g);
                                    m && (u += "<div class='playerspecificbookmark' data-playerid='" + m.id + "' style='top: " + (15 * f + 5) + "px'><img src='/users/avatar/" + m.get("d20userid") + "/150' title='" + m.get("displayname").replace("'", "") + "' /></div>",
                                    f++)
                                }
                        }
                        u += "<div class='pictos duplicate showtip' title='Duplicate Page'>;</div><div class='pictos settings showtip' title='Page Settings'>y</div></div>",
                        n += u,
                        r += 1;
                        {
                            var v = new Date;
                            v.getTime()
                        }
                    }
                }
                a > 0 && (n += "<div class='availablepage' data-pageid='archive'><img class='pagethumb' src='" + d20.siteURL + "/images/archivecampaign.jpg' /><span>" + a + " Archived</span></div>"),
                t.html(n),
                $("#page-toolbar .pages").sortable({
                    items: "> .chooseablepage",
                    axis: "x",
                    start: function() {
                        d20.pagetoolbar.noReload = !0
                    },
                    stop: function() {
                        i()
                    },
                    distance: 15
                }).addTouch(),
                $("#page-toolbar .playerbookmark").draggable({
                    revert: "invalid",
                    appendTo: "#page-toolbar",
                    helper: "original",
                    axis: "x"
                }).addTouch(),
                $("#page-toolbar .playerspecificbookmark").draggable({
                    revert: "invalid",
                    appendTo: "#page-toolbar",
                    helper: "original",
                    axis: "x"
                }).addTouch(),
                $("#page-toolbar .playerbookmark").droppable({
                    accept: ".playerspecificbookmark",
                    hoverClass: "dropping",
                    drop: function(e, t) {
                        var i = $(t.draggable)
                          , n = i.attr("data-playerid")
                          , r = d20.Campaign.get("playerspecificpages");
                        r || (r = {}),
                        delete r[n],
                        0 === Object.keys(r).length && (r = !1),
                        d20.Campaign.save({
                            playerspecificpages: r
                        }),
                        d20.pagetoolbar.refreshPageListing(),
                        e.originalEvent.handled = !0
                    }
                }),
                $("#page-toolbar .chooseablepage").droppable({
                    accept: ".playerbookmark, .player-bookmark, .playerspecificbookmark",
                    hoverClass: "activepage",
                    drop: function(e, t) {
                        if (!e.originalEvent.handled) {
                            var i = $(t.draggable)
                              , n = $(this).attr("data-pageid");
                            if (i.hasClass("playerbookmark")) {
                                d20.Campaign.save({
                                    playerpageid: n
                                }),
                                d20.pagetoolbar.refreshPageListing();
                                var r = d20.Campaign.pages.get(n);
                                r && "" !== r.get("jukeboxtrigger") && (d20.jukebox.stopAllTracks(),
                                "nonestopall" !== r.get("jukeboxtrigger") && ($("#jukeboxfolderroot .jukeboxitem[data-itemid=" + r.get("jukeboxtrigger") + "]").find("> .dd-content .play[data-isplaying=false]").trigger("click"),
                                $("#jukeboxfolderroot .dd-folder[data-globalfolderid=" + r.get("jukeboxtrigger") + "]").find("> .dd-content .play[data-isplaying=false]").trigger("click")))
                            } else if (i.hasClass("player-bookmark") || i.hasClass("playerspecificbookmark")) {
                                var o;
                                o = i.hasClass("player-bookmark") ? i.parents(".player").attr("id").replace("player_", "") : i.attr("data-playerid");
                                var a = d20.Campaign.get("playerspecificpages");
                                a || (a = {}),
                                a[o] = n,
                                d20.Campaign.save({
                                    playerspecificpages: a
                                }),
                                d20.pagetoolbar.refreshPageListing()
                            }
                        }
                    }
                })
            }
            ;
            d20.pagetoolbar.refreshPageListing = _.debounce(n, 100),
            $(window).bind("d20:pageInitialized", function() {
                d20.pagetoolbar.refreshPageListing()
            }),
            $(document).bind("d20:pagechanged", function() {
                d20.pagetoolbar.refreshPageListing()
            }),
            $("#page-toolbar .handle").bind(clicktype, function(e) {
                d20.pagetoolbar.noClosing || ($("#page-toolbar").hasClass("closed") ? ($("#page-toolbar").animate({
                    top: "-1px"
                }, 300).removeClass("closed"),
                $("#page-toolbar .pages").show()) : $("#page-toolbar").animate({
                    top: "-" + $("#page-toolbar").height() + "px"
                }, 300, function() {
                    $("#page-toolbar").addClass("closed"),
                    $("#page-toolbar .pages").hide(),
                    _.delay(function() {
                        $("#page-toolbar .pages input").trigger("blur")
                    })
                }),
                e.stopPropagation())
            }),
            $("#page-toolbar .pages .availablepage").live(clicktype, function() {
                return $this = $(this),
                $this.find("input").length > 0 || window.mobilesafari && d20.lastTouchDistance > 20 ? !0 : void ("create" == $this.attr("data-pageid") ? d20.Campaign.pages.create({
                    placement: $("#page-toolbar .pages .chooseablepage").length
                }, {
                    success: function() {}
                }) : "archive" == $this.attr("data-pageid") ? d20.journal.showArchiveDialog(d20.Campaign.pages, "Pages") : ($("#page-toolbar .handle").trigger("click"),
                d20.Campaign.switchPageById($this.attr("data-pageid")),
                currentPlayer.set({
                    lastpage: $this.attr("data-pageid")
                }).save()))
            }),
            $("#page-toolbar .pages .availablepage span").live(clicktype, function() {
                if ($target = $(this),
                $target.find("input").length > 0 || "create" == $target.parents(".availablepage").attr("data-pageid") || "archive" == $target.parents(".availablepage").attr("data-pageid"))
                    return !0;
                var e = $target.text();
                $target.html("<input type='text' />").find("input").val(e),
                $target.find("input").focus()
            }),
            $("#page-toolbar .pages .availablepage span input").live("keyup", function(e) {
                var t = $(this).parents(".availablepage").attr("data-pageid");
                if (13 == e.which) {
                    var i = d20.Campaign.pages.get(t)
                      , n = $(this)
                      , r = n.val();
                    "" == r && (r = "Untitled"),
                    i.save({
                        name: r
                    }),
                    n.parents("span").text(r)
                }
            }),
            $("#page-toolbar .pages .availablepage span input").live("blur", function() {
                var e = $(this).parents(".availablepage").attr("data-pageid")
                  , t = d20.Campaign.pages.get(e);
                $(this).parents("span").text(t.get("name"))
            }),
            $("#page-toolbar").on("click", ".settings", function() {
                var e = d20.Campaign.pages.get($(this).parents(".availablepage").attr("data-pageid"));
                return e.view.showDialog(),
                !1
            }),
            $("#page-toolbar .pages .availablepage .duplicate").live(clicktype, function() {
                var e = $(this).parents(".availablepage").attr("data-pageid")
                  , t = d20.Campaign.pages.get(e)
                  , i = _.clone(t.attributes);
                return i.name = i.name + " (Copy)",
                delete i.id,
                delete i.thumbnail,
                delete i.revealedAreas,
                d20.Campaign.pages.create(i),
                $(".tipsy").remove(),
                !1
            })
        }
    }),
    d20.token_editor = {
        tokenkeys: ["showplayers_bar1", "name", "flipv", "fliph", "showplayers_bar2", "showplayers_bar3", "bar1_value", "bar1_max", "bar2_value", "bar2_max", "bar3_value", "bar3_max", "name", "current_initiative", "hasturn", "controlledby", "aura1_radius", "playersedit_name", "showplayers_name", "locked", "showname", "bar1_link", "bar2_link", "bar3_link", "represents", "sides", "currentSide", "aura1_color", "aura1_square", "aura2_radius", "aura2_color", "aura2_square", "showplayers_aura1", "showplayers_aura2", "playersedit_bar1", "playersedit_bar2", "playersedit_bar3", "playersedit_aura1", "playersedit_aura2", "light_radius", "light_dimradius", "light_otherplayers", "light_hassight", "light_angle", "light_losangle", "light_multiplier", "gmnotes", "stroke_width", "rotation", "isdrawing", "cardid", "tint_color", "statusmarkers"],
        statusmarkers: {
            red: "#C91010",
            blue: "#1076C9",
            green: "#2FC910",
            brown: "#C97310",
            purple: "#9510C9",
            pink: "#EB75E1",
            yellow: "#E5EB75",
            dead: "X",
            skull: "0",
            sleepy: "34",
            "half-heart": "68",
            "half-haze": "102",
            interdiction: "136",
            snail: "170",
            "lightning-helix": "204",
            spanner: "238",
            "chained-heart": "272",
            "chemical-bolt": "306",
            "death-zone": "340",
            "drink-me": "374",
            "edge-crack": "408",
            "ninja-mask": "442",
            stopwatch: "476",
            "fishing-net": "510",
            overdrive: "544",
            strong: "578",
            fist: "612",
            padlock: "646",
            "three-leaves": "680",
            "fluffy-wing": "714",
            pummeled: "748",
            tread: "782",
            arrowed: "816",
            aura: "850",
            "back-pain": "884",
            "black-flag": "918",
            "bleeding-eye": "952",
            "bolt-shield": "986",
            "broken-heart": "1020",
            cobweb: "1054",
            "broken-shield": "1088",
            "flying-flag": "1122",
            radioactive: "1156",
            trophy: "1190",
            "broken-skull": "1224",
            "frozen-orb": "1258",
            "rolling-bomb": "1292",
            "white-tower": "1326",
            grab: "1360",
            screaming: "1394",
            grenade: "1428",
            "sentry-gun": "1462",
            "all-for-one": "1496",
            "angel-outfit": "1530",
            "archery-target": "1564"
        },
        statussheet_ready: !1,
        statusicon_size: 24
    },
    $(function() {
        var e, t = !1, i = [];
        d20.token_editor.statussheet = new Image,
        d20.token_editor.statussheet.src = "/images/statussheet.png",
        d20.token_editor.statussheet_small = new Image,
        d20.token_editor.statussheet_small.onload = function() {
            d20.token_editor.statussheet_ready = !0
        }
        ,
        d20.token_editor.statussheet_small.src = "/images/statussheet_small.png";
        var n = function() {
            t && (t.remove(),
            t = !1),
            e && clearTimeout(e)
        }
          , r = function(r) {
            var o, a;
            r.changedTouches && r.changedTouches.length > 0 ? (o = r.changedTouches[0].pageX,
            a = r.changedTouches[0].pageY) : (o = r.pageX,
            a = r.pageY),
            n(),
            i = [];
            for (var s = [], l = d20.engine.selected(), c = 0; c < l.length; c++)
                i.push(l[c]),
                s.push(l[c].type);
            if (s = _.uniq(s),
            i.length > 0)
                if (1 == s.length) {
                    var d = i[0];
                    t = $("image" == d.type && 0 == d.model.get("isdrawing") ? $("#tmpl_actions_menu").jqote(d.model) : $("#tmpl_actions_menu").jqote(d.model))
                } else {
                    var d = i[0];
                    t = $($("#tmpl_actions_menu").jqote(d.model))
                }
            else
                t = $($("#tmpl_actions_menu").jqote({}));
            if (!window.is_gm && t[0].lastElementChild.childElementCount < 1)
                return !1;
            t.appendTo("body");
            var h = t.height()
              , u = t.width()
              , p = {};
            return p.top = a > $("#editor-wrapper").height() - $("#playerzone").height() - h - 100 ? a - h + "px" : a + "px",
            p.left = o > $("#editor-wrapper").width() - u ? o + 10 - u + "px" : o + 10 + "px",
            t.css(p),
            $(".actions_menu").bind("mousedown mouseup touchstart", function(e) {
                e.stopPropagation()
            }),
            $(".actions_menu ul > li").bind("mouseover touchend", function() {
                if (e && (clearTimeout(e),
                e = !1),
                $(this).parents(".hasSub").length > 0)
                    ;
                else if ($(this).hasClass("hasSub")) {
                    $(".actions_menu").css({
                        width: "215px",
                        height: "250px"
                    });
                    var t = this;
                    _.defer(function() {
                        $(".actions_menu ul.submenu").hide(),
                        $(t).find("ul.submenu:hidden").show()
                    })
                } else
                    $(".actions_menu ul.submenu").hide()
            }),
            $(".actions_menu ul.submenu").live("mouseover", function() {
                e && (clearTimeout(e),
                e = !1)
            }),
            $(".actions_menu, .actions_menu ul.submenu").live("mouseleave", function() {
                e || (e = setTimeout(function() {
                    $(".actions_menu ul.submenu").hide(),
                    $(".actions_menu").css("width", "100px").css("height", "auto"),
                    e = !1
                }, 500))
            }),
            $(".actions_menu li").on(clicktype, function() {
                var e = $(this).attr("data-action-type");
                if (null != e) {
                    if ("copy" == e)
                        d20.clipboard.doCopy(),
                        n();
                    else if ("paste" == e)
                        d20.clipboard.doPaste(),
                        n();
                    else if ("delete" == e) {
                        var t = d20.engine.selected();
                        d20.engine.canvas.deactivateAllWithDispatch();
                        for (var r = 0; r < t.length; r++)
                            t[r].model.destroy();
                        n()
                    } else if ("undo" == e)
                        d20.undo && d20.undo.doUndo(),
                        n();
                    else if ("tofront" == e)
                        d20.engine.canvas.getActiveGroup() && d20.engine.unselect(),
                        _.each(i, function(e) {
                            d20.engine.canvas.bringToFront(e)
                        }),
                        d20.Campaign.activePage().debounced_recordZIndexes(),
                        n();
                    else if ("toback" == e)
                        d20.engine.canvas.getActiveGroup() && d20.engine.unselect(),
                        _.each(i, function(e) {
                            d20.engine.canvas.sendToBack(e)
                        }),
                        d20.Campaign.activePage().debounced_recordZIndexes(),
                        n();
                    else if (-1 !== e.indexOf("tolayer_")) {
                        d20.engine.unselect();
                        var o = e.replace("tolayer_", "");
                        _.each(i, function(e) {
                            e.model.save({
                                layer: o
                            })
                        }),
                        n(),
                        d20.token_editor.removeRadialMenu()
                    } else if ("addturn" == e)
                        _.each(i, function(e) {
                            d20.Campaign.initiativewindow.addTokenToList(e.model.id)
                        }),
                        n(),
                        d20.tutorial && d20.tutorial.active && $(document.body).trigger("addedTurn");
                    else if ("group" == e) {
                        var a = [];
                        d20.engine.unselect(),
                        _.each(i, function(e) {
                            a.push(e.model.id)
                        }),
                        _.each(i, function(e) {
                            e.model.addToGroup(a)
                        }),
                        n();
                        var s = i[0];
                        d20.engine.select(s)
                    } else if ("ungroup" == e)
                        d20.engine.unselect(),
                        _.each(i, function(e) {
                            e.model.clearGroup()
                        }),
                        d20.token_editor.removeRadialMenu(),
                        n();
                    else if ("toggledrawing" == e)
                        d20.engine.unselect(),
                        _.each(i, function(e) {
                            e.model.set({
                                isdrawing: !e.model.get("isdrawing")
                            }).save()
                        }),
                        n(),
                        d20.token_editor.removeRadialMenu();
                    else if ("toggleflipv" == e)
                        d20.engine.unselect(),
                        _.each(i, function(e) {
                            e.model.set({
                                flipv: !e.model.get("flipv")
                            }).save()
                        }),
                        n(),
                        d20.token_editor.removeRadialMenu();
                    else if ("togglefliph" == e)
                        d20.engine.unselect(),
                        _.each(i, function(e) {
                            e.model.set({
                                fliph: !e.model.get("fliph")
                            }).save()
                        }),
                        n(),
                        d20.token_editor.removeRadialMenu();
                    else if ("takecard" == e)
                        d20.engine.canvas.getActiveGroup() && d20.engine.unselect(),
                        _.each(i, function(e) {
                            var t = d20.decks.cardByID(e.model.get("cardid"));
                            if (e.model.get("isdrawing") === !1)
                                var i = {
                                    bar1_value: e.model.get("bar1_value"),
                                    bar1_max: e.model.get("bar1_max"),
                                    bar2_value: e.model.get("bar2_value"),
                                    bar2_max: e.model.get("bar2_max"),
                                    bar3_value: e.model.get("bar3_value"),
                                    bar3_max: e.model.get("bar3_max")
                                };
                            d20.Campaign.hands.addCardToHandForPlayer(t, window.currentPlayer, i ? i : void 0),
                            _.defer(function() {
                                e.model.destroy()
                            })
                        }),
                        d20.engine.unselect(),
                        n();
                    else if ("flipcard" == e)
                        d20.engine.canvas.getActiveGroup() && d20.engine.unselect(),
                        _.each(i, function(e) {
                            var t = e.model.get("sides").split("|")
                              , i = e.model.get("currentSide")
                              , n = i + 1;
                            n > t.length - 1 && (n = 0),
                            e.model.set({
                                currentSide: n,
                                imgsrc: unescape(t[n])
                            }).save()
                        }),
                        n();
                    else if ("setdimensions" == e) {
                        var l = i[0]
                          , c = $($("#tmpl_setdimensions").jqote()).dialog({
                            title: "Set Dimensions",
                            width: 325,
                            height: 225,
                            buttons: {
                                Set: function() {
                                    var e, t;
                                    "pixels" == c.find(".dimtype").val() ? (e = parseInt(c.find("input.width").val(), 10),
                                    t = parseInt(c.find("input.height").val(), 10)) : (e = parseFloat(c.find("input.width").val()) * window.dpi,
                                    t = parseFloat(c.find("input.height").val()) * window.dpi),
                                    l.model.save({
                                        width: e,
                                        height: t
                                    }),
                                    c.off("change"),
                                    c.dialog("destroy").remove()
                                },
                                Cancel: function() {
                                    c.off("change"),
                                    c.dialog("destroy").remove()
                                }
                            },
                            beforeClose: function() {
                                c.off("change"),
                                c.dialog("destroy").remove()
                            }
                        });
                        c.on("change", ".dimtype", function() {
                            "pixels" == $(this).val() ? (c.find("input.width").val(Math.round(l.get("width"))),
                            c.find("input.height").val(Math.round(l.get("height")))) : (c.find("input.width").val(l.get("width") / window.dpi),
                            c.find("input.height").val(l.get("height") / window.dpi))
                        }),
                        c.find(".dimtype").trigger("change"),
                        n()
                    } else if ("aligntogrid" == e)
                        if (0 === d20.Campaign.activePage().get("snapping_increment")) {
                            n();
                            var d = $($("#tmpl_grid-disabled").jqote(u)).dialog({
                                title: "Grid Off",
                                buttons: {
                                    Ok: function() {
                                        d.off("change"),
                                        d.dialog("destroy").remove()
                                    }
                                },
                                beforeClose: function() {
                                    d.off("change"),
                                    d.dialog("destroy").remove()
                                }
                            })
                        } else
                            d20.engine.gridaligner.target = i[0],
                            setMode("gridalign"),
                            n();
                    else if ("side_random" == e) {
                        d20.engine.canvas.getActiveGroup() && d20.engine.unselect();
                        var h = [];
                        _.each(i, function(e) {
                            if (e.model && "" != e.model.get("sides")) {
                                var t = e.model.get("sides").split("|")
                                  , i = t.length
                                  , n = d20.textchat.diceengine.random(i);
                                e.model.save({
                                    currentSide: n,
                                    imgsrc: unescape(t[n])
                                }),
                                h.push(t[n])
                            }
                        }),
                        d20.textchat.rawChatInput({
                            type: "tokenroll",
                            content: h.join("|")
                        }),
                        n()
                    } else if ("side_choose" == e) {
                        var l = i[0]
                          , u = l.model.toJSON()
                          , p = u.currentSide;
                        u.sidesarray = u.sides.split("|");
                        var c = $($("#tmpl_chooseside").jqote(u)).dialog({
                            title: "Choose Side",
                            width: 325,
                            height: 225,
                            buttons: {
                                Choose: function() {
                                    d20.engine.canvas.getActiveGroup() && d20.engine.unselect(),
                                    l.model.save({
                                        currentSide: p,
                                        imgsrc: unescape(u.sidesarray[p])
                                    }),
                                    l = null ,
                                    u = null ,
                                    c.off("slide"),
                                    c.dialog("destroy").remove()
                                },
                                Cancel: function() {
                                    l = null ,
                                    u = null ,
                                    c.off("slide"),
                                    c.dialog("destroy").remove()
                                }
                            },
                            beforeClose: function() {
                                l = null ,
                                u = null ,
                                c.off("slide"),
                                c.dialog("destroy").remove()
                            }
                        });
                        c.find(".sideslider").slider({
                            min: 0,
                            max: u.sidesarray.length - 1,
                            step: 1,
                            value: u.currentSide
                        }),
                        c.on("slide", function(e, t) {
                            t.value != p && (p = t.value,
                            c.find(".sidechoices .sidechoice").hide().eq(t.value).show())
                        }),
                        c.find(".sidechoices .sidechoice").hide().eq(u.currentSide).show(),
                        n()
                    }
                    return !1
                }
            }),
            !1
        }
        ;
        d20.token_editor.showContextMenu = r,
        d20.token_editor.closeContextMenu = n;
        var o = $("#editor-wrapper");
        d20.token_editor.updateRadialMenuPos = function() {
            if (d20.token_editor.$currentRadialMenu && d20.token_editor.currentRadialTarget) {
                var e = d20.token_editor.currentRadialTarget
                  , t = Math.floor((e.get("left") - d20.engine.currentCanvasOffset[0]) * d20.engine.canvasZoom) - 35 + window.ruleroffset - 125 + d20.engine.paddingOffset[0]
                  , i = Math.floor((e.get("top") - d20.engine.currentCanvasOffset[1]) * d20.engine.canvasZoom) - Math.floor(e.get("height") / 2 * d20.engine.canvasZoom) + window.ruleroffset - 125 + d20.engine.paddingOffset[1];
                t += o.scrollLeft(),
                i += o.scrollTop(),
                d20.token_editor.$currentRadialMenu.css({
                    top: i + "px",
                    left: t + "px",
                    display: "block"
                })
            }
        }
        ,
        d20.token_editor.debounced_updateRadialMenuPos = _.debounce(d20.token_editor.updateRadialMenuPos, 100),
        d20.token_editor.removeRadialMenu = function() {
            $("#radial-menu").remove(),
            d20.token_editor.$currentRadialMenu = !1
        }
        ,
        d20.token_editor.do_showRadialMenu = function(e, t, i) {
            if (!($("#radial-menu").length > 0 && e == currentcontexttarget && !i || e && e.model && e.model.get("isdrawing"))) {
                currentcontexttarget = d20.token_editor.currentRadialTarget = e,
                $("#radial-menu input").trigger("blur"),
                d20.token_editor.removeRadialMenu();
                var r = $($("#tmpl_radial_menu_token").jqote(e.model));
                r.on("mousedown mouseup touchstart", ".button", function(e) {
                    e.which && 3 == e.which || e.stopPropagation()
                }),
                r.on(clicktype, ".action", function(e) {
                    var t = $(this).attr("data-action-type");
                    if (null != t) {
                        if ("tokensettings" == t) {
                            if ((e.shiftKey || e.altKey) && "" !== currentcontexttarget.model.get("represents")) {
                                console.log("Show token's character...");
                                var i = d20.Campaign.characters.get(currentcontexttarget.model.get("represents"));
                                if (i) {
                                    var r = i.get("inplayerjournals").split(",");
                                    (window.is_gm || -1 !== _.indexOf(r, "all") || window.currentPlayer && -1 !== _.indexOf(r, window.currentPlayer.id)) && i.view.showDialog()
                                }
                                e.altKey ? $(".dialog[data-characterid=" + currentcontexttarget.model.get("represents") + "] .characterviewer ul.nav a[data-tab='attributesabilities']").trigger("click") : $(".dialog[data-characterid=" + currentcontexttarget.model.get("represents") + "] .characterviewer ul.nav a[data-tab='bioinfo']").trigger("click")
                            } else
                                currentcontexttarget.model.trigger("showtokeneditor");
                            n()
                        } else if (-1 !== t.indexOf("modify_") || -1 !== t.indexOf("sub_")) {
                            var o = t.replace("modify_", "");
                            if (!currentcontexttarget.model.currentPlayerControls())
                                return;
                            if (!window.is_gm && !currentcontexttarget.model.get("playersedit_" + o))
                                return;
                            $(this).append("<div class='popupvalue'><input type='text' class='tutorial' data-tutorial='quick-change-value' /></div>");
                            var a = $(this).find(".popupvalue")
                              , s = $(this).find("input")
                              , l = $(this).attr("data-currentval");
                            s.on("click", function() {
                                return !1
                            }),
                            s.on("keyup", function(e) {
                                if (13 == e.which) {
                                    var t = {}
                                      , i = s.val();
                                    if ("+" == i.substring(0, 1) || "-" == i.substring(0, 1)) {
                                        var n = parseInt(i, 10);
                                        "" === l && (l = 0),
                                        i = parseInt(l, 10) + n
                                    }
                                    t[o + "_value"] = i;
                                    var r = !1;
                                    if (currentcontexttarget.model.character) {
                                        var a = currentcontexttarget.model.get(o + "_link");
                                        if ("" !== a) {
                                            var c = currentcontexttarget.model.character.attribs.get(a);
                                            c && (c.syncedSave({
                                                current: i
                                            }),
                                            r = !0)
                                        }
                                    }
                                    r || currentcontexttarget.model.save(t),
                                    s.trigger("blur")
                                }
                            }),
                            s.on("blur", function() {
                                $(".tipsy").remove(),
                                a.remove()
                            }),
                            s.val(l).focus(),
                            s[0].selectionStart = 0,
                            s[0].selectionEnd = l.length
                        } else if (-1 !== t.indexOf("toggle_status_")) {
                            var c = t.replace("toggle_status_", "")
                              , d = "" == currentcontexttarget.model.get("statusmarkers") ? [] : currentcontexttarget.model.get("statusmarkers").split(",");
                            $(this).hasClass("active") ? (d = _.filter(d, function(e) {
                                return e.split("@")[0] == c ? !1 : !0
                            }),
                            $(this).removeClass("active")) : (d.push(c),
                            $(this).addClass("active")),
                            currentcontexttarget.model.save({
                                statusmarkers: d.join(",")
                            })
                        } else if ("show_marker_menu" == t) {
                            $(this).attr("data-action-type", "hide_marker_menu"),
                            $("#radial-menu .markermenu").remove();
                            var h = $("<div class='markermenu'></div>")
                              , d = "" == currentcontexttarget.model.get("statusmarkers") ? [] : currentcontexttarget.model.get("statusmarkers").split(",")
                              , u = _.map(d, function(e) {
                                return e.split("@")[0]
                            });
                            _.each(d20.token_editor.statusmarkers, function(e, t) {
                                var i = "";
                                -1 !== u.indexOf(t) && (i = "active"),
                                h.append("#" === e.substring(0, 1) ? "<div class='statusicon markercolor action " + i + "' data-action-type='toggle_status_" + t + "' style='background-color: " + e + " '></div>" : "dead" === t ? "<div class='statusicon markercolor action dead " + i + "' data-action-type='toggle_status_dead'>X</div>" : "<div class='statusicon markericon action " + i + "' data-action-type='toggle_status_" + t + "' style='background-position: -" + e + "px 0px;'></div>")
                            }),
                            h.appendTo(this),
                            _.delay(function() {
                                h.addClass("open")
                            })
                        } else if ("hide_marker_menu" == t) {
                            $(this).attr("data-action-type", "show_marker_menu");
                            var p = $("#radial-menu .markermenu");
                            p.removeClass("open"),
                            setTimeout(function() {
                                p && p.remove()
                            }, 300)
                        }
                        return !1
                    }
                });
                var o = Math.floor(e.get("height") * d20.engine.canvasZoom);
                if (r.css({
                    height: o + "px"
                }),
                d20.token_editor.$currentRadialMenu = r,
                d20.token_editor.updateRadialMenuPos(r, !0),
                t)
                    r.find(".button").addClass("open animcomplete"),
                    r.appendTo($("#editor-wrapper")),
                    r.find(".button div.hasnumber").textfill(20);
                else {
                    r.appendTo($("#editor-wrapper"));
                    var a = 0;
                    r.find(".button").each(function() {
                        var e = this;
                        setTimeout(function() {
                            $(e).addClass("open"),
                            r.find(".button div.hasnumber").textfill(20)
                        }, 30 * a),
                        a++
                    }),
                    setTimeout(function() {
                        r.find(".button").addClass("animcomplete")
                    }, 250)
                }
            }
        }
        ,
        d20.token_editor.showRadialMenu = _.debounce(d20.token_editor.do_showRadialMenu, 30),
        $("#editor").on("ischanging", function() {
            $("#radial-menu input").trigger("blur"),
            d20.token_editor.removeRadialMenu()
        }),
        $("#editor-wrapper").bind("contextmenu", function() {
            return !1
        });
        var a;
        $(document).on("mouseenter", ".markermenu", function() {
            var e = this;
            $(this).on("mouseover.statusiconhover", ".statusicon", function() {
                a = $(this).attr("data-action-type").replace("toggle_status_", "")
            }),
            $(document).on("keypress.statusnum", function(t) {
                if ("dead" !== a && currentcontexttarget && (t.which >= 48 && t.which <= 57 || t.which >= 96 && t.which <= 105)) {
                    var i = String.fromCharCode(t.which)
                      , n = "" == currentcontexttarget.model.get("statusmarkers") ? [] : currentcontexttarget.model.get("statusmarkers").split(",")
                      , r = (_.map(n, function(e) {
                        return e.split("@")[0]
                    }),
                    !1);
                    n = _.map(n, function(e) {
                        return e.split("@")[0] == a ? (r = !0,
                        a + "@" + i) : e
                    }),
                    r || ($(e).find(".statusicon[data-action-type=toggle_status_" + a + "]").addClass("active"),
                    n.push(a + "@" + i)),
                    currentcontexttarget.model.save({
                        statusmarkers: n.join(",")
                    })
                }
            })
        }),
        $(document).on("mouseleave", ".markermenu", function() {
            $(document).off("keypress.statusnum"),
            $(this).off("mouseover.statusiconhover")
        }),
        $("body").bind(mousedowntype, function(e) {
            e.which && 3 == e.which || n()
        })
    }),
    function(e) {
        e.fn.textfill = function(t) {
            return t = parseInt(t, 10),
            this.each(function() {
                var i = e("span", this)
                  , n = i.parent()
                  , r = (n.height(),
                n.width())
                  , o = parseInt(i.css("fontSize"), 10)
                  , a = r / i.width()
                  , s = o * (a - .2);
                i.css("fontSize", t > 0 && s > t ? t : s)
            })
        }
    }(jQuery);
    var d20 = d20 || {};
    d20.DicePEG = function() {
        function quote(e) {
            return '"' + e.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\x08/g, "\\b").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\f/g, "\\f").replace(/\r/g, "\\r").replace(/[\x00-\x07\x0B\x0E-\x1F\x80-\uFFFF]/g, escape) + '"'
        }
        var result = {
            parse: function(input, startRule) {
                function padLeft(e, t, i) {
                    for (var n = e, r = i - e.length, o = 0; r > o; o++)
                        n = t + n;
                    return n
                }
                function escape(e) {
                    var t, i, n = e.charCodeAt(0);
                    return 255 >= n ? (t = "x",
                    i = 2) : (t = "u",
                    i = 4),
                    "\\" + t + padLeft(n.toString(16).toUpperCase(), "0", i)
                }
                function matchFailed(e) {
                    rightmostFailuresPos > pos || (pos > rightmostFailuresPos && (rightmostFailuresPos = pos,
                    rightmostFailuresExpected = []),
                    rightmostFailuresExpected.push(e))
                }
                function parse_start() {
                    var e, t, i, n, r;
                    if (n = pos,
                    r = pos,
                    e = parse_rollExpression(),
                    null !== e) {
                        for (t = [],
                        input.length > pos ? (i = input.charAt(pos),
                        pos++) : (i = null ,
                        0 === reportFailures && matchFailed("any character")); null !== i; )
                            t.push(i),
                            input.length > pos ? (i = input.charAt(pos),
                            pos++) : (i = null ,
                            0 === reportFailures && matchFailed("any character"));
                        null !== t ? e = [e, t] : (e = null ,
                        pos = r)
                    } else
                        e = null ,
                        pos = r;
                    return null !== e && (e = function(e, t, i) {
                        return Array.isArray(t) || (t = [t]),
                        "" !== i && (i = i.join(""),
                        i.trim().length > 0 && t.push(new Comment(i))),
                        t
                    }(n, e[0], e[1])),
                    null === e && (pos = n),
                    e
                }
                function parse_rollExpression() {
                    var e, t, i, n, r;
                    return n = pos,
                    r = pos,
                    e = parse_rollExpressionPrimary(),
                    null !== e ? (t = parse_labelAwareRollOperator(),
                    null !== t ? (i = parse_rollExpression(),
                    null !== i ? e = [e, t, i] : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r),
                    null !== e && (e = function(e, t, i, n) {
                        var r = t;
                        return r = mergeExpressions(r, i),
                        r = mergeExpressions(r, n)
                    }(n, e[0], e[1], e[2])),
                    null === e && (pos = n),
                    null === e && (n = pos,
                    r = pos,
                    e = parse_rollExpressionPrimary(),
                    null !== e ? (t = parse_inlineLabelWithSpace(),
                    null !== t ? e = [e, t] : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r),
                    null !== e && (e = function(e, t, i) {
                        return mergeExpressions(t, i)
                    }(n, e[0], e[1])),
                    null === e && (pos = n),
                    null === e && (n = pos,
                    r = pos,
                    e = parse_inlineLabelWithSpace(),
                    null !== e ? (t = parse_rollExpression(),
                    null !== t ? e = [e, t] : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r),
                    null !== e && (e = function(e, t, i) {
                        return mergeExpressions(t, i)
                    }(n, e[0], e[1])),
                    null === e && (pos = n),
                    null === e && (n = pos,
                    e = parse_rollExpressionPrimary(),
                    null !== e && (e = function(e, t) {
                        return Array.isArray(t) || (t = [t]),
                        t
                    }(n, e)),
                    null === e && (pos = n)))),
                    e
                }
                function parse_rollExpressionPrimary() {
                    var e, t, i, n, r, o, a, s;
                    return o = pos,
                    a = pos,
                    e = parse_fullRoll(),
                    null !== e ? (s = pos,
                    reportFailures++,
                    t = parse_validRollSuffix(),
                    reportFailures--,
                    null !== t ? (t = "",
                    pos = s) : t = null ,
                    null !== t ? e = [e, t] : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a),
                    null !== e && (e = function(e, t) {
                        return t
                    }(o, e[0])),
                    null === e && (pos = o),
                    null === e && (o = pos,
                    a = pos,
                    e = parse_rollGroup(),
                    null !== e ? (s = pos,
                    reportFailures++,
                    t = parse_validRollSuffix(),
                    reportFailures--,
                    null !== t ? (t = "",
                    pos = s) : t = null ,
                    null !== t ? e = [e, t] : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a),
                    null !== e && (e = function(e, t) {
                        return t
                    }(o, e[0])),
                    null === e && (pos = o),
                    null === e && (o = pos,
                    e = parse_number(),
                    null !== e && (e = function(e, t) {
                        return new MathExpression(t)
                    }(o, e)),
                    null === e && (pos = o),
                    null === e && (o = pos,
                    a = pos,
                    "floor(" === input.substr(pos, 6) ? (e = "floor(",
                    pos += 6) : (e = null ,
                    0 === reportFailures && matchFailed('"floor("')),
                    null !== e ? (t = parse__(),
                    null !== t ? (i = parse_rollExpression(),
                    null !== i ? (n = parse__(),
                    null !== n ? (41 === input.charCodeAt(pos) ? (r = ")",
                    pos++) : (r = null ,
                    0 === reportFailures && matchFailed('")"')),
                    null !== r ? e = [e, t, i, n, r] : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a),
                    null !== e && (e = function(e, t) {
                        return mergeExpressions("floor(", mergeExpressions(t, ")"))
                    }(o, e[2])),
                    null === e && (pos = o),
                    null === e && (o = pos,
                    a = pos,
                    "ceil(" === input.substr(pos, 5) ? (e = "ceil(",
                    pos += 5) : (e = null ,
                    0 === reportFailures && matchFailed('"ceil("')),
                    null !== e ? (t = parse__(),
                    null !== t ? (i = parse_rollExpression(),
                    null !== i ? (n = parse__(),
                    null !== n ? (41 === input.charCodeAt(pos) ? (r = ")",
                    pos++) : (r = null ,
                    0 === reportFailures && matchFailed('")"')),
                    null !== r ? e = [e, t, i, n, r] : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a),
                    null !== e && (e = function(e, t) {
                        return mergeExpressions("ceil(", mergeExpressions(t, ")"))
                    }(o, e[2])),
                    null === e && (pos = o),
                    null === e && (o = pos,
                    a = pos,
                    "round(" === input.substr(pos, 6) ? (e = "round(",
                    pos += 6) : (e = null ,
                    0 === reportFailures && matchFailed('"round("')),
                    null !== e ? (t = parse__(),
                    null !== t ? (i = parse_rollExpression(),
                    null !== i ? (n = parse__(),
                    null !== n ? (41 === input.charCodeAt(pos) ? (r = ")",
                    pos++) : (r = null ,
                    0 === reportFailures && matchFailed('")"')),
                    null !== r ? e = [e, t, i, n, r] : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a),
                    null !== e && (e = function(e, t) {
                        return mergeExpressions("round(", mergeExpressions(t, ")"))
                    }(o, e[2])),
                    null === e && (pos = o),
                    null === e && (o = pos,
                    a = pos,
                    "abs(" === input.substr(pos, 4) ? (e = "abs(",
                    pos += 4) : (e = null ,
                    0 === reportFailures && matchFailed('"abs("')),
                    null !== e ? (t = parse__(),
                    null !== t ? (i = parse_rollExpression(),
                    null !== i ? (n = parse__(),
                    null !== n ? (41 === input.charCodeAt(pos) ? (r = ")",
                    pos++) : (r = null ,
                    0 === reportFailures && matchFailed('")"')),
                    null !== r ? e = [e, t, i, n, r] : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a),
                    null !== e && (e = function(e, t) {
                        return mergeExpressions("abs(", mergeExpressions(t, ")"))
                    }(o, e[2])),
                    null === e && (pos = o),
                    null === e && (o = pos,
                    a = pos,
                    40 === input.charCodeAt(pos) ? (e = "(",
                    pos++) : (e = null ,
                    0 === reportFailures && matchFailed('"("')),
                    null !== e ? (t = parse__(),
                    null !== t ? (i = parse_rollExpression(),
                    null !== i ? (n = parse__(),
                    null !== n ? (41 === input.charCodeAt(pos) ? (r = ")",
                    pos++) : (r = null ,
                    0 === reportFailures && matchFailed('")"')),
                    null !== r ? e = [e, t, i, n, r] : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a),
                    null !== e && (e = function(e, t) {
                        return mergeExpressions("(", mergeExpressions(t, ")"))
                    }(o, e[2])),
                    null === e && (pos = o)))))))),
                    e
                }
                function parse_validRollSuffix() {
                    var e, t;
                    return e = parse___(),
                    null === e && (e = parse_inlineLabelWithSpace(),
                    null === e && (125 === input.charCodeAt(pos) ? (e = "}",
                    pos++) : (e = null ,
                    0 === reportFailures && matchFailed('"}"')),
                    null === e && (44 === input.charCodeAt(pos) ? (e = ",",
                    pos++) : (e = null ,
                    0 === reportFailures && matchFailed('","')),
                    null === e && (41 === input.charCodeAt(pos) ? (e = ")",
                    pos++) : (e = null ,
                    0 === reportFailures && matchFailed('")"')),
                    null === e && (t = pos,
                    reportFailures++,
                    e = parse_operator(),
                    reportFailures--,
                    null !== e ? (e = "",
                    pos = t) : e = null ,
                    null === e && (t = pos,
                    reportFailures++,
                    input.length > pos ? (e = input.charAt(pos),
                    pos++) : (e = null ,
                    0 === reportFailures && matchFailed("any character")),
                    reportFailures--,
                    null === e ? e = "" : (e = null ,
                    pos = t))))))),
                    e
                }
                function parse_rollGroup() {
                    var e, t, i, n, r, o, a, s;
                    return a = pos,
                    s = pos,
                    123 === input.charCodeAt(pos) ? (e = "{",
                    pos++) : (e = null ,
                    0 === reportFailures && matchFailed('"{"')),
                    null !== e ? (t = parse__(),
                    null !== t ? (i = parse_rollGroupExpression(),
                    null !== i ? (n = parse__(),
                    null !== n ? (125 === input.charCodeAt(pos) ? (r = "}",
                    pos++) : (r = null ,
                    0 === reportFailures && matchFailed('"}"')),
                    null !== r ? (o = parse_groupMods(),
                    o = null !== o ? o : "",
                    null !== o ? e = [e, t, i, n, r, o] : (e = null ,
                    pos = s)) : (e = null ,
                    pos = s)) : (e = null ,
                    pos = s)) : (e = null ,
                    pos = s)) : (e = null ,
                    pos = s)) : (e = null ,
                    pos = s),
                    null !== e && (e = function(e, t, i) {
                        return new GroupExpression(t,i)
                    }(a, e[2], e[5])),
                    null === e && (pos = a),
                    e
                }
                function parse_rollGroupExpression() {
                    var e, t, i, n, r, o, a;
                    return o = pos,
                    a = pos,
                    e = parse_rollExpression(),
                    null === e && (e = parse_rollGroup()),
                    null !== e ? (t = parse__(),
                    null !== t ? (44 === input.charCodeAt(pos) ? (i = ",",
                    pos++) : (i = null ,
                    0 === reportFailures && matchFailed('","')),
                    null !== i ? (n = parse__(),
                    null !== n ? (r = parse_rollGroupExpression(),
                    null !== r ? e = [e, t, i, n, r] : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a),
                    null !== e && (e = function(e, t, i) {
                        return Array.isArray(t) || (t = [t]),
                        "" !== i ? [t].concat(i) : t
                    }(o, e[0], e[4])),
                    null === e && (pos = o),
                    null === e && (o = pos,
                    e = parse_rollExpression(),
                    null === e && (e = parse_rollGroup()),
                    null !== e && (e = function(e, t) {
                        return [t]
                    }(o, e)),
                    null === e && (pos = o)),
                    e
                }
                function parse_labelAwareRollOperator() {
                    var e, t, i, n, r;
                    if (n = pos,
                    r = pos,
                    e = parse_rollOperator(),
                    null !== e) {
                        for (t = [],
                        i = parse_rollOperator(),
                        null === i && (i = parse_inlineLabelWithSpace()); null !== i; )
                            t.push(i),
                            i = parse_rollOperator(),
                            null === i && (i = parse_inlineLabelWithSpace());
                        null !== t ? e = [e, t] : (e = null ,
                        pos = r)
                    } else
                        e = null ,
                        pos = r;
                    return null !== e && (e = function(e, t, i) {
                        for (var n = t, r = 0; r < i.length; r++)
                            n = mergeExpressions(n, i[r]);
                        return n
                    }(n, e[0], e[1])),
                    null === e && (pos = n),
                    null === e && (n = pos,
                    r = pos,
                    e = parse_inlineLabelWithSpace(),
                    null !== e ? (t = parse_labelAwareRollOperator(),
                    null !== t ? e = [e, t] : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r),
                    null !== e && (e = function(e, t, i) {
                        return mergeExpressions(t, i)
                    }(n, e[0], e[1])),
                    null === e && (pos = n)),
                    e
                }
                function parse_rollOperator() {
                    var e, t, i, n, r, o, a, s, l;
                    return s = pos,
                    l = pos,
                    e = parse__(),
                    null !== e ? (t = parse_operator(),
                    null !== t ? (i = parse__(),
                    null !== i ? (n = parse_mathExpressionPrimary(),
                    null !== n ? (r = parse__(),
                    null !== r ? (o = parse_rollOperator(),
                    null !== o ? (a = parse__(),
                    null !== a ? e = [e, t, i, n, r, o, a] : (e = null ,
                    pos = l)) : (e = null ,
                    pos = l)) : (e = null ,
                    pos = l)) : (e = null ,
                    pos = l)) : (e = null ,
                    pos = l)) : (e = null ,
                    pos = l)) : (e = null ,
                    pos = l),
                    null !== e && (e = function(e, t, i, n) {
                        return t + i + n
                    }(s, e[1], e[3], e[5])),
                    null === e && (pos = s),
                    null === e && (s = pos,
                    l = pos,
                    e = parse__(),
                    null !== e ? (t = parse_operator(),
                    null !== t ? (i = parse__(),
                    null !== i ? e = [e, t, i] : (e = null ,
                    pos = l)) : (e = null ,
                    pos = l)) : (e = null ,
                    pos = l),
                    null !== e && (e = function(e, t) {
                        return t
                    }(s, e[1])),
                    null === e && (pos = s)),
                    e
                }
                function parse_fullRoll() {
                    var e, t, i, n, r;
                    return n = pos,
                    r = pos,
                    e = parse_coreRoll(),
                    null !== e ? (t = parse_rollMods(),
                    t = null !== t ? t : "",
                    null !== t ? e = [e, t] : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r),
                    null !== e && (e = function(e, t, i) {
                        return "" !== i && (t.mods = i),
                        t
                    }(n, e[0], e[1])),
                    null === e && (pos = n),
                    null === e && (n = pos,
                    r = pos,
                    e = parse_numberOfDice(),
                    null !== e ? ("t" === input.substr(pos, 1).toLowerCase() ? (t = input.substr(pos, 1),
                    pos++) : (t = null ,
                    0 === reportFailures && matchFailed('"t"')),
                    null !== t ? (i = parse_inlineLabel(),
                    null !== i ? e = [e, t, i] : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r),
                    null !== e && (e = function(e, t, i) {
                        return new TableRollExpression(t,i.text)
                    }(n, e[0], e[2])),
                    null === e && (pos = n)),
                    e
                }
                function parse_coreRoll() {
                    var e, t, i, n, r;
                    return n = pos,
                    r = pos,
                    e = parse_numberOfDice(),
                    null !== e ? ("d" === input.substr(pos, 1).toLowerCase() ? (t = input.substr(pos, 1),
                    pos++) : (t = null ,
                    0 === reportFailures && matchFailed('"d"')),
                    null !== t ? ("f" === input.substr(pos, 1).toLowerCase() ? (i = input.substr(pos, 1),
                    pos++) : (i = null ,
                    0 === reportFailures && matchFailed('"f"')),
                    null !== i ? e = [e, t, i] : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r),
                    null !== e && (e = function(e, t) {
                        return new FateRollExpression(t)
                    }(n, e[0])),
                    null === e && (pos = n),
                    null === e && (n = pos,
                    r = pos,
                    e = parse_numberOfDice(),
                    null !== e ? ("d" === input.substr(pos, 1).toLowerCase() ? (t = input.substr(pos, 1),
                    pos++) : (t = null ,
                    0 === reportFailures && matchFailed('"d"')),
                    null !== t ? (i = parse_numberOfSides(),
                    null !== i ? e = [e, t, i] : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r),
                    null !== e && (e = function(e, t, i) {
                        return new RollExpression(t,i)
                    }(n, e[0], e[2])),
                    null === e && (pos = n)),
                    e
                }
                function parse_numberOfDice() {
                    var result0, result1, result2, result3, result4, pos0, pos1;
                    return result0 = parse_integer(),
                    null === result0 && (pos0 = pos,
                    pos1 = pos,
                    40 === input.charCodeAt(pos) ? (result0 = "(",
                    pos++) : (result0 = null ,
                    0 === reportFailures && matchFailed('"("')),
                    null !== result0 ? (result1 = parse__(),
                    null !== result1 ? (result2 = parse_mathExpression(),
                    null !== result2 ? (result3 = parse__(),
                    null !== result3 ? (41 === input.charCodeAt(pos) ? (result4 = ")",
                    pos++) : (result4 = null ,
                    0 === reportFailures && matchFailed('")"')),
                    null !== result4 ? result0 = [result0, result1, result2, result3, result4] : (result0 = null ,
                    pos = pos1)) : (result0 = null ,
                    pos = pos1)) : (result0 = null ,
                    pos = pos1)) : (result0 = null ,
                    pos = pos1)) : (result0 = null ,
                    pos = pos1),
                    null !== result0 && (result0 = function(offset, expr) {
                        return Math.round(eval("(" + expr + ")"))
                    }(pos0, result0[2])),
                    null === result0 && (pos = pos0),
                    null === result0 && (pos0 = pos,
                    result0 = "",
                    null !== result0 && (result0 = function() {
                        return 1
                    }(pos0)),
                    null === result0 && (pos = pos0))),
                    result0
                }
                function parse_numberOfSides() {
                    var result0, result1, result2, result3, result4, pos0, pos1;
                    return result0 = parse_integer(),
                    null === result0 && (pos0 = pos,
                    pos1 = pos,
                    40 === input.charCodeAt(pos) ? (result0 = "(",
                    pos++) : (result0 = null ,
                    0 === reportFailures && matchFailed('"("')),
                    null !== result0 ? (result1 = parse__(),
                    null !== result1 ? (result2 = parse_mathExpression(),
                    null !== result2 ? (result3 = parse__(),
                    null !== result3 ? (41 === input.charCodeAt(pos) ? (result4 = ")",
                    pos++) : (result4 = null ,
                    0 === reportFailures && matchFailed('")"')),
                    null !== result4 ? result0 = [result0, result1, result2, result3, result4] : (result0 = null ,
                    pos = pos1)) : (result0 = null ,
                    pos = pos1)) : (result0 = null ,
                    pos = pos1)) : (result0 = null ,
                    pos = pos1)) : (result0 = null ,
                    pos = pos1),
                    null !== result0 && (result0 = function(offset, expr) {
                        return Math.round(eval("(" + expr + ")"))
                    }(pos0, result0[2])),
                    null === result0 && (pos = pos0),
                    null === result0 && (pos0 = pos,
                    "f" === input.substr(pos, 1).toLowerCase() ? (result0 = input.substr(pos, 1),
                    pos++) : (result0 = null ,
                    0 === reportFailures && matchFailed('"f"')),
                    null !== result0 && (result0 = function() {
                        return "F"
                    }(pos0)),
                    null === result0 && (pos = pos0))),
                    result0
                }
                function parse_groupMods() {
                    var e, t, i, n, r;
                    if (n = pos,
                    r = pos,
                    e = parse_keepMod(),
                    null === e && (e = parse_dropMod(),
                    null === e && (e = parse_multipleMod(),
                    null === e && (e = parse_successMod()))),
                    null !== e) {
                        for (t = [],
                        i = parse_groupMods(); null !== i; )
                            t.push(i),
                            i = parse_groupMods();
                        null !== t ? e = [e, t] : (e = null ,
                        pos = r)
                    } else
                        e = null ,
                        pos = r;
                    return null !== e && (e = function(e, t, i) {
                        return processMods(t, i)
                    }(n, e[0], e[1])),
                    null === e && (pos = n),
                    e
                }
                function parse_rollMods() {
                    var e, t, i, n, r;
                    if (n = pos,
                    r = pos,
                    e = parse_compoundingMod(),
                    null === e && (e = parse_penetratingMod(),
                    null === e && (e = parse_explodingMod(),
                    null === e && (e = parse_keepMod(),
                    null === e && (e = parse_dropMod(),
                    null === e && (e = parse_rerollOnceMod(),
                    null === e && (e = parse_rerollMod(),
                    null === e && (e = parse_customCritMod(),
                    null === e && (e = parse_customFumbleMod(),
                    null === e && (e = parse_sortMod(),
                    null === e && (e = parse_successMod())))))))))),
                    null !== e) {
                        for (t = [],
                        i = parse_rollMods(); null !== i; )
                            t.push(i),
                            i = parse_rollMods();
                        null !== t ? e = [e, t] : (e = null ,
                        pos = r)
                    } else
                        e = null ,
                        pos = r;
                    return null !== e && (e = function(e, t, i) {
                        return processMods(t, i)
                    }(n, e[0], e[1])),
                    null === e && (pos = n),
                    e
                }
                function parse_explodingMod() {
                    var e, t, i, n;
                    return i = pos,
                    n = pos,
                    33 === input.charCodeAt(pos) ? (e = "!",
                    pos++) : (e = null ,
                    0 === reportFailures && matchFailed('"!"')),
                    null !== e ? (t = parse_comparisonPoint(),
                    t = null !== t ? t : "",
                    null !== t ? e = [e, t] : (e = null ,
                    pos = n)) : (e = null ,
                    pos = n),
                    null !== e && (e = function(e, t) {
                        return {
                            exploding: t
                        }
                    }(i, e[1])),
                    null === e && (pos = i),
                    e
                }
                function parse_compoundingMod() {
                    var e, t, i, n;
                    return i = pos,
                    n = pos,
                    "!!" === input.substr(pos, 2) ? (e = "!!",
                    pos += 2) : (e = null ,
                    0 === reportFailures && matchFailed('"!!"')),
                    null !== e ? (t = parse_comparisonPoint(),
                    t = null !== t ? t : "",
                    null !== t ? e = [e, t] : (e = null ,
                    pos = n)) : (e = null ,
                    pos = n),
                    null !== e && (e = function(e, t) {
                        return {
                            compounding: t
                        }
                    }(i, e[1])),
                    null === e && (pos = i),
                    e
                }
                function parse_penetratingMod() {
                    var e, t, i, n, r;
                    return n = pos,
                    r = pos,
                    33 === input.charCodeAt(pos) ? (e = "!",
                    pos++) : (e = null ,
                    0 === reportFailures && matchFailed('"!"')),
                    null !== e ? ("p" === input.substr(pos, 1).toLowerCase() ? (t = input.substr(pos, 1),
                    pos++) : (t = null ,
                    0 === reportFailures && matchFailed('"p"')),
                    null !== t ? (i = parse_comparisonPoint(),
                    i = null !== i ? i : "",
                    null !== i ? e = [e, t, i] : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r),
                    null !== e && (e = function(e, t) {
                        return {
                            penetrating: t
                        }
                    }(n, e[2])),
                    null === e && (pos = n),
                    e
                }
                function parse_keepMod() {
                    var e, t, i, n, r;
                    return n = pos,
                    r = pos,
                    "k" === input.substr(pos, 1).toLowerCase() ? (e = input.substr(pos, 1),
                    pos++) : (e = null ,
                    0 === reportFailures && matchFailed('"k"')),
                    null !== e ? (/^['h'|'l']/i.test(input.charAt(pos)) ? (t = input.charAt(pos),
                    pos++) : (t = null ,
                    0 === reportFailures && matchFailed("['h'|'l']i")),
                    t = null !== t ? t : "",
                    null !== t ? (i = parse_integer(),
                    null !== i ? e = [e, t, i] : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r),
                    null !== e && (e = function(e, t, i) {
                        return {
                            keep: {
                                end: t.toLowerCase() || "h",
                                count: i
                            }
                        }
                    }(n, e[1], e[2])),
                    null === e && (pos = n),
                    e
                }
                function parse_dropMod() {
                    var e, t, i, n, r;
                    return n = pos,
                    r = pos,
                    "d" === input.substr(pos, 1).toLowerCase() ? (e = input.substr(pos, 1),
                    pos++) : (e = null ,
                    0 === reportFailures && matchFailed('"d"')),
                    null !== e ? (/^['h'|'l']/i.test(input.charAt(pos)) ? (t = input.charAt(pos),
                    pos++) : (t = null ,
                    0 === reportFailures && matchFailed("['h'|'l']i")),
                    t = null !== t ? t : "",
                    null !== t ? (i = parse_integer(),
                    null !== i ? e = [e, t, i] : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r),
                    null !== e && (e = function(e, t, i) {
                        return {
                            drop: {
                                end: t.toLowerCase() || "l",
                                count: i
                            }
                        }
                    }(n, e[1], e[2])),
                    null === e && (pos = n),
                    e
                }
                function parse_customCritMod() {
                    var e, t, i, n, r;
                    return n = pos,
                    r = pos,
                    "cs" === input.substr(pos, 2).toLowerCase() ? (e = input.substr(pos, 2),
                    pos += 2) : (e = null ,
                    0 === reportFailures && matchFailed('"cs"')),
                    null !== e ? (t = parse_comparisonPoint(),
                    t = null !== t ? t : "",
                    null !== t ? (i = parse_customCritMod(),
                    i = null !== i ? i : "",
                    null !== i ? e = [e, t, i] : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r),
                    null !== e && (e = function(e, t, i) {
                        var n = {
                            customCrit: "" !== t ? [t] : [{}]
                        };
                        return "" !== i && (n.customCrit = n.customCrit.concat(i.customCrit)),
                        n
                    }(n, e[1], e[2])),
                    null === e && (pos = n),
                    e
                }
                function parse_customFumbleMod() {
                    var e, t, i, n, r;
                    return n = pos,
                    r = pos,
                    "cf" === input.substr(pos, 2).toLowerCase() ? (e = input.substr(pos, 2),
                    pos += 2) : (e = null ,
                    0 === reportFailures && matchFailed('"cf"')),
                    null !== e ? (t = parse_comparisonPoint(),
                    t = null !== t ? t : "",
                    null !== t ? (i = parse_customFumbleMod(),
                    i = null !== i ? i : "",
                    null !== i ? e = [e, t, i] : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r),
                    null !== e && (e = function(e, t, i) {
                        var n = {
                            customFumble: "" !== t ? [t] : [{}]
                        };
                        return "" !== i && (n.customFumble = n.customFumble.concat(i.customFumble)),
                        n
                    }(n, e[1], e[2])),
                    null === e && (pos = n),
                    e
                }
                function parse_rerollMod() {
                    var e, t, i, n, r;
                    return n = pos,
                    r = pos,
                    "r" === input.substr(pos, 1).toLowerCase() ? (e = input.substr(pos, 1),
                    pos++) : (e = null ,
                    0 === reportFailures && matchFailed('"r"')),
                    null !== e ? (t = parse_comparisonPoint(),
                    t = null !== t ? t : "",
                    null !== t ? (i = parse_rerollMod(),
                    i = null !== i ? i : "",
                    null !== i ? e = [e, t, i] : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r),
                    null !== e && (e = function(e, t, i) {
                        var n = {
                            reroll: "" !== t ? [t] : [{}]
                        };
                        return "" !== i && (n.reroll = n.reroll.concat(i.reroll)),
                        n
                    }(n, e[1], e[2])),
                    null === e && (pos = n),
                    e
                }
                function parse_rerollOnceMod() {
                    var e, t, i, n, r;
                    return n = pos,
                    r = pos,
                    "ro" === input.substr(pos, 2).toLowerCase() ? (e = input.substr(pos, 2),
                    pos += 2) : (e = null ,
                    0 === reportFailures && matchFailed('"ro"')),
                    null !== e ? (t = parse_comparisonPoint(),
                    t = null !== t ? t : "",
                    null !== t ? (i = parse_rerollMod(),
                    i = null !== i ? i : "",
                    null !== i ? e = [e, t, i] : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r),
                    null !== e && (e = function(e, t, i) {
                        var n = {
                            reroll: "" !== t ? [t] : [{}]
                        };
                        return "" !== i && (n.reroll = n.reroll.concat(i.reroll)),
                        n.reroll && n.reroll[0] && (n.reroll[0].maxrerolls = 1),
                        n
                    }(n, e[1], e[2])),
                    null === e && (pos = n),
                    e
                }
                function parse_sortMod() {
                    var e, t, i, n;
                    return i = pos,
                    n = pos,
                    "s" === input.substr(pos, 1).toLowerCase() ? (e = input.substr(pos, 1),
                    pos++) : (e = null ,
                    0 === reportFailures && matchFailed('"s"')),
                    null !== e ? (/^['a'|'d']/i.test(input.charAt(pos)) ? (t = input.charAt(pos),
                    pos++) : (t = null ,
                    0 === reportFailures && matchFailed("['a'|'d']i")),
                    t = null !== t ? t : "",
                    null !== t ? e = [e, t] : (e = null ,
                    pos = n)) : (e = null ,
                    pos = n),
                    null !== e && (e = function(e, t) {
                        return {
                            sort: {
                                order: t.toLowerCase() || "a"
                            }
                        }
                    }(i, e[1])),
                    null === e && (pos = i),
                    e
                }
                function parse_floorMod() {
                    var e, t;
                    return t = pos,
                    "flr" === input.substr(pos, 3) ? (e = "flr",
                    pos += 3) : (e = null ,
                    0 === reportFailures && matchFailed('"flr"')),
                    null !== e && (e = function() {
                        return {
                            round: {
                                type: "floor"
                            }
                        }
                    }(t)),
                    null === e && (pos = t),
                    e
                }
                function parse_multipleMod() {
                    var e, t, i, n;
                    return i = pos,
                    n = pos,
                    "x" === input.substr(pos, 1).toLowerCase() ? (e = input.substr(pos, 1),
                    pos++) : (e = null ,
                    0 === reportFailures && matchFailed('"x"')),
                    null !== e ? (t = parse_integer(),
                    null !== t ? e = [e, t] : (e = null ,
                    pos = n)) : (e = null ,
                    pos = n),
                    null !== e && (e = function(e, t) {
                        return {
                            multiple: {
                                times: t
                            }
                        }
                    }(i, e[1])),
                    null === e && (pos = i),
                    e
                }
                function parse_successMod() {
                    var e, t, i, n, r, o;
                    return n = pos,
                    r = pos,
                    e = parse_comparisonPoint(),
                    null !== e ? (o = pos,
                    "f" === input.substr(pos, 1).toLowerCase() ? (t = input.substr(pos, 1),
                    pos++) : (t = null ,
                    0 === reportFailures && matchFailed('"f"')),
                    null !== t ? (i = parse_comparisonPoint(),
                    null !== i ? t = [t, i] : (t = null ,
                    pos = o)) : (t = null ,
                    pos = o),
                    t = null !== t ? t : "",
                    null !== t ? e = [e, t] : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r),
                    null !== e && (e = function(e, t, i) {
                        var n = {
                            success: t
                        };
                        return "" !== i && (n.failure = i[1]),
                        n
                    }(n, e[0], e[1])),
                    null === e && (pos = n),
                    e
                }
                function parse_comparisonPoint() {
                    var e, t, i, n;
                    return i = pos,
                    n = pos,
                    e = parse_comparison(),
                    e = null !== e ? e : "",
                    null !== e ? (t = parse_integer(),
                    null !== t ? e = [e, t] : (e = null ,
                    pos = n)) : (e = null ,
                    pos = n),
                    null !== e && (e = function(e, t, i) {
                        return {
                            comp: ("" == t ? "=" : t) + "=",
                            point: i
                        }
                    }(i, e[0], e[1])),
                    null === e && (pos = i),
                    e
                }
                function parse_comparison() {
                    var e;
                    return /^[>|<|=]/.test(input.charAt(pos)) ? (e = input.charAt(pos),
                    pos++) : (e = null ,
                    0 === reportFailures && matchFailed("[>|<|=]")),
                    e
                }
                function parse_mathExpression() {
                    var e, t, i, n, r, o, a, s, l;
                    return s = pos,
                    l = pos,
                    e = parse__(),
                    null !== e ? (t = parse_mathExpressionPrimary(),
                    null !== t ? (i = parse__(),
                    null !== i ? (n = parse_operator(),
                    null !== n ? (r = parse__(),
                    null !== r ? (o = parse_mathExpression(),
                    null !== o ? (a = parse__(),
                    null !== a ? e = [e, t, i, n, r, o, a] : (e = null ,
                    pos = l)) : (e = null ,
                    pos = l)) : (e = null ,
                    pos = l)) : (e = null ,
                    pos = l)) : (e = null ,
                    pos = l)) : (e = null ,
                    pos = l)) : (e = null ,
                    pos = l),
                    null !== e && (e = function(e, t, i, n) {
                        return t + i + n
                    }(s, e[1], e[3], e[5])),
                    null === e && (pos = s),
                    null === e && (s = pos,
                    l = pos,
                    e = parse__(),
                    null !== e ? (t = parse_mathExpressionPrimary(),
                    null !== t ? (i = parse__(),
                    null !== i ? e = [e, t, i] : (e = null ,
                    pos = l)) : (e = null ,
                    pos = l)) : (e = null ,
                    pos = l),
                    null !== e && (e = function(e, t) {
                        return t
                    }(s, e[1])),
                    null === e && (pos = s)),
                    e
                }
                function parse_mathExpressionPrimary() {
                    var e, t, i, n, r, o, a;
                    return o = pos,
                    a = pos,
                    e = parse__(),
                    null !== e ? (t = parse_number(),
                    null !== t ? (i = parse__(),
                    null !== i ? e = [e, t, i] : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a),
                    null !== e && (e = function(e, t) {
                        return t
                    }(o, e[1])),
                    null === e && (pos = o),
                    null === e && (o = pos,
                    a = pos,
                    40 === input.charCodeAt(pos) ? (e = "(",
                    pos++) : (e = null ,
                    0 === reportFailures && matchFailed('"("')),
                    null !== e ? (t = parse__(),
                    null !== t ? (i = parse_mathExpression(),
                    null !== i ? (n = parse__(),
                    null !== n ? (41 === input.charCodeAt(pos) ? (r = ")",
                    pos++) : (r = null ,
                    0 === reportFailures && matchFailed('")"')),
                    null !== r ? e = [e, t, i, n, r] : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a),
                    null !== e && (e = function(e, t) {
                        return "(" + t + ")"
                    }(o, e[2])),
                    null === e && (pos = o)),
                    e
                }
                function parse_inlineLabelWithSpace() {
                    var e, t, i, n, r;
                    return n = pos,
                    r = pos,
                    e = parse__(),
                    null !== e ? (t = parse_inlineLabel(),
                    null !== t ? (i = parse__(),
                    null !== i ? e = [e, t, i] : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r)) : (e = null ,
                    pos = r),
                    null !== e && (e = function(e, t) {
                        return t
                    }(n, e[1])),
                    null === e && (pos = n),
                    e
                }
                function parse_inlineLabel() {
                    var e, t, i, n, r;
                    if (n = pos,
                    r = pos,
                    91 === input.charCodeAt(pos) ? (e = "[",
                    pos++) : (e = null ,
                    0 === reportFailures && matchFailed('"["')),
                    null !== e) {
                        for (t = [],
                        /^[^\]]/.test(input.charAt(pos)) ? (i = input.charAt(pos),
                        pos++) : (i = null ,
                        0 === reportFailures && matchFailed("[^\\]]")); null !== i; )
                            t.push(i),
                            /^[^\]]/.test(input.charAt(pos)) ? (i = input.charAt(pos),
                            pos++) : (i = null ,
                            0 === reportFailures && matchFailed("[^\\]]"));
                        null !== t ? (93 === input.charCodeAt(pos) ? (i = "]",
                        pos++) : (i = null ,
                        0 === reportFailures && matchFailed('"]"')),
                        null !== i ? e = [e, t, i] : (e = null ,
                        pos = r)) : (e = null ,
                        pos = r)
                    } else
                        e = null ,
                        pos = r;
                    return null !== e && (e = function(e, t) {
                        return new Label(t.join(""))
                    }(n, e[1])),
                    null === e && (pos = n),
                    e
                }
                function parse_operator() {
                    var e;
                    return /^[+|\-|*|\/|%]/.test(input.charAt(pos)) ? (e = input.charAt(pos),
                    pos++) : (e = null ,
                    0 === reportFailures && matchFailed("[+|\\-|*|\\/|%]")),
                    e
                }
                function parse_number() {
                    var e;
                    return e = parse_exponent(),
                    null === e && (e = parse_float(),
                    null === e && (e = parse_signedInteger())),
                    e
                }
                function parse_integer() {
                    var e, t, i;
                    if (i = pos,
                    /^[0-9]/.test(input.charAt(pos)) ? (t = input.charAt(pos),
                    pos++) : (t = null ,
                    0 === reportFailures && matchFailed("[0-9]")),
                    null !== t)
                        for (e = []; null !== t; )
                            e.push(t),
                            /^[0-9]/.test(input.charAt(pos)) ? (t = input.charAt(pos),
                            pos++) : (t = null ,
                            0 === reportFailures && matchFailed("[0-9]"));
                    else
                        e = null ;
                    return null !== e && (e = function(e, t) {
                        return parseInt(t.join(""), 10)
                    }(i, e)),
                    null === e && (pos = i),
                    e
                }
                function parse_signedInteger() {
                    var e, t, i, n;
                    return i = pos,
                    n = pos,
                    /^[+|\-]/.test(input.charAt(pos)) ? (e = input.charAt(pos),
                    pos++) : (e = null ,
                    0 === reportFailures && matchFailed("[+|\\-]")),
                    e = null !== e ? e : "",
                    null !== e ? (t = parse_integer(),
                    null !== t ? e = [e, t] : (e = null ,
                    pos = n)) : (e = null ,
                    pos = n),
                    null !== e && (e = function(e, t, i) {
                        return "-" == t ? -1 * i : i
                    }(i, e[0], e[1])),
                    null === e && (pos = i),
                    e
                }
                function parse_float() {
                    var e, t, i, n, r, o;
                    if (r = pos,
                    o = pos,
                    e = parse_signedInteger(),
                    e = null !== e ? e : "",
                    null !== e)
                        if (46 === input.charCodeAt(pos) ? (t = ".",
                        pos++) : (t = null ,
                        0 === reportFailures && matchFailed('"."')),
                        null !== t) {
                            if (/^[0-9]/.test(input.charAt(pos)) ? (n = input.charAt(pos),
                            pos++) : (n = null ,
                            0 === reportFailures && matchFailed("[0-9]")),
                            null !== n)
                                for (i = []; null !== n; )
                                    i.push(n),
                                    /^[0-9]/.test(input.charAt(pos)) ? (n = input.charAt(pos),
                                    pos++) : (n = null ,
                                    0 === reportFailures && matchFailed("[0-9]"));
                            else
                                i = null ;
                            null !== i ? e = [e, t, i] : (e = null ,
                            pos = o)
                        } else
                            e = null ,
                            pos = o;
                    else
                        e = null ,
                        pos = o;
                    return null !== e && (e = function(e, t, i) {
                        return 0 === t && 0 > 1 / t ? -1 * parseFloat(t + "." + i.join("")) : parseFloat(t + "." + i.join(""))
                    }(r, e[0], e[2])),
                    null === e && (pos = r),
                    e
                }
                function parse_exponent() {
                    var e, t, i, n, r, o, a;
                    return o = pos,
                    a = pos,
                    e = parse_signedInteger(),
                    e = null !== e ? e : "",
                    null !== e ? (46 === input.charCodeAt(pos) ? (t = ".",
                    pos++) : (t = null ,
                    0 === reportFailures && matchFailed('"."')),
                    null !== t ? (i = parse_integer(),
                    null !== i ? (101 === input.charCodeAt(pos) ? (n = "e",
                    pos++) : (n = null ,
                    0 === reportFailures && matchFailed('"e"')),
                    null !== n ? (r = parse_signedInteger(),
                    null !== r ? e = [e, t, i, n, r] : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a),
                    null !== e && (e = function(e, t, i, n) {
                        return parseFloat(t + "." + i + "e" + n)
                    }(o, e[0], e[2], e[4])),
                    null === e && (pos = o),
                    null === e && (o = pos,
                    a = pos,
                    e = parse_signedInteger(),
                    null !== e ? (101 === input.charCodeAt(pos) ? (t = "e",
                    pos++) : (t = null ,
                    0 === reportFailures && matchFailed('"e"')),
                    null !== t ? (i = parse_signedInteger(),
                    null !== i ? e = [e, t, i] : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a)) : (e = null ,
                    pos = a),
                    null !== e && (e = function(e, t, i) {
                        return parseFloat(t + "e" + i)
                    }(o, e[0], e[2])),
                    null === e && (pos = o)),
                    e
                }
                function parse__() {
                    var e, t, i;
                    for (i = pos,
                    e = [],
                    /^[ |\t]/.test(input.charAt(pos)) ? (t = input.charAt(pos),
                    pos++) : (t = null ,
                    0 === reportFailures && matchFailed("[ |\\t]")); null !== t; )
                        e.push(t),
                        /^[ |\t]/.test(input.charAt(pos)) ? (t = input.charAt(pos),
                        pos++) : (t = null ,
                        0 === reportFailures && matchFailed("[ |\\t]"));
                    return null !== e && (e = function(e, t) {
                        return t.join("")
                    }(i, e)),
                    null === e && (pos = i),
                    e
                }
                function parse___() {
                    var e, t, i;
                    if (i = pos,
                    /^[ |\t]/.test(input.charAt(pos)) ? (t = input.charAt(pos),
                    pos++) : (t = null ,
                    0 === reportFailures && matchFailed("[ |\\t]")),
                    null !== t)
                        for (e = []; null !== t; )
                            e.push(t),
                            /^[ |\t]/.test(input.charAt(pos)) ? (t = input.charAt(pos),
                            pos++) : (t = null ,
                            0 === reportFailures && matchFailed("[ |\\t]"));
                    else
                        e = null ;
                    return null !== e && (e = function(e, t) {
                        return t.join("")
                    }(i, e)),
                    null === e && (pos = i),
                    e
                }
                function cleanupExpected(e) {
                    e.sort();
                    for (var t = null , i = [], n = 0; n < e.length; n++)
                        e[n] !== t && (i.push(e[n]),
                        t = e[n]);
                    return i
                }
                function computeErrorPosition() {
                    for (var e = 1, t = 1, i = !1, n = 0; n < Math.max(pos, rightmostFailuresPos); n++) {
                        var r = input.charAt(n);
                        "\n" === r ? (i || e++,
                        t = 1,
                        i = !1) : "\r" === r || "\u2028" === r || "\u2029" === r ? (e++,
                        t = 1,
                        i = !0) : (t++,
                        i = !1)
                    }
                    return {
                        line: e,
                        column: t
                    }
                }
                function log(e) {
                    console.log(e)
                }
                function MathExpression(e) {
                    this.type = d20.dice.TYPE_MATH_EXPR,
                    this.expr = void 0 != e ? e : ""
                }
                function RollExpression(e, t) {
                    this.type = d20.dice.TYPE_ROLL_EXPR,
                    this.dice = e,
                    this.sides = t,
                    this.mods = {}
                }
                function FateRollExpression(e) {
                    this.type = d20.dice.TYPE_ROLL_EXPR,
                    this.dice = e,
                    this.fate = !0,
                    this.mods = {}
                }
                function TableRollExpression(e, t) {
                    this.type = d20.dice.TYPE_ROLL_EXPR,
                    this.dice = e,
                    this.table = t,
                    this.mods = {}
                }
                function GroupExpression(e, t) {
                    this.type = d20.dice.TYPE_GROUP_EXPR,
                    this.rolls = e,
                    this.mods = t || {}
                }
                function Label(e) {
                    this.type = d20.dice.TYPE_LABEL,
                    this.text = e
                }
                function Comment(e) {
                    this.type = d20.dice.TYPE_COMMENT,
                    this.text = e
                }
                function mergeExpressions(e, t) {
                    if ("string" == typeof e) {
                        if (0 == e.length)
                            return t;
                        e = new MathExpression(e)
                    }
                    if ("string" == typeof t) {
                        if (0 == t.length)
                            return e;
                        t = new MathExpression(t)
                    }
                    if (Array.isArray(e) && Array.isArray(t)) {
                        if (e[e.length - 1].type == d20.dice.TYPE_MATH_EXPR && t[0].type == d20.dice.TYPE_MATH_EXPR) {
                            var i = e.pop();
                            t[0].expr = i.expr + t[0].expr
                        }
                        return e.concat(t)
                    }
                    return Array.isArray(e) ? (e[e.length - 1].type == d20.dice.TYPE_MATH_EXPR && t.type == d20.dice.TYPE_MATH_EXPR ? e[e.length - 1].expr += t.expr : e.push(t),
                    e) : Array.isArray(t) ? (t[0].type == d20.dice.TYPE_MATH_EXPR && e.type == d20.dice.TYPE_MATH_EXPR ? t[0].expr = e.expr + t[0].expr : t.unshift(e),
                    t) : e.type == d20.dice.TYPE_MATH_EXPR && t.type == d20.dice.TYPE_MATH_EXPR ? (e.expr += t.expr,
                    e) : [e, t]
                }
                function processMods(e, t) {
                    var i = e;
                    if (t.length > 0)
                        for (var n in t[0]) {
                            if (void 0 != i[n])
                                throw {
                                    message: "'" + n + "' roll modifier can only be specified once"
                                };
                            i[n] = t[0][n]
                        }
                    return i
                }
                var parseFunctions = {
                    start: parse_start,
                    rollExpression: parse_rollExpression,
                    rollExpressionPrimary: parse_rollExpressionPrimary,
                    validRollSuffix: parse_validRollSuffix,
                    rollGroup: parse_rollGroup,
                    rollGroupExpression: parse_rollGroupExpression,
                    labelAwareRollOperator: parse_labelAwareRollOperator,
                    rollOperator: parse_rollOperator,
                    fullRoll: parse_fullRoll,
                    coreRoll: parse_coreRoll,
                    numberOfDice: parse_numberOfDice,
                    numberOfSides: parse_numberOfSides,
                    groupMods: parse_groupMods,
                    rollMods: parse_rollMods,
                    explodingMod: parse_explodingMod,
                    compoundingMod: parse_compoundingMod,
                    penetratingMod: parse_penetratingMod,
                    keepMod: parse_keepMod,
                    dropMod: parse_dropMod,
                    customCritMod: parse_customCritMod,
                    customFumbleMod: parse_customFumbleMod,
                    rerollMod: parse_rerollMod,
                    rerollOnceMod: parse_rerollOnceMod,
                    sortMod: parse_sortMod,
                    floorMod: parse_floorMod,
                    multipleMod: parse_multipleMod,
                    successMod: parse_successMod,
                    comparisonPoint: parse_comparisonPoint,
                    comparison: parse_comparison,
                    mathExpression: parse_mathExpression,
                    mathExpressionPrimary: parse_mathExpressionPrimary,
                    inlineLabelWithSpace: parse_inlineLabelWithSpace,
                    inlineLabel: parse_inlineLabel,
                    operator: parse_operator,
                    number: parse_number,
                    integer: parse_integer,
                    signedInteger: parse_signedInteger,
                    "float": parse_float,
                    exponent: parse_exponent,
                    _: parse__,
                    __: parse___
                };
                if (void 0 !== startRule) {
                    if (void 0 === parseFunctions[startRule])
                        throw new Error("Invalid rule name: " + quote(startRule) + ".")
                } else
                    startRule = "start";
                var pos = 0
                  , reportFailures = 0
                  , rightmostFailuresPos = 0
                  , rightmostFailuresExpected = []
                  , d20 = "undefined" != typeof window && void 0 !== window.d20 ? window.d20 : {};
                void 0 == d20.dice && (d20.dice = d20.dice || {},
                d20.dice.TYPE_MATH_EXPR = "M",
                d20.dice.TYPE_ROLL_EXPR = "R",
                d20.dice.TYPE_GROUP_EXPR = "G",
                d20.dice.TYPE_LABEL = "L",
                d20.dice.TYPE_COMMENT = "C",
                d20.dice.TYPE_VALIDATED_ROLLS = "V");
                var result = parseFunctions[startRule]();
                if (null === result || pos !== input.length) {
                    var offset = Math.max(pos, rightmostFailuresPos)
                      , found = offset < input.length ? input.charAt(offset) : null
                      , errorPosition = computeErrorPosition();
                    throw new this.SyntaxError(cleanupExpected(rightmostFailuresExpected),found,offset,errorPosition.line,errorPosition.column)
                }
                return result
            },
            toSource: function() {
                return this._source
            }
        };
        return result.SyntaxError = function(e, t, i, n, r) {
            function o(e, t) {
                var i, n;
                switch (e.length) {
                case 0:
                    i = "end of input";
                    break;
                case 1:
                    i = e[0];
                    break;
                default:
                    i = e.slice(0, e.length - 1).join(", ") + " or " + e[e.length - 1]
                }
                return n = t ? quote(t) : "end of input",
                "Expected " + i + " but " + n + " found."
            }
            this.name = "SyntaxError",
            this.expected = e,
            this.found = t,
            this.message = o(e, t),
            this.offset = i,
            this.line = n,
            this.column = r
        }
        ,
        result.SyntaxError.prototype = Error.prototype,
        result
    }(),
    d20.dice_formatter = {},
    d20ext.dice_formatter = d20.dice_formatter,
    function() {
        var e = function() {}
          , t = function(i) {
            for (var n = "", r = 0; r < i.length; r++) {
                if (i[r].type === d20.dice.TYPE_GROUP_EXPR) {
                    console.log("Descending into madness..."),
                    n += "{<div class='parsegroup'>";
                    for (var o = 0; o < i[r].rolls.length; o++)
                        n += "<div class='parsegroupitem ",
                        i[r].results && i[r].results[o].d && (n += "dropped"),
                        n += "'>",
                        n += t(i[r].rolls[o]),
                        o + 1 < i[r].rolls.length && (n += " + "),
                        n += "</div>";
                    n += "</div>}"
                }
                if (i[r].type === d20.dice.TYPE_ROLL_EXPR) {
                    n += "<div class='dicegrouping' data-groupindex='" + r + "' ",
                    i[r + 1] && i[r + 1].type == d20.dice.TYPE_LABEL && (n += "title='" + i[r + 1].text.replace(/'/g, "&apos;") + "'"),
                    n += ">",
                    n += "(";
                    for (var a = 0; a < i[r].results.length; a++) {
                        n += "<div data-origindex='" + a + "' class='diceroll ",
                        i[r].results.length > 50 && (n += "withouticons "),
                        i[r].fate ? n += "d6" : i[r].table || (n += "d" + i[r].sides),
                        i[r].results[a].d === !0 && (n += " dropped ");
                        var s = !1
                          , l = !1;
                        if (i[r].mods && i[r].mods.customCrit ? _.each(i[r].mods.customCrit, function(e) {
                            "<=" === e.comp ? i[r].results[a].v <= e.point && (s = !0) : ">=" === e.comp ? i[r].results[a].v >= e.point && (s = !0) : "==" === e.comp && i[r].results[a].v === e.point && (s = !0)
                        }) : i[r].results[a].v === i[r].sides && (s = !0),
                        s && (n += " critsuccess ",
                        e()),
                        i[r].mods && i[r].mods.customFumble ? _.each(i[r].mods.customFumble, function(e) {
                            "<=" === e.comp ? i[r].results[a].v <= e.point && (l = !0) : ">=" === e.comp ? i[r].results[a].v >= e.point && (l = !0) : "==" === e.comp && i[r].results[a].v === e.point && (l = !0)
                        }) : 1 === i[r].results[a].v && i[r].fate !== !0 && (l = !0),
                        l && (n += " critfail "),
                        n += "'><div class='dicon'><div class='didroll'>",
                        i[r].fate === !0)
                            switch (i[r].results[a].v) {
                            case 1:
                                n += "+";
                                break;
                            case 0:
                                n += "0";
                                break;
                            case -1:
                                n += "-"
                            }
                        else
                            n += i[r].results[a].tableItem ? i[r].results[a].tableItem.avatar && "" != i[r].results[a].tableItem.avatar ? "<img src='" + i[r].results[a].tableItem.avatar + "' title='" + d20ext.utils.strip_tags(i[r].results[a].tableItem.name).replace(/'/g, "&apos;") + "' />" : d20ext.utils.strip_tags(i[r].results[a].tableItem.name) : i[r].results[a].v;
                        n += "</div><div class='backing'></div></div>",
                        i[r].fate !== !0 && a + 1 < i[r].results.length && (n += "+"),
                        n += "</div>"
                    }
                    n += ")",
                    n += "</div>"
                } else
                    i[r].type === d20.dice.TYPE_MATH_EXPR && (n += i[r].expr)
            }
            return n
        }
          , i = function(e) {
            if (e) {
                for (var t = "", n = 0; n < e.length; n++) {
                    if (e[n].type === d20.dice.TYPE_GROUP_EXPR) {
                        console.log("Descending into madness..."),
                        t += "{";
                        for (var r = 0; r < e[n].rolls.length; r++)
                            t += i(e[n].rolls[r]),
                            r + 1 < e[n].rolls.length && (t += "+");
                        t += "}"
                    }
                    if (e[n].type === d20.dice.TYPE_ROLL_EXPR) {
                        var o = void 0 !== e[n].results ? e[n].results.length : 0;
                        t += "(";
                        for (var a = 0; o > a; a++) {
                            if (t += "<span class='basicdiceroll",
                            e[n].results[a].d)
                                t += " dropped";
                            else {
                                var s = !1
                                  , l = !1;
                                e[n].mods && e[n].mods.customCrit ? _.each(e[n].mods.customCrit, function(t) {
                                    "<=" === t.comp ? e[n].results[a].v <= t.point && (s = !0) : ">=" === t.comp ? e[n].results[a].v >= t.point && (s = !0) : "==" === t.comp && e[n].results[a].v === t.point && (s = !0)
                                }) : e[n].results[a].v === e[n].sides && (s = !0),
                                s && (t += " critsuccess "),
                                e[n].mods && e[n].mods.customFumble ? _.each(e[n].mods.customFumble, function(t) {
                                    "<=" === t.comp ? e[n].results[a].v <= t.point && (l = !0) : ">=" === t.comp ? e[n].results[a].v >= t.point && (l = !0) : "==" === t.comp && e[n].results[a].v === t.point && (l = !0)
                                }) : 1 === e[n].results[a].v && e[n].fate !== !0 && (l = !0),
                                l && (t += " critfail ")
                            }
                            if (t += "'>",
                            e[n].fate === !0)
                                switch (e[n].results[a].v) {
                                case 1:
                                    t += "+";
                                    break;
                                case 0:
                                    t += "0";
                                    break;
                                case -1:
                                    t += "-"
                                }
                            else
                                t += e[n].results[a].tableItem ? d20ext.utils.strip_tags(e[n].results[a].tableItem.name) : e[n].results[a].v;
                            t += "</span>",
                            e[n].fate !== !0 && a + 1 < e[n].results.length && (t += "+")
                        }
                        t += ")"
                    } else
                        e[n].type === d20.dice.TYPE_MATH_EXPR && (t += e[n].expr)
                }
                return t
            }
        }
        ;
        d20.dice_formatter.checkForCrits = function(e, t) {
            if (!e)
                return !1;
            for (var i = !1, n = !1, r = 0; r < e.length; r++) {
                if (e[r].type === d20.dice.TYPE_GROUP_EXPR)
                    for (var o = 0; o < e[r].rolls.length; o++)
                        d20.dice_formatter.checkForCrits(e[r].rolls[o], t) === !0 && ("crit" === t ? i = !0 : n = !0);
                if (e[r].type === d20.dice.TYPE_ROLL_EXPR)
                    for (var a = void 0 !== e[r].results ? e[r].results.length : 0, s = 0; a > s; s++)
                        e[r].results[s].d !== !0 && (e[r].mods && e[r].mods.customCrit ? _.each(e[r].mods.customCrit, function(t) {
                            "<=" === t.comp ? e[r].results[s].v <= t.point && (i = !0) : ">=" === t.comp ? e[r].results[s].v >= t.point && (i = !0) : "==" === t.comp && e[r].results[s].v === t.point && (i = !0)
                        }) : e[r].results[s].v === e[r].sides && (i = !0),
                        e[r].mods && e[r].mods.customFumble ? _.each(e[r].mods.customFumble, function(t) {
                            "<=" === t.comp ? e[r].results[s].v <= t.point && (n = !0) : ">=" === t.comp ? e[r].results[s].v >= t.point && (n = !0) : "==" === t.comp && e[r].results[s].v === t.point && (n = !0)
                        }) : 1 === e[r].results[s].v && e[r].fate !== !0 && (n = !0))
            }
            return "crit" === t ? i : n
        }
        ,
        d20.dice_formatter.getHtmlForResult = function(e) {
            var i = t(e.rolls);
            return {
                formula: i,
                total: e.total + (e.resultType === d20.dice.ROLL_TYPE_SUCCESS ? " Successes" : "")
            }
        }
        ,
        d20.dice_formatter.replaceInlineRolls = function(e, t, n) {
            return e = d20.utils.strip_tags(e, n),
            t.inlinerolls ? e = e.replace(/\$\[\[[0-9]+\]\]/g, function(e) {
                var n = e.substring(3, e.length - 1)
                  , r = t.inlinerolls[parseInt(n, 10)];
                if (!r || !r.results)
                    return "INVALID INLINE ROLL!";
                var o = "Rolling " + r.expression + " = ";
                r.signature && d20.textchat.verifyRoll(r.rollid, r.results, r.signature) && (o = "<img src='/images/quantumrollwhite.png' class='inlineqroll'> " + o),
                o += i(r.results.rolls);
                var a = r.results.total;
                try {
                    0 == a && r.results.rolls[0].results[0].tableItem && (a = d20ext.utils.strip_tags(r.results.rolls[0].results[0].tableItem.name))
                } catch (s) {}
                var l = "<span class='inlinerollresult showtip tipsy-n"
                  , c = -1 !== o.indexOf("critsuccess")
                  , d = -1 !== o.indexOf("critfail");
                return c && d ? l += " importantroll" : c ? l += " fullcrit" : d && (l += " fullfail"),
                l += "' title='" + o.replace(/'/g, "&quot;") + "'>" + a + "</span>"
            }) : e
        }
        ;
        var n = {
            "@": "critsuccess",
            "#": "critfail",
            _: "dropped"
        }
          , r = function(e, t) {
            for (var i in n) {
                var o = new RegExp("\\{" + i + "(.+?)" + i + "\\}","g");
                if (null != (match = o.exec(e)))
                    return t.push(n[i]),
                    r(match[1], t)
            }
            return e
        }
        ;
        d20.dice_formatter.oldformat = function(e) {
            return void 0 === e ? "" : e.replace(/\{([@#_])(.+?)\1\}/g, function(e, t, i) {
                var o = [n[t]]
                  , i = r(i, o);
                return "<span class='" + o.sort().join(" ") + "'>" + i + "</span>"
            })
        }
    }();
    var d20 = d20 || {};
    d20.dice_engine = function(seed) {
        function TaskCompletionCallback(e, t, i) {
            var n = 0
              , r = !1;
            this.taskComplete = function() {
                if (n == e)
                    throw "All " + n + " tasks have already been completed for: " + i;
                n++,
                n == e && (r = !0,
                t())
            }
            ,
            this.verify = function() {
                n != e || r || t()
            }
        }
        function RollResult(e) {
            this.i = e,
            this.v = 0
        }
        function GroupResult(e) {
            this.v = e
        }
        function ValidatedRollExpression(e, t) {
            this.type = d20.dice.TYPE_VALIDATED_ROLLS,
            this.rolls = e,
            this.resultType = t
        }
        function ExpressionBuilder() {
            var expression = ""
              , groupMemeberCount = void 0
              , verifyInGroup = function() {
                if (void 0 == groupMemeberCount)
                    throw "Not currently in a group expression: '" + expression + "'"
            }
            ;
            this.addMathExpr = function(e) {
                expression += e
            }
            ,
            this.startGroup = function() {
                expression += "(",
                groupMemeberCount = 0
            }
            ,
            this.addGroupValue = function(e) {
                verifyInGroup(),
                groupMemeberCount > 0 && (expression += "+"),
                expression += e,
                groupMemeberCount++
            }
            ,
            this.addGroupSuccess = function(e, t) {
                this.addGroupValue("(" + e + t.comp + t.point + "?1:0)")
            }
            ,
            this.addGroupFailure = function(e, t) {
                this.addGroupValue("(" + e + t.comp + t.point + "?-1:0)")
            }
            ,
            this.endGroup = function() {
                verifyInGroup(),
                0 == groupMemeberCount && (expression += "0"),
                expression += ")",
                groupMemeberCount = void 0
            }
            ,
            this.eval = function() {
                log(expression);
                var result, thisexp = expression;
                return function() {
                    "use strict";
                    var floor = Math.floor
                      , ceil = Math.ceil
                      , round = Math.round
                      , max = Math.max
                      , min = Math.min
                      , abs = Math.abs;
                    try {
                        result = eval(thisexp)
                    } catch (e) {
                        result = 0
                    }
                }(),
                result
            }
        }
        d20.dice = d20.dice || {},
        d20.dice.TYPE_MATH_EXPR = "M",
        d20.dice.TYPE_ROLL_EXPR = "R",
        d20.dice.TYPE_GROUP_EXPR = "G",
        d20.dice.TYPE_LABEL = "L",
        d20.dice.TYPE_COMMENT = "C",
        d20.dice.TYPE_VALIDATED_ROLLS = "V",
        d20.dice.ROLL_TYPE_SUCCESS = "success",
        d20.dice.ROLL_TYPE_TABLE = "table",
        d20.dice.ROLL_TYPE_SUM = "sum",
        void 0 == d20.getTableElementCount && (d20.getTableElementCount = function(e) {
            return log("Using fallback getTableElementCount(" + e + ")"),
            e.length
        }
        ,
        d20.getTableElementValue = function(e, t) {
            return log("Using fallback getTableElementValue(" + e + ", " + t + ")"),
            parseInt(e, 10) || 0
        }
        );
        var MAX_NUM_ROLLS = 999
          , MAX_ROLL = 9999999;
        console.log("Initializing new dice engine with randomness..."),
        void 0 == seed ? (console.log("Using random entropy"),
        Math.seedrandom(window.RANDOM_ENTROPY, !0)) : Math.seedrandom(seed),
        this.random = Math.randomInt;
        var othis = this
          , log = function(e) {}
          , logerr = function(e) {
            _.isFunction(e) && (e = e()),
            console.log(e)
        }
          , fallbackErrorHandler = function(e) {
            throw logerr(e),
            e
        }
          , diceRollToString = function(e) {
            var t = e.dice + "d" + e.sides;
            return e.mods.compounding && (t += "!!" + comparePointToString(e.mods.compounding)),
            e.mods.penetrating && (t += "!p" + comparePointToString(e.mods.penetrating)),
            e.mods.exploding && (t += "!" + comparePointToString(e.mods.exploding)),
            e.mods.keep && (t += "k",
            "h" != e.mods.keep.end && (t += e.mods.keep.end),
            t += e.mods.keep.count),
            e.mods.drop && (t += "k",
            "l" != e.mods.drop.end && (t += e.mods.drop.end),
            t += e.mods.drop.count),
            e.mods.reroll && e.mods.reroll.forEach(function(e) {
                t += "r" + comparePointToString(e)
            }),
            e.mods.sort && (t += "s" + e.mods.sort.order),
            e.mods.success && (t += comparePointToString(e.mods.success, !0)),
            e.mods.failure && (t += "f" + comparePointToString(e.mods.failure, !0)),
            t
        }
          , comparePointToString = function(e, t) {
            var i = "";
            return e.point && (("==" != e.comp || t) && (i += e.comp.charAt(0)),
            i += e.point),
            i
        }
          , validateParseResult = function(e) {
            for (var t = void 0, i = 0; i < e.length; i++) {
                if (e[i].type == d20.dice.TYPE_ROLL_EXPR || e[i].type == d20.dice.TYPE_GROUP_EXPR) {
                    var n = getRollType(e[i]);
                    if (void 0 == t)
                        t = n;
                    else if (t != n)
                        throw "Cannot mix " + t + " and " + n + " rolls in a single roll expression"
                }
                if (e[i].type == d20.dice.TYPE_ROLL_EXPR) {
                    if (e[i].fate ? e[i].sides = 3 : void 0 != e[i].table && (e[i].sides = d20.getTableElementCount(e[i].table)),
                    e[i].fate && void 0 != e[i].mods.compounding)
                        throw "Compounding FATE dice are not legal, try ! instead of !! for exploding FATE dice";
                    if (e[i].mods && void 0 != e[i].mods.exploding && e[i].sides < 2)
                        throw "You must roll a d2 or higher to roll exploding dice.";
                    e[i].dice = Math.max(Math.min(e[i].dice, MAX_NUM_ROLLS), 0),
                    e[i].sides = Math.max(Math.min(e[i].sides, MAX_ROLL), 0)
                }
                if (e[i].type == d20.dice.TYPE_GROUP_EXPR) {
                    if (1 == e[i].rolls.length && t == d20.dice.ROLL_TYPE_SUCCESS)
                        for (var r = !1, o = 0; o < e[i].rolls[0].length; o++)
                            if (e[i].rolls[0][o].type == d20.dice.TYPE_ROLL_EXPR) {
                                if (r)
                                    throw "Only one roll expression is allowed in a single sub-roll expression success check";
                                r = !0
                            } else if (e[i].rolls[0][o].type == d20.dice.TYPE_GROUP_EXPR)
                                throw e[i].rolls[0][o].type + " expression is not supported in a single sub-roll expression success check";
                    for (var a = void 0, s = 0; s < e[i].rolls.length; s++) {
                        var l = validateParseResult(e[i].rolls[s]);
                        if (void 0 == a)
                            a = l;
                        else if (a != l)
                            throw "Cannot mix " + a + " and " + l + " rolls in a  roll group"
                    }
                    e[i].resultType = a
                }
            }
            if (void 0 == t) {
                if (e[0].type === d20.dice.TYPE_MATH_EXPR)
                    return d20.dice.TYPE_MATH_EXPR;
                throw "Could not determine result type of: " + JSON.stringify(e)
            }
            return t
        }
          , getRollType = function(e) {
            return e.mods && void 0 !== e.mods.success ? d20.dice.ROLL_TYPE_SUCCESS : void 0 != e.sides && e.sides.type == d20.dice.TYPE_LABEL ? d20.dice.ROLL_TYPE_TABLE : d20.dice.ROLL_TYPE_SUM
        }
          , parseRollString = function(e) {
            log(function() {
                return "E parseRollString: " + e
            });
            var t = d20.DicePEG.parse(e);
            log(t);
            var i = validateParseResult(t)
              , n = new ValidatedRollExpression(t,i);
            return log(n),
            log(JSON.stringify(n)),
            log(function() {
                return "L parseRollString: " + n.rolls.length + " expressions from: " + e
            }),
            n
        }
          , initiateRolls = function(e, t, i) {
            for (var n = 0; n < e.length; n++)
                e[n].type == d20.dice.TYPE_ROLL_EXPR ? doRolls(e[n], i) : e[n].type == d20.dice.TYPE_GROUP_EXPR ? initiateGroupRolls(e[n], t, i) : i()
        }
          , initiateGroupRolls = function(e, t, i) {
            for (var n = new TaskCompletionCallback(e.rolls.length,function() {
                postProcessCompleteGroup(e, t),
                i()
            }
            ,"groupCompleteCallback"), r = 0; r < e.rolls.length; r++)
                initiateSubGroupRolls(e.rolls[r], e.resultType, n)
        }
          , initiateSubGroupRolls = function(e, t, i) {
            var n = new TaskCompletionCallback(e.length,function() {
                i.taskComplete()
            }
            ,"subGroupCompleteCallback");
            initiateRolls(e, t, function() {
                n.taskComplete()
            })
        }
          , doRolls = function(e, t) {
            log(function() {
                return diceRollToString(e) + "	 - E doRolls"
            }),
            e.results = [];
            for (var i = new TaskCompletionCallback(e.dice,function() {
                diceRollCompleteCallback(e),
                t()
            }
            ,"rollCompleteCallback"), n = function() {
                i.taskComplete()
            }
            , r = 0; r < e.dice; r++)
                rollDie(r, e, n);
            i.verify(),
            log(function() {
                return diceRollToString(e) + "	 - L doRolls"
            })
        }
          , diceRollCompleteCallback = function(e) {
            if (log(function() {
                return diceRollToString(e) + "	 - E diceRollCompleteCallback"
            }),
            e.results.sort(function(e, t) {
                var i = e.i - t.i;
                return 0 != i || e.d == t.d ? i : e.d ? -1 : 1
            }),
            e.results.forEach(function(e) {
                delete e.i
            }),
            e.mods && void 0 != e.mods.keep) {
                var t = "l" == e.mods.keep.end ? "a" : "d"
                  , i = sortRolls(e.results, t);
                keepRolls(i, e.mods.keep.count)
            }
            if (e.mods && void 0 != e.mods.drop) {
                var t = "l" == e.mods.drop.end ? "a" : "d"
                  , i = sortRolls(e.results, t);
                dropRolls(i, e.mods.drop.count)
            }
            e.mods && void 0 != e.mods.sort && (e.results = sortRolls(e.results, e.mods.sort.order)),
            log(function() {
                return diceRollToString(e) + "	 - L diceRollCompleteCallback"
            })
        }
          , postProcessCompleteGroup = function(e, t) {
            if (log(function() {
                return "E postProcessCompleteGroup(" + t + ")"
            }),
            e.mods && void 0 != e.mods.keep && 1 == e.rolls.length) {
                var i = "l" == e.mods.keep.end ? "a" : "d"
                  , n = buildSubGroupRollsArray(e.rolls[0]);
                n = sortRolls(n, i),
                keepRolls(n, e.mods.keep.count),
                cleanupSubGroupValues(e.rolls[0])
            }
            if (e.mods && void 0 != e.mods.drop && 1 == e.rolls.length) {
                var i = "l" == e.mods.drop.end ? "a" : "d"
                  , n = buildSubGroupRollsArray(e.rolls[0]);
                n = sortRolls(n, i),
                dropRolls(n, e.mods.drop.count),
                cleanupSubGroupValues(e.rolls[0])
            }
            if (totalResult(e, t),
            e.mods && void 0 != e.mods.keep && e.rolls.length > 1) {
                var i = "l" == e.mods.keep.end ? "a" : "d"
                  , r = sortRolls(e.results, i);
                keepRolls(r, e.mods.keep.count)
            }
            if (e.mods && void 0 != e.mods.drop && e.rolls.length > 1) {
                var i = "l" == e.mods.drop.end ? "a" : "d"
                  , r = sortRolls(e.results, i);
                dropRolls(r, e.mods.drop.count)
            }
            log(function() {
                return "L postProcessCompleteGroup"
            })
        }
          , buildSubGroupRollsArray = function(e) {
            for (var t = [], i = 0; i < e.length; i++)
                e[i].type == d20.dice.TYPE_ROLL_EXPR ? t = t.concat(e[i].results) : e[i].type == d20.dice.TYPE_GROUP_EXPR && (e[i].v = totalResult(e[i], e[i].resultType).eval(),
                t.push(e[i]));
            return t
        }
          , cleanupSubGroupValues = function(e) {
            e.forEach(function(e) {
                e.type == d20.dice.TYPE_GROUP_EXPR && delete e.v
            })
        }
          , keepRolls = function(e, t) {
            for (var i = 0, n = 0; n < e.length; n++)
                e[n].d || (t > i ? i++ : e[n].d = !0)
        }
          , dropRolls = function(e, t) {
            for (var i = 0, n = 0; n < e.length && t > i; n++)
                e[n].d || (e[n].d = !0,
                i++)
        }
          , sortRolls = function(e, t) {
            var i = "d" == t ? -1 : 1;
            return e.slice(0).sort(function(e, t) {
                return (e.v - t.v) * i
            })
        }
          , asyncRand = function(e, t, i, n) {
            if (0 === e)
                setTimeout(function() {
                    t(0)
                }, 0);
            else {
                if ("undefined" == typeof Firebase && d20.tddice && d20.tddice.canRoll3D() && !i)
                    return void d20.tddice.roller(e, t, n);
                if (6 === e && d20.textchat && d20.textchat.egg_clickhole && !$("#lightly-overlay").is(":visible")) {
                    var r = [["2990", 1, 4], ["2991", 1, 7], ["2992", 1, 12], ["2993", 2, 7], ["2994", 2, 5], ["2995", 2, 38], ["2996", 2, 11], ["2997", 3, 13], ["2998", 3, 16], ["2999", 3, 6], ["3000", 3, 16], ["3001", 4, 17], ["3002", 4, 18], ["3003", 4, 16], ["3004", 5, 7], ["3006", 5, 24], ["3005", 5, 14], ["3007", 5, 27], ["3008", 6, 7], ["3009", 6, 6], ["3010", 6, 5], ["3012", 6, 10]]
                      , o = r[othis.random(r.length)];
                    d20.textchat.sendShout({
                        type: "playclickhole",
                        playerid: window.currentPlayer.id,
                        content: o,
                        time: (new Date).getTime()
                    }),
                    window.fakeLightly && window.fakeLightly("http://v.theonion.com/onionstudios/video/" + o[0] + "/640.mp4"),
                    setTimeout(function() {
                        t(o[1]),
                        $("#lightly-overlay").hide()
                    }, 1e3 * o[2] + 2e3)
                } else
                    setTimeout(function() {
                        t(othis.random(e) + 1)
                    }, 0)
            }
        }
          , compareToPoint = function(value, cp, defaultPoint) {
            if (void 0 != cp.comp) {
                var cpFormula = value + cp.comp + cp.point
                  , cpResult = eval(cpFormula);
                return cpResult
            }
            return value == defaultPoint
        }
          , rollDie = function(e, t, i, n) {
            var r = new RollResult(e);
            t.results.push(r),
            function(e) {
                asyncRand(t.sides, function(r) {
                    individualRollCallback(t, e, r, i, n)
                }, void 0 !== t.table, t.rollid)
            }(r)
        }
          , individualRollCallback = function(e, t, i, n, r) {
            if (r = r || 0,
            log(function() {
                return diceRollToString(e) + "	 - E individualRollCallback(" + r + ") " + i
            }),
            void 0 !== e.table ? (t.tableidx = i - 1,
            t.v += d20.getTableElementValue(e.table, t.tableidx)) : t.v += i,
            e.fate && (t.v -= 2),
            e.mods && void 0 != e.mods.penetrating && r > 0 && (t.v -= 1),
            r > MAX_NUM_ROLLS)
                n();
            else if (e.mods && void 0 != e.mods.exploding && compareToPoint(i, e.mods.exploding, e.sides))
                rollDie(t.i, e, n, r + 1);
            else if (e.mods && void 0 != e.mods.compounding && compareToPoint(i, e.mods.compounding, e.sides))
                asyncRand(e.sides, function(i) {
                    individualRollCallback(e, t, i, n, r + 1)
                }, void 0 !== e.table, e.rollid);
            else if (e.mods && void 0 != e.mods.penetrating && compareToPoint(i, e.mods.penetrating, e.sides))
                rollDie(t.i, e, n, r + 1);
            else if (e.mods && void 0 != e.mods.reroll) {
                var o = e.mods.reroll.some(function(o) {
                    if (o.maxrerolls)
                        for (var a = 0, s = 0; s < e.results.length; s++)
                            e.results[s].i === t.i && e.results[s].d === !0 && a++;
                    return compareToPoint(i, o, 1) ? o.maxrerolls && a >= o.maxrerolls ? !1 : (t.d = !0,
                    rollDie(t.i, e, n, r + 1),
                    !0) : !1
                });
                o || n()
            } else
                n();
            log(function() {
                return diceRollToString(e) + "	 - L individualRollCallback(" + r + ") " + i
            })
        }
          , postProcessCompleteRolls = function(e, t, i) {
            if (log(function() {
                return "E postProcessCompleteRolls"
            }),
            e.type == d20.dice.TYPE_VALIDATED_ROLLS) {
                var n = postProcessCompleteRolls(e.rolls, e.resultType);
                return e.total = n,
                n
            }
            var r = totalResults(e, t, i);
            return log(function() {
                return "L postProcessCompleteRolls - " + r
            }),
            r
        }
          , totalResults = function(e, t, i, n) {
            for (var n = n || new ExpressionBuilder, n = new ExpressionBuilder, r = 0; r < e.length; r++)
                totalResult(e[r], t, i, n);
            return n.eval()
        }
          , totalResult = function(e, t, i, n) {
            var n = n || new ExpressionBuilder;
            if (e.type == d20.dice.TYPE_ROLL_EXPR) {
                n.startGroup();
                for (var r = 0; r < e.results.length; r++)
                    e.results[r].d || addResultValue(n, t, e.results[r].v, e);
                n.endGroup()
            } else if (e.type == d20.dice.TYPE_MATH_EXPR)
                n.addMathExpr(e.expr);
            else if (e.type == d20.dice.TYPE_GROUP_EXPR) {
                if (n.startGroup(),
                !e.d)
                    if (void 0 == e.results || i)
                        if (e.results = [],
                        1 == e.rolls.length && t == d20.dice.ROLL_TYPE_SUCCESS) {
                            for (var o = "", a = void 0, s = "", l = 0; l < e.rolls[0].length; l++)
                                if (e.rolls[0][l].type == d20.dice.TYPE_ROLL_EXPR) {
                                    if (void 0 != a)
                                        throw "Only one roll expression is allowed in a single sub-roll expression success check";
                                    a = e.rolls[0][l]
                                } else if (e.rolls[0][l].type == d20.dice.TYPE_MATH_EXPR)
                                    void 0 == a ? o += e.rolls[0][l].expr : s += e.rolls[0][l].expr;
                                else if (e.rolls[0][l].type == d20.dice.TYPE_GROUP_EXPR)
                                    throw e.rolls[0][l].type + " expression is not supported in a single sub-roll expression success check";
                            for (var l = 0; l < a.results.length; l++)
                                if (!a.results[l].d) {
                                    var c = new ExpressionBuilder;
                                    c.startGroup(),
                                    c.addMathExpr(o),
                                    c.addGroupValue(a.results[l].v),
                                    c.addMathExpr(s),
                                    c.endGroup(),
                                    e.results.push(new GroupResult(c.eval()))
                                }
                        } else
                            for (var d = 0; d < e.rolls.length; d++) {
                                var h = totalResults(e.rolls[d], e.resultType, i);
                                e.results.push(new GroupResult(h)),
                                addResultValue(n, t, h, e)
                            }
                    else
                        e.results.forEach(function(i) {
                            i.d || addResultValue(n, t, i.v, e)
                        });
                n.endGroup()
            }
            return n
        }
          , addResultValue = function(e, t, i, n) {
            if (t == d20.dice.ROLL_TYPE_SUM)
                e.addGroupValue(i);
            else {
                if (t != d20.dice.ROLL_TYPE_SUCCESS)
                    throw "Unsupported resultType: " + t;
                e.addGroupSuccess(i, n.mods.success),
                n.mods && void 0 != n.mods.failure && e.addGroupFailure(i, n.mods.failure)
            }
        }
        ;
        this.reprocess = function(e, t, i) {
            i = i || fallbackErrorHandler;
            try {
                postProcessCompleteRolls(e, void 0, !0),
                t(e)
            } catch (n) {
                i(n)
            }
        }
        ;
        var remoteRollQueue = []
          , remoteRollCallbacks = {}
          , performRemoteRoll = function(e, t, i, n, r) {
            remoteRollQueue.push({
                vre: e,
                rollid: t,
                rolltype: i
            }),
            remoteRollCallbacks[t] = {
                success: n,
                error: r
            },
            debounced_doRemoteRollRequest()
        }
          , _doRemoteRollRequest = function() {
            if (0 !== remoteRollQueue.length)
                if (!window.is_playerapp && window.currentPlayer.get("tddiceenabled") && window.currentPlayer.get("disableagency") === !1) {
                    if ($("#tdagencyoverlay").is(":visible"))
                        return;
                    $("#tdagencyoverlay").show(),
                    numberofdice = remoteRollQueue[0].vre.rolls[0].dice ? remoteRollQueue[0].vre.rolls[0].dice : 1,
                    d20.tddice.playsound("dicecup", numberofdice);
                    var e = {}
                      , t = $("#tdagencyoverlay svg line")
                      , i = !1;
                    $("#tdagencyoverlay").on("mousedown", function(n) {
                        e.startx = n.clientX / $(window).width(),
                        e.starty = n.clientY / $(window).height(),
                        t.attr("x1", n.clientX).attr("y1", n.clientY).attr("x2", n.clientX).attr("y2", n.clientY),
                        i = !0
                    }),
                    $("#tdagencyoverlay").on("mousemove", function(n) {
                        if (i) {
                            xdist = Math.abs(e.startx - n.clientX / $(window).width()),
                            ydist = Math.abs(e.starty - n.clientY / $(window).height());
                            var r = Math.sqrt(xdist * xdist + ydist * ydist);
                            .2 > r ? t.css("stroke", "rgb(255,255,255)") : .5 > r ? t.css("stroke", "rgb(245,238,44)") : t.css("stroke", "rgb(245,44,44)"),
                            t.attr("x2", n.clientX).attr("y2", n.clientY)
                        }
                    }),
                    $("#tdagencyoverlay").on("mouseup", function(i) {
                        $("#tdagencyoverlay").off().hide(),
                        t.attr("x1", 0).attr("y1", 0).attr("x2", 0).attr("y2", 0),
                        e.startx ? (e.stopx = i.clientX / $(window).width(),
                        e.stopy = i.clientY / $(window).height(),
                        _posthookrollrequest(e)) : _posthookrollrequest()
                    })
                } else
                    setTimeout(function() {
                        _posthookrollrequest()
                    }, 50)
        }
          , _posthookrollrequest = function(e) {
            if (0 !== remoteRollQueue.length) {
                var t = {
                    cid: window.campaign_storage_path,
                    fbnum: window.FIREBASE_ROOT,
                    authkey: window.GNTKN,
                    pid: window.currentPlayer.id,
                    rolls: remoteRollQueue,
                    use3d: window.currentPlayer.get(window.is_playerapp ? "apptddiceenabled" : "tddiceenabled")
                };
                if (e) {
                    var i = {
                        x: e.startx - e.stopx,
                        y: e.starty - e.stopy
                    };
                    mindistance = .01,
                    maxdistance = .3,
                    Math.abs(i.x) < mindistance && (i.x = i.x < 0 ? -mindistance : mindistance),
                    Math.abs(i.y) < mindistance && (i.y = i.y < 0 ? -mindistance : mindistance),
                    Math.abs(i.x) > maxdistance && (i.x = i.x < 0 ? -maxdistance : maxdistance),
                    Math.abs(i.y) > maxdistance && (i.y = i.y < 0 ? -maxdistance : maxdistance),
                    t.deltas = {
                        x: 80 * i.x * -1,
                        y: 80 * i.y * 1
                    }
                } else
                    t.use3d === !0 && (t.deltas = {
                        x: 10 * Math.random() - 5,
                        y: 20
                    });
                $.ajax({
                    url: "https://app.roll20.net/doroll",
                    type: "POST",
                    data: JSON.stringify(t),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function(e) {
                        var t = e;
                        for (var i in t)
                            if (void 0 == t[i].error) {
                                var n = JSON.parse(t[i].json);
                                postProcessCompleteRolls(n),
                                remoteRollCallbacks[i].success(n, i, t[i].signature, t[i].tdseed),
                                d20.tutorial && void 0 !== t[i].shoutjson && d20.tddice.remoteRoll(JSON.parse(t[i].shoutjson))
                            } else
                                remoteRollCallbacks[i].error("There was an error fetching your roll. " + t[i].error)
                    },
                    error: function() {
                        console.log("Error fetching from QuantumRoll, fallback to local rolls."),
                        _.each(t.rolls, function(e) {
                            var t = e.vre
                              , i = new TaskCompletionCallback(t.rolls.length,function() {
                                postProcessCompleteRolls(t),
                                setTimeout(function() {
                                    remoteRollCallbacks[e.rollid].success(t, null , !1)
                                }, 0)
                            }
                            ,"wholeRollCompleteCallback");
                            initiateRolls(t.rolls, t.resultType, function() {
                                i.taskComplete()
                            })
                        })
                    }
                }),
                remoteRollQueue = []
            }
        }
        ;
        this.flushRemoteQueue = function() {
            _doRemoteRollRequest()
        }
        ;
        var debounced_doRemoteRollRequest = _.debounce(_doRemoteRollRequest, 100);
        return this.process = function(e, t, i) {
            i = i || fallbackErrorHandler;
            try {
                var n = parseRollString(e);
                if (0 == n.rolls)
                    throw "There were no dice to roll!";
                var r = !1
                  , o = !1
                  , a = 0
                  , s = function(e) {
                    if (a++,
                    void 0 !== e)
                        for (var t = 0; t < e.length; t++)
                            if (void 0 !== e[t].table && (r = !0),
                            "R" === e[t].type && (o = !0),
                            (!r || !o) && 99 > a && void 0 !== e[t].rolls && e[t].rolls.length > 0)
                                for (var i = 0; i < e[t].rolls.length; i++)
                                    s(e[t].rolls[i])
                }
                ;
                try {
                    s(n.rolls)
                } catch (l) {
                    console.log("Error while checking for table existence. Ignoring.")
                }
                if (s = null ,
                d20.textchat && d20.textchat.egg_clickhole && (r = !0),
                "undefined" == typeof Firebase || r === !0 || o === !1) {
                    var c = new TaskCompletionCallback(n.rolls.length,function() {
                        postProcessCompleteRolls(n),
                        setTimeout(function() {
                            t(n, null , !1)
                        }, 0)
                    }
                    ,"wholeRollCompleteCallback");
                    initiateRolls(n.rolls, n.resultType, function() {
                        c.taskComplete()
                    })
                } else if ("undefined" == typeof $) {
                    var d = generateUUID()
                      , h = {
                        vre: n,
                        cid: CAMPAIGNID,
                        fbnum: "https://" + FIREBASENUM + ".firebaseio.com/",
                        pid: "api",
                        rid: d,
                        use3d: !1,
                        authkey: FIREBASETOKEN,
                        rolltype: d20.textchat.currentRollType
                    };
                    request.post({
                        url: "https://app.roll20.net/doroll",
                        body: h,
                        json: !0,
                        timeout: 5e3
                    }, function(e, n, r) {
                        if (e || 200 != n.statusCode || "" === r)
                            i("There was an error communicating with the QuantumRoll server.");
                        else {
                            var o = r;
                            if (void 0 !== o.error)
                                return void i("There was an error fetching your roll. " + o.error);
                            var a = JSON.parse(o.json);
                            postProcessCompleteRolls(a),
                            t(a, d, o.signature)
                        }
                    })
                } else {
                    var d = generateUUID();
                    performRemoteRoll(n, d, d20.textchat.currentRollType, t, i)
                }
            } catch (l) {
                i(l)
            }
        }
        ,
        this.handleRollReq = function(e, t) {
            var i = new TaskCompletionCallback(e.rolls.length,function() {
                try {
                    postProcessCompleteRolls(e)
                } catch (i) {
                    return void t({
                        error: "There was an error processing this roll."
                    })
                }
                setTimeout(function() {
                    t(e)
                }, 0)
            }
            ,"wholeRollCompleteCallback");
            try {
                initiateRolls(e.rolls, e.resultType, function() {
                    i.taskComplete()
                })
            } catch (n) {
                t({
                    error: "There was an error processing this roll."
                })
            }
        }
        ,
        this.handleRollString = function(e) {
            var t = parseRollString(e);
            if (0 == t.rolls)
                throw "There were no dice to roll!";
            return t
        }
        ,
        this
    }
    ,
    d20.textchat = {
        commandhistory: [],
        commandIndex: 0,
        currentRollType: "rollresult",
        commandInProgress: !1,
        lastChatBeep: 0,
        talktomyself: !1,
        allowed3drolls: [],
        globalrolled: 0,
        egg_clickhole: !1
    },
    $(function() {
        var e, t, i, n = "", r = 0, o = !0, a = !1, s = !1, l = {}, c = {};
        d20.textchat.tabIsFocused = !0,
        d20.dice_engine && (d20.textchat.diceengine = new d20.dice_engine),
        $(window).bind("focus", function() {
            o = !0
        }),
        $(window).bind("blur", function() {
            o = !1
        }),
        d20.textchat.$textarea = $("#textchat-input textarea"),
        d20.textchat.$speakingas = $("#speakingas"),
        d20.textchat.$textchat = $("#textchat");
        var d = new X509;
        d.readCertPEM("-----BEGIN CERTIFICATE-----MIICtTCCAl+gAwIBAgIJAJtwle/qkHJnMA0GCSqGSIb3DQEBBQUAMHIxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJLUzEQMA4GA1UEBxMHV2ljaGl0YTEPMA0GA1UEChMGUm9sbDIwMRMwEQYDVQQDEwpyb2xsMjAubmV0MR4wHAYJKoZIhvcNAQkBFg90ZWFtQHJvbGwyMC5uZXQwHhcNMTQwMzAzMTgwMTQ4WhcNMTQwNDAyMTgwMTQ4WjByMQswCQYDVQQGEwJVUzELMAkGA1UECBMCS1MxEDAOBgNVBAcTB1dpY2hpdGExDzANBgNVBAoTBlJvbGwyMDETMBEGA1UEAxMKcm9sbDIwLm5ldDEeMBwGCSqGSIb3DQEJARYPdGVhbUByb2xsMjAubmV0MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALJq8muAFnZMkJysXg9VJsevoQxtxV1NytYvCKHTtaCja/tyeLTRei0nu+NymPfNKKiRhv7R8D33oZLvIA/udusCAwEAAaOB1zCB1DAdBgNVHQ4EFgQUarGxVvODYDpzS5OKyKsTyCEmDSUwgaQGA1UdIwSBnDCBmYAUarGxVvODYDpzS5OKyKsTyCEmDSWhdqR0MHIxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJLUzEQMA4GA1UEBxMHV2ljaGl0YTEPMA0GA1UEChMGUm9sbDIwMRMwEQYDVQQDEwpyb2xsMjAubmV0MR4wHAYJKoZIhvcNAQkBFg90ZWFtQHJvbGwyMC5uZXSCCQCbcJXv6pByZzAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA0EAjBHayltU3K4DCs2h4nC2quGGKzGE2h1nMCBzhQ1ed+vir+lLnWQvAOrqt50Nx7lMk+23uFGhGMysK2UyrqptMw==-----END CERTIFICATE-----");
        var h = /\/((roll)|(r)|(gmroll)|(gr))[ ]+/i
          , u = function(e, t) {
            if (e.content = e.content + "",
            null !== e.content.match(h)) {
                var i = "rollresult";
                null !== e.content.match(/\/((gmroll)|(gr))[ ]+/i) && (i = "gmrollresult"),
                d20.textchat.currentRollType = i;
                try {
                    var n = e.content.replace(h, "");
                    n = n.replace(/\$\[\[[0-9]+\]\]/g, function(t) {
                        var i = t.substring(3, t.length - 1)
                          , n = e.inlinerolls[parseInt(i, 10)];
                        return n ? n.results.total : "INVALID INLINE ROLL"
                    });
                    var r = function(e, t) {
                        var i = 0
                          , n = !1;
                        return t > 99 ? void console.log("Too many subgroups, abort.") : (_.each(e, function(e) {
                            if ("G" === e.type)
                                _.each(e.rolls, function(e) {
                                    var o = r(e, t + 1);
                                    void 0 !== o && (i += o,
                                    n = !0)
                                });
                            else if (e.table) {
                                var o = d20.Campaign.rollabletables.findTableByName(e.table)
                                  , a = o.getWeightedArray();
                                o && _.each(e.results, function(e) {
                                    n = !0,
                                    e.tableItem = o.tableitems.get(a[e.tableidx]).toJSON(),
                                    void 0 === e.d && (i += e.v)
                                })
                            } else
                                e.results && _.each(e.results, function(e) {
                                    return e.d ? !0 : void (i += e.v)
                                })
                        }),
                        n ? i : void 0)
                    }
                    ;
                    d20.utils.textchatNotify("Rolling the dice..."),
                    d20.textchat.diceengine.process(n, function(n, o, a, s) {
                        if (d20.textchat.globalrolled++,
                        d20.utils.textchatNotify(!1),
                        n.error) {
                            var l = {
                                who: "error",
                                type: "error",
                                content: n.error
                            };
                            d20.textchat.incoming(!1, l)
                        } else {
                            if (n.rolls && n.rolls.length > 0)
                                try {
                                    var c = r(n.rolls, 0);
                                    void 0 !== c && (a = null )
                                } catch (d) {
                                    console.log("ERROR matching table"),
                                    console.log(d)
                                }
                            var u = {
                                who: d20.textchat.$speakingas.find("option:selected").text(),
                                type: i,
                                content: JSON.stringify(n),
                                signature: a,
                                origRoll: e.content.replace(h, ""),
                                playerid: window.currentPlayer.id,
                                avatar: e.avatar,
                                _fbid: o
                            };
                            s && (u.tdseed = s),
                            e.opts && e.opts.tracker && g(e.currentSelected, n, e.opts.tracker),
                            t(u)
                        }
                    }, function(e) {
                        console.log(e);
                        var t = {
                            who: "error",
                            type: "error",
                            content: "string" == typeof e ? e : "There was an error with your formula. Please try again."
                        };
                        d20.textchat.incoming(!1, t),
                        d20.utils.textchatNotify(!1)
                    })
                } catch (o) {
                    console.log(o);
                    var a = {
                        who: "error",
                        type: "error",
                        content: "string" == typeof o ? o : "There was an error with your formula. Please try again."
                    };
                    d20.textchat.incoming(!1, a)
                }
            } else if ("/em " === e.content.substring(0, 4) || "/e " == e.content.substring(0, 3) || "/me " == e.content.substring(0, 4)) {
                var s = e.content.replace("/em ", "").replace("/e ", "").replace("/me ", "")
                  , l = {
                    who: d20.textchat.$speakingas.find("option:selected").text(),
                    type: "emote",
                    content: s,
                    playerid: window.currentPlayer.id,
                    avatar: e.avatar
                };
                t(l)
            } else if ("/ooc " === e.content.substring(0, 5) || "/o " === e.content.substring(0, 3)) {
                var c = e.content.replace("/ooc ", "").replace("/o ", "")
                  , l = {
                    who: d20.textchat.$speakingas.find("option:first-child").text(),
                    type: "general",
                    playerid: window.currentPlayer.id,
                    content: c,
                    avatar: "/users/avatar/" + window.currentPlayer.get("d20userid") + "/30"
                };
                t(l)
            } else if (window.is_gm && "/as " === e.content.substring(0, 4)) {
                var c = e.content.substring(4, e.content.length)
                  , d = c.match(/\w+|"[^"]+"/);
                if (null == d || !d.length)
                    throw 'Invalid. Try /as "Name of Character" <message>';
                c = c.substring(d[0].length, c.length);
                var l = {
                    who: '"' === d[0][0] ? d[0].substring(1, d[0].length - 1) : d[0],
                    type: "general",
                    playerid: window.currentPlayer.id,
                    content: c
                };
                t(l)
            } else if (window.is_gm && "/emas " === e.content.substring(0, 6)) {
                var c = e.content.substring(6, e.content.length)
                  , d = c.match(/\w+|"[^"]+"/);
                if (null == d || !d.length)
                    throw 'Invalid. Try /as "Name of Character" <message>';
                c = c.substring(d[0].length, c.length);
                var l = {
                    who: '"' === d[0][0] ? d[0].substring(1, d[0].length - 1) : d[0],
                    type: "emote",
                    playerid: window.currentPlayer.id,
                    content: c
                };
                t(l)
            } else if (window.is_gm && "/desc " === e.content.substring(0, 6)) {
                var c = e.content.substring(6, e.content.length)
                  , l = {
                    who: "",
                    type: "desc",
                    playerid: window.currentPlayer.id,
                    content: c
                };
                t(l)
            } else if ("/w " === e.content.substring(0, 3)) {
                var u = e.content.split(" ")
                  , m = u.slice(2, u.length)
                  , v = /\"([^"]+)\"/i
                  , y = u[1]
                  , b = function(e, t) {
                    return e.split(" ")[0].toLowerCase() === t.toLowerCase()
                }
                ;
                if ('"' === u[1].substring(0, 1)) {
                    var w = v.exec(e.content);
                    w && (y = w[1],
                    m = e.content.replace(v, function() {
                        return ""
                    }).split(" ").slice(1, u.length),
                    b = function(e, t) {
                        return e.toLowerCase() === t.toLowerCase()
                    }
                    )
                }
                var x = 0;
                if ("gm" == y.toLowerCase() && (x = "gm",
                targetname = "GM"),
                0 == x && d20.Campaign.players.each(function(e) {
                    b(e.get("displayname"), y) && (x = e.id,
                    targetname = e.get("displayname"))
                }),
                0 == x && d20.Campaign.characters.each(function(e) {
                    b(e.get("name"), y) && (e.get("controlledby") && "" != e.get("controlledby") ? (x = e.get("controlledby"),
                    targetname = e.get("name")) : (x = "gm",
                    targetname = "GM"))
                }),
                0 == x) {
                    var a = {
                        who: "error",
                        type: "error",
                        content: "Unable to find a player or character with name: " + y
                    };
                    return void d20.textchat.incoming(!1, a)
                }
                var E = m.join(" ")
                  , l = {
                    who: d20.textchat.$speakingas.find("option:selected").text(),
                    type: "whisper",
                    target: x,
                    target_name: targetname,
                    playerid: window.currentPlayer.id,
                    content: E,
                    avatar: e.avatar
                };
                t(l)
            } else if ("/say " == e.content.substring(0, 5)) {
                var T = e.content.replace("/say ", "")
                  , C = d20.textchat.$speakingas.val();
                if (e.content = T,
                t(l),
                -1 === C.indexOf("character|"))
                    return;
                {
                    C.split("|")[1]
                }
            } else if ("/fx " == e.content.substring(0, 4)) {
                var R = e.content.split(" ")
                  , S = !1
                  , y = e.currentSelected
                  , k = !1
                  , M = R[1]
                  , A = M.indexOf("-") > -1 ? M.split("-")[0] : M;
                if (d20.fx.presetEffects[A])
                    -1 === d20.fx.presetEffects[A].angle && (S = !0);
                else if (window.Campaign.custFx) {
                    var H = window.Campaign.custFx.filter(function(e) {
                        return e.get("name").toLowerCase() === A.toLowerCase()
                    })[0];
                    if (H) {
                        M = H.id;
                        var P = window.Campaign.custFx.get(M).get("definition");
                        -1 === P.angle && (S = !0)
                    }
                }
                if (-1 === M.indexOf("|") ? M += "|duration:25" : -1 === M.indexOf("duration") && (M += ",duration:25"),
                R.length > 2) {
                    var x = R[2];
                    y = d20.Campaign.activePage().thegraphics.get(x).view.graphic
                }
                if (R.length > 3) {
                    var O = R[3];
                    k = d20.Campaign.activePage().thegraphics.get(O).view.graphic
                }
                if (y) {
                    var D = y.left
                      , $ = y.top;
                    if (S)
                        if (k) {
                            var L = {};
                            L.distance = f(k.left - y.left, k.top - y.top),
                            L.angle = p(k.left - y.left, k.top - y.top),
                            d20.fx.spawnFx(D, $, M, L)
                        } else
                            d20.fx.agencyFx(function(e) {
                                d20.fx.spawnFx(D, $, M, e)
                            }, D, $);
                    else
                        d20.fx.spawnFx(D, $, M)
                } else {
                    var a = {
                        who: "error",
                        type: "error",
                        content: "The /fx command requires a selected token or token ID, but none was provided. Select a token and try again."
                    };
                    d20.textchat.incoming(!1, a)
                }
                t("noop")
            } else if ("/talktomyself on" === e.content.substring(0, 16) || "/talktomyself" === e.content || "/talktomyself off" === e.content.substring(0, 17)) {
                if ("/talktomyself on" === e.content.substring(0, 16) || "/talktomyself" === e.content && d20.textchat.talktomyself === !1) {
                    d20.textchat.talktomyself = !0;
                    var a = {
                        who: "system",
                        type: "system",
                        content: "<strong>You are now talking to yourself.</strong> Chat messages and dice rolls will <strong>NOT BE BROADCAST</strong> to others until you turn this off. Use <code>/talktomyself off</code> to disable."
                    };
                    d20.textchat.incoming(!1, a),
                    d20.utils.textchatNotify("Talking to Yourself", !0)
                } else if ("/talktomyself off" === e.content.substring(0, 17) || "/talktomyself" === e.content && d20.textchat.talktomyself === !0) {
                    d20.textchat.talktomyself = !1;
                    var a = {
                        who: "system",
                        type: "system",
                        content: "<strong>You are no longer talking to yourself.</strong> Hooray!"
                    };
                    d20.textchat.incoming(!1, a),
                    d20.utils.textchatNotify(!1, !0)
                }
            } else {
                var a = {
                    who: "error",
                    type: "error",
                    content: "Unrecognized command: " + e.content
                };
                d20.textchat.incoming(!1, a)
            }
        }
          , p = function(e, t) {
            var i = 180 * Math.atan2(t, e) / Math.PI;
            return 0 > i && (i = 360 + i),
            i % 180 > 90 ? i += i % 90 > 45 ? 10 - i % 45 / 4.5 : i % 45 / 4.5 : i -= i % 90 > 45 ? 10 - i % 45 / 4.5 : i % 45 / 4.5,
            i
        }
          , f = function(e, t) {
            return Math.sqrt(Math.pow(e, 2) + Math.pow(t, 2))
        }
          , g = function(e, t, i) {
            if (e && "image" === e.type)
                d20.Campaign.parentRef.child("campaign").child("turnorder").transaction(function(n) {
                    d20.Campaign.set("turnorder", n);
                    var r = d20.Campaign.initiativewindow.cleanList()
                      , o = !1;
                    return _.each(r, function(n) {
                        if (n.id === e.model.id)
                            switch (o = !0,
                            i) {
                            case "+":
                                n.pr = parseFloat(n.pr) + t.total;
                                break;
                            case "-":
                                n.pr = parseFloat(n.pr) - t.total;
                                break;
                            default:
                                n.pr = t.total
                            }
                    }),
                    o || r.push({
                        id: e.model.id,
                        pr: t.total,
                        custom: ""
                    }),
                    JSON.stringify(r)
                });
            else {
                var n = {
                    who: "error",
                    type: "error",
                    content: "You wanted to send the result of this roll to the turn tracker, but no valid token was selected!"
                };
                d20.textchat.incoming(!1, n)
            }
        }
        ;
        d20.textchat.rawChatInput = function(e) {
            var i = _.extend({
                who: d20.textchat.$speakingas.find("option:selected").text(),
                type: "general",
                playerid: window.currentPlayer.id,
                content: ""
            }, e);
            if (d20.textchat.talktomyself)
                d20.textchat.incoming(!0, i);
            else {
                var n = t.push().key();
                t.child(n).setWithPriority(i, Firebase.ServerValue.TIMESTAMP)
            }
        }
        ;
        var m = function(e, t, i) {
            return "bar1" == e.toLowerCase() ? t.get("max" == i ? "bar1_max" : "bar1_value") : "bar2" == e.toLowerCase() ? t.get("max" == i ? "bar2_max" : "bar2_value") : "bar3" == e.toLowerCase() ? t.get("max" == i ? "bar3_max" : "bar3_value") : "token_name" == e.toLowerCase() ? t.get("name") : "token_id" === e.toLowerCase() ? t.id : void 0
        }
        ;
        d20.textchat.doChatInput = function(e) {
            if (!t)
                return void console.log("No document!");
            if (e = d20.utils.strip_tags(e),
            "" != e) {
                d20.textchat.commandhistory.push(e),
                d20.textchat.commandhistory = _.last(d20.textchat.commandhistory, 20),
                d20.textchat.commandIndex = 0;
                var i = d20.textchat.$speakingas.find("option:selected").val()
                  , n = !1;
                if (-1 !== i.indexOf("player"))
                    n = "/users/avatar/" + window.currentPlayer.get("d20userid") + "/30";
                else {
                    var r = d20.Campaign.characters.get(i.split("|")[1]);
                    r && (n = r.get("avatar"))
                }
                var o = {
                    who: d20.textchat.$speakingas.find("option:selected").text(),
                    type: "general",
                    content: $.trim(e),
                    playerid: window.currentPlayer.id,
                    avatar: n
                }
                  , a = !1;
                "`" === o.content.substring(0, 1) && (a = !0,
                o.content = o.content.substring(1, o.content.length));
                var s = d20.engine.selected();
                s.length > 0 && s[0].model && (o.currentSelected = s[0]);
                var l = {};
                d20.Campaign.players.each(function(e) {
                    e.macros.each(function(t) {
                        (e.id == window.currentPlayer.id || t.visibleToCurrentPlayer()) && (l["#" + t.get("name")] = t.get("action"))
                    })
                });
                var c = {}
                  , d = {}
                  , h = d20.engine.mode + ""
                  , p = /(#[^ \n]+)/gm
                  , f = /(%{[^}]+})/gm
                  , v = /&{[^}]+}/
                  , y = /(@{[^}]+})/gm
                  , b = ""
                  , w = 0
                  , x = function() {
                    try {
                        var e = !1
                          , t = !1;
                        if (o.content = o.content.replace(/&{noerror}/g, function() {
                            return t = !0,
                            ""
                        }),
                        o.content = o.content.replace(f, function(i) {
                            var n, r, a, s, l, c, h;
                            i = i.substring(2, i.length - 1);
                            var u = i.split("|");
                            if (4 == u.length && (n = u[1],
                            r = u[0],
                            charname = u[2],
                            l = u[3],
                            a = d20.Campaign.characters.get(r),
                            a && (s = a.abilities.get(n),
                            c = s.get("action"))),
                            2 == u.length && (charname = u[0],
                            l = u[1]),
                            3 == u.length && (charname = u[0],
                            l = u[2]),
                            "repeating_" === l.substring(0, 10) && (!d20.journal.customSheets || void 0 === d20.journal.customSheets.availableRolls[l.toLowerCase()])) {
                                console.log("SUBBING ABILITY REPEATING STUFF");
                                var p = l.split("_");
                                l = "repeating_" + p[1] + "_" + p.slice(3).join("_"),
                                h = "repeating_" + p[1] + "_" + p[2] + "_"
                            }
                            if ("selected" == charname.toLowerCase()) {
                                if (!o.currentSelected)
                                    throw "You attempted to use a roll command looking for the value of a selected token, but no tokens are selected.";
                                if ("" === o.currentSelected.model.get("represents"))
                                    throw "You attempted to use a roll command looking for a selected token ability, but the selected token does not represent a Character, and therefore has no abilities.";
                                a = d20.Campaign.characters.get(o.currentSelected.model.get("represents"))
                            } else if ("target" === charname.toLowerCase()) {
                                if (e || d20.engine.nextTargetCallback)
                                    return "%{" + i + "}";
                                var f = "target";
                                if (u.length > 2 && (f = u[1],
                                l = u[2]),
                                !l)
                                    throw "Syntax Error: You must specify a valid ability to fetch from the target.";
                                return d20.engine.nextTargetCallback = function(e) {
                                    return e === !1 ? (k(),
                                    void (d20.engine.nextTargetCallback = !1)) : (o.content = o.content.replace(/%\${currentTarget\|[^}]+}/, function(n) {
                                        var r = n.split("|")[1].replace("}", "");
                                        if ("" !== e.model.get("represents")) {
                                            var o = d20.Campaign.characters.get(e.model.get("represents"));
                                            if (o) {
                                                var a = void 0;
                                                return o.abilities.each(function(e) {
                                                    e.get("name").toLowerCase() == r.toLowerCase() && (a = "%{" + o.id + "|" + e.id + "|" + o.get("name") + "|" + e.get("name") + "}")
                                                }),
                                                void 0 !== a ? a : "%{" + o.get("name") + "|" + r + "}"
                                            }
                                            console.log("Couldn't find character that represents this token.")
                                        }
                                        if (!t) {
                                            var s = {
                                                who: "error",
                                                type: "error",
                                                content: "No ability was found for targeted token by the name of " + r
                                            };
                                            d20.textchat.incoming(!1, s)
                                        }
                                        return i
                                    }),
                                    d20.engine.nextTargetCallback = !1,
                                    d[f] = e,
                                    void x())
                                }
                                ,
                                void 0 !== d[f] ? _.defer(function() {
                                    d20.engine.nextTargetCallback(d[f])
                                }) : (setMode("targeting"),
                                $("#targetinginstructions .targetname").text(ucfirst(f))),
                                e = !0,
                                "%${currentTarget|" + l + "}"
                            }
                            if (a && s || (a || d20.Campaign.characters.each(function(e) {
                                return e.get("name").toLowerCase() == charname.toLowerCase() || e.id === charname ? (a = e,
                                !1) : void 0
                            }),
                            !s && a && a.abilities.each(function(e) {
                                return e.get("name").toLowerCase() == l.toLowerCase() || e.id === l ? (s = e,
                                c = s.get("action"),
                                !1) : void 0
                            }),
                            !s && a && d20.journal.customSheets && d20.journal.customSheets.availableRolls && void 0 !== d20.journal.customSheets.availableRolls[l.toLowerCase()] && (s = d20.journal.customSheets.availableRolls[l.toLowerCase()],
                            c = s)),
                            !(a && s && a.currentPlayerControls())) {
                                if (!t) {
                                    var g = {
                                        who: "error",
                                        type: "error",
                                        content: "No ability was found for %{" + charname + "|" + l + "}"
                                    };
                                    d20.textchat.incoming(!1, g)
                                }
                                return i
                            }
                            i = c;
                            var m = {};
                            h && a.attribs.each(function(e) {
                                e.get("name").substring(0, h.length) === h && (m[e.get("name").substring(h.length, e.get("name").length)] = !0)
                            });
                            var v = /(@{[^}]+})/gm;
                            return i = i.replace(v, function(e) {
                                var i = e.substring(2, e.length - 1)
                                  , n = i.split("|");
                                if (n.length > 1 && "max" !== n[1])
                                    return e;
                                var r = void 0 !== h ? h.split("_")[1] : "";
                                if ("repeating_" === n[0].substring(0, 10) && -1 !== n[0].indexOf("$")) {
                                    var o = n[0].split("_");
                                    if (o.length > 3 && void 0 !== o[2] && "$" === o[2].substring(0, 1)) {
                                        var s = parseInt(o[2].replace("$", ""), 10)
                                          , l = []
                                          , c = o[0] + "_" + o[1];
                                        if (a.attribs.each(function(e) {
                                            if (e.get("name").toLowerCase().substring(0, c.length) === c.toLowerCase()) {
                                                var t = e.get("name").split("_");
                                                t.length > 2 && void 0 !== t[2] && l.push(t[2])
                                            }
                                        }),
                                        l = _.uniq(l),
                                        l = a.repeatingKeyOrder(l, c),
                                        void 0 !== l[s])
                                            o[2] = l[s],
                                            n[0] = o.join("_");
                                        else if (!t) {
                                            var d = {
                                                who: "error",
                                                type: "error",
                                                content: "You tried to use the repeating section row at index " + s + " for " + c + ", but there doesn't seem to be a row at that index."
                                            };
                                            d20.textchat.incoming(!1, d)
                                        }
                                    }
                                }
                                return h && void 0 !== m[n[0]] ? "@{" + a.get("name") + "|" + h + n[0] + (2 == n.length ? "|" + n[1] : "") + "}" : h && d20.journal.customSheets && void 0 !== d20.journal.customSheets.availableAttributes[("repeating_" + r + "_" + n[0]).toLowerCase()] && void 0 === d20.journal.customSheets.availableAttributes[n[0].toLowerCase()] ? "@{" + a.get("name") + "|" + h + n[0] + (2 == n.length ? "|" + n[1] : "") + "}" : "@{" + a.get("name") + "|" + n[0] + (2 == n.length ? "|" + n[1] : "") + "}"
                            }),
                            i = i.replace(/\(~[^\)]+\)/g, function(e) {
                                var t = e.split("|");
                                if (t.length < 2) {
                                    var i = e.substring(2, e.length);
                                    if (h && "repeating_" === i.substring(0, 10)) {
                                        var n = i.split("_");
                                        i = h + n.splice(2).join("_")
                                    }
                                    return "(~" + a.id + "|" + i
                                }
                                return e
                            })
                        }),
                        o.content = o.content.replace(p, function(e) {
                            return void 0 !== l[e] ? l[e] : e
                        }),
                        o.content = o.content.replace(y, function(i) {
                            var n, r, a, s, l, c, h;
                            i = i.substring(2, i.length - 1);
                            var u = i.split("|")
                              , p = "current"
                              , f = !1;
                            if (4 == u.length && (n = u[1],
                            r = u[0],
                            l = u[2],
                            c = u[3],
                            a = d20.Campaign.characters.get(r),
                            a && (s = a.attribs.get(n))),
                            !a)
                                if (l = u[0],
                                c = u[1],
                                u.length > 2 && ("max" == (u[2] + "").toLowerCase() || "max" == (u[3] + "").toLowerCase()) && (p = "max"),
                                "selected" == l.toLowerCase()) {
                                    if (!o.currentSelected)
                                        throw "You attempted to use a roll command looking for the value of a selected token, but no tokens are selected.";
                                    var g = m(c, o.currentSelected.model, p);
                                    if (void 0 !== g)
                                        return g;
                                    if ("" !== o.currentSelected.model.get("represents")) {
                                        if (a = d20.Campaign.characters.get(o.currentSelected.model.get("represents")),
                                        "character_name" === c.toLowerCase())
                                            return a.get("name");
                                        if ("character_id" === c.toLowerCase())
                                            return a.id
                                    }
                                } else {
                                    if ("target" === l.toLowerCase()) {
                                        if (e || d20.engine.nextTargetCallback)
                                            return "@{" + i + "}";
                                        var v = (d20.engine.mode + "",
                                        "target");
                                        if (u.length > 2 && (v = u[1],
                                        c = u[2]),
                                        !c)
                                            throw "Syntax Error: You must specify a valid attribute to fetch from the target.";
                                        return d20.engine.nextTargetCallback = function(e) {
                                            return e === !1 ? (d20.engine.nextTargetCallback = !1,
                                            k(),
                                            void setTimeout(function() {
                                                if ("targeting" != d20.engine.mode)
                                                    for (var e = 0; e < origtoken.length; e++)
                                                        d20.engine.select(origtoken[e])
                                            }, 500)) : (o.content = o.content.replace(/@\${currentTarget\|[^}]+}/, function(i) {
                                                var n = i.split("|")[1].replace("}", "")
                                                  , r = m(n, e.model, p);
                                                if (void 0 !== r)
                                                    return r;
                                                if ("" !== e.model.get("represents")) {
                                                    var o = d20.Campaign.characters.get(e.model.get("represents"));
                                                    if (o)
                                                        return "character_name" === c.toLowerCase() ? o.get("name") : "character_id" === c.toLowerCase() ? o.id : "@{TARGET:" + v + "|" + n + ("max" === p ? "|max" : "") + "}";
                                                    console.log("Couldn't find character that represents this token.")
                                                }
                                                if (!t) {
                                                    var a = {
                                                        who: "error",
                                                        type: "error",
                                                        content: "No attribute was found for targeted token by the name of " + n
                                                    };
                                                    d20.textchat.incoming(!1, a)
                                                }
                                                return ""
                                            }),
                                            d20.engine.nextTargetCallback = !1,
                                            d[v] = e,
                                            x(),
                                            void setTimeout(function() {
                                                if ("targeting" != d20.engine.mode)
                                                    for (var e = 0; e < origtoken.length; e++)
                                                        d20.engine.select(origtoken[e])
                                            }, 500))
                                        }
                                        ,
                                        void 0 !== d[v] ? _.defer(function() {
                                            d20.engine.nextTargetCallback(d[v])
                                        }) : ("targeting" != d20.engine.mode && (origtoken = d20.engine.selected()),
                                        setMode("targeting"),
                                        $("#targetinginstructions .targetname").text(ucfirst(v))),
                                        e = !0,
                                        "@${currentTarget|" + c + "}"
                                    }
                                    if ("tracker" === l.toLowerCase()) {
                                        var y, b = d20.Campaign.initiativewindow.cleanList();
                                        if (_.each(b, function(e) {
                                            if (e.custom.toLowerCase() === c.toLowerCase())
                                                return y = e.pr,
                                                !1;
                                            if (e.id) {
                                                var t = d20.Campaign.activePage().thegraphics.get(e.id);
                                                if (t && t.get("name").toLowerCase() === c.toLowerCase())
                                                    return y = e.pr,
                                                    !1
                                            }
                                        }),
                                        void 0 !== y)
                                            return y;
                                        if (!t) {
                                            var w = {
                                                who: "error",
                                                type: "error",
                                                content: "No turn order item was found by the name " + c
                                            };
                                            d20.textchat.incoming(!1, w)
                                        }
                                        return ""
                                    }
                                }
                            if ("repeating_" === c.substring(0, 10)) {
                                var E = c.split("_");
                                h = "repeating_" + E[1] + "_" + E[2] + "_"
                            }
                            if (!(a && s || (!a && "TARGET:" === l.substring(0, 7) && d[l.substring(7, l.length)] && (a = d20.Campaign.characters.get(d[l.substring(7, l.length)].model.get("represents")),
                            f = !0),
                            a || d20.Campaign.characters.each(function(e) {
                                return e.get("name").toLowerCase() == l.toLowerCase() ? (a = e,
                                !1) : void 0
                            }),
                            s || !a))) {
                                if ("repeating_" === c.substring(0, 10) && -1 !== c.indexOf("$")) {
                                    var T = c.split("_");
                                    if (T.length > 3 && void 0 !== T[2] && "$" === T[2].substring(0, 1)) {
                                        var C = parseInt(T[2].replace("$", ""), 10)
                                          , R = []
                                          , S = T[0] + "_" + T[1];
                                        if (a.attribs.each(function(e) {
                                            if (e.get("name").toLowerCase().substring(0, S.length) === S.toLowerCase()) {
                                                var t = e.get("name").split("_");
                                                t.length > 2 && void 0 !== t[2] && R.push(t[2])
                                            }
                                        }),
                                        R = _.uniq(R),
                                        R = a.repeatingKeyOrder(R, S),
                                        void 0 !== R[C])
                                            T[2] = R[C],
                                            c = T.join("_");
                                        else if (!t) {
                                            var w = {
                                                who: "error",
                                                type: "error",
                                                content: "You tried to use the repeating section row at index " + C + " for " + S + ", but there doesn't seem to be a row at that index."
                                            };
                                            d20.textchat.incoming(!1, w)
                                        }
                                    }
                                }
                                s = a.attribs.find(function(e) {
                                    return e.get("name").toLowerCase() === c.toLowerCase()
                                })
                            }
                            if (!a) {
                                var w = {
                                    who: "error",
                                    type: "error",
                                    content: "No character was found for '" + l + "'"
                                };
                                return d20.textchat.incoming(!1, w),
                                i
                            }
                            var M = {};
                            h && a.attribs.each(function(e) {
                                e.get("name").substring(0, h.length) === h && (M[e.get("name").substring(h.length, e.get("name").length)] = !0)
                            });
                            var A = function(e) {
                                var t = /(@{[^}]+})/gm;
                                return e = (e + "").replace(t, function(e) {
                                    var t = e.substring(2, e.length - 1)
                                      , i = t.split("|");
                                    if (i.length > 1 && "max" !== i[1])
                                        return e;
                                    var n = void 0 !== h ? h.split("_")[1] : "";
                                    return h && void 0 !== M[i[0]] ? "@{" + (f ? l : a.get("name")) + "|" + h + i[0] + (2 == i.length ? "|" + i[1] : "") + "}" : h && d20.journal.customSheets && void 0 !== d20.journal.customSheets.availableAttributes[("repeating_" + n + "_" + i[0]).toLowerCase()] && void 0 === d20.journal.customSheets.availableAttributes[i[0].toLowerCase()] ? "@{" + (f ? l : a.get("name")) + "|" + h + i[0] + (2 == i.length ? "|" + i[1] : "") + "}" : "@{" + (f ? l : a.get("name")) + "|" + i[0] + (2 == i.length ? "|" + i[1] : "") + "}"
                                }),
                                e = e.replace(/\(~[^\)]+\)/g, function(e) {
                                    var t = e.split("|");
                                    if (t.length < 2) {
                                        var i = e.substring(2, e.length);
                                        if (h && "repeating_" === i.substring(0, 10)) {
                                            var n = i.split("_");
                                            i = h + n.splice(2).join("_")
                                        }
                                        return "(~" + a.id + "|" + i
                                    }
                                    return e
                                })
                            }
                            ;
                            if ("character_name" === c)
                                return a.get("name");
                            if ("character_id" === c)
                                return a.id;
                            var H = void 0;
                            if (s && (a.currentPlayerControls() || f === !0) && (H = s.get("max" == p ? "max" : "current")),
                            void 0 !== H && "" !== H)
                                return A(H);
                            var P = void 0
                              , O = (c + ("max" === p ? "_max" : "")).toLowerCase();
                            if ("repeating_" === O.substring(0, 10) && (!d20.journal.customSheets || void 0 === d20.journal.customSheets.availableAttributes[O])) {
                                var D = O.split("_");
                                isNaN(D[2]) && "-" !== D[2].substring(0, 1) || (D.splice(2, 1),
                                O = D.join("_"))
                            }
                            if ((a.currentPlayerControls() || f === !0) && d20.journal.customSheets && d20.journal.customSheets.availableAttributes && void 0 !== d20.journal.customSheets.availableAttributes[O]) {
                                var L = d20.journal.customSheets.availableAttributes[O];
                                P = L
                            }
                            if (void 0 !== H && void 0 === P)
                                return A(H);
                            if (void 0 !== P)
                                return A(P);
                            if (!t) {
                                var w = {
                                    who: "error",
                                    type: "error",
                                    content: "No attribute was found for @{" + l + "|" + c + "}"
                                };
                                d20.textchat.incoming(!1, w)
                            }
                            return i
                        }),
                        w++,
                        e)
                            return;
                        void 0 !== window.logRolls && console.log(o.content),
                        o.content == b || w > 99 ? (console.log("Finished after going " + w + " levels deep."),
                        S()) : (b = o.content,
                        x())
                    } catch (i) {
                        var n = {
                            who: "error",
                            type: "error",
                            content: i + ""
                        };
                        d20.textchat.incoming(!1, n)
                    }
                }
                  , E = function() {
                    var e = /{{[\s\S]*?}}/g;
                    o.content = o.content.replace(e, function(e) {
                        return e.replace(/\n/g, "%NEWLINE%")
                    });
                    var i = o.content.split("\n")
                      , n = []
                      , r = 0
                      , s = function() {
                        if (n && !(r < n.length)) {
                            for (var e = 0; e < n.length; e++)
                                if ("noop" !== n[e])
                                    if (n[e]._fbid) {
                                        console.log("Found existing ID!");
                                        var i = n[e]._fbid;
                                        delete n[e]._fbid,
                                        d20.textchat.talktomyself ? (n[e].id = i,
                                        n[e].timestamp = (new Date).getTime(),
                                        d20.textchat.incoming(!0, n[e])) : t.child(i).setWithPriority(n[e], Firebase.ServerValue.TIMESTAMP)
                                    } else if (d20.textchat.talktomyself)
                                        n[e].id = t.push().key(),
                                        n[e].timestamp = (new Date).getTime(),
                                        d20.textchat.incoming(!0, n[e]);
                                    else {
                                        var o = t.push().key();
                                        t.child(o).setWithPriority(n[e], Firebase.ServerValue.TIMESTAMP)
                                    }
                            k(),
                            n = null
                        }
                    }
                      , l = 0;
                    _.each(i, function(e) {
                        n.push(!1);
                        var t = _.clone(o);
                        t.content = e,
                        t.content = t.content.replace(/%NEWLINE%/g, "<br/>\n");
                        var i, c = l + 0, d = function(e) {
                            if ("object" == typeof e && (t.inlinerolls && (e.inlinerolls = t.inlinerolls),
                            i && (e.rolltemplate = i),
                            delete e.currentSelected,
                            delete e.opts,
                            "api" == e.type)) {
                                var o = d20.engine.selected();
                                o && o.length > 0 && (e.selected = [],
                                _.each(o, function(t) {
                                    return void 0 == t.model ? !0 : void e.selected.push({
                                        _type: "image" == t.model.get("type") ? "graphic" : t.model.get("type"),
                                        _id: t.model.id
                                    })
                                }))
                            }
                            n[c] = e,
                            r++,
                            _.defer(function() {
                                s()
                            })
                        }
                        , h = function() {
                            console.log("Inline rolls complete!"),
                            a || (t.content = t.content.replace(v, function(e) {
                                e = e.substring(2, e.length - 1),
                                t.opts || (t.opts = {});
                                for (var i = e.split(","), n = 0; n < i.length; n++) {
                                    var r = i[n].split(":");
                                    t.opts[r[0]] = r.length > 1 ? r[1] : !0
                                }
                                return ""
                            })),
                            t.opts && void 0 !== t.opts.template && (i = t.opts.template),
                            "//" === t.content.substring(0, 2) ? d("noop") : a || "/" != t.content.substring(0, 1) ? (a || "!" != t.content.substring(0, 1) || (t.type = "api"),
                            d(t)) : u(t, d)
                        }
                        ;
                        a ? h() : (console.log("Begin processing op!"),
                        T(t, h)),
                        d20.textchat.diceengine.flushRemoteQueue(),
                        l++
                    })
                }
                  , T = function(e, t) {
                    var i = []
                      , n = 0
                      , r = 0
                      , o = function() {
                        n > r || (e.inlinerolls = i,
                        t())
                    }
                      , a = function(t, r) {
                        for (var o = [], a = [], l = !1, c = !1, d = 0, h = !1; !h; ) {
                            for (var u = 0; u < t.length; u++)
                                if ("[" === t[u])
                                    if ("[" === t[u - 1]) {
                                        if (d++,
                                        "$" === t[u - 2]) {
                                            l = !0;
                                            continue
                                        }
                                        o.push(u - 1)
                                    } else
                                        "[" === t[u + 1] || (c = !0);
                                else if ("]" === t[u]) {
                                    if (c) {
                                        c = !1,
                                        a.push(u);
                                        continue
                                    }
                                    if ("]" === t[u - 1] && -1 === a.indexOf(u - 1)) {
                                        if (d--,
                                        l) {
                                            l = !1;
                                            continue
                                        }
                                        var p = o.slice(-1)[0]
                                          , f = t.substring(p, u + 1);
                                        if (-1 !== f.indexOf("$[[")) {
                                            console.log("There's a nested inline roll in here. Ignore for now");
                                            continue
                                        }
                                        if (function() {
                                            var o = n + 0
                                              , a = d + 0;
                                            n++,
                                            t = t.substring(0, p) + "$[[" + o + "]]" + t.substring(u + 1, t.length),
                                            e.content = t,
                                            s(f, o, function() {
                                                console.log("Finished " + o),
                                                console.log("Levels deep: " + a),
                                                a > 0 && (console.log("Substituting for " + o),
                                                e.content = e.content.replace("$[[" + o + "]]", i[o].results.total)),
                                                r()
                                            })
                                        }(),
                                        console.log("Levels deep: " + d),
                                        d > 0)
                                            return void d20.textchat.diceengine.flushRemoteQueue();
                                        break
                                    }
                                }
                            h = !0
                        }
                        r(t)
                    }
                      , s = function(t, n, o) {
                        t = $.trim(t.substring(2, t.length - 2));
                        var a = {};
                        t = t.replace(v, function(e) {
                            e = e.substring(2, e.length - 1);
                            for (var t = e.split(","), i = 0; i < t.length; i++) {
                                var n = t[i].split(":");
                                a[n[0]] = n.length > 1 ? n[1] : !0
                            }
                            return ""
                        }),
                        d20.textchat.diceengine.process(t, function(s, l, c, d) {
                            if (d20.textchat.globalrolled++,
                            s.rolls && s.rolls.length > 0)
                                try {
                                    _.each(s.rolls, function(e) {
                                        if (e.table) {
                                            d20.utils.stattracker.rolltables || (d20.utils.stattracker.rolltables = !0);
                                            var t = d20.Campaign.rollabletables.findTableByName(e.table)
                                              , i = t.getWeightedArray();
                                            t && _.each(e.results, function(e) {
                                                e.tableItem = t.tableitems.get(i[e.tableidx]).toJSON()
                                            })
                                        }
                                    })
                                } catch (h) {
                                    console.log("ERROR matching table"),
                                    console.log(h)
                                }
                            i[n] = {
                                expression: t,
                                results: s,
                                signature: c,
                                rollid: l
                            },
                            d && (i[n].tdseed = d),
                            a.tracker && g(e.currentSelected, s, a.tracker),
                            r++,
                            o()
                        })
                    }
                      , l = ""
                      , c = function() {
                        l !== e.content ? (l = e.content,
                        a(e.content + "", c)) : o()
                    }
                    ;
                    a(e.content + "", c)
                }
                  , C = /(\?{[^}]+})/m
                  , R = 0
                  , S = function() {
                    var e = !1;
                    o.content = o.content.replace(C, function(t) {
                        if (R > 99)
                            return t;
                        e = !0,
                        R++,
                        t = $.trim(t.substring(2, t.length - 1));
                        var i = t.split("|");
                        if (t = i[0],
                        console.log(i.length),
                        void 0 !== c[t])
                            return _.defer(function() {
                                S()
                            }),
                            c[t];
                        if (i.length <= 2)
                            var n = $("<div><p style='font-size: 1.15em;'><strong>" + d20.utils.strip_tags(t) + ":</strong> <input type='text' style='width: 75px; margin-left: 5px;'></p></div>");
                        else {
                            options = [],
                            i.each(function(e) {
                                opt = e.split(","),
                                optlabel = opt[0],
                                optvalue = opt[1] ? opt[1] : opt[0],
                                optvalue = optvalue.replace(/'/g, "&#39"),
                                opt != t && options.push("<option value='" + d20.utils.strip_tags(optvalue) + "'>" + d20.utils.strip_tags(optlabel) + "</option>")
                            });
                            var n = $("<div><p style='font-size: 1.15em;'><strong>" + d20.utils.strip_tags(t) + ":</strong> <select style='width: 150px; margin-left: 5px;'>" + options.join("") + "</select></p></div>")
                        }
                        return n.dialog({
                            title: "Input Value",
                            beforeClose: function() {
                                return !1
                            },
                            buttons: {
                                Submit: function() {
                                    i.length < 3 ? (c[t] = n.find("input").val(),
                                    o.content = o.content.replace("?${1}", n.find("input").val())) : (c[t] = n.find("select").val(),
                                    o.content = o.content.replace("?${1}", n.find("select").val())),
                                    n.off(),
                                    n.dialog("destroy").remove(),
                                    S(),
                                    d20.textchat.$textarea.focus()
                                },
                                Cancel: function() {
                                    n.off(),
                                    n.dialog("destroy").remove(),
                                    k()
                                }
                            }
                        }),
                        n.on("keydown", "input, select", function(e) {
                            13 == e.which && (i.length < 3 ? (c[t] = n.find("input").val(),
                            o.content = o.content.replace("?${1}", n.find("input").val())) : (c[t] = n.find("select").val(),
                            o.content = o.content.replace("?${1}", n.find("select").val())),
                            n.off(),
                            n.dialog("destroy").remove(),
                            S(),
                            e.stopPropagation(),
                            e.preventDefault(),
                            d20.textchat.$textarea.focus())
                        }),
                        _.defer(function() {
                            i.length <= 2 ? (2 === i.length && n.find("input").val(i[1]).select(),
                            n.find("input").focus()) : n.find("select").focus()
                        }),
                        "?${1}"
                    }),
                    e || E()
                }
                  , k = function() {
                    x = null ,
                    T = null ,
                    E = null ,
                    S = null ,
                    inlinerolls = null ,
                    o = null ,
                    b = null ,
                    c = null ,
                    d = null ,
                    d20.engine.mode !== h && setMode(h),
                    h = null
                }
                ;
                a ? E() : x()
            }
        }
        ,
        $("#textchat-input").on("click", "button", function() {
            var e = $.trim(d20.textchat.$textarea.val());
            d20.textchat.doChatInput(e),
            d20.textchat.$textarea.val("").focus()
        });
        var v = !1
          , y = function(e) {
            var t = (new Date).getTime();
            v && 3e3 > t - v || d20.textchat.talktomyself || (v = t,
            d20.textchat.sendShout({
                type: "istyping",
                playerid: window.currentPlayer.id,
                content: e,
                time: (new Date).getTime()
            }))
        }
        ;
        d20.textchat.$textarea.bind("keyup", function() {
            var e = $(this).val();
            if (e.length > 1 && "#" != e.substring(0, 1)) {
                var t = !1;
                if ("/as " === e.substring(0, 4) || "/emas " === e.substring(0, 6)) {
                    e = e.replace("/as ", "").replace("/emas ", "");
                    var i = e.match(/ /g);
                    if (null == i || i.length < 2)
                        return;
                    var n = e.match(/"/g);
                    if ('"' === e[0] && null !== n && n.length < 2)
                        return;
                    var r = e.match(/\w+|"[^"]+"/);
                    null != r && r.length && r.length > 0 && (t = '"' === r[0][0] ? r[0].substring(1, r[0].length - 1) : r[0])
                } else
                    "/ooc " === e.substring(0, 5) || "/o " === e.substring(0, 3) || "/desc " === e.substring(0, 6) || "/em " === e.substring(0, 4) || "/me " === e.substring(0, 4) || "/e " === e.substring(0, 3) ? t = d20.textchat.$speakingas.find("option:first-child").text() : "/" !== e.substring(0, 1) && (t = d20.textchat.$speakingas.find("option:selected").text());
                t && y(t)
            }
        }),
        d20.textchat.$textarea.bind("keydown", function(e) {
            if (13 === e.which) {
                if (s)
                    return !1;
                if (e.shiftKey === !0)
                    return;
                $(this).parent().find("button").trigger("click"),
                e.preventDefault()
            }
        }),
        d20.textchat.$textarea.bind("keyup", "up", function() {
            var e = d20.textchat.commandhistory[d20.textchat.commandhistory.length + d20.textchat.commandIndex];
            ("" == $(this).val() || $(this).val() == e) && (Math.abs(d20.textchat.commandIndex) < d20.textchat.commandhistory.length + 1 && (d20.textchat.commandIndex = d20.textchat.commandIndex - 1),
            $(this).val(d20.textchat.commandhistory[d20.textchat.commandhistory.length + d20.textchat.commandIndex]))
        }),
        d20.textchat.$textarea.bind("keyup", "down", function() {
            var e = d20.textchat.commandhistory[d20.textchat.commandhistory.length + d20.textchat.commandIndex];
            ("" == $(this).val() || $(this).val() == e) && (d20.textchat.commandIndex < 0 && (d20.textchat.commandIndex = d20.textchat.commandIndex + 1),
            $(this).val(d20.textchat.commandhistory[d20.textchat.commandhistory.length + d20.textchat.commandIndex]))
        });
        var b = function(e, t) {
            return e.substring(0, t.selectionStart).match(/[\w\xe4\xf6\xfc\xc4\xd6\xdc\xdf#%{]+$/)
        }
          , w = function(e, t) {
            if (e.setSelectionRange)
                e.setSelectionRange(t, t);
            else if (e.createTextRange) {
                var i = e.createTextRange();
                i.collapse(!0),
                i.moveEnd("character", t),
                i.moveStart("character", t),
                i.select()
            }
        }
        ;
        d20.textchat.$textarea.autocomplete({
            delay: 100,
            autoFocus: !0,
            position: {
                my: "left top",
                at: "left bottom"
            },
            source: function(e, t) {
                var i = b(e.term, d20.textchat.$textarea[0]);
                if (i = null != i ? i[0] : "",
                "%" === i[0] && "{" !== i[1] && (i = "%{" + i.substring(1, i.length)),
                "#" == i.substring(0, 1)) {
                    var n = [];
                    d20.Campaign.players.each(function(e) {
                        e.macros.each(function(t) {
                            return "" == t.get("name") ? !0 : void ((e.id == window.currentPlayer.id || t.visibleToCurrentPlayer()) && n.push("#" + t.get("name")))
                        })
                    });
                    var r = $.ui.autocomplete.filter(n, i);
                    t(r)
                } else if ("/w " == e.term.substring(0, 3) && e.term.split(" ").length < 3) {
                    var r = $.ui.autocomplete.filter(_.union(["gm"], d20.Campaign.players.map(function(e) {
                        return e.get("displayname").split(" ")[0]
                    }), d20.Campaign.characters.map(function(e) {
                        var t = e.get("inplayerjournals").split(",");
                        return window.is_gm || -1 !== _.indexOf(t, "all") || window.currentPlayer && -1 !== _.indexOf(t, window.currentPlayer.id) ? e.get("name").split(" ")[0] : !1
                    })), i);
                    t(r)
                } else if ("%{" === i.substring(0, 2)) {
                    var n = [];
                    d20.Campaign.characters.each(function(e) {
                        e.currentPlayerControls() && e.abilities.each(function(t) {
                            -1 !== t.get("name").toLowerCase().indexOf(i.substring(2, i.lenght).toLowerCase()) && n.push("%{" + e.get("name") + "|" + t.get("name") + "}")
                        })
                    }),
                    t(n)
                } else
                    t([])
            },
            focus: function() {
                return !1
            },
            select: function(e, t) {
                t.item.value += " ";
                var i = b(this.value, this)[0]
                  , n = this.value.substring(0, this.selectionStart - i.length);
                this.value = n + t.item.value + this.value.substring(this.selectionStart, this.value.length);
                var r = n.length + t.item.value.length;
                return w(this, r),
                e.preventDefault(),
                !1
            },
            search: function() {
                var e = b(this.value, this);
                return null != e
            },
            open: function() {
                s = !0
            },
            close: function() {
                setTimeout(function() {
                    s = !1
                }, 250)
            }
        });
        var x = $("#textchat .content");
        d20.textchat.incoming = function(t, i, s, l) {
            var d = i.type;
            if ("api" !== i.type) {
                if (d20.tutorial && d20.tutorial.active && $(document).trigger("receivedChat", i),
                null === i.timestamp)
                    i.timestamp = "";
                else {
                    var h = i.timestamp
                      , u = Date.create(h)
                      , p = (new Date).getTime();
                    i.timestamp = u.format(864e5 > p - h ? "{h}:{mm}{TT}" : "{{Month}} {{dd}}, {{yyyy}} {h}:{mm}{TT}")
                }
                if (d20.Campaign && i.playerid != window.currentPlayer.id && (delete c[i.playerid],
                d20.textchat.updateWhoIsTyping()),
                "gmrollresult" == i.type) {
                    if (!window.is_gm && i.playerid != window.currentPlayer.id)
                        return void console.log("ignoring message, not gm, and not original player.");
                    d = "rollresult"
                }
                if ("whisper" == i.type)
                    if (i.playerid == window.currentPlayer.id)
                        d = "whispersent";
                    else {
                        if (d = "whisperreceived",
                        "gm" == i.target) {
                            if (!window.is_gm)
                                return
                        } else if (-1 === i.target.indexOf(window.currentPlayer.id))
                            return;
                        e = i
                    }
                if (d20.Campaign) {
                    var f = x.height()
                      , g = $(window).height()
                      , m = d20.textchat.$textchat.scrollTop()
                      , v = !1;
                    g > f - m - 200 && (v = !0)
                }
                if ("rollresult" == d && i.origRoll) {
                    d = "newroll";
                    try {
                        var y = JSON.parse(i.content);
                        i.signature && (d20.textchat.verifyRoll(i.id, y, i.signature) ? i.passedSignature = !0 : i.failedSignature = !0),
                        i.htmlcontent = d20.dice_formatter.getHtmlForResult(y),
                        i.sanitizedOrigRoll = d20.dice_formatter.replaceInlineRolls(i.origRoll, i)
                    } catch (b) {
                        return
                    }
                } else
                    "rollresult" == d && "object" == typeof i.content && (i.content = i.content.origformula + "|" + i.content.formula + "|" + i.content.total);
                var w;
                if (w = $("#tmpl_chatmessage_" + d),
                l) {
                    var E = x.find(".message[data-messageid=" + i.id + "]");
                    i.showname = E.find(".avatar").length > 0 ? !0 : !1
                } else
                    (i.who !== n || r > 5) && (i.showname = !0,
                    r = 0);
                if (i.rolltemplate || "rollresult" == d || "newroll" == d || "tokenroll" == d || "direct" == d || (i.content = Markdown.parse(i.content + "").autoLink()),
                i.rolltemplate) {
                    for (var T, C = {}, R = /{{([\s\S]*?}?)}}/gi; null != (T = R.exec(i.content)); ) {
                        T.index === R.lastIndex && R.lastIndex++;
                        var S = T[1] + ""
                          , k = S.split("=");
                        C[k[0]] = S.substring(k[0].length + 1, S.length)
                    }
                    $.each(C, function(e, t) {
                        C[e] = t.replace(/\^{([^}]+)}/g, function(e, t) {
                            return t = $.trim(t),
                            i18n(t, '<span style="color: red;">[' + t + "]</span>")
                        });
                        var i = e.replace(/\^{([^}]+)}/g, function(e, t) {
                            return t = $.trim(t),
                            i18n(t, "[" + t + "]")
                        });
                        i !== e && (C[i] = C[e],
                        delete C[e])
                    }),
                    C["rollWasCrit()"] = function() {
                        return function(e, t, n) {
                            try {
                                var r = n.join(" ");
                                if (void 0 !== C[r] && "string" == typeof C[r]) {
                                    var o = C[r].split("$[[")[1].split("]]")[0];
                                    if (i.inlinerolls[o] && d20.dice_formatter.checkForCrits(i.inlinerolls[o].results.rolls, "crit"))
                                        return t(e)
                                }
                            } catch (a) {
                                console.log("Error while checking for crit in roll...")
                            }
                            return null
                        }
                    }
                    ,
                    C["^rollWasCrit()"] = function() {
                        return function(e, t, n) {
                            try {
                                var r = n.join(" ");
                                if (void 0 !== C[r] && "string" == typeof C[r]) {
                                    var o = C[r].split("$[[")[1].split("]]")[0];
                                    if (i.inlinerolls[o] && !d20.dice_formatter.checkForCrits(i.inlinerolls[o].results.rolls, "crit"))
                                        return t(e)
                                }
                            } catch (a) {
                                console.log("Error while checking for crit in roll...")
                            }
                            return null
                        }
                    }
                    ,
                    C["rollWasFumble()"] = function() {
                        return function(e, t, n) {
                            try {
                                var r = n.join(" ");
                                if (void 0 !== C[r] && "string" == typeof C[r]) {
                                    var o = C[r].split("$[[")[1].split("]]")[0];
                                    if (i.inlinerolls[o] && d20.dice_formatter.checkForCrits(i.inlinerolls[o].results.rolls, "fumble"))
                                        return t(e)
                                }
                            } catch (a) {
                                console.log("Error while checking for fumble in roll...")
                            }
                            return null
                        }
                    }
                    ,
                    C["^rollWasFumble()"] = function() {
                        return function(e, t, n) {
                            try {
                                var r = n.join(" ");
                                if (void 0 !== C[r] && "string" == typeof C[r]) {
                                    var o = C[r].split("$[[")[1].split("]]")[0];
                                    if (i.inlinerolls[o] && !d20.dice_formatter.checkForCrits(i.inlinerolls[o].results.rolls, "fumble"))
                                        return t(e)
                                }
                            } catch (a) {
                                console.log("Error while checking for fumble in roll...")
                            }
                            return null
                        }
                    }
                    ,
                    C["rollTotal()"] = function() {
                        return function(e, t, n) {
                            try {
                                var r = n[0]
                                  , o = n[1];
                                if (lookingForTotal = void 0 !== o && isNaN(o) ? i.inlinerolls[C[o].split("$[[")[1].split("]]")[0]].results.total : o,
                                void 0 !== C[r] && "string" == typeof C[r]) {
                                    var a = C[r].split("$[[")[1].split("]]")[0];
                                    if (i.inlinerolls[a] && i.inlinerolls[a].results.total === parseInt(lookingForTotal, 10))
                                        return t(e)
                                }
                            } catch (s) {
                                console.log("Error while checking for roll total...")
                            }
                            return null
                        }
                    }
                    ,
                    C["^rollTotal()"] = function() {
                        return function(e, t, n) {
                            try {
                                var r = n[0]
                                  , o = n[1];
                                if (lookingForTotal = void 0 !== o && isNaN(o) ? i.inlinerolls[C[o].split("$[[")[1].split("]]")[0]].results.total : o,
                                void 0 !== C[r] && "string" == typeof C[r]) {
                                    var a = C[r].split("$[[")[1].split("]]")[0];
                                    if (i.inlinerolls[a] && i.inlinerolls[a].results.total !== parseInt(lookingForTotal, 10))
                                        return t(e)
                                }
                            } catch (s) {
                                console.log("Error while checking for roll total...")
                            }
                            return null
                        }
                    }
                    ,
                    C["rollGreater()"] = function() {
                        return function(e, t, n) {
                            try {
                                var r = n[0]
                                  , o = n[1];
                                if (lookingForTotal = void 0 !== o && isNaN(o) ? i.inlinerolls[C[o].split("$[[")[1].split("]]")[0]].results.total : o,
                                void 0 !== C[r] && "string" == typeof C[r]) {
                                    var a = C[r].split("$[[")[1].split("]]")[0];
                                    if (i.inlinerolls[a] && i.inlinerolls[a].results.total > parseInt(lookingForTotal, 10))
                                        return t(e)
                                }
                            } catch (s) {
                                console.log("Error while checking for roll total...")
                            }
                            return null
                        }
                    }
                    ,
                    C["^rollGreater()"] = function() {
                        return function(e, t, n) {
                            try {
                                var r = n[0]
                                  , o = n[1];
                                if (lookingForTotal = void 0 !== o && isNaN(o) ? i.inlinerolls[C[o].split("$[[")[1].split("]]")[0]].results.total : o,
                                void 0 !== C[r] && "string" == typeof C[r]) {
                                    var a = C[r].split("$[[")[1].split("]]")[0];
                                    if (i.inlinerolls[a] && i.inlinerolls[a].results.total <= parseInt(lookingForTotal, 10))
                                        return t(e)
                                }
                            } catch (s) {
                                console.log("Error while checking for roll total...")
                            }
                            return null
                        }
                    }
                    ,
                    C["rollLess()"] = function() {
                        return function(e, t, n) {
                            try {
                                var r = n[0]
                                  , o = n[1];
                                if (lookingForTotal = void 0 !== o && isNaN(o) ? i.inlinerolls[C[o].split("$[[")[1].split("]]")[0]].results.total : o,
                                void 0 !== C[r] && "string" == typeof C[r]) {
                                    var a = C[r].split("$[[")[1].split("]]")[0];
                                    if (i.inlinerolls[a] && i.inlinerolls[a].results.total < parseInt(lookingForTotal, 10))
                                        return t(e)
                                }
                            } catch (s) {
                                console.log("Error while checking for roll total...")
                            }
                            return null
                        }
                    }
                    ,
                    C["^rollLess()"] = function() {
                        return function(e, t, n) {
                            try {
                                var r = n[0]
                                  , o = n[1];
                                if (lookingForTotal = void 0 !== o && isNaN(o) ? i.inlinerolls[C[o].split("$[[")[1].split("]]")[0]].results.total : o,
                                void 0 !== C[r] && "string" == typeof C[r]) {
                                    var a = C[r].split("$[[")[1].split("]]")[0];
                                    if (i.inlinerolls[a] && i.inlinerolls[a].results.total >= parseInt(lookingForTotal, 10))
                                        return t(e)
                                }
                            } catch (s) {
                                console.log("Error while checking for roll total...")
                            }
                            return null
                        }
                    }
                    ,
                    C["rollBetween()"] = function() {
                        return function(e, t, n) {
                            try {
                                var r = n[0]
                                  , o = n[1]
                                  , a = n[2];
                                if (lookingForTotal = void 0 !== o && isNaN(o) ? i.inlinerolls[C[o].split("$[[")[1].split("]]")[0]].results.total : o,
                                lookingForTotal2 = void 0 !== a && isNaN(a) ? i.inlinerolls[C[a].split("$[[")[1].split("]]")[0]].results.total : a,
                                void 0 !== C[r] && "string" == typeof C[r]) {
                                    var s = C[r].split("$[[")[1].split("]]")[0];
                                    if (i.inlinerolls[s] && i.inlinerolls[s].results.total >= parseInt(lookingForTotal, 10) && i.inlinerolls[s].results.total <= parseInt(lookingForTotal2, 10))
                                        return t(e)
                                }
                            } catch (l) {
                                console.log("Error while checking for roll total...")
                            }
                            return null
                        }
                    }
                    ,
                    C["^rollBetween()"] = function() {
                        return function(e, t, n) {
                            try {
                                var r = n[0]
                                  , o = n[1]
                                  , a = n[2];
                                if (lookingForTotal = void 0 !== o && isNaN(o) ? i.inlinerolls[C[o].split("$[[")[1].split("]]")[0]].results.total : o,
                                lookingForTotal2 = void 0 !== a && isNaN(a) ? i.inlinerolls[C[a].split("$[[")[1].split("]]")[0]].results.total : a,
                                void 0 !== C[r] && "string" == typeof C[r]) {
                                    var s = C[r].split("$[[")[1].split("]]")[0];
                                    if (i.inlinerolls[s] && (i.inlinerolls[s].results.total < parseInt(lookingForTotal, 10) || i.inlinerolls[s].results.total > parseInt(lookingForTotal2, 10)))
                                        return t(e)
                                }
                            } catch (l) {
                                console.log("Error while checking for roll total...")
                            }
                            return null
                        }
                    }
                    ,
                    C["allprops()"] = function() {
                        return function(e, t, i) {
                            try {
                                var n = "";
                                for (var r in C)
                                    "name" !== r && -1 === i.indexOf(r) && "function" != typeof C[r] && (n += t(e.replace("{{key}}", ucfirst(r)).replace("{{value}}", C[r])));
                                return n
                            } catch (o) {
                                console.log("Error enumerating all properties")
                            }
                            return null
                        }
                    }
                    ;
                    var M = "";
                    if (d20.journal && d20.journal.customSheets && d20.journal.customSheets.rollTemplates[i.rolltemplate])
                        M = "<div class='sheet-rolltemplate-" + i.rolltemplate + "'>" + d20.journal.customSheets.rollTemplates[i.rolltemplate] + "</div>";
                    else {
                        var A = $("#sheet-rolltemplate-" + i.rolltemplate);
                        0 === A.length ? console.error("Didn't find a roll template called '" + i.rolltemplate + "'") : M = "<div class='" + A.attr("id") + "'>" + A.html() + "</div>"
                    }
                    i.content = Mustache.render(M, C),
                    i.content = Markdown.parse(i.content),
                    i.content = d20.utils.htmlTranslator(i.content, !0)
                }
                var H = w.jqote(i)
                  , P = ":last-child";
                if (l ? (E.replaceWith(H),
                P = "[data-messageid=" + i.id + "]") : x.append(H),
                ("rollresult" == i.type || "gmrollresult" == i.type) && d20.Campaign && window.currentPlayer && window.currentPlayer.get("diceiconsenabled")) {
                    x.find(".message" + P + " .rolled").draggable({
                        revert: !0,
                        distance: 10,
                        revertDuration: 0,
                        helper: "clone",
                        appendTo: "body",
                        scroll: !1
                    }).addTouch();
                    var O = x.find(".message" + P + " .formattedformula > .dicegrouping");
                    O.find(".diceroll").length < 20 && O.sortable({
                        appendTo: document.body,
                        helper: "clone",
                        distance: 10,
                        items: "> .diceroll",
                        update: function(e) {
                            d20.textchat.updateDiceOrdering(i, e)
                        }
                    }).addTouch(),
                    O = null
                }
                if (d20.Campaign && window.currentPlayer && "newroll" == d && i.playerid == window.currentPlayer.id)
                    try {
                        var D = $("#mylastrolls tbody tr").eq(0);
                        (0 == D.length || $.trim(D.find("td.formula").text()) != i.origRoll) && ($("#mylastrolls tbody").prepend($("#tmpl_recentroll").jqote(i)),
                        $("#mylastrolls tbody tr").eq(10).remove())
                    } catch (b) {}
                if (!s && x.find(".message").length > 100 && x.find(".message").eq(0).remove(),
                l || (n = "emote" == i.type || "gmrollresult" == i.type || "whisper" == i.type ? "" : i.who,
                r++),
                d20.Campaign && (v || t === !1)) {
                    var L = x.height();
                    d20.textchat.$textchat.scrollTop(L)
                }
                if (d20.Campaign && $("#chatbeepenabled").is(":checked") && (!o && !a || !d20.textchat.tabIsFocused && !d20.textchat.childWindow) && 0 != t && !d20.textchat.chatstartingup) {
                    if ((new Date).getTime() - d20.textchat.lastChatBeep > 1e3) {
                        var I = new Audio;
                        I.src = "/images/sounds/beep." + (I.canPlayType("audio/ogg") ? "ogg" : "mp3"),
                        I.play(),
                        d20.textchat.lastChatBeep = (new Date).getTime()
                    }
                    d20.textchat.tabIsFocused || $("#textchattab").addClass("alertify")
                }
                if (-1 !== document.body.className.indexOf("sidebarhidden") && $("#sidebarcontrol").addClass("alertify"),
                !d20.textchat.chatstartingup) {
                    var F;
                    void 0 !== i.tdseed ? F = i.id : void 0 !== i.inlinerolls && i.inlinerolls.length > 0 && _.each(i.inlinerolls, function(e) {
                        return void 0 !== e.tdseed ? (F = e.rollid,
                        !1) : void 0
                    }),
                    F && (x.find(".message[data-messageid=" + i.id + "]").addClass("hidden3d"),
                    d20.tddice.handleIncomingChatWith3DRoll(F, 1),
                    setTimeout(function() {
                        d20.textchat.showHidden3DRolls()
                    }, d20.tddice.canRoll3D() ? 3e3 : 2e3),
                    d20.textchat.allowed3drolls.push(F))
                }
            }
        }
        ,
        d20.textchat.showHidden3DRolls = function() {
            var e = !1;
            if (d20.Campaign) {
                var t = x.height()
                  , i = $(window).height()
                  , n = d20.textchat.$textchat.scrollTop();
                i > t - n - 200 && (e = !0)
            }
            if (x.find(".message.hidden3d").removeClass("hidden3d"),
            e) {
                var r = x.height();
                d20.textchat.$textchat.scrollTop(r)
            }
        }
        ,
        d20.textchat.verifyRoll = function(e, t, i) {
            var n = window.campaign_storage_path + "//" + e + "//" + t.total
              , r = d.subjectPublicKeyRSA.verifyString(n, i);
            return r
        }
        ,
        d20.textchat.updateDiceOrdering = function(e, i) {
            var n = $(i.target)
              , r = parseInt(n.attr("data-groupindex"), 10)
              , o = JSON.parse(e.content)
              , a = [];
            n.find(".diceroll").each(function() {
                var e = parseInt($(this).attr("data-origindex"), 10);
                return o.rolls[r] && o.rolls[r].results[e] ? void a.push(o.rolls[r].results[e]) : void console.log("ERROR: Unable to find group " + r + " or result " + e)
            }),
            o.rolls[r].results = a,
            t.child(e.id).child("content").set(JSON.stringify(o))
        }
        ,
        d20.textchat.updateWhoIsTyping = function() {
            var e = x.height()
              , t = $(window).height()
              , i = d20.textchat.$textchat.scrollTop()
              , n = !1;
            t - 150 > e - i && (n = !0);
            var r = _.values(c);
            if (0 == r.length)
                $("#whoistyping").hide();
            else {
                var o = "are";
                1 == r.length && (o = "is"),
                $("#whoistyping .names").text(r.join(", ").replace(/,$/, " and") + " " + o + " typing..."),
                $("#whoistyping").show()
            }
            if (n) {
                var a = x.height();
                d20.textchat.$textchat.scrollTop(a)
            }
        }
        ;
        var E = function(e) {
            if ("istyping" == e.type) {
                if (e.playerid == window.currentPlayer.id)
                    return;
                l[e.playerid] && clearTimeout(l[e.playerid]),
                c[e.playerid] = e.content,
                l[e.playerid] = setTimeout(function() {
                    l[e.playerid] = !1,
                    delete c[e.playerid],
                    d20.textchat.updateWhoIsTyping()
                }, 5e3),
                d20.textchat.updateWhoIsTyping()
            } else if ("shdw_update" == e.type || "shdw_kill" == e.type)
                d20.engine.handleShadows(e);
            else if ("steal_request" == e.type)
                d20.decks.steal_request(e);
            else if ("steal_response" == e.type)
                d20.decks.steal_response(e);
            else if ("measuring" == e.type)
                d20.engine.receiveMeasureUpdate(e);
            else if ("endmeasurement" == e.type)
                d20.engine.receiveEndMeasure(e);
            else if ("mapping" == e.type)
                d20.engine.receiveMapping(e);
            else if ("showhandout" == e.type)
                d20.journal.showHandoutFromShout(e);
            else if ("showcharacter" == e.type)
                d20.journal.showCharacterFromShout(e);
            else if ("showobject" == e.type) {
                if (!e.id)
                    return;
                d20.engine.zoomObject(e.id)
            } else if ("3droll" == e.type)
                d20.tddice && e.playerid !== window.currentPlayer.id && d20.tddice.remoteRoll(e);
            else if ("fx_start" == e.type || "fx_update" == e.type || "fx_kill" == e.type) {
                if (e.playerid === window.currentPlayer.id)
                    return;
                d20.fx.handleShout(e)
            } else
                "settingschanged" == e.type ? (new Date).getTime() - e.time < 5e3 && window.location.reload() : "playclickhole" == e.type && e.content.length > 2 && (window.fakeLightly && window.fakeLightly("http://v.theonion.com/onionstudios/video/" + e.content[0] + "/640.mp4"),
                setTimeout(function() {
                    $("#lightly-overlay").hide()
                }, 1e3 * e.content[2] + 2e3))
        }
        ;
        d20.textchat.startup = function() {
            var e = new Firebase(window.FIREBASE_ROOT + window.campaign_storage_path + "/");
            i = e.child("shout"),
            t = e.child("chat"),
            textchatpopped = !1;
            var n, r = !1;
            d20.textchat.sendShout = function(e) {
                !r || "istyping" !== e.type && "measuring" !== e.type && "endmeasurement" !== e.type && "fx_start" !== e.type && "fx_update" !== e.type && "fx_kill" !== e.type ? d20.tutorial && d20.tutorial.active ? E(e) : d20.textchat.shoutref.set(JSON.stringify(e)) : n.send(JSON.stringify({
                    t: "msg",
                    content: e
                }))
            }
            ,
            d20.textchat.shoutref = i,
            d20.textchat.chatstartingup = !0,
            i.on("value", function(e) {
                if (!d20.textchat.chatstartingup) {
                    var t = e.val();
                    t && E(JSON.parse(t))
                }
            });
            var o = []
              , a = function() {
                for (var e = 0; e < o.length; e++)
                    d20.textchat.incoming(!d20.textchat.chatstartingup, o[e]);
                o = null ,
                window.is_gm && (window.is_offsite && !window.is_playerapp ? d20.textchat.incoming(!1, {
                    who: "system",
                    type: "system",
                    content: "Invite other users to join this Google+ Hangout and they'll join your Roll20 game."
                }) : $.get("/campaigns/sharelink/" + window.campaign_id, function(e) {
                    d20.textchat.incoming(!1, {
                        who: "system",
                        type: "system",
                        content: "The player link for this campaign is: <div class='sharelink'><a href='" + e + "'>" + e + "</a></div> <div style='font-size: 0.9em;'>(Hover over with your mouse pointer to show)</div>"
                    })
                })),
                d20.textchat.incoming(!1, {
                    who: "system",
                    type: "system",
                    content: $("#tmpl_welcome_message").jqote()
                }),
                d20.textchat.chatstartingup = !1
            }
              , s = _.debounce(a, 1e3)
              , l = t.limitToLast(100)
              , c = []
              , d = !1
              , h = 0
              , u = function(e) {
                var t = e.val();
                t.timestamp = e.getPriority(),
                t.id = e.key(),
                -1 === c.indexOf(t.id) ? (c.push(t.id),
                d = t.id,
                h = (new Date).getTime(),
                d20.textchat.chatstartingup ? (o.push(t),
                s()) : d20.textchat.incoming(!d20.textchat.chatstartingup, t)) : !d20.textchat.chatstartingup && (d !== t.id || (new Date).getTime() - h > 500) && d20.textchat.incoming(!0, t, !0, !0)
            }
            ;
            l.on("child_added", function(e) {
                u(e)
            }),
            l.on("child_changed", function(e) {
                u(e)
            }),
            l.once("value", function() {
                s()
            })
        }
        ;
        var T;
        d20.textchat.opendialog = function() {
            T = $("#textchat").css("height"),
            $("#textchat").dialog({
                title: "Text Chat",
                beforeClose: function() {
                    $(this).dialog("destroy"),
                    $(this).appendTo("#rightsidebar"),
                    $(this).css("height", T).css("width", "auto"),
                    $(this).show()
                }
            })
        }
        ,
        d20.textchat.showPopout = function() {
            if (textchatpopped !== !0) {
                var e = $("#textchat")
                  , t = $("#textchat-input")
                  , i = e.parent();
                d20.textchat.childWindow = window.open("/editor/popoutchat", "ChatPopout", "menubar=0,location=0,toolbar=0,status=0,scrollbars=1,width=300,height=800"),
                window.allChildWindows.push(d20.textchat.childWindow),
                d20.textchat.childWindow.onload = function() {
                    textchatpopped = !0,
                    d20.journal.customSheets && d20.journal.customSheets.styleel && (console.log("Setting style element in child window."),
                    $(d20.journal.customSheets.styleel).clone().appendTo(d20.textchat.childWindow.document.head)),
                    e.appendTo(d20.textchat.childWindow.document.getElementById("containerdiv")),
                    t.appendTo(d20.textchat.childWindow.document.body),
                    d20.textchat.$textarea.autocomplete("widget").appendTo(d20.textchat.childWindow.document.body),
                    d20.textchat.childWindow.document.title = "Roll20 Chat",
                    e.scrollTop(e[0].scrollHeight),
                    $("#rightsidebar").find("ul.tabmenu li").eq(1).find("a").trigger("click");
                    var i = function() {
                        return $(this).hasClass("tipsy-w") ? "w" : $(this).hasClass("tipsy-e") ? "e" : $(this).hasClass("tipsy-n") ? "n" : $(this).hasClass("tipsy-s") ? "s" : $(this).hasClass("tipsy-side") ? $(this).offset().left > $(document).scrollLeft() + $(window).width() / 2 ? "e" : "w" : $(this).offset().top < $(document).scrollTop() + $(window).height() / 2 ? "n" : "s"
                    }
                    ;
                    $(d20.textchat.childWindow.document.body).find(".showtip").tipsy({
                        live: !0,
                        gravity: i,
                        opacity: .5,
                        html: !0,
                        containerel: $(d20.textchat.childWindow.document.body)
                    }),
                    $(d20.textchat.childWindow.document.body).find(".userscript-showtip").tipsy({
                        live: !0,
                        gravity: i,
                        opacity: 1,
                        html: !0,
                        filterhtml: !0,
                        userscript: !0,
                        containerel: $(d20.textchat.childWindow.document.body)
                    }),
                    a = !0,
                    $(d20.textchat.childWindow.document).on("click", "a", function(e) {
                        if (!($(this).hasClass("lightly") || $(this).parents(".redactor_box").length > 0)) {
                            var t = $(this).attr("href");
                            if (void 0 !== t) {
                                if (-1 !== t.indexOf("journal.roll20.net")) {
                                    var i = t.split("/")[3]
                                      , n = t.split("/")[4]
                                      , r = d20.Campaign[i + "s"].get(n);
                                    if (r) {
                                        var o = r.get("inplayerjournals").split(",");
                                        (window.is_gm || -1 !== _.indexOf(o, "all") || window.currentPlayer && -1 !== _.indexOf(o, window.currentPlayer.id)) && r.view.showDialog()
                                    }
                                    return $("#existing" + i + "s").find("tr[data-" + i + "id=" + n + "]").trigger("click"),
                                    !1
                                }
                                if (-1 !== t.indexOf("javascript:"))
                                    return !1;
                                if ("!" === t.substring(0, 1))
                                    return d20.textchat.doChatInput(t),
                                    !1;
                                if ("~" === t.substring(0, 1))
                                    return d20.textchat.doChatInput("%{" + t.substring(1, t.length) + "}"),
                                    !1;
                                if (void 0 !== t && ("external" === $(this).attr("rel") || -1 === t.indexOf("javascript:") && -1 !== t.indexOf("://"))) {
                                    e.stopPropagation(),
                                    e.preventDefault();
                                    var a = $('<div class="dialog dialog-danger">' + t + "<br /><br />This link will open up a new window (or tab) to an external site. Just close the new window/tab to return to the editor.</div>");
                                    a.dialog({
                                        modal: !0,
                                        title: "Confirm External Link",
                                        buttons: {
                                            Continue: function() {
                                                $(this).dialog("destroy").remove(),
                                                window.open(t)
                                            },
                                            Cancel: function() {
                                                $(this).dialog("destroy").remove()
                                            }
                                        },
                                        beforeClose: function() {
                                            $(this).dialog("destroy").remove()
                                        }
                                    })
                                }
                            }
                        }
                    })
                }
                ,
                d20.textchat.childWindow.onbeforeunload = function() {
                    textchatpopped = !1,
                    setTimeout(function() {
                        $("#rightsidebar").find("a[href=#textchat]").trigger("click")
                    }, 100),
                    e.appendTo(i),
                    t.appendTo($("body")),
                    d20.textchat.$textarea.autocomplete("widget").appendTo($("body")),
                    e.scrollTop(e[0].scrollHeight),
                    window.allChildWindows = _.without(window.allChildWindows, d20.textchat.childWindow),
                    a = !1,
                    d20.textchat.childWindow = null
                }
                ,
                $(d20.textchat.childWindow).bind("focus", function() {
                    a = !0
                }),
                $(d20.textchat.childWindow).bind("blur", function() {
                    a = !1
                })
            }
        }
        ,
        $("#textchattab").on("dblclick", function() {
            d20.textchat.showPopout()
        }),
        $("#rightsidebar").resizable({
            handles: "w",
            alsoResize: "#textchat-input, #rightsidebar .tabmenu",
            minWidth: 300,
            start: function() {
                $("#editor-wrapper, #canvas-overlay").addClass("noshow")
            },
            resize: function() {},
            stop: function() {
                $("#editor-wrapper, #canvas-overlay").removeClass("noshow"),
                $(window).trigger("resize"),
                $("#rightsidebar").css("left", "").css("height", "100%")
            }
        })
    }),
    d20.opentokwebrtc = {
        publisher: !1,
        session: !1,
        numactiveconnections: 0,
        subscribeType: "video",
        activeSubs: []
    },
    window.TB && (TB.upgradeSystemRequirements = function() {
        var e = {
            who: "error",
            type: "error",
            content: "The browser you are using is not compatible with WebRTC, which is required for video and voice chat. If you're using an external application such as Skype or you don't want to use video chat, you can safely ignore this message."
        };
        setTimeout(function() {
            d20.textchat.incoming(!1, e)
        }, 1e3)
    }
    ),
    $(function() {
        function e(e) {
            var t = !1;
            return e.streamId == d20.opentokwebrtc.publisher.streamId ? void console.log("publisher!") : (t = $("#playerzone .video[data-streamid=" + e.streamId + "]"),
            void (t && t.length > 0 && t.parents(".player").find(".playername").css({
                "background-size": Math.round(4 * e.volume) + "% 100%"
            })))
        }
        function t(e) {
            console.log("Exception received from TokBox"),
            console.log(e),
            (1006 === e.code || 1008 === e.code || 1014 === e.code) && (console.log("There was an error connecting. Trying again."),
            session.connect(i, r))
        }
        var i = "26617492"
          , n = window.opentok_session_id;
        if (d20.opentokwebrtc.init = function() {}
        ,
        !window.opentok_token || !window.OT)
            return void console.log("Unable to start up OpenTok!");
        OT.setLogLevel(OT.NONE);
        var r = window.opentok_token;
        d20.opentokwebrtc.init = function() {
            if (console.log("initiatlizing video chat"),
            d20.opentokwebrtc.subscribed)
                return void console.log("already subscribed?");
            d20.opentokwebrtc.subscribed = !0,
            d20.opentokwebrtc.availableStreams = [],
            d20.opentokwebrtc.numactiveconnections = 0;
            try {
                var t = OT.initSession(i, n);
                t.on("sessionConnected", c),
                t.on("streamCreated", p),
                t.on("streamDestroyed", u),
                t.on("connectionCreated", h),
                t.on("connectionDestroyed", l),
                t.on("microphoneLevelChanged", e);
                var s = {
                    playerid: window.currentPlayer.id,
                    displayname: window.currentPlayer.get("displayname")
                };
                console.log("Connecting to WebRTC"),
                t.connect(r, s),
                d20.opentokwebrtc.session = t
            } catch (d) {
                console.log("Error while initiatlizing video chat."),
                console.log(d),
                d20.opentokwebrtc.subscribed = !1
            }
            $("#videobroadcasttype").bind("change", function() {
                var e = $(this).val();
                window.currentPlayer && window.currentPlayer.save({
                    videobroadcasttype: e
                }),
                "both" == e ? d20.opentokwebrtc.switchToVideoBroadcast() : "voiceonly" == e ? d20.opentokwebrtc.switchToAudioBroadcast() : o()
            }),
            $("#videoreceivetype").bind("change", function() {
                var e = $(this).val();
                window.currentPlayer && window.currentPlayer.save({
                    videoreceivetype: e
                }),
                "both" == e ? d20.opentokwebrtc.switchToVideoReceive() : "voiceonly" == e ? d20.opentokwebrtc.switchToAudioReceive() : a()
            })
        }
        ,
        OT.on("exception", t);
        var o = function() {
            d20.opentokwebrtc.publisher !== !1 && (d20.opentokwebrtc.session.unpublish(d20.opentokwebrtc.publisher),
            d20.opentokwebrtc.publisher = !1),
            $("#player_" + window.currentPlayer.id).find(".video > object").remove()
        }
          , a = function() {
            _.each(d20.opentokwebrtc.availableStreams, function(e) {
                console.log(e),
                console.log(d20.opentokwebrtc.session.getSubscribersForStream(e)),
                _.each(d20.opentokwebrtc.session.getSubscribersForStream(e), function(e) {
                    d20.opentokwebrtc.session.unsubscribe(e)
                }),
                $(".video[data-streamid=" + e.streamId + "]").attr("data-streamid", "")
            })
        }
          , s = function() {
            f(d20.opentokwebrtc.availableStreams)
        }
          , l = function() {
            console.log("Recived connection destroyed event"),
            d20.opentokwebrtc.numactiveconnections = d20.opentokwebrtc.numactiveconnections - 1,
            d20.opentokwebrtc.numactiveconnections < 2 && (console.log("Hiding video chat, only one connection active."),
            o())
        }
          , c = function(e) {
            console.log("Connected to session"),
            d20.opentokwebrtc.numactiveconnections = e.connections.length + d20.opentokwebrtc.numactiveconnections,
            d20.opentokwebrtc.numactiveconnections > 0 && d()
        }
          , d = function() {
            if ("none" != $("#videobroadcasttype").val()) {
                if (d20.opentokwebrtc.publisher !== !1)
                    return console.log("Already publishing, showing because number of connections is above 1."),
                    void $("#publisher_video").show();
                console.log("initializing publisher");
                var e = document.createElement("div");
                e.setAttribute("id", "publisher_video");
                var t = $("#player_" + window.currentPlayer.id + " .video");
                $(e).appendTo(t);
                var i = {
                    height: 200,
                    width: 200,
                    publishVideo: "both" == $("#videobroadcasttype").val() ? !0 : !1,
                    name: window.currentPlayer.id,
                    reportMicLevels: !0,
                    style: {
                        nameDisplayMode: "off",
                        buttonDisplayMode: "auto",
                        backgroundImageURI: "/users/avatar/" + window.currentPlayer.get("d20userid") + "/150"
                    },
                    resolution: "320x240",
                    frameRate: "15"
                }
                  , n = OT.initPublisher("publisher_video", i);
                n.on({
                    accessDialogOpened: function(e) {
                        e.preventDefault()
                    },
                    accessDenied: function(e) {
                        e.preventDefault()
                    }
                }),
                d20.opentokwebrtc.session.publish(n),
                n.on("accessAllowed", function() {
                    console.log("Access allowed!"),
                    setTimeout(function() {
                        d20.engine.setCanvasSize(100, 100),
                        setTimeout(function() {
                            $(window).trigger("resize")
                        }, 100)
                    }, 1e3)
                }),
                d20.opentokwebrtc.publisher = n
            }
        }
          , h = function(e) {
            return console.log("Someone just connected."),
            e.connection.data === window.currentPlayer.get("d20userid") ? void console.log("It's us?") : (console.log("Not us, increasing active connections."),
            d20.opentokwebrtc.numactiveconnections = d20.opentokwebrtc.numactiveconnections + 1,
            void (d20.opentokwebrtc.numactiveconnections > 0 && (console.log("Begin publishing!"),
            d())))
        }
          , u = function(e) {
            console.log("Stream destroyed");
            for (var t = 0; t < e.streams.length; t++)
                $("#stream" + e.streams[t].streamId).remove(),
                $(".video[data-streamid=" + e.streams[t].streamId + "]").attr("data-streamid", ""),
                console.log("Remove .video[data-streamid=" + e.streams[t].streamId + "]"),
                _.each(d20.opentokwebrtc.availableStreams, function(i) {
                    console.log("Does " + i.streamId + " equal " + e.streams[t].streamId),
                    i.streamId == e.streams[t].streamId && (console.log("YES REMOVE"),
                    d20.opentokwebrtc.availableStreams = _.without(d20.opentokwebrtc.availableStreams, i))
                }),
                _.each(d20.opentokwebrtc.activeSubs, function(i) {
                    i && i.stream && i.stream.streamId !== e.streams[t].streamId || (d20.opentokwebrtc.activeSubs = _.without(d20.opentokwebrtc.activeSubs, i))
                })
        }
          , p = function(e) {
            console.log("stream created"),
            d20.opentokwebrtc.availableStreams = _.union(d20.opentokwebrtc.availableStreams, e.streams),
            s()
        }
          , f = function(e) {
            if ("none" != $("#videoreceivetype").val()) {
                console.log("Subscribe to streams!");
                for (var t = (Math.round($(window).width() / e.length, 0),
                !1), i = 0; i < e.length; i++)
                    if (e[i].connection.data != window.currentPlayer.get("d20userid") && e[i].name != window.currentPlayer.id && (t = !1,
                    !(t || $("#playerzone .video[data-streamid=" + e[i].streamId + "]").length > 0))) {
                        var n = document.createElement("div");
                        n.setAttribute("id", "stream" + e[i].streamId),
                        $("#player_" + e[i].name + " .video").attr("data-streamid", e[i].streamId).append(n);
                        {
                            d20.opentokwebrtc.session.subscribe(e[i], n.id, {
                                height: 150,
                                width: 150,
                                subscribeToVideo: "both" == $("#videoreceivetype").val() ? !0 : !1,
                                style: {
                                    nameDisplayMode: "off",
                                    buttonDisplayMode: "auto"
                                }
                            })
                        }
                        $(n).find(".OT_video-poster").css("background-image", $("#player_" + e[i].name + " .video")[0].style["background-image"])
                    }
            }
        }
        ;
        d20.opentokwebrtc.switchToAudioBroadcast = function() {
            d(),
            console.log("Switch to audio broadcast"),
            d20.opentokwebrtc.publisher && d20.opentokwebrtc.publisher.publishVideo(!1)
        }
        ,
        d20.opentokwebrtc.switchToVideoBroadcast = function() {
            d(),
            d20.opentokwebrtc.publisher && d20.opentokwebrtc.publisher.publishVideo(!0)
        }
        ,
        d20.opentokwebrtc.switchToAudioReceive = function() {
            _.each(d20.opentokwebrtc.availableStreams, function(e) {
                console.log(e),
                console.log(d20.opentokwebrtc.session.getSubscribersForStream(e)),
                _.each(d20.opentokwebrtc.session.getSubscribersForStream(e), function(e) {
                    e.subscribeToVideo(!1)
                })
            }),
            s()
        }
        ,
        d20.opentokwebrtc.switchToVideoReceive = function() {
            _.each(d20.opentokwebrtc.availableStreams, function(e) {
                console.log(e),
                console.log(d20.opentokwebrtc.session.getSubscribersForStream(e)),
                _.each(d20.opentokwebrtc.session.getSubscribersForStream(e), function(e) {
                    e.subscribeToVideo(!0)
                })
            }),
            s()
        }
    }),
    d20.internalwebrtc = {
        publisher: !1,
        localVideo: !1,
        muted: !1,
        broadcastType: !1,
        whispering: !0,
        whisperGroup: {},
        connected: !1
    },
    window.TB && (TB.upgradeSystemRequirements = function() {
        var e = {
            who: "error",
            type: "error",
            content: "The browser you are using is not compatible with WebRTC, which is required for video and voice chat. If you're using an external application such as Skype or Discord. If you don't want to use video chat, you can safely ignore this message."
        };
        setTimeout(function() {
            d20.textchat.incoming(!1, e)
        }, 1e3)
    }
    ),
    $(function() {
        var e = window.opentok_session_id
          , t = function(e) {
            var t = $("#editor-wrapper").width() - $("#playerzone .player").width() - 10
              , i = e.left * $("#editor-wrapper").width() - $("#playerzone").offset().left;
            i = i > t ? t : i;
            var n = $("#editor-wrapper").height() - $("#playerzone").offset().top - $("#playerzone .player").height() - 25
              , r = e.top * $("#editor-wrapper").height() - $("#playerzone").offset().top;
            return r = r > n ? n : r,
            {
                top: r,
                left: i
            }
        }
          , i = {
            handle: ".player-handle",
            containment: "#playerzone",
            scroll: !1,
            start: function() {
                var e = $(this);
                e.find(".player-handle").attr("style", "display: block;")
            },
            stop: function() {
                var e = $(this);
                e.find(".player-handle").attr("style", "");
                var i = e[0].id.substr(7)
                  , n = {
                    top: ((e.position().top + $("#playerzone").offset().top) / $("#editor-wrapper").height()).toFixed(4),
                    left: ((e.position().left + $("#playerzone").offset().left) / $("#editor-wrapper").width()).toFixed(4)
                };
                if (window.is_gm) {
                    var r = JSON.parse(d20.Campaign.get("videopos"));
                    r[i] = n,
                    d20.Campaign.save({
                        videopos: JSON.stringify(r)
                    })
                }
                if ("player" === d20.Campaign.get("controlsvideopos")) {
                    var r = t(n);
                    e.attr("style", "left: " + r.left + "px; top: " + r.top + "px; position: absolute;")
                }
            }
        }
          , n = function() {
            if ("gm" === d20.Campaign.get("controlsvideopos")) {
                var e = JSON.parse(d20.Campaign.get("videopos"));
                $.each(e, function(e, i) {
                    if (i) {
                        var n = t(i);
                        $("#player_" + e).attr("style", "left: " + n.left + "px; top: " + n.top + "px; position: absolute;")
                    } else
                        $("#player_" + e).attr("style", "")
                })
            }
        }
          , r = function() {
            var e = "gm" === window.Campaign.get("controlsvideopos");
            e && !window.is_gm ? ($(".player").each(function() {
                var e = $(this);
                e.find(".player-handle").hide(),
                e.draggable("disable")
            }),
            n(),
            $("#resetvideopos").prop("disabled", !0)) : e || window.is_gm || ($(".player").each(function() {
                var e = $(this);
                e.find(".player-handle").attr("style", ""),
                e.draggable("enable")
            }),
            $("#resetvideopos").prop("disabled", !1))
        }
          , o = {
            high: 30,
            medium: 20,
            low: 10,
            verylow: 5
        }
          , a = function(e, t) {
            switch (e) {
            case "both":
                return {
                    video: {
                        width: 200,
                        height: 200,
                        frameRate: o[t]
                    },
                    audio: !0
                };
            case "voiceonly":
                return {
                    video: !1,
                    audio: !0
                };
            case "videoonly":
                return {
                    video: {
                        width: 200,
                        height: 200,
                        frameRate: o[t]
                    },
                    audio: !1
                };
            case "none":
                return {
                    video: !1,
                    audio: !1
                }
            }
        }
          , s = {
            both: {
                offerToReceiveAudio: 1,
                offerToReceiveVideo: 1
            },
            voiceonly: {
                mandatory: {
                    OfferToReceiveAudio: !0,
                    OfferToReceiveVideo: !1
                }
            },
            videoonly: {
                offerToReceiveAudio: 0,
                offerToReceiveVideo: 1
            },
            none: {
                offerToReceiveAudio: 0,
                offerToReceiveVideo: 0
            }
        };
        d20.internalwebrtc.init = function() {
            if (console.log("INITIATLIZING INTERNAL VIDEO CHAT"),
            d20.internalwebrtc.subscribed)
                return void console.log("already subscribed?");
            d20.internalwebrtc.subscribed = !0,
            $("#playerzone").addClass("internal-webrtc");
            var e = $("#moveablevideosmenu")
              , t = $("#playerhandorientation");
            $("body").on(mousedowntype, function() {
                e.hide(),
                t.hide()
            }),
            $("#playerzone").on("contextmenu", ".playername", function(t) {
                if ("gm" !== d20.Campaign.get("controlsvideopos") || window.is_gm) {
                    var i = $(this).parents(".player")[0].id.substr(7);
                    e.show(),
                    e.attr("data-player-id", i),
                    e.css({
                        top: t.pageY + "px",
                        left: t.pageX + "px"
                    }),
                    t.preventDefault(),
                    t.stopPropagation()
                }
            }),
            $("#moveablevideosmenu ul").on(mousedowntype, "li[data-action-type=resetLocations]", function() {
                e.hide(),
                $("#playerzone .player").each(function() {
                    $(this).attr("style", "")
                }),
                window.is_gm && d20.Campaign.save({
                    videopos: "{}"
                })
            }),
            $("#moveablevideosmenu ul").on(mousedowntype, "li[data-action-type=resetLocation]", function() {
                e.hide();
                var t = e.attr("data-player-id");
                if ($("#player_" + t).attr("style", ""),
                window.is_gm) {
                    var i = JSON.parse(d20.Campaign.get("videopos"));
                    i[t] = !1,
                    d20.Campaign.save({
                        videopos: JSON.stringify(i)
                    })
                }
            }),
            $("#playerzone").on("contextmenu", ".cardback", function(e) {
                if ("gm" !== d20.Campaign.get("controlsvideopos") || window.is_gm) {
                    var i = $(this).parents(".player")[0].id.substr(7);
                    t.show(),
                    t.attr("data-player-id", i),
                    t.css({
                        top: e.pageY + "px",
                        left: e.pageX + "px"
                    }),
                    e.preventDefault(),
                    e.stopPropagation()
                }
            }),
            $("#playerhandorientation ul").on(mousedowntype, "li", function() {
                t.hide();
                var e = $(this).attr("data-action-type")
                  , i = t.attr("data-player-id")
                  , n = $("#player_" + i);
                n.removeClass("player-hand-bottom player-hand-left player-hand-right"),
                "player-hand-top" !== e && n.addClass(e)
            }),
            $("#videobroadcasttype").bind("change", function() {
                var e = $(this).val();
                window.currentPlayer && window.currentPlayer.save({
                    videobroadcasttype: e
                }),
                "both" == e ? C() : "voiceonly" == e ? R() : "videoonly" == e ? S() : k()
            }),
            $("#videoreceivetype").bind("change", function() {
                var e = $(this).val();
                window.currentPlayer && window.currentPlayer.save({
                    videoreceivetype: e
                }),
                "both" == e ? M() : "voiceonly" == e ? H() : "videoonly" == e ? A() : P()
            }),
            $("#videobandwidth").bind("change", function() {
                var e = $(this).val();
                window.Campaign && window.Campaign.save({
                    videobandwidth: e
                }),
                d20.internalwebrtc.publisher.sendToAll("reloadAll"),
                location.reload()
            }),
            $("#videoplayerlocation").val(window.currentPlayer.get("videoplayerlocation")).trigger("change"),
            "top" === window.currentPlayer.get("videoplayerlocation") ? $("#playerzone").addClass("pz-top") : $("#playerzone").removeClass("pz-top"),
            $("#videoplayerlocation").bind("change", function() {
                var e = $(this).val();
                window.currentPlayer.save({
                    videoplayerlocation: e
                }),
                console.log("videoplayerlocation changed"),
                "top" === e ? $("#playerzone").addClass("pz-top") : $("#playerzone").removeClass("pz-top"),
                n()
            }),
            $("#resetvideopos").bind("click", function() {
                $(this).val();
                $("#playerzone .player").each(function() {
                    $(this).attr("style", "")
                }),
                window.is_gm && (d20.Campaign.save({
                    videopos: "{}"
                }),
                "gm" === d20.Campaign.get("controlsvideopos") && d20.internalwebrtc.publisher && d20.internalwebrtc.publisher.sendToAll("resetVideoPos"))
            }),
            $(".player").draggable(i),
            $(window).bind("resize", n),
            n(),
            $("#movablevideo").val(window.Campaign.get("controlsvideopos")).trigger("change"),
            window.is_gm ? $("#movablevideo").bind("change", function() {
                var e = $(this).val();
                d20.Campaign.save({
                    controlsvideopos: e
                })
            }) : (d20.Campaign.bind("change:controlsvideopos", function() {
                console.log("Player: videoMoveControl"),
                r()
            }),
            r()),
            d20.Campaign.bind("change:videopos", function() {
                console.log("video moved!"),
                n()
            }),
            Mousetrap.bind("`", function() {
                console.log("mute hotkey"),
                d20.internalwebrtc.publisher && d()
            })
        }
        ;
        var l = function() {
            if (d20.internalwebrtc.localVideo = $("#player_" + window.currentPlayer.id + " div.video"),
            d20.internalwebrtc.publisher === !1 && 0 !== d20.internalwebrtc.localVideo.length) {
                d20.internalwebrtc.publisher = !0,
                console.log("Init internal WebRTC"),
                d20.internalwebrtc.broadcastType = window.currentPlayer.get("videobroadcasttype");
                var t = window.currentPlayer.get("videoreceivetype")
                  , i = window.Campaign.get("videobandwidth");
                ("both" === d20.internalwebrtc.broadcastType || "voiceonly" === d20.internalwebrtc.broadcastType) && c(window.currentPlayer.id);
                var n = {
                    url: "https://signalmaster.roll20.net",
                    localVideoEl: d20.internalwebrtc.localVideo[0],
                    remoteVideosEl: "",
                    autoRequestMedia: !0,
                    debug: !1,
                    media: a(d20.internalwebrtc.broadcastType, i),
                    receiveMedia: s[t],
                    nick: window.currentPlayer.id,
                    enableDataChannels: !1
                };
                d20ext.webrtc = d20.internalwebrtc.publisher = new SimpleWebRTC(n),
                d20.internalwebrtc.publisher.on("readyToCall", function() {
                    d20.internalwebrtc.publisher.joinRoom(e, function(e) {
                        console.log("Joined room!"),
                        e && console.error(e)
                    })
                }),
                d20.internalwebrtc.publisher.on("connectionReady", function(e) {
                    console.log("connectionReady"),
                    console.log("sessionsId", e)
                }),
                d20.internalwebrtc.publisher.on("createdPeer", function(e) {
                    console.log("createdPeer"),
                    console.log("peer", e)
                }),
                d20.internalwebrtc.publisher.on("videoAdded", function(e, t) {
                    console.log("Video Added"),
                    h(t.nick, e, t),
                    _(),
                    d20.internalwebrtc.muted && (console.log("Send: muted reminder"),
                    d20.internalwebrtc.publisher.sendToAll("muted", {
                        nick: window.currentPlayer.id
                    })),
                    "both" !== d20.internalwebrtc.broadcastType && (console.log("Send: my broadcastType reminder"),
                    d20.internalwebrtc.publisher.sendToAll("switchBroadcastType", {
                        nick: window.currentPlayer.id,
                        type: d20.internalwebrtc.broadcastType
                    }))
                }),
                d20.internalwebrtc.publisher.on("videoRemoved", function(e, t) {
                    console.log("Video Removed!"),
                    u(t.nick),
                    0 === d20.internalwebrtc.publisher.getPeers().length && "both" === window.currentPlayer.get("videobroadcasttype") && T()
                }),
                d20.internalwebrtc.publisher.on("iceFailed", function() {
                    console.error("WebRTC iceFailed Error")
                }),
                d20.internalwebrtc.publisher.on("connectivityError", function() {
                    console.error("WebRTC connectivity Error")
                }),
                d20.internalwebrtc.publisher.connection.on("message", function(e) {
                    switch (e.type) {
                    case "muted":
                        console.log("Message:", e.type, e.payload),
                        y(e.payload.nick);
                        break;
                    case "refreshAll":
                        console.log("Message:", e.type, e.payload),
                        T(),
                        setTimeout(_, 1500);
                        break;
                    case "reloadAll":
                        console.log("Message:", e.type, e.payload),
                        location.reload();
                        break;
                    case "stopPublishing":
                        console.log("Message:", e.type, e.payload),
                        u(e.payload.nick);
                        break;
                    case "resetVideoPos":
                        $("#playerzone .player").each(function() {
                            $(this).attr("style", "")
                        });
                        break;
                    case "switchBroadcastType":
                        switch (console.log("Message:", e.type, e.payload),
                        e.payload.type) {
                        case "both":
                            E(e.payload.nick);
                            break;
                        case "videoonly":
                            E(e.payload.nick),
                            y(e.payload.nick);
                            break;
                        case "voiceonly":
                            E(e.payload.nick),
                            f(e.payload.nick),
                            v(e.payload.nick);
                            break;
                        case "none":
                            E(e.payload.nick),
                            f(e.payload.nick)
                        }
                        break;
                    case "unmuted":
                        console.log("Message:", e.type, e.payload),
                        b(e.payload.nick)
                    }
                })
            }
        }
          , c = function(e, t) {
            var i = $("#player_" + e);
            if (0 !== i.find("div.av-controls").length)
                return void p(e, 1);
            console.log("addOverlay", e);
            var n = e === window.currentPlayer.id
              , r = $('<div class="av-controls"></div>')
              , o = $('<div class="volume-controls"></div>');
            o.append('<span class="vol-min pictos" title="Mute">&lt;</span>'),
            n || (o.append('<div class="volume-bar"><div class="volume-slider"></div></div>'),
            o.append('<span class="vol-max pictos" title="Max Volume">&gt;</span>')),
            r.append(o),
            i.find("div.video").after(r);
            var a = $('<div class="connection-status"></div>');
            if (a.hide(),
            i.find("div.av-controls").after(a),
            t && t.pc) {
                console.log("Connection status"),
                a = i.find("div.connection-status"),
                a.on("click", function() {
                    a.fadeOut()
                });
                var s;
                t.pc.on("iceConnectionStateChange", function() {
                    switch (t.pc.iceConnectionState) {
                    case "checking":
                        s = setTimeout(function() {
                            a.fadeIn(),
                            a.text("Connecting..."),
                            console.log("iceConnectionStateChange:", t.pc.iceConnectionState)
                        }, 1e3);
                        break;
                    case "connected":
                    case "completed":
                        clearTimeout(s),
                        a.fadeOut(),
                        a.attr("data-connected", "true"),
                        console.log("iceConnectionStateChange:", t.pc.iceConnectionState);
                        break;
                    case "disconnected":
                        a.text("Disconnected."),
                        a.fadeIn(),
                        console.error("iceConnectionStateChange:", t.pc.iceConnectionState);
                        break;
                    case "failed":
                        "true" !== a.attr("data-connected") ? (a.text("Connection failed."),
                        a.fadeIn(),
                        console.error("iceConnectionStateChange:", t.pc.iceConnectionState)) : (console.log("iceConnectionStateChange completed first"),
                        console.log("iceConnectionStateChange:", t.pc.iceConnectionState))
                    }
                })
            }
            if (n)
                i.find(".vol-min").on("click", d);
            else {
                var l = (i.find("video"),
                i.find(".volume-bar"))
                  , c = (l.find(".volume-slider"),
                i.find(".vol-min"))
                  , h = i.find(".vol-max")
                  , u = function() {
                    console.log("minVol"),
                    event.stopPropagation(),
                    p(e, 0)
                }
                  , f = function() {
                    console.log("minVol"),
                    event.stopPropagation(),
                    p(e, 1)
                }
                  , g = function(e) {
                    var t = ((e.clientX - l[0].offsetLeft - l.parents(".player")[0].offsetLeft) / l[0].offsetWidth).toFixed(2);
                    return t > 1 ? 1 : t
                }
                  , m = function(t) {
                    console.log("Start Slide!"),
                    t.stopPropagation(),
                    l.on("mousemove", v),
                    p(e, g(t))
                }
                  , v = function(t) {
                    console.log("Move Slide!"),
                    p(e, g(t))
                }
                  , y = function(t) {
                    console.log("End Slide!"),
                    l.off("mousemove", v),
                    p(e, g(t))
                }
                ;
                if (l.on("mousedown", m),
                l.on("mouseup", y),
                i.on("mouseup", y),
                c.on("click", u),
                h.on("click", f),
                window.is_gm) {
                    var b = $('<div class="av-whisper" title="Whisper Player"></div>');
                    b.append('<span class="pictos whisper">q</span>'),
                    r.append(b);
                    var w = i.find(".av-whisper")
                      , x = function(t) {
                        t.stopPropagation();
                        var i = JSON.parse(d20.Campaign.get("whisperGroups"))
                          , n = window.currentPlayer.id;
                        if (console.log("whisperGroups", i),
                        w.hasClass("whispering"))
                            w.removeClass("whispering"),
                            "undefined" != typeof i[e] ? (delete i[e],
                            console.log("whisperGroups deleted", i),
                            d20.Campaign.save({
                                whisperGroups: JSON.stringify(i)
                            })) : ($.each(i, function(e, t) {
                                console.log("group Start", t);
                                for (var n, r, o = t.length; o && t.length; )
                                    for (n = t[--o]; -1 !== (r = t.indexOf(n)); )
                                        t.splice(r, 1);
                                console.log("group New", t),
                                0 === t.length ? delete i[e] : i[e] = t
                            }),
                            d20.Campaign.save({
                                whisperGroups: JSON.stringify(i)
                            }));
                        else {
                            w.addClass("whispering");
                            var r = i[n] || [];
                            r.push(e),
                            i[n] = r,
                            console.log("whisperGroups added", JSON.stringify(i)),
                            d20.Campaign.save({
                                whisperGroups: JSON.stringify(i)
                            })
                        }
                    }
                    ;
                    w.on("click", x)
                }
            }
        }
          , d = function() {
            console.log("muteMe");
            var e = $("#player_" + window.currentPlayer.id).find(".vol-min");
            d20.internalwebrtc.muted ? (d20.internalwebrtc.publisher.unmute(),
            b(window.currentPlayer.id),
            d20.internalwebrtc.publisher.sendToAll("unmuted", {
                nick: d20.internalwebrtc.publisher.config.nick
            }),
            d20.internalwebrtc.muted = !1,
            e.text("<")) : (d20.internalwebrtc.publisher.mute(),
            y(window.currentPlayer.id),
            d20.internalwebrtc.publisher.sendToAll("muted", {
                nick: d20.internalwebrtc.publisher.config.nick
            }),
            d20.internalwebrtc.muted = !0,
            e.text(">"))
        }
          , h = function(e, t, i) {
            var n = window.currentPlayer.get("videoreceivetype");
            $("#player_" + e + " video").remove(),
            "none" !== n && ("voiceonly" === n && (console.log("Pause new Video"),
            $(t).hide(),
            setTimeout(function() {
                $("#player_" + e + " video")[0].pause()
            }, 750)),
            $("#player_" + e + " div.video").append(t),
            c(e, i))
        }
          , u = function(e) {
            $("#player_" + e + " div.video video").remove(),
            E(e)
        }
          , p = function(e, t, i) {
            var i = "undefined" == typeof i ? !0 : i;
            .03 > t && i ? (t = 0,
            w(e)) : x(e),
            $("#player_" + e + " .volume-slider").css("width", 100 * t + "%"),
            $("#player_" + e + " video").prop("volume", t)
        }
          , f = function(e) {
            $("#player_" + e + " div.video").addClass("hide-video")
        }
          , g = function(e) {
            $("#player_" + e + " div.video").removeClass("hide-volume")
        }
          , m = function(e) {
            $("#player_" + e + " div.video").addClass("hide-volume")
        }
          , v = function(e) {
            $("#player_" + e + " div.video").addClass("no-video")
        }
          , y = function(e) {
            $("#player_" + e + " div.video").addClass("muted-self")
        }
          , b = function(e) {
            $("#player_" + e + " div.video").removeClass("muted-self")
        }
          , w = function(e) {
            $("#player_" + e + " div.video").addClass("muted-other")
        }
          , x = function(e) {
            $("#player_" + e + " div.video").removeClass("muted-other")
        }
          , E = function(e) {
            $("#player_" + e + " div.video").removeClass("muted-other muted-self no-video hide-video in-whisper not-whisper"),
            $("#player_" + e + " div.connection-status").fadeOut()
        }
          , _ = function() {
            console.log("startPublishing");
            var e = window.currentPlayer.get("videobroadcasttype");
            0 === d20.internalwebrtc.localVideo.children().length && "none" !== e && d20.internalwebrtc.publisher.startLocalVideo()
        }
          , T = function() {
            console.log("stopPublishing"),
            d20.internalwebrtc.localVideo.children().length > 0 && (d20.internalwebrtc.publisher.stopLocalVideo(),
            d20.internalwebrtc.publisher.sendToAll("stopPublishing", {
                nick: window.currentPlayer.id
            }),
            u(window.currentPlayer.id))
        }
          , C = function() {
            console.log("switchToAudioVideoBroadcast"),
            d20.internalwebrtc.publisher ? location.reload() : l()
        }
          , R = function() {
            console.log("switchToAudioBroadcast"),
            d20.internalwebrtc.publisher ? location.reload() : l()
        }
          , S = function() {
            console.log("switchToVideoBroadcast"),
            d20.internalwebrtc.publisher ? location.reload() : l()
        }
          , k = function() {
            console.log("switchToNoBroadcast"),
            d20.internalwebrtc.publisher ? location.reload() : l()
        }
          , M = function() {
            console.log("switchToReceivingVideo"),
            d20.internalwebrtc.publisher ? $(".player:not(#player_" + window.currentPlayer.id + ")").each(function() {
                var e = this.id.substr(7);
                E(e),
                $(this).find("video").prop("volume", 1)
            }) : l()
        }
          , A = function() {
            console.log("switchToReceivingVideo"),
            d20.internalwebrtc.publisher ? $(".player:not(#player_" + window.currentPlayer.id + ")").each(function() {
                var e = this.id.substr(7);
                E(e),
                w(e),
                m(e),
                $(this).find("video").prop("volume", 0)
            }) : l()
        }
          , H = function() {
            console.log("switchToReceivingAudo"),
            d20.internalwebrtc.publisher ? $(".player:not(#player_" + window.currentPlayer.id + ")").each(function() {
                var e = this.id.substr(7);
                E(e),
                f(e),
                v(e)
            }) : l()
        }
          , P = function() {
            console.log("stopReceiving"),
            $(".player:not(#player_" + window.currentPlayer.id + ")").each(function() {
                var e = this.id.substr(7);
                E(e),
                f(e),
                $(this).find("video").prop("volume", 0)
            })
        }
        ;
        d20.internalwebrtc.connect = function() {
            "internal" === d20ext.videotype && d20.Campaign.players.filter(function(e) {
                return e.get("online") && e !== window.currentPlayer
            }).length > 0 && l()
        }
        ,
        d20.internalwebrtc.disconnect = function() {
            "internal" === d20ext.videotype && d20.internalwebrtc.publisher && T()
        }
        ;
        var O = function(e) {
            var t = $("#player_" + e + " div.video")
              , i = $("#player_" + e + " video");
            t.prop("volume", i.prop("volume")),
            p(e, 0, !1),
            t.addClass("in-whisper"),
            i.fadeTo(500, .25)
        }
          , D = function(e) {
            var t = $("#player_" + e + " div.video")
              , i = $("#player_" + e + " video");
            i.fadeTo(500, 1, function() {
                t.removeClass("in-whisper")
            }),
            "undefined" != typeof t.prop("volume") ? p(e, parseInt(t.prop("volume")), !1) : p(e, 1, !1)
        }
          , L = function(e) {
            var t = $("#player_" + e + " div.video")
              , i = $("#player_" + e + " video");
            t.prop("volume", i.prop("volume")),
            p(e, 0, !1),
            t.addClass("not-whisper"),
            m(e),
            i.fadeTo(500, .25)
        }
          , I = function(e) {
            var t = $("#player_" + e + " div.video")
              , i = $("#player_" + e + " video");
            i.fadeTo(500, 1, function() {
                t.removeClass("not-whisper")
            }),
            g(e),
            "undefined" != typeof t.prop("volume") && p(e, parseInt(t.prop("volume")), !1)
        }
        ;
        d20.internalwebrtc.updateDraggable = function() {
            $(".player").draggable(i),
            r(),
            n()
        }
        ,
        d20.internalwebrtc.updateWhisperGroups = function() {
            if (d20.internalwebrtc.publisher) {
                var e = JSON.parse(d20.Campaign.get("whisperGroups"))
                  , t = window.currentPlayer.id
                  , i = $.map(d20.Campaign.players.models, function(e) {
                    return e.attributes.online && e.id !== t ? e.id : void 0
                });
                $.each(i, function(i, n) {
                    return 0 === Object.keys(e).length ? (D(n),
                    void I(n)) : void $.each(e, function(e, i) {
                        console.log("myId", t),
                        console.log("playerId", n),
                        console.log("owner", e),
                        e === t || -1 !== i.indexOf(t) ? (console.log("I'm in this group"),
                        e === n || -1 !== i.indexOf(n) ? (console.log("The current player IS in the group with me"),
                        I(n)) : (console.log("The current player is NOT in the group with me"),
                        L(n))) : (e === n || -1 !== i.indexOf(n)) && (console.log("I'm in not in this group"),
                        e !== n || -1 === i.indexOf(n) ? (console.log("The current player IS in the group I'm not in"),
                        O(n)) : (console.log("The current player is NOT in the group I'm not in"),
                        D(n)))
                    })
                })
            }
        }
    }),
    d20.videochat = {
        publisher: !1,
        session: !1,
        numactiveconnections: 0,
        subscribeType: "video"
    },
    $(function() {
        function e(e) {
            var t = !1;
            return e.streamId == d20.videochat.publisher.streamId ? void console.log("publisher!") : (t = $("#playerzone .video[data-streamid=" + e.streamId + "]"),
            void (t && t.length > 0 && t.parents(".player").find(".playername").css({
                "background-size": Math.round(4 * e.volume) + "% 100%"
            })))
        }
        function t(e) {
            console.log("Exception received from TokBox"),
            console.log(e),
            (1006 === e.code || 1008 === e.code || 1014 === e.code) && (console.log("There was an error connecting. Trying again."),
            session.connect(i, r))
        }
        var i = "12312882"
          , n = window.opentok_session_id;
        if (d20.videochat.init = function() {}
        ,
        window.opentok_token && window.TB) {
            var r = window.opentok_token;
            d20.videochat.flashcheck = function() {
                var e = GetSwfVer()
                  , t = DetectFlashVer(11, 2, 0, e)
                  , i = " Please install Flash version 11.2.0 or higher.";
                if (e && (i = " You currently have Flash version " + e + " installed, please upgrade to version 11.2.0 or higher."),
                !t) {
                    var n = $("<div><p>You don't have the required version of Adobe Flash Player for using the video and voice chat, and hearing background music." + i + "</p><p><strong>Note:</strong> You can safely ignore this warning if you don't care about video or voice chat, or hearing background music.</p></div>");
                    n.dialog({
                        title: "Flash Update Needed",
                        buttons: {
                            "Get Flash": function() {
                                window.open("http://get.adobe.com/flashplayer")
                            },
                            "No Thanks": function() {
                                n.dialog("destroy")
                            }
                        },
                        beforeClose: function() {
                            n.dialog("destroy")
                        }
                    })
                }
                return t
            }
            ,
            d20.videochat.init = function() {
                if (console.log("initiatlizing video chat"),
                d20.videochat.flashcheck()) {
                    if (d20.videochat.subscribed)
                        return void console.log("already subscribed?");
                    d20.videochat.subscribed = !0,
                    d20.videochat.availableStreams = [],
                    d20.videochat.numactiveconnections = 0;
                    try {
                        var t = TB.initSession(n);
                        t.addEventListener("sessionConnected", c),
                        t.addEventListener("streamCreated", p),
                        t.addEventListener("streamDestroyed", u),
                        t.addEventListener("connectionCreated", h),
                        t.addEventListener("connectionDestroyed", l),
                        t.addEventListener("microphoneLevelChanged", e);
                        var s = {
                            playerid: window.currentPlayer.id,
                            displayname: window.currentPlayer.get("displayname")
                        };
                        t.connect(i, r, s),
                        d20.videochat.session = t
                    } catch (d) {
                        console.log("Error while initiatlizing video chat."),
                        console.log(d),
                        d20.videochat.subscribed = !1
                    }
                    $("#videobroadcasttype").bind("change", function() {
                        var e = $(this).val();
                        window.currentPlayer && window.currentPlayer.save({
                            videobroadcasttype: e
                        }),
                        "both" == e ? d20.videochat.switchToVideoBroadcast() : "voiceonly" == e ? d20.videochat.switchToAudioBroadcast() : o()
                    }),
                    $("#videoreceivetype").bind("change", function() {
                        var e = $(this).val();
                        window.currentPlayer && window.currentPlayer.save({
                            videoreceivetype: e
                        }),
                        "both" == e ? d20.videochat.switchToVideoReceive() : "voiceonly" == e ? d20.videochat.switchToAudioReceive() : a()
                    })
                }
            }
            ,
            TB.addEventListener("exception", t);
            var o = function() {
                d20.videochat.publisher !== !1 && (d20.videochat.session.unpublish(d20.videochat.publisher),
                d20.videochat.publisher = !1),
                $("#player_" + window.currentPlayer.id).find(".video > object").remove()
            }
              , a = function() {
                _.each(d20.videochat.session.subscribers, function(e) {
                    d20.videochat.session.unsubscribe(e)
                })
            }
              , s = function() {
                f(d20.videochat.availableStreams)
            }
              , l = function() {
                console.log("Recived connection destroyed event"),
                d20.videochat.numactiveconnections = d20.videochat.numactiveconnections - 1,
                d20.videochat.numactiveconnections < 2 && (console.log("Hiding video chat, only one connection active."),
                o())
            }
              , c = function(e) {
                console.log("Connected to session"),
                console.log(e),
                d20.videochat.availableStreams = _.union(d20.videochat.availableStreams, e.streams),
                d20.videochat.numactiveconnections = e.connections.length + d20.videochat.numactiveconnections,
                d20.videochat.numactiveconnections > 1 && (d(),
                s())
            }
              , d = function() {
                if ("none" != $("#videobroadcasttype").val()) {
                    if (d20.videochat.publisher !== !1)
                        return console.log("Already publishing, showing because number of connections is above 1."),
                        void $("#publisher_video").show();
                    console.log("initiatlizing publisher");
                    var e = document.createElement("div");
                    e.setAttribute("id", "publisher_video");
                    var t = $("#player_" + window.currentPlayer.id + " .video");
                    $(e).appendTo(t),
                    publisher = d20.videochat.session.publish("publisher_video", {
                        height: t.height(),
                        width: t.width(),
                        wmode: "direct",
                        publishVideo: "both" == $("#videobroadcasttype").val() ? !0 : !1,
                        name: window.currentPlayer.id,
                        reportMicLevels: !0,
                        style: {
                            nameDisplayMode: "off"
                        }
                    }),
                    d20.videochat.publisher = publisher
                }
            }
              , h = function(e) {
                console.log("Someone just connected."),
                console.log(e),
                d20.videochat.numactiveconnections = d20.videochat.numactiveconnections + 1,
                d20.videochat.numactiveconnections > 1 && (console.log("Begin publishing!"),
                d())
            }
              , u = function(e) {
                console.log("Stream destroyed");
                for (var t = 0; t < e.streams.length; t++)
                    $("#stream" + e.streams[t].streamId).remove(),
                    _.each(d20.videochat.availableStreams, function(i) {
                        console.log("Does " + i.streamId + " equal " + e.streams[t].streamId),
                        i.streamId == e.streams[t].streamId && (console.log(d20.videochat.availableStreams),
                        console.log("YES REMOVE"),
                        d20.videochat.availableStreams = _.without(d20.videochat.availableStreams, i),
                        console.log(d20.videochat.availableStreams))
                    })
            }
              , p = function(e) {
                console.log("stream created"),
                d20.videochat.availableStreams = _.union(d20.videochat.availableStreams, e.streams),
                s()
            }
              , f = function(e) {
                if ("none" != $("#videoreceivetype").val()) {
                    console.log("Subscribe to streams!"),
                    console.log(e),
                    console.log(d20.videochat.session.subscribers);
                    for (var t = (Math.round($(window).width() / e.length, 0),
                    !1), i = 0; i < e.length; i++)
                        if (e[i].connection.connectionId != d20.videochat.session.connection.connectionId && e[i].name != window.currentPlayer.id && (t = !1,
                        _.each(d20.videochat.session.subscribers, function(n) {
                            n.stream == e[i] && (t = !0)
                        }),
                        !(t || $("#playerzone .video[data-streamid=" + e[i].streamId + "]").length > 0))) {
                            var n = document.createElement("div");
                            n.setAttribute("id", "stream" + e[i].streamId),
                            $("#player_" + e[i].name + " .video").attr("data-streamid", e[i].streamId).append(n);
                            {
                                d20.videochat.session.subscribe(e[i], n.id, {
                                    height: 150,
                                    width: 150,
                                    wmode: "direct",
                                    subscribeToVideo: "both" == $("#videoreceivetype").val() ? !0 : !1,
                                    style: {
                                        nameDisplayMode: "off"
                                    }
                                })
                            }
                        }
                }
            }
            ;
            d20.videochat.switchToAudioBroadcast = function() {
                d(),
                _.each(d20.videochat.session.publishers, function(e) {
                    e.publishVideo(!1)
                })
            }
            ,
            d20.videochat.switchToVideoBroadcast = function() {
                d(),
                _.each(d20.videochat.session.publishers, function(e) {
                    e.publishVideo(!0)
                })
            }
            ,
            d20.videochat.switchToAudioReceive = function() {
                _.each(d20.videochat.session.subscribers, function(e) {
                    e.subscribeToVideo(!1)
                }),
                s()
            }
            ,
            d20.videochat.switchToVideoReceive = function() {
                _.each(d20.videochat.session.subscribers, function(e) {
                    e.subscribeToVideo(!0)
                }),
                s()
            }
        }
    }),
    d20.journal = {
        compendiumPasteTarget: !1
    },
    $(function() {
        var e, t = $("#journal .searchbox input");
        d20.journal.possibletags = {};
        var i = function() {
            e && clearTimeout(e),
            e = setTimeout(function() {
                var t = (new Date).getTime();
                d20.journal.possibletags = {},
                d20.journal.refreshJournalList(!0),
                n(),
                console.log("Search took " + ((new Date).getTime() - t) + "ms"),
                e = !1
            }, 300)
        }
        ;
        t.inputClear().bind("keyup", function() {
            i()
        }),
        $("#journaltags").on("click", "li a", function() {
            t.val(("" === t.val() ? "" : t.val() + " ") + $.trim($(this).text())).trigger("keyup").focus(),
            $("#journal").trigger("click")
        });
        var n = function() {
            for (var e = _.sortBy(d20.journal.possibletags, function(e) {
                return e.count
            }), t = "<ul>", i = 0; i < e.length; i++)
                t += "<li><a href='javascript:void(0);'>" + e[i].tag + "</a> (" + e[i].count + ")</li>";
            t += "</ul>",
            0 == e.length && (t = "There are no tags set for the items listed below."),
            $("#journaltags .taglist").html(t)
        }
        ;
        t.autocomplete({
            source: function(e, t) {
                var i = e.term.split(/[ ]\s*/)
                  , n = i[i.length - 1];
                t(_.pluck(_.filter(d20.journal.possibletags, function(e) {
                    return e.tag.substring(0, n.length) === n
                }), "tag"))
            },
            select: function(e, t) {
                var i = this.value.split(/[ ]\s*/);
                return i.pop(),
                i.push(t.item.value),
                i.push(""),
                this.value = i.join(" "),
                !1
            },
            focus: function() {
                return !1
            }
        }),
        $("#journal .searchbox .trigger").popover({
            my: "right top",
            at: "right bottom"
        }),
        $("#journal .superadd").popover({
            my: "right top",
            at: "right bottom"
        }),
        d20.journal.refreshJournalList = function(e) {
            if (!e)
                return void i();
            console.log("Refresh Journal List!");
            var n, r = 0, o = 0;
            n = t.length > 0 ? (t.val() + "").toLowerCase().split(" ") : [""];
            var a, s = d20.Campaign.get("journalfolder");
            if ("" === s) {
                a = [];
                var l = [];
                d20.Campaign.characters.each(function(e) {
                    l.push(e.toJSON())
                }),
                l = _.sortBy(l, function(e) {
                    return e.name
                }),
                a.push({
                    n: "Characters",
                    i: [],
                    id: "-characters"
                }),
                _.each(l, function(e) {
                    a[0].i.push(e.id)
                }),
                l = null ;
                var c = [];
                d20.Campaign.handouts.each(function(e) {
                    c.push(e.toJSON())
                }),
                c = _.sortBy(c, function(e) {
                    return e.name
                }),
                a.push({
                    n: "Handouts",
                    i: [],
                    id: "-handouts"
                }),
                _.each(c, function(e) {
                    a[1].i.push(e.id)
                }),
                c = null
            } else {
                a = JSON.parse(s);
                var d = ((new Date).getTime(),
                []);
                d20.Campaign.characters.each(function(e) {
                    return -1 !== s.indexOf(e.id) ? !0 : void d.push(e.toJSON())
                }),
                d20.Campaign.handouts.each(function(e) {
                    return -1 !== s.indexOf(e.id) ? !0 : void d.push(e.toJSON())
                }),
                d = _.sortBy(d, function(e) {
                    return e.name
                }),
                _.each(d, function(e) {
                    a.push(e.id)
                })
            }
            var h = ""
              , u = [];
            window.currentPlayer && "" !== window.currentPlayer.get("journalfolderstatus") && (u = window.currentPlayer.get("journalfolderstatus").split(","));
            var p = function(e) {
                var t, i = void 0 !== e.id && -1 !== u.indexOf(e.id + ""), a = e.n ? e.n : "";
                t = e.i ? e.i : e;
                var s = !1
                  , l = window.is_gm ? "dd-sortablehandle" : "dd-unsortable"
                  , c = function() {
                    e.i && (h += '<li class="dd-item dd-folder" data-globalfolderid="' + e.id + '">',
                    h += i ? '<button data-action="collapse" type="button" style="display: none;" class="' + l + '">Collapse</button><button data-action="expand" type="button" style="display: block;" class="dd-sortablehandle">Expand</button>' : '<button data-action="collapse" type="button" style="display: block;" class="' + l + '">Collapse</button><button data-action="expand" type="button" style="display: none;" class="dd-sortablehandle">Expand</button>',
                    h += '<div class="dd-handle ' + l + '">Drag</div><div class="dd-content"><div class="folder-title">' + d20ext.utils.strip_tags(e.n) + "</div></div>"),
                    h += i ? '<ol class="dd-list" style="display: none;">' : '<ol class="dd-list">',
                    s = !0
                }
                ;
                return _.each(t, function(e) {
                    var t = !1;
                    if (null === e)
                        return !0;
                    if ("object" == typeof e) {
                        var i = h + ""
                          , l = s ? !0 : !1;
                        s || c();
                        var d = p(e);
                        d || window.is_gm || (l || (s = !1),
                        h = i),
                        i = null
                    } else {
                        var u, f = e;
                        if (u = d20.Campaign.characters.get(f),
                        u || (u = d20.Campaign.handouts.get(f)),
                        !u)
                            return !0;
                        var g = u.get("inplayerjournals").split(",");
                        if (u.get("archived"))
                            return void 0 !== u.get("bio") ? r++ : o++,
                            !0;
                        if (window.is_gm || -1 !== _.indexOf(g, "all") || window.currentPlayer && -1 !== _.indexOf(g, window.currentPlayer.id)) {
                            if (window.is_gm) {
                                for (var m = 0; m < n.length; m++)
                                    "" != n[m] && -1 === u.get("name").toLowerCase().indexOf(n[m]) && -1 === u.get("tags").toLowerCase().indexOf(n[m]) && -1 === a.toLowerCase().indexOf(n[m]) && (t = !0);
                                for (var v = u.tagsArray(), y = 0; y < v.length; y++)
                                    void 0 === d20.journal.possibletags[v[y]] ? d20.journal.possibletags[v[y]] = {
                                        tag: v[y],
                                        count: 1
                                    } : d20.journal.possibletags[v[y]].count++
                            }
                            s || c();
                            var b = u.toJSON();
                            b.hidden = t,
                            h += $("#tmpl_existingitem").jqote(b)
                        }
                    }
                }),
                window.is_gm && !s && c(),
                s && (0 === t.length && (h += "<li class='dd-item dd-item-dummy'><div class='dd-content'></div></li>"),
                h += "</ol>",
                e.i && (h += "</li>")),
                s
            }
            ;
            p(a),
            window.is_gm && r > 0 && (h += "<div class='archiveentry character' data-itemid='archive'><span class='pictos' style='font-size: 1.5em; padding-right: 10px;'>I</span> <strong>" + r + "</strong> Archived Characters &raquo;</div>"),
            window.is_gm && o > 0 && (h += "<div class='archiveentry handout' data-itemid='archive'><span class='pictos' style='font-size: 1.5em; padding-right: 10px;'>I</span> <strong>" + o + "</strong> Archived Handouts &raquo;</div>"),
            $("#journalfolderroot").html(h),
            window.is_gm && (n.length > 1 || "" !== n[0]) && $("#journalfolderroot .dd-list").each(function() {
                0 === $(this).find(".dd-item").not(".dd-item-hidden, .dd-item-dummy").length && $(this).parent("li").hide()
            }),
            window.is_gm && !window.is_playerapp ? $("#journalfolderroot .dd-item").draggable({
                revert: !0,
                distance: 10,
                revertDuration: 0,
                helper: "clone",
                handle: ".namecontainer",
                appendTo: "body",
                scroll: !1,
                start: function() {
                    $("#journalfolderroot").addClass("externaldrag")
                },
                stop: function() {
                    $("#journalfolderroot").removeClass("externaldrag")
                }
            }).addTouch() : window.is_playerapp || $("#journalfolderroot .dd-item.character").each(function() {
                var e = $(this).attr("data-itemid")
                  , t = d20.Campaign.characters.get(e);
                t.currentPlayerControls() && $(this).draggable({
                    revert: !0,
                    distance: 10,
                    revertDuration: 0,
                    helper: "clone",
                    handle: ".namecontainer",
                    appendTo: "body",
                    scroll: !1,
                    start: function() {
                        $("#journalfolderroot").addClass("externaldrag")
                    },
                    stop: function() {
                        $("#journalfolderroot").removeClass("externaldrag")
                    }
                }).addTouch()
            }),
            d20.journal.refreshSpeakingAsOptions()
        }
        ,
        window.is_gm && $("#journalfolderroot").on("change", function() {
            var e = $("#journalfolderroot").nestable("serialize");
            e && d20.Campaign.save({
                journalfolder: JSON.stringify(e)
            })
        });
        var r = function(e, t, i) {
            if (i > 99)
                return void 0;
            var n;
            return _.each(e, function(e) {
                if (e && "object" == typeof e && e.id === t)
                    n = e;
                else if (e && "object" == typeof e && void 0 !== e.i) {
                    var o = r(e.i, t, i + 1);
                    void 0 !== o && (n = o)
                }
                return n ? !1 : void 0
            }),
            n
        }
        ;
        d20.journal.addItemToFolderStructure = function(e, t) {
            var i = d20.Campaign.get("journalfolder");
            if ("" !== i) {
                var n = JSON.parse(i);
                if (t && "root" !== t) {
                    var o = r(n, t, 0);
                    if (void 0 === o || void 0 === o.i)
                        return void console.log("ERROR: Could not find folder container for folder id " + t);
                    folderitems = o.i
                } else
                    folderitems = n;
                folderitems.unshift(e),
                d20.Campaign.save({
                    journalfolder: JSON.stringify(n)
                })
            }
        }
        ,
        d20.journal.addFolderToFolderStructure = function(e, t) {
            var i = d20.Campaign.get("journalfolder");
            "" === i && ($("#journalfolderroot").trigger("change"),
            i = d20.Campaign.get("journalfolder"));
            var n = JSON.parse(i);
            if (t && "root" !== t) {
                var o = r(n, t, 0);
                if (void 0 === o || void 0 === o.i)
                    return void console.log("ERROR: Could not find folder container for folder id " + t);
                folderitems = o.i
            } else
                folderitems = n;
            folderitems.unshift({
                n: e,
                i: [],
                id: generateUUID()
            }),
            d20.Campaign.save({
                journalfolder: JSON.stringify(n)
            })
        }
        ,
        $("#addnewjournalfolder").on("click", function() {
            var e = prompt("What do you want to call the new folder?");
            null != e && (d20.journal.addFolderToFolderStructure(e),
            $("#journal").trigger("click"))
        });
        var o, a = $("#journalmenu"), s = $("#journalitemmenu");
        if ($("#journalfolderroot").on("contextmenu", ".dd-content", function(e) {
            window.is_gm && ($(this).parent().hasClass("dd-folder") ? (a.show(),
            a.css({
                top: e.pageY + "px",
                left: e.pageX + "px"
            }),
            o = $(this).parent()) : $(this).parent().hasClass("dd-item") && (s.show(),
            s.css({
                top: e.pageY + "px",
                left: e.pageX + "px"
            }),
            $currentItemTarget = $(this).parent()),
            e.preventDefault(),
            e.stopPropagation())
        }),
        $("#journalmenu").on(mousedowntype, function() {
            return !1
        }),
        $("#journalmenu ul").on(mousedowntype, "li[data-action-type=deletefolder]", function() {
            var e = confirm("Are you sure you want to delete this folder? All items in it will be moved to the root folder.");
            e && (o.remove(),
            $("#journalfolderroot").trigger("change")),
            $("#journalmenu").hide()
        }),
        $("#journalmenu ul").on(mousedowntype, "li[data-action-type=addfolder]", function() {
            var e = prompt("What do you want to call the new folder?");
            if (null != e) {
                var t = o.attr("data-globalfolderid");
                if (!t)
                    return void console.log("Did not find folder id");
                3 === o.parents(".dd-folder").length && (t = o.parent().closest(".dd-folder").attr("data-globalfolderid")),
                $("#journalmenu").hide(),
                d20.journal.addFolderToFolderStructure(e, t)
            }
        }),
        $("#journalmenu ul").on(mousedowntype, "li[data-action-type=renamefolder]", function() {
            var e = prompt("What do you want to rename the folder to?");
            if (null != e) {
                var t = o.attr("data-globalfolderid");
                if (!t)
                    return void console.log("Did not find folder id");
                $("#journalmenu").hide();
                var i = d20.Campaign.get("journalfolder");
                "" === i && ($("#journalfolderroot").trigger("change"),
                i = d20.Campaign.get("journalfolder"));
                var n = JSON.parse(i)
                  , a = r(n, t);
                a && (a.n = e),
                d20.Campaign.save({
                    journalfolder: JSON.stringify(n)
                })
            }
        }),
        $("#journalmenu ul").on(mousedowntype, "li[data-action-type=addcharacter], li[data-action-type=addhandout]", function() {
            var e = o.attr("data-globalfolderid");
            if (!e)
                return void console.log("Did not find folder id");
            if (console.log("Folder: " + e),
            "addcharacter" === $(this).attr("data-action-type")) {
                d20.Campaign.characters.create({
                    name: d20.namegen() + " " + d20.namegen()
                }, {
                    success: function(t) {
                        d20.journal.addItemToFolderStructure(t.id, e)
                    }
                })
            } else {
                d20.Campaign.handouts.create({
                    name: "Mysterious Note"
                }, {
                    success: function(t) {
                        d20.journal.addItemToFolderStructure(t.id, e)
                    }
                })
            }
            $("#journalmenu").hide(),
            $("#journal").trigger("click")
        }),
        $("#journalmenu ul").on(mousedowntype, "li[data-action-type=sortalpha]", function() {
            var e = o.attr("data-globalfolderid");
            if (!e)
                return void console.log("Did not find folder id");
            $("#journalmenu").hide();
            var t = d20.Campaign.get("journalfolder");
            "" === t && ($("#journalfolderroot").trigger("change"),
            t = d20.Campaign.get("journalfolder"));
            var i = JSON.parse(t)
              , n = r(i, e);
            n && (n.i = _.sortBy(n.i, function(e) {
                if (e && "object" == typeof e && void 0 !== e.n)
                    return e.n;
                if ("string" == typeof e) {
                    var t = d20.Campaign.characters.get(e);
                    return t || (t = d20.Campaign.handouts.get(e)),
                    t ? t.get("name") : "ZZZZZZ"
                }
            })),
            d20.Campaign.save({
                journalfolder: JSON.stringify(i)
            }),
            $("#journalmenu").hide()
        }),
        $("#journalitemmenu ul").on(mousedowntype, "li[data-action-type=showtoplayers]", function() {
            var e = $currentItemTarget.attr("data-itemid")
              , t = d20.Campaign.handouts.get(e);
            t || (t = d20.Campaign.characters.get(e)),
            t && t.broadcastToPlayers()
        }),
        $("#journalitemmenu ul").on(mousedowntype, "li[data-action-type=archiveitem]", function() {
            var e = $currentItemTarget.attr("data-itemid")
              , t = d20.Campaign.handouts.get(e);
            t || (t = d20.Campaign.characters.get(e)),
            t && t.save({
                archived: !0
            })
        }),
        $("#journalitemmenu ul").on(mousedowntype, "li[data-action-type=deleteitem]", function() {
            var e = $currentItemTarget.attr("data-itemid")
              , t = d20.Campaign.handouts.get(e);
            t || (t = d20.Campaign.characters.get(e)),
            t && t.safeDestroy()
        }),
        a.length > 0 && $("body").on(mousedowntype, function() {
            "none" !== a[0].style.display && (a[0].style.display = "none"),
            s.length > 0 && "none" !== s[0].style.display && (s[0].style.display = "none")
        }),
        $("#journalfolderroot").on(mousedowntype, ".dd-folder .dd-content", function(e) {
            return void 0 === e.which || 3 !== e.which ? ($(this).siblings("button:visible").trigger("click"),
            !1) : void 0
        }),
        $("#journalfolderroot").on("folderstatuschange", function() {
            var e = [];
            $("#journalfolderroot").find(".dd-folder").each(function() {
                $(this).find("> .dd-list").is(":visible") || e.push($(this).attr("data-globalfolderid"))
            }),
            window.currentPlayer.save({
                journalfolderstatus: e.join(",")
            })
        }),
        d20.journal.refreshHandoutsList = function(e) {
            return e ? ($("#existinghandouts tbody").html($("#tmpl_existinghandouts").jqote({
                list: handouts,
                numarchived: numarchived
            })),
            void (window.is_gm && !window.is_playerapp && $("#existinghandouts tr").draggable({
                revert: !0,
                distance: 10,
                revertDuration: 0,
                helper: "clone",
                appendTo: "body",
                scroll: !1
            }).addTouch())) : void i()
        }
        ,
        d20.journal.refreshSpeakingAsOptions = function() {
            var e = [];
            d20.Campaign.characters.each(function(t) {
                if (t.get("archived"))
                    return !0;
                var i = t.get("controlledby").split(",");
                (window.is_gm || -1 !== _.indexOf(i, "all") || window.currentPlayer && -1 !== _.indexOf(i, window.currentPlayer.id)) && e.push(t.toJSON())
            }),
            e = _.sortBy(e, function(e) {
                return e.name
            }),
            $("#speakingas").html($("#tmpl_speakingas_choices").jqote({
                characters: e
            })),
            $("#speakingas").val(window.currentPlayer.get("speakingas")),
            $("#player_displayname").val(window.currentPlayer.get("displayname"))
        }
        ,
        $("#speakingas").bind("change", function() {
            window.currentPlayer.save({
                speakingas: $("#speakingas").val()
            })
        }),
        $("#savenewplayername").bind("click", function() {
            window.currentPlayer.save({
                displayname: d20.utils.strip_tags($("#player_displayname").val())
            }),
            d20.journal.refreshSpeakingAsOptions()
        }),
        $("#addnewcharacter").live("click", function() {
            d20.Campaign.characters.create({
                name: d20.namegen() + " " + d20.namegen()
            }, {
                success: function(e) {
                    d20.journal.addItemToFolderStructure(e.id),
                    e.editview.showDialog()
                }
            });
            $("#journal").trigger("click")
        }),
        $("#journal").on("click", ".character", function() {
            var e = $(this).attr("data-itemid");
            if ("archive" == e)
                return void (window.is_gm && d20.journal.showArchiveDialog(d20.Campaign.characters, "Characters"));
            var t = d20.Campaign.characters.get(e);
            t ? t.view.showDialog() : alert("ERROR: Unable to find character with ID " + e)
        }),
        $(".editcharacter").live("click", function() {
            var e = $(this).parents(".ui-dialog-titlebar").siblings(".dialog").attr("data-characterid")
              , t = d20.Campaign.characters.get(e);
            if (t) {
                var i = t.view.$el.find("ul.nav li.active a").attr("data-tab");
                t.view.$el.dialog("close"),
                t.editview.showDialog(),
                _.defer(function() {
                    t.editview.$el.find("ul.nav li a[data-tab=" + i + "]").trigger("click")
                })
            } else
                alert("ERROR: Unable to find character to edit.")
        }),
        $(".broadcastcharacter").live("click", function() {
            var e = $(this).parents(".ui-dialog-titlebar").siblings(".dialog").attr("data-characterid")
              , t = d20.Campaign.characters.get(e);
            t ? t.broadcastToPlayers() : alert("ERROR: Unable to find character to edit.")
        }),
        $(document).on("click", ".zoomoptions", function() {
            var e = $(this).siblings(".zoomoptionsmenu");
            e.show()
        }),
        $(document).on("click", ".zoomoptionsmenu .zoomdisplay", function() {
            var e = $(this).parents(".ui-dialog-titlebar").siblings(".dialog");
            $zoomarea = e.find(e.attr("data-handoutid") ? ".handoutviewer" : ".tab-content"),
            $zoomarea.attr("data-zoom", 100),
            $(this).text("100%"),
            $zoomarea.css({
                "-ms-transform": "scale(1)",
                "-webkit-transform": "scale(1)",
                transform: "scale(1)",
                width: "inherit"
            })
        }),
        $(document).on("click", ".zoomoptionsmenu .zoomin", function() {
            var e = $(this).siblings(".zoomdisplay")
              , t = $(this).parents(".ui-dialog-titlebar").siblings(".dialog");
            $zoomarea = t.find(t.attr("data-handoutid") ? ".handoutviewer" : ".tab-content"),
            $zoomarea.attr("data-zoom") || $zoomarea.attr("data-zoom", 100),
            $zoomarea.attr("data-origwidth") || $zoomarea.attr("data-origwidth", $zoomarea.width());
            var i = $zoomarea.attr("data-zoom");
            switch (i = parseInt(i, 10)) {
            case 25:
                i = 33;
                break;
            case 33:
                i = 50;
                break;
            case 50:
                i = 67;
                break;
            case 67:
                i = 75;
                break;
            case 75:
                i = 90;
                break;
            case 90:
                i = 100;
                break;
            case 100:
                i = 110;
                break;
            case 110:
                i = 125;
                break;
            case 125:
                i = 150;
                break;
            case 150:
                i = 175;
                break;
            case 175:
                i = 200;
                break;
            case 200:
                i = 250;
                break;
            case 250:
                i = 300;
                break;
            case 300:
                i = 400;
                break;
            case 400:
                i = 500
            }
            $zoomarea.attr("data-zoom", i),
            e.text(i + "%");
            var n = 100 === i ? "inherit" : $zoomarea.attr("data-origwidth") * (i / 100);
            $zoomarea.css({
                "-ms-transform": "scale(" + i / 100 + ")",
                "-ms-transform-origin": "top left",
                "-webkit-transform": "scale(" + i / 100 + ")",
                "-webkit-transform-origin": "top left",
                transform: "scale(" + i / 100 + ")",
                "transform-origin": "top left",
                width: n
            })
        }),
        $(document).on("click", ".zoomoptionsmenu .zoomout", function() {
            var e = $(this).siblings(".zoomdisplay")
              , t = $(this).parents(".ui-dialog-titlebar").siblings(".dialog");
            $zoomarea = t.find(t.attr("data-handoutid") ? ".handoutviewer" : ".tab-content"),
            $zoomarea.attr("data-zoom") || $zoomarea.attr("data-zoom", 100),
            $zoomarea.attr("data-origwidth") || $zoomarea.attr("data-origwidth", $zoomarea.width());
            var i = $zoomarea.attr("data-zoom");
            switch (i = parseInt(i, 10)) {
            case 33:
                i = 25;
                break;
            case 50:
                i = 33;
                break;
            case 67:
                i = 50;
                break;
            case 75:
                i = 67;
                break;
            case 90:
                i = 75;
                break;
            case 100:
                i = 90;
                break;
            case 110:
                i = 100;
                break;
            case 125:
                i = 110;
                break;
            case 150:
                i = 125;
                break;
            case 175:
                i = 150;
                break;
            case 200:
                i = 175;
                break;
            case 250:
                i = 200;
                break;
            case 300:
                i = 250;
                break;
            case 400:
                i = 300;
                break;
            case 500:
                i = 400
            }
            $zoomarea.attr("data-zoom", i),
            e.text(i + "%");
            var n = 100 === i ? "inherit" : $zoomarea.attr("data-origwidth") * (i / 100);
            $zoomarea.css({
                "-ms-transform": "scale(" + i / 100 + ")",
                "-ms-transform-origin": "top left",
                "-webkit-transform": "scale(" + i / 100 + ")",
                "-webkit-transform-origin": "top left",
                transform: "scale(" + i / 100 + ")",
                "transform-origin": "top left",
                width: n
            })
        }),
        $(document).click(function(e) {
            var t = e.target;
            $(t).is(".zoomoptionsmenu") || $(t).parents().is(".zoomoptionsmenu") || $(t).is(".zoomoptions") || $(t).parents().is(".zoomoptions") || $(".zoomoptionsmenu").hide()
        }),
        $(document).on("click", ".showpopout", function() {
            var e = $(this).parents(".ui-dialog-titlebar").siblings(".dialog");
            if (e.hasClass("characterdialog"))
                var t = e.attr("data-characterid")
                  , i = d20.Campaign.characters.get(t);
            else if (e.attr("data-handoutid"))
                var n = e.attr("data-handoutid")
                  , i = d20.Campaign.handouts.get(n);
            i && i.view.showPopout()
        }),
        d20.journal.showCharacterFromShout = function(e) {
            if ("all" === e.playerid || e.playerid === window.currentPlayer.id) {
                var t = d20.Campaign[e.jtype + "s"].get(e.jid);
                if (!t)
                    return;
                var i = t.get("inplayerjournals").split(",");
                (window.is_gm || -1 !== _.indexOf(i, "all") || window.currentPlayer && -1 !== _.indexOf(i, window.currentPlayer.id)) && t.view.showDialog(!0)
            }
        }
        ,
        $("#existingcharacters").on("refresh", function() {
            refreshCharactersList()
        }),
        $("#addnewhandout").live("click", function() {
            d20.Campaign.handouts.create({}, {
                success: function(e) {
                    d20.journal.addItemToFolderStructure(e.id),
                    e.editview.showDialog()
                }
            });
            $("#journal").trigger("click")
        }),
        $("#journal").on("click", ".handout", function() {
            var e = $(this).attr("data-itemid");
            if ("archive" == e)
                return void (window.is_gm && d20.journal.showArchiveDialog(d20.Campaign.handouts, "Handouts"));
            var t = d20.Campaign.handouts.get(e);
            t ? t.view.showDialog() : alert("ERROR: No handout found with the ID: " + e)
        }),
        $(".edithandout").live("click", function() {
            var e = $(this).parents(".ui-dialog-titlebar").siblings(".dialog").attr("data-handoutid")
              , t = d20.Campaign.handouts.get(e);
            t ? (t.editview.showDialog(),
            t.view.$el.dialog("close")) : alert("ERROR: Unable to find handout to edit.")
        }),
        $(".broadcasthandout").live("click", function() {
            var e = $(this).parents(".ui-dialog-titlebar").siblings(".dialog").attr("data-handoutid")
              , t = d20.Campaign.handouts.get(e);
            t ? t.broadcastToPlayers() : alert("ERROR: Unable to find handout to edit.")
        }),
        d20.journal.showHandoutFromShout = function(e) {
            if ("all" === e.playerid || e.playerid === window.currentPlayer.id) {
                var t = d20.Campaign[e.jtype + "s"].get(e.jid);
                if (!t)
                    return;
                var i = t.get("inplayerjournals").split(",");
                (window.is_gm || -1 !== _.indexOf(i, "all") || window.currentPlayer && -1 !== _.indexOf(i, window.currentPlayer.id)) && t.view.showDialog(!0)
            }
        }
        ,
        $("#existinghandouts").on("refresh", function() {
            refreshHandoutsList()
        }),
        d20.journal.showArchiveDialog = function(e, t) {
            var i = [];
            e.each(function(e) {
                e.get("archived") && i.push(e.toJSON())
            }),
            i = _.sortBy(i, function(e) {
                return e.name
            });
            var n = $($("#tmpl_archive").jqote({
                list: i
            }))
              , r = 700
              , o = $(window).height() - 300;
            o > r && (o = r),
            n.dialog({
                title: "Archived " + t,
                modal: !1,
                width: 400,
                zIndex: 10800,
                height: o,
                position: ["center", 20],
                beforeClose: function() {
                    $(this).dialog("destroy").remove()
                }
            }),
            n.on("click", ".restore", function() {
                var t = $(this).parents("tr").attr("data-objid")
                  , i = e.get(t);
                if (!i)
                    return void console.log("No target found.");
                i.save({
                    archived: !1
                });
                var r = $(this).parents("table");
                $(this).parents("tr").remove(),
                0 == r.find("tr").length && n.dialog("destroy").remove()
            })
        }
        ,
        void 0 !== window.customcharsheet_html) {
            d20.journal.useCustomSheets = !0,
            d20.journal.customSheets = {};
            var l = function(e, t, i) {
                i || void 0 === t || (e = html_sanitize(e, function(e) {
                    var t = e.toString()
                      , i = "https://s3.amazonaws.com/files.d20.io";
                    return t.substring(0, i.length) === i ? t : /^https?:\/\//.test(t) ? "http://imgsrv.roll20.net/?src=" + escape(t.replace("http://", "").replace("https://", "")) : ""
                }, function(e) {
                    var t = e.split(" ");
                    return _.each(t, function(e, i) {
                        t[i] = "attr_" === e.substring(0, 5) || "sheet-" === e.substring(0, 6) || "repeating_" === e.substring(0, 10) || "roll_" === e.substring(0, 5) || "tokenaction" === e ? e : "sheet-" + e
                    }),
                    t.join(" ")
                })),
                t = (((t || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join("");
                var n = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi
                  , r = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;
                return e.replace(r, "").replace(n, function(e, i) {
                    return t.indexOf("<" + i.toLowerCase() + ">") > -1 ? e : ""
                })
            }
            ;
            console.log("Compiling sheet..."),
            d20.journal.customSheets.rollTemplates = {};
            var c = BASE64.decode(customcharsheet_html)
              , d = /(<rolltemplate [^>]+>)([\s\S]*?)(<\/rolltemplate>)/gi
              , h = /(class=\"sheet-rolltemplate-)([^\"]+)(\">)/i;
            c = c.replace(d, function(e) {
                var t = h.exec(e);
                if (t && t.length > 3) {
                    console.log("Found rolltemplate: " + t[2]);
                    var i = t[2]
                      , n = arguments[2];
                    n = l(n, "<br><input><textarea><div><span><label><hr><img><b><i><strong><em><h1><h2><h3><h4><h5><h6><p><hr><table><tr><td><tbody><thead><th><tfoot><select><option><fieldset><button><ul><li><ol><caption>"),
                    d20.journal.customSheets.rollTemplates[i] = n
                }
                return ""
            }),
            d20.journal.customSheets.workerScripts = [];
            var u = /(<script [^>]+>)([\s\S]*?)(<\/script>)/gi
              , p = /(type=[\"|']text\/worker[\"|']>)/i;
            c = c.replace(u, function(e) {
                var t = p.exec(e);
                return t && -1 !== t[0].indexOf("text/worker") ? (console.log("Found webworker script"),
                d20.journal.customSheets.workerScripts.push(arguments[2]),
                "") : e
            }),
            d20.journal.customSheets.layouthtml = l(c, "<br><input><textarea><div><span><label><hr><img><b><i><strong><em><h1><h2><h3><h4><h5><h6><p><hr><table><tr><td><tbody><thead><th><tfoot><select><option><optgroup><fieldset><button><ul><li><ol><caption>");
            var f = $("<div class='root'>" + d20.journal.customSheets.layouthtml + "</div>");
            f = d20.utils.htmlTranslator(f),
            console.log("Finding sheet rolls..."),
            d20.journal.customSheets.availableRolls = {},
            d20.journal.customSheets.availableAttributes = {},
            d20.journal.customSheets.reservedAttributes = {},
            d20.journal.customSheets.tokenActions = [],
            d20.journal.customSheets.attrDeps = {};
            var g = /@{[^}]+}/g;
            d20.journal.updateSheetDeps = function(e, t) {
                var i = t.match(g);
                if (!i)
                    return !0;
                for (var n = 0; n < i.length; n++) {
                    var r = i[n].substring(2, i[n].length - 1).toLowerCase();
                    d20.journal.customSheets.attrDeps[r] || (d20.journal.customSheets.attrDeps[r] = []),
                    -1 === d20.journal.customSheets.attrDeps[r].indexOf(e.toLowerCase()) && d20.journal.customSheets.attrDeps[r].push(e.toLowerCase())
                }
            }
            ,
            f.find("button[type=roll]").each(function() {
                var e = $(this)
                  , t = e.parents("fieldset")
                  , i = t.length > 0 ? t.attr("class") + "_" : "";
                if (void 0 !== e.attr("name")) {
                    var n = i + e.attr("name").substring(5, e.attr("name").length).toLowerCase();
                    d20.journal.customSheets.availableRolls[n] = e.attr("value").split("\\n").join("\n"),
                    e.hasClass("tokenaction") && d20.journal.customSheets.tokenActions.push(n)
                }
                e.addClass("btn")
            }),
            d20.journal.customSheets.tokenActions = _.sortBy(d20.journal.customSheets.tokenActions, function(e) {
                return e
            }),
            f.find('*[name^="attr_"]').each(function() {
                var e = $(this)
                  , t = e.parents("fieldset")
                  , i = "";
                if (t.length > 0) {
                    var n, r = t[0].classList;
                    _.each(r, function(e) {
                        return "repeating_" === e.substring(0, 10) ? (n = e.toLowerCase().replace("'", "&quot;"),
                        !1) : void 0
                    }),
                    n && (i = n + "_")
                }
                var o = i + e.attr("name").substring(5, e.attr("name").length).toLowerCase();
                if ("input" === this.tagName.toLowerCase() && "checkbox" === e.attr("type") && void 0 !== e.attr("value"))
                    d20.journal.customSheets.availableAttributes[o] = e.attr("checked") ? e.attr("value") || "" : "0";
                else if ("input" === this.tagName.toLowerCase() && "radio" === e.attr("type") && void 0 !== e.attr("value"))
                    e.attr("checked") && (d20.journal.customSheets.availableAttributes[o] = e.attr("value") || "");
                else if (e.attr("disabled")) {
                    if (!this.attributes.value)
                        return console.log("SHEET ERROR: Specified a disabled input without a valid formula in the value attribute."),
                        !0;
                    d20.journal.customSheets.availableAttributes[o] = this.attributes.value.nodeValue || "",
                    d20.journal.updateSheetDeps(o, d20.journal.customSheets.availableAttributes[o]),
                    e.attr("data-formula", this.attributes.value.nodeValue),
                    d20.journal.customSheets.reservedAttributes[o] = !0
                } else
                    d20.journal.customSheets.availableAttributes[o] = "span" === this.tagName.toLowerCase() ? d20.journal.customSheets.availableAttributes[o] : e.attr("value") || "";
                e.attr("disabled") || "string" != typeof e.attr("value") || -1 === e.attr("value").indexOf("@{") || d20.journal.updateSheetDeps(o, e.attr("value"))
            }),
            d20.journal.customSheets.layouthtml = f.html(),
            l = function(e, t) {
                e = e.replace(/\/\*[^\*]+\*\//g, ""),
                e = e.replace(/([^{]+){[^}]*}/gi, function(e, t) {
                    t = $.trim(t);
                    for (var i = t.split(","), n = "", r = 0; r < i.length; r++)
                        i[r] = $.trim(i[r]),
                        "#" === i[r].substring(0, 1) && (i[r] = i[r].replace("#", ".")),
                        i[r].match(/^\.lang-[a-z]{2}( .*)?$/) ? i[r] = ".charsheet" + i[r] : i[r].match(/^\.charsheet(\.lang-[a-z]{2})?( .*)?$/) || "@font-face" === i[r] || ".sheet-rolltemplate-" === i[r].substring(0, 20) || ".withoutavatars .sheet-rolltemplate-" === i[r].substring(0, 36) || (i[r] = ".charsheet " + i[r]);
                    return n = i.join(","),
                    e = e.replace(t, n)
                });
                for (var i = [/(\bdata:\b|eval|cookie|\bwindow\b|\bparent\b|\bthis\b)/i, /behaviou?r|expression|moz-binding|@import|@charset|javascript|vbscript|[\<]|\\\w/i, /[\x7f-\xff]/, /[\x00-\x08\x0B\x0C\x0E-\x1F]/, /&\#/], n = 0; n < i.length; n++)
                    e.match(i[n]) && (console.log(e.match(i[n])),
                    console.error("Potential CSS security violation; character sheet template styling thrown out."),
                    e = "");
                e = e.replace(/url[\s]*\([^\)]+\)/gi, function(e) {
                    e = e.replace(/\s/gi, ""),
                    e = e.replace("url(", "");
                    var t = e.split(")");
                    e = t[t.length - 2],
                    e = e.replace(/'/gi, ""),
                    e = e.replace(/"/gi, "");
                    var i = "https://s3.amazonaws.com/files.d20.io";
                    return e.substring(0, i.length) === i ? "url('" + e + "')" : /^https?:\/\//.test(e) ? "url('http://imgsrv.roll20.net/?src=" + escape($.trim(e.replace("http://", "").replace("https://", ""))) + "')" : ""
                }),
                t = (((t || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join("");
                var r = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi
                  , o = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;
                return e.replace(o, "").replace(r, function(e, i) {
                    return t.indexOf("<" + i.toLowerCase() + ">") > -1 ? e : ""
                })
            }
            ;
            var m, v = document.head || document.getElementsByTagName("head")[0], y = document.createElement("style");
            m = l(BASE64.decode(customcharsheet_css)),
            y.type = "text/css",
            y.styleSheet ? y.styleSheet.cssText = m : y.appendChild(document.createTextNode(m)),
            v.appendChild(y),
            d20.journal.customSheets.styleel = y
        }
        if ($(document).on("submit", ".sheetform", function(e) {
            return e.preventDefault(),
            !1
        }),
        $(document).on("keydown", ".charsheet input", function(e) {
            13 === e.which && (e.preventDefault(),
            e.stopPropagation())
        }),
        d20.journal.customSheets) {
            var b;
            d20.journal.customSheets.activeWorkers = [],
            _.each(d20.journal.customSheets.workerScripts, function(e) {
                var t;
                t = new Worker(window.is_playerapp ? "https://app.roll20.net/js/d20/sheetsandboxworker.js?" + (new Date).getTime() : "/js/d20/sheetsandboxworker.js?20160926"),
                t.addEventListener("message", function(e) {
                    if ("attrreq" === e.data.type) {
                        var i, n = {}, r = d20.Campaign.characters.get(e.data.id.split("//")[0]), o = e.data.id.split("//")[1];
                        i = "false" == o ? !1 : o,
                        _.each(e.data.data, function(e) {
                            var t = !1
                              , o = "current"
                              , a = e;
                            if ("character_name" === e.toLowerCase())
                                return n[a] = r.get("name"),
                                !0;
                            if ("character_id" === e.toLowerCase())
                                return n[a] = r.id,
                                !0;
                            if ("_max" === e.substr(e.length - 4) && (o = "max",
                            e = e.substring(0, e.length - 4)),
                            "repeating_" === e.substring(0, 10)) {
                                var s = e.split("_");
                                isNaN(s[2]) && "-" !== s[2].substring(0, 1) && (e = i + "_" + s.splice(2, s.length).join("_"))
                            }
                            if (r.attribs.each(function(i) {
                                t || i.get("name").toLowerCase() === e.toLowerCase() && (void 0 !== i.get(o) && "" !== i.get(o) && (n[a] = i.get(o)),
                                t = !0)
                            }),
                            !t) {
                                var l = a;
                                l = l.toLowerCase(),
                                void 0 !== d20.journal.customSheets.availableAttributes[l] && (n[a] = d20.journal.customSheets.availableAttributes[l])
                            }
                        }),
                        t.postMessage({
                            type: "attrreqfulfilled",
                            id: e.data.id,
                            data: n
                        })
                    } else if ("setattrs" === e.data.type) {
                        var a = e.data.data
                          , r = d20.Campaign.characters.get(e.data.characterid)
                          , s = function(e, t) {
                            var i;
                            return r.attribs.each(function(n) {
                                i || n.get("name").toLowerCase().substring(0, e.length) === e && (i = n.get("name").substring(0, e.length) + "_" + t)
                            }),
                            i ? i : e + "_" + t
                        }
                        ;
                        for (var l in a) {
                            var c = "current"
                              , d = a[l]
                              , h = !1;
                            if ("_max" === l.substr(l.length - 4) && (c = "max",
                            l = l.substring(0, l.length - 4)),
                            "repeating_" === l.substring(0, 10)) {
                                var u = l.split("_");
                                e.data.repeatingfield && u.length > 2 && isNaN(u[2]) && "-" !== u[2].substring(0, 1) && (l = e.data.repeatingfield + "_" + u.splice(2, u.length).join("_"),
                                u = l.split("_")),
                                u.length > 3 && (l = s(u.splice(0, 3).join("_"), u.join("_")));
                                var p = l.split("_");
                                if (p.length < 4 || "" === p[2] || isNaN(p[2]) && "-" !== p[2].substring(0, 1)) {
                                    console.log("SHEET WORKER ERROR: You attempted to set an attribute beginning with 'repeating_' but did not include a Row ID or Attribute Name in " + l);
                                    continue
                                }
                            }
                            var f = {};
                            if (f[c] = d,
                            r.attribs.each(function(e) {
                                h || e.get("name").toLowerCase() === l.toLowerCase() && (e.get(c) !== d && e.syncedSave(f),
                                h = !0)
                            }),
                            !h) {
                                var g = r.attribs.create({
                                    name: l
                                });
                                g.syncedSave(f)
                            }
                            e.data.options && e.data.options.silent || (r.view.changedByMe = "sheetworker")
                        }
                        t.postMessage({
                            type: "setattrreqfulfilled",
                            id: e.data.id
                        })
                    } else if ("setdefaulttoken" === e.data.type) {
                        var a = e.data.data
                          , r = d20.Campaign.characters.get(e.data.characterid)
                          , m = ["bar1_value", "bar1_max", "bar1_link", "bar2_value", "bar2_max", "bar2_link", "bar3_value", "bar3_max", "bar3_link", "imgsrc"];
                        Object.keys(a).forEach(function(e) {
                            if (-1 === m.indexOf(e) && delete a[e],
                            e.indexOf("link") > -1) {
                                var t = r.attribs.filter(function(t) {
                                    return t.get("name") === a[e]
                                });
                                t.length > 0 && (a[e] = t[0].id)
                            }
                        }),
                        a.represents = r.id,
                        a.name = r.get("name"),
                        a.height = 70,
                        a.width = 70,
                        a.imgsrc = a.imgsrc && a.imgsrc.indexOf("files.d20.io/") > -1 ? a.imgsrc : r.get("avatar").replace("/original.", "/thumb.");
                        var v = JSON.stringify(a);
                        r.updateBlobs({
                            defaulttoken: v
                        }),
                        r.save({
                            defaulttoken: (new Date).getTime()
                        })
                    } else if ("attrlist" === e.data.type) {
                        var y = (e.data.data + "").toLowerCase()
                          , r = d20.Campaign.characters.get(e.data.id.split("//")[0])
                          , b = [];
                        r.attribs.each(function(e) {
                            if (-1 !== (e.get("name") + "").toLowerCase().indexOf(y)) {
                                var t = e.get("name").split("_");
                                if (t.length > 2) {
                                    var i = t[2].toLowerCase();
                                    "" === i || isNaN(i) && "-" !== i.substring(0, 1) || -1 === b.indexOf(i) && b.push(i)
                                }
                            }
                        }),
                        t.postMessage({
                            type: "attrlistreqfulfilled",
                            id: e.data.id,
                            data: b
                        })
                    } else if ("removerepeatingrow" === e.data.type) {
                        var w = e.data.data + "_"
                          , x = w.split("_");
                        if (3 > x || "" === x[2] || "-" !== x[2].substring(0, 1) && isNaN(x[2]))
                            return void console.log("SHEET WORKER ERROR: You attempted to delete a repeating row but passed an invalid row ID in " + w);
                        var r = d20.Campaign.characters.get(e.data.id.split("//")[0])
                          , T = [];
                        r.attribs.each(function(e) {
                            e.get("name").toLowerCase().substring(0, w.length) === w.toLowerCase() && (console.log("DESTROYING " + e.get("name")),
                            T.push(e))
                        });
                        for (var C = 0; C < T.length; C++)
                            T[C].destroy()
                    } else if ("forcerender" === e.data.type) {
                        var r = d20.Campaign.characters.get(e.data.id.split("//")[0]);
                        r && r.view && r.view.render()
                    }
                    E()
                }),
                void 0 !== window.customcharsheet_translation && t.postMessage({
                    type: "loadTranslationStrings",
                    data: JSON.parse(BASE64.decode(window.customcharsheet_translation))
                }),
                t.postMessage({
                    type: "eval",
                    data: e
                }),
                d20.journal.customSheets.activeWorkers.push(t)
            });
            var w = [];
            d20.journal.waitForSandboxProcessing = function(e) {
                w.push(e)
            }
            ;
            var x = function() {
                var e = w;
                w = [],
                e.length > 0 && _.each(e, function(e) {
                    e()
                })
            }
              , E = _.debounce(x, 500);
            d20.journal.notifyWorkersOfAttrChanges = function(e, t, i) {
                if (d20.journal.customSheets && d20.journal.customSheets.activeWorkers) {
                    b = e;
                    var n = d20.Campaign.characters.get(e);
                    if (-1 === t.indexOf("all")) {
                        var r = [];
                        _.each(t, function(e) {
                            var t = e;
                            if ("repeating_" === t.substring(0, 10)) {
                                var o = t.split("_");
                                if ("undefined" != typeof o[2] && "$" === o[2].substring(0, 1))
                                    return !0;
                                if (o.length > 3 && (!isNaN(o[2]) || "-" === o[2].substring(0, 1))) {
                                    var a = _.clone(o).splice(0, 3).join("_")
                                      , s = !1;
                                    if (n.attribs.each(function(e) {
                                        s || e.get("name").toLowerCase().substring(0, a.length) === a && (s = !0)
                                    }),
                                    !s)
                                        return !0
                                }
                                r.push({
                                    eventname: "repeating_" + o[1] + "_" + o[2],
                                    oattr: e,
                                    sourcetype: i
                                })
                            }
                            r.push({
                                eventname: e,
                                oattr: e,
                                sourcetype: i
                            })
                        }),
                        r = _.uniq(r, !1, function(e) {
                            return e.eventname
                        }),
                        _.each(d20.journal.customSheets.activeWorkers, function(t) {
                            t.postMessage({
                                type: "setActiveCharacter",
                                data: e
                            }),
                            _.each(r, function(e) {
                                t.postMessage({
                                    type: "trigger",
                                    data: e
                                })
                            }),
                            t.postMessage({
                                type: "setActiveCharacter",
                                data: !1
                            })
                        })
                    }
                }
            }
            ,
            d20.journal.notifyWorkersOfFirstOpen = function(e) {
                d20.journal.customSheets && d20.journal.customSheets.activeWorkers && (b = e,
                _.each(d20.journal.customSheets.activeWorkers, function(t) {
                    t.postMessage({
                        type: "setActiveCharacter",
                        data: e
                    }),
                    t.postMessage({
                        type: "trigger",
                        data: {
                            eventname: "sheet:opened"
                        }
                    }),
                    t.postMessage({
                        type: "setActiveCharacter",
                        data: !1
                    })
                }))
            }
            ,
            d20.journal.notifyWorkersOfCompendium = function(e) {
                d20.journal.customSheets && d20.journal.customSheets.activeWorkers && (b = e,
                _.each(d20.journal.customSheets.activeWorkers, function(t) {
                    t.postMessage({
                        type: "setActiveCharacter",
                        data: e
                    }),
                    t.postMessage({
                        type: "trigger",
                        data: {
                            eventname: "sheet:compendium-drop"
                        }
                    }),
                    t.postMessage({
                        type: "setActiveCharacter",
                        data: !1
                    })
                }))
            }
            ,
            d20.journal.notifyWorkersOfRowDeleted = function(e, t, i, n) {
                d20.journal.customSheets && d20.journal.customSheets.activeWorkers && (b = e,
                _.each(d20.journal.customSheets.activeWorkers, function(r) {
                    r.postMessage({
                        type: "setActiveCharacter",
                        data: e
                    }),
                    r.postMessage({
                        type: "trigger",
                        data: {
                            eventname: "remove:" + t + ":" + i,
                            oattr: t + "_" + i,
                            sourcetype: n
                        }
                    }),
                    r.postMessage({
                        type: "trigger",
                        data: {
                            eventname: "remove:" + t,
                            oattr: t + "_" + i,
                            sourcetype: n
                        }
                    }),
                    r.postMessage({
                        type: "setActiveCharacter",
                        data: !1
                    })
                }))
            }
        }
        $("#compendiumpastebutton button").on(mousedowntype, function() {
            console.log("Do apste");
            var e = localStorage.getItem("compendiumclipboard");
            if (e) {
                e = JSON.parse(e),
                console.log(e);
                var t = d20.journal.compendiumPasteTarget.parents(".characterdialog").attr("data-characterid")
                  , i = d20.Campaign.characters.get(t);
                if (i)
                    return d20.journal.compendiumPasteTarget && e && d20.journal.compendiumPasteTarget.find("*[accept]").each(function() {
                        var t = $(this).attr("accept");
                        e[t] && ($(this).val(e[t]),
                        i.view.saveSheetValues(this))
                    }),
                    !1
            }
        }),
        $("#journalfolderroot").nestable()
    }),
    d20.player_settings = {},
    $(function() {
        function e(e) {
            var i = 105
              , n = t(e)
              , r = .299 * n.R + .587 * n.G + .114 * n.B;
            return i > 255 - r ? "#000000" : "#ffffff"
        }
        function t(e) {
            var t = e.substring(1, 3)
              , i = e.substring(3, 5)
              , n = e.substring(5, 7);
            return {
                R: parseInt(t, 16),
                G: parseInt(i, 16),
                B: parseInt(n, 16)
            }
        }
        d20.player_settings.refreshRollsList = function() {
            var e = [];
            d20.Campaign.players.each(function(t) {
                t.macros.each(function(i) {
                    (t.id == window.currentPlayer.id || i.visibleToCurrentPlayer()) && e.push(i)
                })
            }),
            e = _.sortBy(e, function(e) {
                return e.get("name")
            }),
            0 == e.length ? $("#existingmacros tbody").html("<tr><td>You don't have any macros yet! Click the Add button to make one!</td></tr>") : ($("#existingmacros tbody").html(""),
            _.each(e, function(e) {
                $("#existingmacros tbody").append($("#tmpl_existingmacros").jqote(e))
            }))
        }
        ,
        $("#addmacro").bind("click", function() {
            window.currentPlayer.macros.create({}, {
                success: function(e) {
                    var t = $("#existingmacros tbody .macro[data-macroid=" + e.id + "]");
                    t.find(".name").trigger("click")
                }
            })
        }),
        $("#existingmacros").on("click", ".macro .name", function() {
            var e = window.currentPlayer.macros.get($(this).parents(".macro").attr("data-macroid"));
            e && e.view.showDialog()
        }),
        $("#existingmacros").on("click", ".rollmacro", function() {
            var e = $(this).parents(".macro").attr("data-playerid")
              , t = d20.Campaign.players.get(e);
            if (t) {
                var i = t.macros.get($(this).parents(".macro").attr("data-macroid"));
                i && d20.textchat.doChatInput("#" + i.get("name"))
            }
            return !1
        }),
        $("#existingmacros").on("click", ".showinbar", function(e) {
            $(this).is(":checked") ? window.currentPlayer.addToMacroBar($(this).parents(".macro").attr("data-playerid") + "|" + $(this).parents(".macro").attr("data-macroid")) : window.currentPlayer.removeFromMacroBar($(this).parents(".macro").attr("data-macroid")),
            e.stopPropagation()
        }),
        $("#videoplayersize").bind("change", function() {
            var e = $(this).val();
            $("#playerzone").removeClass("largevideo").removeClass("smallvideo").removeClass("namesonly"),
            "large" == e && $("#playerzone").addClass("largevideo"),
            "small" == e && $("#playerzone").addClass("smallvideo"),
            "names" == e && $("#playerzone").addClass("namesonly"),
            window.currentPlayer && window.currentPlayer.save({
                videoplayersize: e
            })
        }).change(),
        $("#showmacrobar").bind("click", function() {
            $(this).is(":checked") ? ($("#playerzone").addClass("showmacrobar"),
            window.currentPlayer.save({
                showmacrobar: !0
            })) : ($("#playerzone").removeClass("showmacrobar"),
            window.currentPlayer.save({
                showmacrobar: !1
            }))
        }),
        d20.player_settings.refreshMacroBar = function() {
            $("#macrobar_macros").html("");
            var t = window.currentPlayer.getMacroBar();
            _.each(t, function(t) {
                var i, n = "macro";
                if (-1 !== t.indexOf("|")) {
                    var r = t.split("|")
                      , o = d20.Campaign.characters.get(r[0]);
                    if (o ? n = -1 !== r[1].indexOf("@@") ? "sheetroll" : "ability" : o = d20.Campaign.players.get(r[0]),
                    !o)
                        return !0;
                    if ("sheetroll" === n)
                        i = r[3] && "" !== r[3].charAt(0) ? decodeURIComponent(r[3]) : o.get("name") + ": " + decodeURIComponent(r[1].substring(2, r[1].length));
                    else {
                        var a = "macro" == n ? o.macros.get(r[1]) : o.abilities.get(r[1]);
                        if (!a)
                            return !0;
                        if (a && "macro" === n) {
                            if (o !== window.currentPlayer && !a.visibleToCurrentPlayer())
                                return !0
                        } else if (a && "ability" === n && !a.collection.character.currentPlayerControls())
                            return !0;
                        i = r[3] && "" !== r[3].charAt(0) ? decodeURIComponent(r[3]) : ("ability" == n ? o.get("name") + ": " : "") + a.get("name") || "Untitled"
                    }
                } else {
                    var a = window.currentPlayer.macros.get(t);
                    a && (i = a.get("name"))
                }
                i && (r[2] && "#" === r[2].charAt(0) && r[2].length > 1 ? (buttoncolor = r[2],
                textcolor = e(r[2]),
                textshadow = "#000000" === e(r[2]) ? "0 1px 1px rgba(255, 255, 255, 0.75)" : "0 1px 1px rgba(0, 0, 0, 0.75)") : (buttoncolor = "#f5f5f5",
                textcolor = "#333333",
                textshadow = "0 1px 1px rgba(255, 255, 255, 0.75)"),
                $("#macrobar_macros").append($("#tmpl_macrobar_box").jqote({
                    id: t,
                    name: i,
                    btncolor: buttoncolor,
                    txtcolor: textcolor,
                    txtshadow: textshadow
                })))
            })
        }
        ,
        d20.player_settings.debounced_refreshMacroBar = _.debounce(d20.player_settings.refreshMacroBar, 100),
        $("#macrobar_macros").sortable({
            helper: "original",
            tolerance: "pointer",
            placeholder: "emptybox",
            axis: "x",
            start: function() {
                $("#macrobar").addClass("sorting")
            },
            stop: function(e, t) {
                if (t && t.item && t.item.length && "button" === t.item[0].tagName.toLowerCase()) {
                    var i = $(t.item[0])
                      , n = i.attr("data-characterid");
                    if (-1 != n.indexOf("/")) {
                        repid = n.split("/")[1],
                        n = n.split("/")[0];
                        var r = n + "|@@" + repid
                    } else
                        var r = n + "|@@" + encodeURIComponent(t.item[0].name.substring(5, t.item[0].name.length));
                    console.log(r),
                    i.replaceWith("<div class='macrobox' data-macroid='" + r + "'></div>");
                    var o = !0
                } else {
                    var a = t.position.top;
                    Math.abs(a) > 75 && $(t.item[0]).remove()
                }
                var s = []
                  , l = 0;
                $("#macrobar_macros .macrobox").each(function() {
                    s[l] = $(this).attr("data-macroid"),
                    l++
                }),
                window.currentPlayer.set({
                    macrobar: s.join(",")
                }).save(),
                $("#macrobar").removeClass("sorting"),
                o && d20.player_settings.refreshMacroBar()
            },
            sort: function(e, t) {
                var i = t.position.top;
                Math.abs(i) > 75 ? (t.item[0].style.opacity = .25,
                $(t.item[0]).find("button").addClass("btn-danger")) : (t.item[0].style.opacity = 1,
                $(t.item[0]).find("button").removeClass("btn-danger"))
            },
            distance: 15,
            scroll: !1
        }).addTouch(),
        $("#macrobar_macros, #secondary-toolbar .tokenactions").on("click", "button", function(e) {
            if ($(this).parents(".macrobox").length > 0)
                var t = $(this).parents(".macrobox").attr("data-macroid");
            else
                var t = $(this).attr("data-macroid");
            var i, n = "macro";
            if (-1 !== t.indexOf("|")) {
                var r = t.split("|");
                if ("selected" === r[0])
                    n = "byname";
                else {
                    var o = d20.Campaign.characters.get(r[0]);
                    if (o ? -1 !== r[1].indexOf("@@") ? (n = "byname",
                    t = o.get("name") + "|" + r[1].substring(2, r[1].length)) : n = "ability" : o = d20.Campaign.players.get(r[0]),
                    !o)
                        return !0;
                    i = void 0 !== o.macros ? o.macros.get(r[1]) : o.abilities.get(r[1])
                }
            } else
                i = window.currentPlayer.macros.get(t);
            e.shiftKey ? i && "macro" == n ? $("#existingmacros .macro[data-macroid=" + i.id + "] .name").trigger("click") : i && "ability" == n && (o.view.$el.is(":visible") || o.view.showDialog(),
            o.view.$el.find("ul.nav a[data-tab=attributesabilities]").trigger("click"),
            o.view.$el.find(".abil[data-abilid=" + i.id + "] .editabil").trigger("click"),
            o.view.$el.find(".abil[data-abilid=" + i.id + "] textarea").focus()) : "byname" == n ? (console.log(t),
            d20.textchat.doChatInput("%{" + t + "}")) : i && "macro" == n ? d20.textchat.doChatInput("#" + i.get("name")) : i && "ability" == n && d20.textchat.doChatInput("%{" + o.get("name") + "|" + i.get("name") + "}"),
            e.stopPropagation()
        });
        var i = $("#macromenu");
        if ($("#macrobar_macros").on("contextmenu", "button", function(e) {
            $currentMacroTarget = $(this).parent(),
            $macroid = $currentMacroTarget.attr("data-macroid"),
            i.show(),
            i.css({
                top: e.pageY - i.height() + "px",
                left: e.pageX + "px"
            }),
            bgcolor = $(this).css("background"),
            $("#macromenu div.color_picker").css({
                "background-color": bgcolor
            }),
            e.preventDefault(),
            e.stopPropagation()
        }),
        $("#secondary-toolbar .tokenactions").on("contextmenu", "button", function(e) {
            e.preventDefault(),
            e.stopPropagation()
        }),
        $("#macromenu .macrocolor").colorPicker(),
        $("#macromenu .macrocolor").bind("change", function() {
            $("#macromenu").hide(),
            window.currentPlayer.changeMacroColor($macroid, $(this).val())
        }),
        $("#macromenu").on(mousedowntype, "li[data-action-type=renamemacro]", function() {
            $("#macromenu").hide();
            var e = prompt("What do you want to call your macro?");
            if (null != e) {
                var t = $currentMacroTarget.attr("data-macroid");
                return t ? void window.currentPlayer.addMacroNickname(t, e) : void console.log("Did not find macro id")
            }
        }),
        $("body").on(mousedowntype, function() {
            "none" !== i[0].style.display && (i[0].style.display = "none")
        }),
        $("#macromenu").on(mousedowntype, "li[data-action-type=pickcolor]", function(e) {
            e.preventDefault(),
            e.stopPropagation()
        }),
        $("#enable3ddice").on("click", function() {
            window.currentPlayer.set({
                tddiceenabled: $(this).is(":checked")
            }).save(),
            $(this).is(":checked") && d20.tddice && d20.tddice.canRoll3D() && !d20.tddice.sceneInitialized && d20.tddice.addRenderer()
        }),
        $("#autoroll").on("click", function() {
            window.currentPlayer.set({
                disableagency: $(this).is(":checked")
            }).save()
        }),
        $("#disableagency").on("click", function() {
            window.currentPlayer.set({
                disableagency: !0
            }).save(),
            $("#autoroll").attr("checked", "checked")
        }),
        $("#diceiconsenabled").on("click", function() {
            window.currentPlayer.save({
                diceiconsenabled: $(this).is(":checked")
            })
        }),
        $("#chatavatarsenabled").on("click", function() {
            window.currentPlayer.save({
                chatavatarsenabled: $(this).is(":checked")
            })
        }),
        $("#chattimestampsenabled").on("click", function() {
            window.currentPlayer.save({
                chattimestampsenabled: $(this).is(":checked")
            })
        }),
        $("#alphatokenactionsenabled").on("click", function() {
            window.currentPlayer.save({
                alphatokenactions: $(this).is(":checked")
            })
        }),
        $("#chatbeepenabled").on("click", function() {
            window.currentPlayer.save({
                chatbeepenabled: $(this).is(":checked")
            })
        }),
        $("#useAdvShortcuts").on("click", function() {
            window.currentPlayer.save({
                advShortcuts: $(this).is(":checked")
            })
        }),
        $("#usePopouts").on("click", function() {
            window.currentPlayer.save({
                usePopouts: $(this).is(":checked")
            })
        }),
        window.Detector.webgl || ($("#enable3ddice").attr("disabled", "disabled"),
        $("#nowebglerror").show()),
        $("#clearChat").on("click", function() {
            $("#textchat .content .message").remove()
        }),
        window.is_gm && $("#resetPlayerStatus").on("click", function() {
            d20.Campaign.players.each(function(e) {
                e.save({
                    online: !1
                })
            })
        }),
        window.is_gm) {
            $("#campaignsettings .bar1_color").on("change", function() {
                d20.Campaign.save({
                    bar1_color: $(this).val()
                })
            }),
            $("#campaignsettings .bar2_color").on("change", function() {
                d20.Campaign.save({
                    bar2_color: $(this).val()
                })
            }),
            $("#campaignsettings .bar3_color").on("change", function() {
                d20.Campaign.save({
                    bar3_color: $(this).val()
                })
            }),
            $("#campaignsettings .markers_position").on("change", function() {
                d20.Campaign.save({
                    markers_position: $(this).val()
                })
            }),
            $("#campaignsettings .videotech").on("change", function() {
                $.post("/campaigns/updatesetting/" + campaign_id + "/videotech", {
                    newvalue: $("#campaignsettings .videotech").val()
                }, function(e) {
                    "success" == e && d20.textchat.sendShout({
                        type: "settingschanged",
                        playerid: window.currentPlayer.id,
                        time: (new Date).getTime()
                    })
                })
            });
            var n;
            $("#showqrcode").on("click", function() {
                n && n.dialog("destroy"),
                $tdialog = $("<div><img src='/campaigns/qrcode/" + window.campaign_id + "' style='width: 100%; height: 100%;' /></div>"),
                $tdialog.dialog({
                    title: "Scannable Code",
                    width: 525,
                    height: 550,
                    position: ["center", 30]
                })
            })
        }
    }),
    $(document).ready(function() {
        function e() {
            return $(this).hasClass("tipsy-w") ? "w" : $(this).hasClass("tipsy-e") ? "e" : $(this).hasClass("tipsy-n") ? "n" : $(this).hasClass("tipsy-s") ? "s" : $(this).hasClass("tipsy-side") ? $(this).offset().left > $(document).scrollLeft() + $(window).width() / 2 ? "e" : "w" : $(this).offset().top < $(document).scrollTop() + $(window).height() / 2 ? "n" : "s"
        }
        fabric.isTouchSupported || ($(".showtip").tipsy({
            live: !0,
            gravity: e,
            opacity: 1,
            html: !0
        }),
        $(".userscript-showtip").tipsy({
            live: !0,
            gravity: e,
            opacity: 1,
            html: !0,
            filterhtml: !0,
            userscript: !0
        })),
        $(".result .favorite").live(clicktype, function() {
            var e = $(this).parents(".result");
            if ($(this).hasClass("is_favorite"))
                if (e.hasClass("imagelibrary"))
                    if ($(this).hasClass("useruploaded")) {
                        var t = this;
                        $("<div>This image was uploaded by you. If you delete it, it will show up as a blank space on any supports where it was used. Are you sure you want to delete this image?</div>").dialog({
                            title: "Confirm Image Deletion",
                            modal: !0,
                            zIndex: 10500,
                            buttons: {
                                Cancel: function() {
                                    $(this).dialog("destroy").remove()
                                },
                                "Yes, Delete": function() {
                                    $.post(d20.siteURL + "/image_library/remove_favorite/" + $(t).attr("data-imagelibrary-id")),
                                    e.fadeOut(function() {
                                        e.remove()
                                    }),
                                    $(this).dialog("destroy").remove()
                                }
                            },
                            beforeClose: function() {
                                $(this).dialog("destroy").remove()
                            }
                        })
                    } else
                        $.post(d20.siteURL + "/image_library/remove_favorite/" + $(this).attr("data-imagelibrary-id")),
                        e.fadeOut(function() {
                            e.remove()
                        });
                else
                    $("#manageimagelibrary").trigger("click");
            else {
                $(this).addClass("is_favorite");
                var i = $(this);
                $.post(d20.siteURL + "/image_library/add_favorite", {
                    imgsrc: $(this).parents(".result").find(".resultimage").attr("data-fullsizeurl"),
                    terms: $("#imagedialog .keywords").val(),
                    credit: $(this).parents(".result").find(".credit").html()
                }, function(e) {
                    i.attr("data-imagelibrary-id", e)
                })
            }
        })
    }),
    $(function() {
        $("#opensearchsettings").live("click", function() {
            $("#searchsettings").dialog({
                modal: !0,
                title: "Search Settings",
                width: 375,
                buttons: {
                    OK: function() {
                        $(this).dialog("close")
                    }
                }
            })
        })
    }),
    $(document).ready(function() {
        $("#upperCanvas").droppable({
            accept: ".draggableresult, .draggablecard, .cardinhand, .diceroll, .character, .handout, .dd-dragel, .library-container.selected, .compendium-item",
            tolerance: "pointer",
            drop: function(e, t) {
                setTimeout(function() {
                    if (e.originalEvent.dropHandled)
                        return void console.log("Drop handled, returning...");
                    console.log("drop on upper canvas");
                    var i = $(t.draggable)
                      , n = Math.floor(e.originalEvent.pageX / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] / d20.engine.canvasZoom)
                      , r = Math.floor(e.originalEvent.pageY / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] / d20.engine.canvasZoom);
                    if (!(n > Math.floor(d20.engine.pageWidth / d20.engine.canvasZoom) || r > Math.floor(d20.engine.pageHeight / d20.engine.canvasZoom) || 0 > n || 0 > r)) {
                        var o = !1;
                        if (e.altKey && (o = !0),
                        i.hasClass("draggableresult")) {
                            var a = $(t.draggable).find("img").width()
                              , s = $(t.draggable).find("img").height();
                            0 != d20.engine.snapTo && o === !1 && "map" != window.currentEditingLayer ? (a = d20.engine.snapTo,
                            s = d20.engine.snapTo) : $(t.draggable).attr("data-width") ? (a = parseInt($(t.draggable).attr("data-width"), 10),
                            s = parseInt($(t.draggable).attr("data-height"), 10)) : (a = $(t.draggable).find("img")[0].naturalWidth,
                            s = $(t.draggable).find("img")[0].naturalHeight);
                            var l = {
                                x: n,
                                y: r,
                                width: a,
                                height: s,
                                imgsrc: $(t.draggable).attr("data-fullsizeurl"),
                                imgwidth: a,
                                imgheight: s,
                                represents: null != $(t.draggable).attr("data-represents") ? $(t.draggable).attr("data-represents") : ""
                            }
                              , c = d20.Campaign.activePage().addImage(l, o, !1);
                            if ("" !== l.represents) {
                                var d = d20.Campaign.characters.get(l.represents);
                                d && c.save({
                                    name: d.get("name")
                                })
                            }
                            $("#imagedialog .keywords").blur()
                        } else if (t.helper && t.helper.hasClass("libraryviewhelper")) {
                            var h = d20.library.getSelected();
                            _.each(h.imageids, function(e) {
                                var t = $("#libraryview > .library-container[data-imageid=" + e + "]");
                                0 != d20.engine.snapTo && o === !1 && "map" != window.currentEditingLayer ? (a = d20.engine.snapTo,
                                s = d20.engine.snapTo) : (a = t.find("img")[0].naturalWidth,
                                s = t.find("img")[0].naturalHeight);
                                {
                                    var i = {
                                        x: n,
                                        y: r,
                                        width: a,
                                        height: s,
                                        imgsrc: t.attr("data-fullsizeurl"),
                                        imgwidth: a,
                                        imgheight: s,
                                        represents: ""
                                    };
                                    d20.Campaign.activePage().addImage(i, o, !1)
                                }
                            })
                        } else if (i.hasClass("draggablecard") || i.hasClass("cardinhand")) {
                            var u = $(t.draggable).attr("data-cardid");
                            if ($(".tipsy").remove(),
                            "nextcard" == u) {
                                var p = $(t.draggable).parents(".deckstack").attr("data-deckid")
                                  , f = d20.Campaign.decks.get(p);
                                if (!f)
                                    return void alert("ERROR: Unable to locate deck!");
                                var g = f.drawCard();
                                u = f.cardAtIndex(g).id,
                                $(t.draggable).parents(".deckstack").on("currentCardRemoved.nextcard", function() {
                                    f.finishDrawingCard(g, !0)
                                })
                            }
                            var m = d20.decks.cardByID(u);
                            if (!m)
                                return void console.log("ERROR: Unable to locate card " + u);
                            "true" === i.attr("data-resetdeckstack") && m.collection.deck.save({
                                currentCardShown: !1
                            });
                            var v;
                            v = "faceup" == m.collection.deck.get("cardsplayed") ? 0 : 1;
                            var y;
                            e.shiftKey && (v = 0 == v ? 1 : 0),
                            y = 0 == v ? m.get("avatar") : m.collection.deck.get("avatar");
                            var a, s, b = i.find("img");
                            if (b.length > 0) {
                                var w = b[0].width
                                  , x = b[0].height
                                  , E = w / x;
                                w > x ? (a = 140,
                                s = a / E) : (s = 140,
                                a = s * E)
                            }
                            "" !== m.collection.deck.get("defaultwidth") && (a = parseInt(m.collection.deck.get("defaultwidth"), 10)),
                            "" !== m.collection.deck.get("defaultheight") && (s = parseInt(m.collection.deck.get("defaultheight"), 10)),
                            a && s || (console.log("ERROR: Cannot determine width/height. Using a default fallback."),
                            a = 140,
                            s = 140);
                            var l = {
                                x: n,
                                y: r,
                                width: a,
                                height: s,
                                imgsrc: y,
                                imgwidth: a,
                                imgheight: s,
                                cardid: u,
                                isdrawing: m.collection.deck.get("treatasdrawing"),
                                sides: [escape(m.get("avatar")), escape(m.collection.deck.get("avatar"))].join("|"),
                                currentSide: v
                            }
                              , T = i.parents(".cardgroup");
                            i.parents(".deckstack").trigger("currentCardRemoved"),
                            i.parents(".deckpile").trigger("chosenCardPlayed", i[0]),
                            i.remove();
                            var c = d20.Campaign.activePage().addImage(l, !0, !1);
                            T.length > 0 && (T.trigger("postTabletopPlay", c),
                            T.trigger("sortupdate")),
                            m.collection.deck.updateDiscardPile()
                        } else if (i.hasClass("diceroll")) {
                            console.log("dice roll!");
                            var C = i.attr("class")
                              , R = C.match(/(d[0-9]+)/i);
                            if (null !== R && void 0 !== d20.utils.defaultDiceTokens[R[0]]) {
                                var v = parseInt(i.find(".didroll").text(), 10) - 1;
                                if (0 > v)
                                    return !1;
                                var l = {
                                    x: n - 35,
                                    y: r - 35,
                                    width: 70,
                                    height: 70,
                                    imgsrc: unescape(d20.utils.defaultDiceTokens[R[0]][v]),
                                    imgwidth: 70,
                                    imgheight: 70,
                                    isdrawing: !0,
                                    sides: d20.utils.defaultDiceTokens[R[0]].join("|"),
                                    currentSide: v
                                }
                                  , S = t.draggable.parents(".message").attr("data-playerid")
                                  , k = d20.Campaign.players.get(S);
                                k && (l.tint = k.get("color"))
                            }
                            var c = d20.Campaign.activePage().addImage(l, !1, !1)
                        } else if (i.hasClass("character")) {
                            var M = i.attr("data-itemid")
                              , d = d20.Campaign.characters.get(M);
                            if (!window.is_gm && !d.currentPlayerControls())
                                return;
                            if (!d)
                                return void console.log("Unable to find character!");
                            if ("" !== d.get("defaulttoken"))
                                d._getLatestBlob("defaulttoken", function(e) {
                                    var t = JSON.parse(e);
                                    t.top = r - 35,
                                    t.left = n - 35,
                                    t.layer = window.currentEditingLayer,
                                    currentpage = d20.Campaign.activePage();
                                    var i = currentpage.thegraphics.create(t);
                                    _.defer(function() {
                                        i.refreshTokenLinks()
                                    })
                                });
                            else {
                                var l = {
                                    x: n - 35,
                                    y: r - 35,
                                    imgsrc: d.get("avatar"),
                                    width: 70,
                                    height: 70,
                                    imgwidth: 70,
                                    imgheight: 70,
                                    represents: M
                                };
                                if ("" === l.imgsrc || !l.imgsrc)
                                    return;
                                var c = d20.Campaign.activePage().addImage(l, !1, !1);
                                _.defer(function() {
                                    c.save({
                                        name: d.get("name")
                                    })
                                })
                            }
                        } else if (i.hasClass("handout")) {
                            if (!window.is_gm)
                                return;
                            var A = i.attr("data-itemid")
                              , H = d20.Campaign.handouts.get(A);
                            H ? H.broadcastToPlayers() : alert("ERROR: Unable to find handout to edit.")
                        } else if (i.hasClass("compendium-item")) {
                            if (!window.is_gm)
                                return;
                            console.log("Compendium item dropped onto canvas!");
                            var P = $(t.helper[0]).attr("data-pagename");
                            console.log(d20.compendium.compendiumBase + "compendium/" + COMPENDIUM_BOOK_NAME + "/" + P + ".json?plaintext=true"),
                            $.get(d20.compendium.compendiumBase + "compendium/" + COMPENDIUM_BOOK_NAME + "/" + P + ".json?plaintext=true", function(e) {
                                var t = e.data;
                                if (t.Name = e.name,
                                t.Content = e.content,
                                t && t.Token) {
                                    var i;
                                    if (d20.Campaign.characters.each(function(e) {
                                        e.get("name") === t.Name && (i = e)
                                    }),
                                    i) {
                                        if ("" !== i.get("defaulttoken")) {
                                            if (!window.is_gm && !i.currentPlayerControls())
                                                return;
                                            i._getLatestBlob("defaulttoken", function(e) {
                                                var t = JSON.parse(e);
                                                t.top = r - 35,
                                                t.left = n - 35,
                                                t.layer = window.currentEditingLayer,
                                                currentpage = d20.Campaign.activePage();
                                                var i = currentpage.thegraphics.create(t);
                                                _.defer(function() {
                                                    i.refreshTokenLinks()
                                                })
                                            })
                                        }
                                    } else {
                                        d20.Campaign.characters.create({
                                            name: t.Name,
                                            avatar: t.Token
                                        }, {
                                            success: function(e) {
                                                d20.journal.addItemToFolderStructure(e.id),
                                                e.view.showDialog(),
                                                e.updateBlobs({
                                                    bio: Markdown.parse(t.Content).replace(/\n/g, "<br>")
                                                }),
                                                e.save({
                                                    bio: (new Date).getTime()
                                                });
                                                var i = 0
                                                  , o = function(e) {
                                                    if (e.view.$el.find(".charsheet").length > 0) {
                                                        var a = e.view.$el.find(".sheet-compendium-drop-target.sheet-" + t.Category.toLowerCase());
                                                        a.find("*[accept]").each(function() {
                                                            var i = $(this)
                                                              , n = i.attr("accept");
                                                            t[n] && ("input" === i[0].tagName.toLowerCase() && "checkbox" === i.attr("type") ? i.attr("value") == t[n] ? i.attr("checked", "checked") : i.removeAttr("checked") : "input" === i[0].tagName.toLowerCase() && "radio" === i.attr("type") ? i.attr("value") == t[n] ? i.attr("checked", "checked") : i.removeAttr("checked") : "select" === i[0].tagName.toLowerCase() ? i.find("option").each(function() {
                                                                var e = $(this);
                                                                (e.attr("value") === t[n] || e.text() === t[n]) && e.attr("selected", "selected")
                                                            }) : $(this).val(t[n]),
                                                            e.view.saveSheetValues(this))
                                                        }),
                                                        d20.journal.waitForSandboxProcessing(function() {
                                                            d20.journal.notifyWorkersOfCompendium(e.id),
                                                            d20.journal.waitForSandboxProcessing(function() {
                                                                (window.is_gm || e.currentPlayerControls()) && e._getLatestBlob("defaulttoken", function(e) {
                                                                    var t = JSON.parse(e);
                                                                    t.top = r - 35,
                                                                    t.left = n - 35,
                                                                    t.layer = window.currentEditingLayer,
                                                                    currentpage = d20.Campaign.activePage();
                                                                    var i = currentpage.thegraphics.create(t);
                                                                    _.defer(function() {
                                                                        i.refreshTokenLinks()
                                                                    })
                                                                })
                                                            })
                                                        })
                                                    } else
                                                        11 > i && (i++,
                                                        setTimeout(function() {
                                                            o(e)
                                                        }, 500))
                                                }
                                                ;
                                                o(e)
                                            }
                                        })
                                    }
                                }
                            })
                        }
                    }
                }, 50)
            }
        })
    }),
    $(document).keydown(function(e) {
        var t;
        if (8 == e.keyCode) {
            var i = e.srcElement || e.target;
            t = "INPUT" == i.tagName.toUpperCase() || "TEXTAREA" == i.tagName.toUpperCase() ? i.readOnly || i.disabled : i.isContentEditable ? !1 : !0
        } else
            t = !1;
        t && e.preventDefault()
    }),
    $(document).ready(function() {
        var e = $("#upperCanvas");
        e.on("focus", function(t) {
            return t.preventDefault(),
            t.stopPropagation(),
            e.addClass("hasfocus"),
            !1
        }),
        e.on("blur", function() {
            e.removeClass("hasfocus")
        });
        var t = function() {
            return e.hasClass("hasfocus") ? !0 : !1
        }
        ;
        $(window).on("zoom", function() {
            console.log("zoom")
        }),
        $(document).bind("keydown", "backspace del", function() {
            if (t()) {
                var e = d20.engine.selected();
                d20.engine.canvas.deactivateAllWithDispatch();
                for (var i = 0; i < e.length; i++)
                    if (window.is_gm || "path" == e[i].type || "rect" == e[i].type || "text" == e[i].type || "image" == e[i].type && 1 == e[i].model.get("isdrawing") || "image" == e[i].type && e[i].model.currentPlayerControls()) {
                        if ("image" == e[i].type && "" !== e[i].model.get("cardid")) {
                            var n = d20.decks.cardByID(e[i].model.get("cardid")).collection.deck;
                            setTimeout(function() {
                                n.updateDiscardPile()
                            }, 100)
                        }
                        e[i].model.destroy()
                    }
                return !1
            }
        }),
        $(document).bind("keydown", "space", function(e) {
            return t() ? (e.preventDefault(),
            !0) : void 0
        }),
        $(document).bind("keyup", "space", function(e) {
            if (t()) {
                var i = d20.engine.selected()
                  , n = d20.engine.canvas.getActiveGroup()
                  , r = n ? n.get("left") : 0
                  , o = n ? n.get("top") : 0;
                if (Object.keys(d20.engine.movingShadows).length > 0)
                    _.each(d20.engine.movingShadows, function(t) {
                        if (t.alwaysShowRuler === !1)
                            t.alwaysShowRuler = !0;
                        else if (e.altKey || 0 === d20.engine.snapTo)
                            t.waypoints.push(t.obj.get("left") + r),
                            t.waypoints.push(t.obj.get("top") + o);
                        else {
                            t.obj.setCoords();
                            var i = d20.engine.getSnappedTopLeft(t.obj, n);
                            t.waypoints.push(i.left + r),
                            t.waypoints.push(i.top + o)
                        }
                    }),
                    d20.engine.renderTop();
                else if (i.length > 0) {
                    for (var a = _.pluck(d20.engine.showLastPaths, "obj"), s = 0; s < i.length; s++)
                        if (i[s].model && ("objects" === i[s].model.get("layer") || "gmlayer" === i[s].model.get("layer")) && "image" === i[s].model.get("type")) {
                            if (-1 !== a.indexOf(i[s]))
                                continue;d20.engine.showLastPaths.push({
                                obj: i[s],
                                type: "selected"
                            })
                        }
                    d20.engine.renderTop()
                }
                return e.preventDefault(),
                !1
            }
        }),
        $(document).bind("keydown", "esc", function() {
            return $("#lightly-overlay").is(":visible") ? ($("#lightly-overlay").trigger("click"),
            !1) : void (t() && ("polygon" == d20.engine.mode ? d20.engine.finishCurrentPolygon() : "fog-polygonreveal" == d20.engine.mode ? d20.engine.finishPolygonReveal() : "targeting" == d20.engine.mode ? $("#targetinginstructions .canceltargeting").trigger("click") : Object.keys(d20.engine.movingShadows).length > 0 ? (_.each(d20.engine.movingShadows, function(e) {
                e.waypoints = []
            }),
            d20.engine.renderTop()) : d20.engine.unselect()))
        }),
        $(document).bind("keydown", "ctrl+a meta+a", function() {
            return t() ? (setMode("select"),
            d20.engine.unselect(),
            d20.engine.selectAll(),
            !1) : void 0
        }),
        $(document).bind("keydown", "ctrl+s meta+s", function() {
            return setMode("select"),
            !1
        }),
        $(document).bind("keydown", "ctrl+d meta+d", function() {
            return setMode("rect"),
            !1
        }),
        $(document).bind("keydown", "ctrl+f meta+f", function() {
            return setMode("path"),
            !1
        }),
        $(document).bind("keydown", "ctrl+g meta+g", function() {
            return setMode("text"),
            !1
        }),
        $(document).bind("keydown", "ctrl+l meta+l", function() {
            var e = d20.engine.selected();
            return d20.engine.lightOnlySelected = 0 == e.length ? !1 : e,
            d20.engine.debounced_renderAll(),
            !1
        }),
        Mousetrap.bindGlobal("esc", function() {
            return $("#tdagencyoverlay").is(":visible") ? ($("#tdagencyoverlay").trigger("mouseup"),
            !1) : ($("input:focus, textarea:focus").blur(),
            void (d20.tddice && d20.tddice.handleInteraction && d20.tddice.handleInteraction()))
        }),
        Mousetrap.bind("s", function() {
            return setMode("select"),
            !1
        }),
        Mousetrap.bind("a", function() {
            return setMode("pan"),
            !1
        }),
        Mousetrap.bind("f r", function() {
            return setMode("rect"),
            !1
        }),
        Mousetrap.bind("f f", function() {
            return setMode("path"),
            !1
        }),
        Mousetrap.bind("f g", function() {
            return setMode("polygon"),
            !1
        }),
        Mousetrap.bind("f d", function() {
            return setMode("text"),
            !1
        }),
        Mousetrap.bind("q", function() {
            return $("#measure").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("d", function() {
            return $("#diceroller").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("w", function() {
            return $("#sidebarcontrol").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("c", function() {
            return $("#textchat-input").is(":visible") ? $("#textchat-input textarea").focus() : $("#rightsidebar .ui-tabs-nav a[href=#textchat]").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("j", function() {
            return $("#rightsidebar .ui-tabs-nav a[href=#journal]").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("/", function() {
            return $("#rightsidebar .ui-tabs-nav a[href=#journal]").trigger(clicktype),
            $("#journal .searchbox input").focus(),
            !1
        }),
        Mousetrap.bind("n", function() {
            return $("#rightsidebar .ui-tabs-nav a[href=#jukebox]").trigger(clicktype),
            !1
        }),
        Mousetrap.bind(";", function() {
            return $("#rightsidebar .ui-tabs-nav a[href=#deckstables]").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("[", function() {
            return $("#rightsidebar .ui-tabs-nav a[href=#mysettings]").trigger(clicktype),
            !1
        }),
        $(document).bind("keydown", "z", function() {
            if ($("#lightly-overlay").is(":visible"))
                return void $("#lightly-overlay").trigger("click");
            if (t() && "select" === d20.engine.mode) {
                var e = d20.engine.selected();
                if (0 != e.length) {
                    var i = e[0];
                    d20.engine.zoomObject(i.model.id)
                }
            }
        }),
        $(document).bind("keydown", "shift+z", function() {
            if (t() && "select" === d20.engine.mode && window.is_gm) {
                var e = d20.engine.selected();
                if (0 != e.length) {
                    var i = e[0];
                    d20.textchat.sendShout({
                        type: "showobject",
                        id: i.model.id,
                        ts: (new Date).getTime()
                    })
                }
            }
        }),
        $(document).bind("keydown", "up alt+up", function(e) {
            if (t() && "select" === d20.engine.mode) {
                var i = d20.engine.selected();
                if (0 != i.length) {
                    var n = d20.engine.canvas.getActiveGroup()
                      , r = i[0];
                    n && (r = n);
                    var o = [r.left, r.top - (e.altKey ? 1 : d20.engine.snapTo)]
                      , a = d20.engine.checkMovement(r, [r.left, r.top], o);
                    return 3 !== a && 2 !== a ? !1 : (r.top = o[1],
                    r.top < 0 && (r.top = 0),
                    d20.engine.canvas.trigger("object:modified", {
                        target: r,
                        debounce: !0,
                        no_snap: e.altKey ? !0 : !1
                    }),
                    d20.engine.renderAll(),
                    !1)
                }
            }
        }),
        $(document).bind("keydown", "down alt+down", function(e) {
            if (t() && "select" === d20.engine.mode) {
                var i = d20.engine.selected();
                if (0 != i.length) {
                    var n = d20.engine.canvas.getActiveGroup()
                      , r = i[0];
                    n && (r = n);
                    var o = [r.left, r.top + (e.altKey ? 1 : d20.engine.snapTo)]
                      , a = d20.engine.checkMovement(r, [r.left, r.top], o);
                    if (3 !== a && 2 !== a)
                        return !1;
                    r.top = o[1];
                    var s = Math.floor(d20.engine.pageHeight / d20.engine.canvasZoom) - 5;
                    return r.top > s && (r.top = s),
                    d20.engine.canvas.trigger("object:modified", {
                        target: r,
                        debounce: !0,
                        no_snap: e.altKey ? !0 : !1
                    }),
                    d20.engine.renderAll(),
                    !1
                }
            }
        }),
        $(document).bind("keydown", "left alt+left", function(e) {
            if (t() && "select" === d20.engine.mode) {
                var i = d20.engine.selected();
                if (0 != i.length) {
                    var n = d20.engine.canvas.getActiveGroup()
                      , r = i[0];
                    n && (r = n);
                    var o = [r.left - (e.altKey ? 1 : d20.engine.snapTo), r.top]
                      , a = d20.engine.checkMovement(r, [r.left, r.top], o);
                    return 3 !== a && 1 !== a ? !1 : (r.left = o[0],
                    r.left < 0 && (r.left = 0),
                    d20.engine.canvas.trigger("object:modified", {
                        target: r,
                        debounce: !0,
                        no_snap: e.altKey ? !0 : !1
                    }),
                    d20.engine.renderAll(),
                    !1)
                }
            }
        }),
        $(document).bind("keydown", "right alt+right", function(e) {
            if (t() && "select" === d20.engine.mode) {
                var i = d20.engine.selected();
                if (0 != i.length) {
                    var n = d20.engine.canvas.getActiveGroup()
                      , r = i[0];
                    n && (r = n);
                    var o = [r.left + (e.altKey ? 1 : d20.engine.snapTo), r.top]
                      , a = d20.engine.checkMovement(r, [r.left, r.top], o);
                    if (3 !== a && 1 !== a)
                        return !1;
                    r.left = o[0];
                    var s = Math.floor(d20.engine.pageWidth / d20.engine.canvasZoom) - 5;
                    return r.left > s && (r.left = s),
                    d20.engine.canvas.trigger("object:modified", {
                        target: r,
                        debounce: !0,
                        no_snap: e.altKey ? !0 : !1
                    }),
                    d20.engine.renderAll(),
                    !1
                }
            }
        }),
        window.is_gm && ($(document).bind("keydown", "ctrl+u meta+u", function() {
            if ("select" != d20.engine.mode || !d20.Campaign.initiativewindow)
                return !1;
            for (var e = d20.engine.selected(), t = 0; t < e.length; t++)
                d20.Campaign.initiativewindow.addTokenToList(e[t].model.id);
            return !1
        }),
        $(document).bind("keydown", "ctrl+c meta+c", function() {
            return t() ? (d20.clipboard.doCopy(),
            !1) : void 0
        }),
        $(document).bind("keydown", "ctrl+v meta+v", function() {
            return t() ? (d20.clipboard.doPaste(),
            !1) : void 0
        }),
        $(document).bind("keydown", "ctrl+z meta+z", function() {
            if (t())
                if ("polygon" == d20.engine.mode)
                    d20.engine.polygonUndoLastPoint();
                else if ("fog-polygonreveal" == d20.engine.mode)
                    d20.engine.fogUndoLastPoint();
                else if (d20.undo)
                    return d20.undo.doUndo(),
                    !1
        }),
        $(document).bind("keydown", "ctrl+o meta+o", function() {
            return "select" != d20.engine.mode && "drawselect" != d20.engine.mode || "objects" == window.currentEditingLayer ? !1 : ($("#editinglayer li.chooseobjects").trigger("click"),
            !1)
        }),
        $(document).bind("keydown", "ctrl+k meta+k", function() {
            return "select" != d20.engine.mode && "drawselect" != d20.engine.mode || "gmlayer" == window.currentEditingLayer ? !1 : ($("#editinglayer li.choosegmlayer").trigger("click"),
            !1)
        }),
        $(document).bind("keydown", "ctrl+m meta+m", function() {
            return "select" != d20.engine.mode && "drawselect" != d20.engine.mode || "map" == window.currentEditingLayer ? !1 : ($("#editinglayer li.choosemap").trigger("click"),
            !1)
        }),
        $(document).bind("keydown", "ctrl+shift+o meta+shift+o", function() {
            if ("select" != d20.engine.mode && "drawselect" != d20.engine.mode || "objects" == window.currentEditingLayer)
                return !1;
            var e = d20.engine.selected();
            return d20.engine.unselect(),
            _.each(e, function(e) {
                e.model.save({
                    layer: "objects"
                })
            }),
            $("#editinglayer li.chooseobjects").trigger("click"),
            !1
        }),
        $(document).bind("keydown", "ctrl+shift+k meta+shift+k", function() {
            if ("select" != d20.engine.mode && "drawselect" != d20.engine.mode || "gmlayer" == window.currentEditingLayer)
                return !1;
            var e = d20.engine.selected();
            return d20.engine.unselect(),
            _.each(e, function(e) {
                e.model.save({
                    layer: "gmlayer"
                })
            }),
            $("#editinglayer li.choosegmlayer").trigger("click"),
            !1
        }),
        $(document).bind("keydown", "ctrl+shift+m meta+shift+m", function() {
            if ("select" != d20.engine.mode && "drawselect" != d20.engine.mode || "map" == window.currentEditingLayer)
                return !1;
            var e = d20.engine.selected();
            return d20.engine.unselect(),
            _.each(e, function(e) {
                e.model.save({
                    layer: "map"
                })
            }),
            $("#editinglayer li.choosemap").trigger("click"),
            !1
        }),
        $(document).bind("keydown", "alt+left alt+right", function(e) {
            e.preventDefault()
        }),
        Mousetrap.bind("m", function() {
            return $("#editinglayer li.choosemap").trigger("click"),
            !1
        }),
        Mousetrap.bind("l m", function() {
            if ("select" != d20.engine.mode && "drawselect" != d20.engine.mode || "map" == window.currentEditingLayer)
                return !1;
            var e = d20.engine.selected();
            return d20.engine.unselect(),
            _.each(e, function(e) {
                e.model.save({
                    layer: "map"
                })
            }),
            $("#editinglayer li.choosemap").trigger("click"),
            !1
        }),
        Mousetrap.bind("o", function() {
            return $("#editinglayer li.chooseobjects").trigger("click"),
            !1
        }),
        Mousetrap.bind("l o", function() {
            if ("select" != d20.engine.mode && "drawselect" != d20.engine.mode || "objects" == window.currentEditingLayer)
                return !1;
            var e = d20.engine.selected();
            return d20.engine.unselect(),
            _.each(e, function(e) {
                e.model.save({
                    layer: "objects"
                })
            }),
            $("#editinglayer li.chooseobjects").trigger("click"),
            !1
        }),
        Mousetrap.bind("k", function() {
            return $("#editinglayer li.choosegmlayer").trigger("click"),
            !1
        }),
        Mousetrap.bind("l k", function() {
            if ("select" != d20.engine.mode && "drawselect" != d20.engine.mode || "gmlayer" == window.currentEditingLayer)
                return !1;
            var e = d20.engine.selected();
            return d20.engine.unselect(),
            _.each(e, function(e) {
                e.model.save({
                    layer: "gmlayer"
                })
            }),
            $("#editinglayer li.choosegmlayer").trigger("click"),
            !1
        }),
        Mousetrap.bind(",", function() {
            return $("#editinglayer li.choosewalls").trigger("click"),
            !1
        }),
        Mousetrap.bind("l ,", function() {
            if ("select" != d20.engine.mode && "drawselect" != d20.engine.mode || "walls" == window.currentEditingLayer)
                return !1;
            if (window.largefeats || window.xlfeats) {
                var e = d20.engine.selected();
                return d20.engine.unselect(),
                _.each(e, function(e) {
                    e.model.save({
                        layer: "walls"
                    })
                }),
                $("#editinglayer li.choosewalls").trigger("click"),
                !1
            }
        }),
        Mousetrap.bind("i", function() {
            return $("#rightsidebar .ui-tabs-nav a[href=#imagedialog]").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("r r", function() {
            return $("#fogcontrols .choosereveal").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("r g", function() {
            return $("#fogcontrols .choosepolygonreveal").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("r t", function() {
            return $("#fogcontrols .choosehide").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("y", function() {
            return $("#startrounds").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("u", function() {
            if ("select" != d20.engine.mode || !d20.Campaign.initiativewindow)
                return !1;
            for (var e = d20.engine.selected(), t = 0; t < e.length; t++)
                d20.Campaign.initiativewindow.addTokenToList(e[t].model.id);
            return !1
        }),
        Mousetrap.bind("p", function() {
            return $("#page-toolbar .handle").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("N p", function() {
            window.Jukebox.playlist.each(function(e) {
                e.stop()
            })
        }))
    }),
    $(function() {
        if (window.is_gm) {
            var e = !1;
            $("body").on("drop", function(e) {
                return console.log("Body drop!"),
                d20.engine.marketplaceDrop.lastDrop && d20.engine.marketplaceDrop.doDrop(e.originalEvent.pageX, e.originalEvent.pageY),
                !1
            }),
            $("#upperCanvas").dndUploader("init", {
                url: "/image_library/newupload",
                method: "POST",
                allowMultiple: !0
            }),
            $("#upperCanvas").bind("uploadstarted", function() {
                e || (e = $("<div class='dialog' id='uploaddialog'><p class='status'>Uploading file, this may take a few minutes depending on the speed of your connection, please wait...</p><p><div class='progress progress-striped active'><div class='bar' style='width: 5%;'></div></div></p></div>"),
                e.dialog({
                    title: "Uploading...",
                    modal: !0,
                    zIndex: 10500
                }))
            }),
            $("#upperCanvas").bind("uploadprogress", function(t, i) {
                e.find(".bar").css({
                    width: parseInt(i, 10) + "%"
                })
            }),
            $("#upperCanvas").bind("uploadcanceled uploadfailed", function() {
                e.dialog("destroy").remove(),
                e = !1,
                alert("Your upload failed. Your file may be too large (only files up to " + (window.largefeats === !0 ? "10" : "5") + " MB are accepted), or your connection may have been interrupted. Please try again.")
            }),
            $("#upperCanvas").bind("uploadcomplete", function(t, i) {
                if (t.stopPropagation(),
                "overquota" == i)
                    return e.dialog("destroy").remove(),
                    e = !1,
                    d20.utils.showOverQuota(),
                    !1;
                if ("badpdfconvert" == i)
                    return e.dialog("destroy").remove(),
                    e = !1,
                    d20.utils.showBadConvert(),
                    !1;
                e && (e.dialog("destroy").remove(),
                e = !1);
                var n = i;
                "number" != typeof n.width && (n.width = parseInt(n.width, 10),
                n.height = parseInt(n.height, 10));
                var r = Math.floor(d20.uploader.lastDropX / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] / d20.engine.canvasZoom)
                  , o = Math.floor(d20.uploader.lastDropY / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] / d20.engine.canvasZoom);
                if (n.width > n.height && n.width > d20.engine.pageWidth) {
                    console.log("larger than page!");
                    var a = n.height / n.width;
                    n.width = d20.engine.pageWidth,
                    n.height = n.width * a,
                    r = Math.floor(n.width / 2),
                    o = Math.floor(n.height / 2)
                } else if (n.height > d20.engine.pageHeight) {
                    console.log("larger than page!");
                    var a = n.width / n.height;
                    n.height = d20.engine.pageHeight,
                    n.width = n.height * a,
                    r = Math.floor(n.width / 2),
                    o = Math.floor(n.height / 2)
                }
                var s = {
                    left: r,
                    top: o,
                    width: n.width,
                    height: n.height,
                    imgsrc: n.base.replace("/original.", "/med.") + "?" + Math.floor((new Date).getTime() / 1e3),
                    imgwidth: n.width,
                    imgheight: n.height
                };
                if (n) {
                    var l = s.imgsrc.replace("/med.", "/thumb.")
                      , c = s.imgsrc.replace("/med.", "/max.");
                    $("#recentuploads .dd-list").prepend("<li class='dd-item library-item draggableresult' data-fullsizeurl='" + c + "' data-imageid='" + n.imageid + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + l + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + n.filename + "</div></div></div></li>"),
                    $("#imagedialog #recentuploads .draggableresult").not(".ui-draggable").draggable({
                        handle: ".namecontainer",
                        revert: !0,
                        revertDuration: 0,
                        helper: "clone",
                        appendTo: "body"
                    }).addTouch()
                }
                d20.Campaign.activePage().addImage(s)
            })
        }
    }),
    $(function() {
        $(".standard_slider").each(function() {
            var e = $("" + $(this).attr("data-target"))
              , t = $(this);
            $(this).slider({
                value: e.val(),
                min: parseInt($(this).attr("data-min")),
                max: parseInt($(this).attr("data-max")),
                step: parseInt($(this).attr("data-step")),
                slide: function(t, i) {
                    e.val(i.value).trigger("change")
                }
            }),
            e.bind("keyup", function() {
                t.slider("value", e.val())
            })
        })
    }),
    $(function() {
        var e = !1
          , t = function(t) {
            if (!t || t.target == window) {
                console.log("window resize"),
                $("#editor-wrapper").addClass("noshow"),
                $(".canvas-container").css({
                    left: "0px",
                    top: "0px"
                });
                var i = $("body").hasClass("sidebarhidden") ? 0 : $("#rightsidebar").outerWidth();
                $("#editor-wrapper, #loading-overlay, #playerzone").css({
                    width: $(window).width() - i + "px"
                }),
                $("#secondary-toolbar").css({
                    "max-width": $("#editor-wrapper").width() - 90 + "px"
                }),
                $("#page-toolbar .handle").css({
                    right: i + 25 + "px"
                }),
                $("#zoomslider").css({
                    right: i + 34 + "px"
                }),
                $("#sidebarcontrol").css({
                    right: i + "px"
                }),
                $("#showndecks").css({
                    right: i + 35 + "px",
                    "max-height": $(window).height() - $("#playerzone").height() - $("#macrobar").height() - 60 + "px",
                    bottom: $("#playerzone .player").height() + $("#macrobar").height() + 25 + "px"
                }),
                d20.tutorial && d20.tutorial.active && $("#tutorial-toc").css({
                    right: i + 60 + "px"
                });
                var n = $("#editor-wrapper");
                newwidth = n[0].clientWidth,
                newheight = n[0].clientHeight,
                d20.engine.setCanvasSize(newwidth, newheight),
                $("#rightsidebar .ui-tabs-panel").css("height", $(window).height() - 40 + "px"),
                $("#textchat").css("height", $(window).height() - 165 + "px"),
                d20.tddice && d20.tddice.updateRendererSize && d20.tddice.updateRendererSize(),
                e && clearTimeout(e),
                e = setTimeout(function() {
                    $("#editor-wrapper").removeClass("noshow"),
                    e = !1
                }, 150)
            }
        }
        ;
        $(window).bind("resize", t),
        t(),
        window.allChildWindows = [],
        window.onbeforeunload = function() {
            window.allChildWindows.forEach(function(e) {
                try {
                    e.close()
                } catch (t) {
                    console.log(t)
                }
            })
        }
        ,
        $("#exitroll20game").on("click", function() {
            window.location = "/campaigns/exit_landing/" + window.campaign_id
        })
    }),
    $(document).on("click", "a", function(e) {
        if (!($(this).hasClass("lightly") || $(this).parents(".redactor_box").length > 0)) {
            var t = $(this).attr("href");
            if (void 0 !== t) {
                if (-1 !== t.indexOf("journal.roll20.net")) {
                    var i = t.split("/")[3]
                      , n = t.split("/")[4]
                      , r = d20.Campaign[i + "s"].get(n);
                    if (r) {
                        var o = r.get("inplayerjournals").split(",");
                        (window.is_gm || -1 !== _.indexOf(o, "all") || window.currentPlayer && -1 !== _.indexOf(o, window.currentPlayer.id)) && r.view.showDialog()
                    }
                    return $("#existing" + i + "s").find("tr[data-" + i + "id=" + n + "]").trigger("click"),
                    !1
                }
                if (-1 !== t.indexOf("javascript:"))
                    return !1;
                if ("!" === t.substring(0, 1))
                    return d20.textchat.doChatInput(t),
                    !1;
                if ("~" === t.substring(0, 1))
                    return d20.textchat.doChatInput("%{" + t.substring(1, t.length) + "}"),
                    !1;
                if (void 0 !== t && ("external" === $(this).attr("rel") || -1 === t.indexOf("javascript:") && -1 !== t.indexOf("://"))) {
                    e.stopPropagation(),
                    e.preventDefault();
                    var a = $('<div class="dialog dialog-danger">' + t + "<br /><br />This link will open up a new window (or tab) to an external site. Just close the new window/tab to return to the editor.</div>");
                    a.dialog({
                        modal: !0,
                        title: "Confirm External Link",
                        buttons: {
                            Continue: function() {
                                $(this).dialog("destroy").remove(),
                                window.open(t)
                            },
                            Cancel: function() {
                                $(this).dialog("destroy").remove()
                            }
                        },
                        beforeClose: function() {
                            $(this).dialog("destroy").remove()
                        }
                    })
                }
            }
        }
    }),
    $(document).lightly(),
    $("#editor-wrapper").on("click", function(e) {
        e.altKey && e.preventDefault()
    }),
    $("body").on("dblclick", ".ui-dialog-titlebar", function() {
        var e = $(this).parents(".ui-dialog");
        if (e.hasClass("dialog-collapsed")) {
            var t = e.position().top - 7 + "/" + (e.position().left - 38)
              , i = e.attr("data-prevpos");
            if (void 0 !== i) {
                var n = i.split("/");
                e.css("top", n[0] + "px").css("left", n[1] + "px")
            }
            e.attr("data-prevpos", t),
            e.removeClass("dialog-collapsed")
        } else {
            var t = e.position().top + "/" + e.position().left
              , i = e.attr("data-prevpos");
            if (void 0 !== i) {
                var n = i.split("/");
                e.css("top", n[0] + "px").css("left", n[1] + "px")
            }
            e.attr("data-prevpos", t),
            e.addClass("dialog-collapsed")
        }
    }),
    window.is_mobile && $("body").addTouchLive(".ui-dialog-titlebar"),
    $("body").on("click", "#openchatarchive", function() {
        window.open("/campaigns/chatarchive/" + window.campaign_id)
    }),
    d20.jukebox = {
        possibletags: [],
        playlistCurrentIdx: 0,
        playedPlaylistOnce: !1,
        sharedPlaylistSeed: 0,
        randomizer: {},
        lastFolderStructure: []
    },
    $(function() {
        $("#globalvolume").slider({
            value: 100
        }),
        $("#globalvolume").on("slidechange", function() {
            window.currentPlayer.save({
                globalvolume: $(this).slider("value")
            })
        }),
        $("#jukebox .superadd").popover({
            my: "right top",
            at: "right bottom"
        });
        var e = ($.jqotec("#tmpl_jukeboxfoldertitle"),
        $("#jukebox"))
          , t = $("#jukeboxmenu")
          , i = $("#jukeboxitemmenu")
          , n = !1;
        d20.jukebox.refreshJukeboxList = function() {
            var t = "<h4>Now Playing</h4>"
              , i = 0;
            if (window.Jukebox.playlist.each(function(e) {
                1 == e.get("playing") && 0 == e.get("softstop") && (t += $("#tmpl_jukeboxwhatsplaying").jqote(e.toJSON()),
                i++)
            }),
            0 == i && (t += "<div class='playingitem'><em style='color: #777;'>Nothing, currently.</em></div>"),
            e.find("#jukeboxwhatsplaying").html(t),
            window.is_gm) {
                t = "",
                console.log("Refresh jukebox List!");
                var n, r = [];
                n = r.length > 0 ? (r.val() + "").toLowerCase().split(" ") : [""];
                var o, a = d20.Campaign.get("jukeboxfolder");
                if ("" === a)
                    o = [],
                    window.Jukebox.playlist.each(function(e) {
                        o.push(e.id)
                    });
                else {
                    o = JSON.parse(a);
                    var s = ((new Date).getTime(),
                    []);
                    window.Jukebox.playlist.each(function(e) {
                        return -1 !== a.indexOf(e.id) ? !0 : void s.push(e.toJSON())
                    }),
                    _.each(s, function(e) {
                        o.push(e.id)
                    })
                }
                d20.jukebox.lastFolderStructure = o;
                var l = [];
                void 0 !== window.currentPlayer && "" !== window.currentPlayer.get("jukeboxfolderstatus") && (l = window.currentPlayer.get("jukeboxfolderstatus").split(","));
                var c = function(e) {
                    var i, r = void 0 !== e.id && -1 !== l.indexOf(e.id + ""), o = e.n ? e.n : "";
                    i = e.i ? e.i : e;
                    var a = !1
                      , s = window.is_gm ? "dd-sortablehandle" : "dd-unsortable"
                      , d = function() {
                        e.i && (t += '<li class="dd-item dd-folder" data-globalfolderid="' + e.id + '">',
                        t += r ? '<button data-action="collapse" type="button" style="display: none;" class="' + s + '">Collapse</button><button data-action="expand" type="button" style="display: block;" class="dd-sortablehandle">Expand</button>' : '<button data-action="collapse" type="button" style="display: block;" class="' + s + '">Collapse</button><button data-action="expand" type="button" style="display: none;" class="dd-sortablehandle">Expand</button>',
                        t += '<div class="dd-handle ' + s + '">Drag</div><div class="dd-content"><div class="folder-title">' + d20ext.utils.strip_tags(e.n) + "</div>",
                        t += $("#tmpl_jukeboxfoldertitle").jqote(e),
                        t += "</div>"),
                        t += r ? '<ol class="dd-list" style="display: none;">' : '<ol class="dd-list">',
                        a = !0
                    }
                    ;
                    return _.each(i, function(e) {
                        var i = !1;
                        if (null === e)
                            return !0;
                        if ("object" == typeof e) {
                            var r = t + ""
                              , s = a ? !0 : !1;
                            a || d();
                            var l = c(e);
                            l || window.is_gm || (s || (a = !1),
                            t = r),
                            r = null
                        } else {
                            var h, u = e;
                            if (h = window.Jukebox.playlist.get(u),
                            !h)
                                return !0;
                            var p = h.get("playing");
                            if (window.is_gm || p) {
                                if (window.is_gm) {
                                    for (var f = 0; f < n.length; f++)
                                        "" != n[f] && -1 === h.get("title").toLowerCase().indexOf(n[f]) && -1 === h.get("tags").toLowerCase().indexOf(n[f]) && -1 === o.toLowerCase().indexOf(n[f]) && (i = !0);
                                    for (var g = h.tagsArray(), m = 0; m < g.length; m++)
                                        void 0 === d20.jukebox.possibletags[g[m]] ? d20.jukebox.possibletags[g[m]] = {
                                            tag: g[m],
                                            count: 1
                                        } : d20.jukebox.possibletags[g[m]].count++
                                }
                                a || d();
                                var v = h.toJSON();
                                v.hidden = i,
                                t += $("#tmpl_jukeboxfolderitem").jqote(v)
                            }
                        }
                    }),
                    window.is_gm && !a && d(),
                    a && (0 === i.length && (t += "<li class='dd-item dd-item-dummy'><div class='dd-content'></div></li>"),
                    t += "</ol>",
                    e.i && (t += "</li>")),
                    a
                }
                ;
                c(o),
                e.find("#jukeboxfolderroot").html(t),
                window.Jukebox.playlist.each(function(t) {
                    e.find("#jukeboxfolderroot .jukeboxitem[data-itemid=" + t.id + "] .slider").val(100 * Math.pow(t.get("volume") / 100, .5))
                }),
                window.Jukebox.playlist.length > 0 && e.find("#jukebox").find(".instructions").remove(),
                window.is_gm && (n.length > 1 || "" !== n[0]) && e.find("#jukeboxfolderroot .dd-list").each(function() {
                    0 === $(this).find(".dd-item").not(".dd-item-hidden, .dd-item-dummy").length && $(this).parent("li").hide()
                })
            }
        }
        ,
        window.is_gm && (e.find("#jukeboxfolderroot").on("change", function() {
            var t = e.find("#jukeboxfolderroot").nestable("serialize");
            t && d20.Campaign.save({
                jukeboxfolder: JSON.stringify(t)
            })
        }),
        e.find("#jukeboxfolderroot").on("click", ".playstyle", function() {
            switch ($(this).attr("data-val")) {
            case "s":
                $(this).attr("data-val", "a");
                break;
            case "a":
                $(this).attr("data-val", "b");
                break;
            default:
                $(this).attr("data-val", "s")
            }
            e.find("#jukeboxfolderroot").trigger("change")
        }));
        var r = function(e, t, i) {
            if (i > 99)
                return void 0;
            var n;
            return _.each(e, function(e) {
                if (e && "object" == typeof e && e.id === t)
                    n = e;
                else if (e && "object" == typeof e && void 0 !== e.i) {
                    var o = r(e.i, t, i + 1);
                    void 0 !== o && (n = o)
                }
                return n ? !1 : void 0
            }),
            n
        }
        ;
        d20.jukebox.addItemToFolderStructure = function(e, t) {
            var i = d20.Campaign.get("jukeboxfolder");
            if ("" !== i) {
                var n = JSON.parse(i);
                if (t && "root" !== t) {
                    var o = r(n, t, 0);
                    if (void 0 === o || void 0 === o.i)
                        return void console.log("ERROR: Could not find folder container for folder id " + t);
                    folderitems = o.i
                } else
                    folderitems = n;
                folderitems.unshift(e),
                d20.Campaign.save({
                    jukeboxfolder: JSON.stringify(n)
                })
            }
        }
        ,
        d20.jukebox.addFolderToFolderStructure = function(t, i) {
            var n = d20.Campaign.get("jukeboxfolder");
            "" === n && (e.find("#jukeboxfolderroot").trigger("change"),
            n = d20.Campaign.get("jukeboxfolder"));
            var o = JSON.parse(n);
            if (i && "root" !== i) {
                var a = r(o, i, 0);
                if (void 0 === a || void 0 === a.i)
                    return void console.log("ERROR: Could not find folder container for folder id " + i);
                folderitems = a.i
            } else
                folderitems = o;
            folderitems.unshift({
                n: t,
                i: [],
                id: generateUUID(),
                s: "s"
            }),
            d20.Campaign.save({
                jukeboxfolder: JSON.stringify(o)
            })
        }
        ,
        e.find("#addnewjukeboxfolder").on("click", function() {
            var t = prompt("What do you want to call the new folder?");
            null != t && (d20.jukebox.addFolderToFolderStructure(t),
            e.find("#jukebox").trigger("click"))
        });
        var o;
        e.find("#jukeboxfolderroot").on("contextmenu", ".dd-content", function(e) {
            console.log($(this).parent()),
            window.is_gm && ($(this).parent().hasClass("dd-folder") ? (t.show(),
            t.css({
                top: e.pageY + "px",
                left: e.pageX + "px"
            }),
            o = $(this).parent()) : $(this).parent().hasClass("dd-item") && (i.show(),
            i.css({
                top: e.pageY + "px",
                left: e.pageX + "px"
            }),
            $currentItemTarget = $(this).parent()),
            e.preventDefault(),
            e.stopPropagation())
        }),
        t.on(mousedowntype, function() {
            return !1
        }),
        t.find("ul").on(mousedowntype, "li[data-action-type=deletefolder]", function() {
            var i = confirm("Are you sure you want to delete this folder? All items in it will be moved to the root folder.");
            i && (o.remove(),
            e.find("#jukeboxfolderroot").trigger("change")),
            t.hide()
        }),
        t.find("ul").on(mousedowntype, "li[data-action-type=addfolder]", function() {
            var e = prompt("What do you want to call the new folder?");
            if (null != e) {
                var i = o.attr("data-globalfolderid");
                if (!i)
                    return void console.log("Did not find folder id");
                t.hide(),
                d20.jukebox.addFolderToFolderStructure(e, i)
            }
        }),
        t.find("ul").on(mousedowntype, "li[data-action-type=renamefolder]", function() {
            var i = prompt("What do you want to rename the folder to?");
            if (null != i) {
                var n = o.attr("data-globalfolderid");
                if (!n)
                    return void console.log("Did not find folder id");
                t.hide();
                var a = d20.Campaign.get("jukeboxfolder");
                "" === a && (e.find("#jukeboxfolderroot").trigger("change"),
                a = d20.Campaign.get("jukeboxfolder"));
                var s = JSON.parse(a)
                  , l = r(s, n);
                l && (l.n = i),
                d20.Campaign.save({
                    jukeboxfolder: JSON.stringify(s)
                })
            }
        });
        var a = function(t) {
            var i = d20.Campaign.get("jukeboxfolder");
            "" === i && (e.find("#jukeboxfolderroot").trigger("change"),
            i = d20.Campaign.get("jukeboxfolder"));
            var n = JSON.parse(i)
              , o = r(n, t);
            o && (o.i = _.sortBy(o.i, function(e) {
                if (e && "object" == typeof e && void 0 !== e.n)
                    return e.n;
                if ("string" == typeof e) {
                    var t = window.Jukebox.playlist.get(e);
                    return t ? t.get("title") : "ZZZZZZ"
                }
            })),
            d20.Campaign.save({
                jukeboxfolder: JSON.stringify(n)
            })
        }
        ;
        d20ext.sortRootJukeboxFolderAlpha = function() {
            var t = d20.Campaign.get("jukeboxfolder");
            "" === t && (e.find("#jukeboxfolderroot").trigger("change"),
            t = d20.Campaign.get("jukeboxfolder"));
            var i = JSON.parse(t)
              , n = i;
            n = _.sortBy(n, function(e) {
                if (e && "object" == typeof e && void 0 !== e.n)
                    return e.n;
                if ("string" == typeof e) {
                    var t = window.Jukebox.playlist.get(e);
                    return t ? t.get("title") : "ZZZZZZ"
                }
            }),
            d20.Campaign.save({
                jukeboxfolder: JSON.stringify(n)
            })
        }
        ,
        e.find("#sortrootjukeboxalpha").on("click", function() {
            var e = confirm("Sort all root-level Jukebox tracks and playlists alphabetically?");
            e && d20ext.sortRootJukeboxFolderAlpha()
        }),
        t.find("ul").on(mousedowntype, "li[data-action-type=sortalpha]", function() {
            var e = o.attr("data-globalfolderid");
            return e ? (t.hide(),
            void a(e)) : void console.log("Did not find folder id")
        }),
        i.find("ul").on(mousedowntype, "li[data-action-type=deleteitem]", function() {
            var e = $currentItemTarget.attr("data-itemid")
              , t = window.Jukebox.playlist.get(e);
            t && t.destroy()
        }),
        t.length > 0 && $("body").on(mousedowntype, function() {
            "none" !== t[0].style.display && (t[0].style.display = "none"),
            "none" !== i[0].style.display && (i[0].style.display = "none")
        }),
        e.find("#jukeboxfolderroot").on("folderstatuschange", function() {
            var t = [];
            e.find("#jukeboxfolderroot").find(".dd-folder").each(function() {
                $(this).find("> .dd-list").is(":visible") || t.push($(this).attr("data-globalfolderid"))
            }),
            window.currentPlayer.save({
                jukeboxfolderstatus: t.join(",")
            })
        }),
        e.find("#jukeboxfolderroot").nestable({
            allowNestedFolders: !1
        }),
        d20.jukebox.stopAllTracks = function() {
            window.is_gm && window.Jukebox.playlist.each(function(e) {
                1 == e.get("playing") && e.stop()
            })
        }
        ,
        d20.jukebox.showPopout = function() {
            if (n !== !0) {
                var e = $("#jukebox")
                  , r = e.parent();
                d20.jukebox.childWindow = window.open("/editor/popoutjukebox", "JukeboxPopout", "menubar=0,location=0,toolbar=0,status=0,scrollbars=1,width=300,height=800"),
                window.allChildWindows.push(d20.jukebox.childWindow),
                d20.jukebox.childWindow.onload = function() {
                    n = !0,
                    e.appendTo(d20.jukebox.childWindow.document.getElementById("containerdiv")),
                    t.appendTo(d20.jukebox.childWindow.document.body),
                    i.appendTo(d20.jukebox.childWindow.document.body),
                    $(d20.jukebox.childWindow.document.body).on(mousedowntype, function() {
                        "none" !== t[0].style.display && (t[0].style.display = "none"),
                        "none" !== i[0].style.display && (i[0].style.display = "none"),
                        "none" !== $(d20.jukebox.childWindow.document.body).find("#superjukeboxadd")[0].style.display && ($(d20.jukebox.childWindow.document.body).find("#superjukeboxadd")[0].style.display = "none")
                    }),
                    $(d20.jukebox.childWindow.document.body).find("#addjukebox").on(mousedowntype, function(e) {
                        e.stopPropagation()
                    }),
                    $(d20.jukebox.childWindow.document.body).find("#addnewjukeboxfolder").on(mousedowntype, function(e) {
                        e.stopPropagation()
                    }),
                    d20.jukebox.childWindow.document.title = "Roll20 Jukebox",
                    console.log("Re-bind nestable"),
                    console.log($(d20.jukebox.childWindow.document.getElementById("jukeboxfolderroot")));
                    var r = $(d20.jukebox.childWindow.document.getElementById("jukeboxfolderroot"));
                    r.removeData("nestable"),
                    r.nestable({
                        allowNestedFolders: !1,
                        localdoc: d20.jukebox.childWindow.document
                    }),
                    popoutWindowIsFocused = !0,
                    d20.jukebox.refreshJukeboxList()
                }
                ,
                d20.jukebox.childWindow.onbeforeunload = function() {
                    n = !1,
                    setTimeout(function() {
                        $("#rightsidebar").find("a[href=#jukebox]").trigger("click")
                    }, 100),
                    e.appendTo(r),
                    t.appendTo($("body")),
                    i.appendTo($("body")),
                    window.allChildWindows = _.without(window.allChildWindows, d20.jukebox.childWindow),
                    popoutWindowIsFocused = !1,
                    d20.jukebox.childWindow = null
                }
                ,
                $(d20.jukebox.childWindow).bind("focus", function() {
                    popoutWindowIsFocused = !0
                }),
                $(d20.jukebox.childWindow).bind("blur", function() {
                    popoutWindowIsFocused = !1
                })
            }
        }
        ,
        $("#jukeboxtab").on("dblclick", function() {
            d20.jukebox.showPopout()
        })
    }),
    d20.decks = {},
    $(function() {
        d20.decks.cardByID = function(e) {
            var t = !1;
            return d20.Campaign.decks.each(function(i) {
                var n = i.cards.get(e);
                return n ? (t = n,
                !1) : void 0
            }),
            t
        }
        ,
        d20.decks.doRefreshDecksList = function() {
            $("#existingdecks tbody").html(""),
            d20.Campaign.decks.each(function(e) {
                return window.is_gm || e.get("showplayers") ? void $("#existingdecks tbody").append($("#tmpl_existingdecks").jqote(e)) : !0
            })
        }
        ,
        d20.decks.refreshDiscardPiles = function() {
            d20.Campaign.decks.each(function(e) {
                return window.is_gm || e.get("showplayers") ? void (e.discardpile.$el.is(":visible") && e.updateDiscardPile()) : !0
            })
        }
        ,
        d20.decks.refreshDecksList = _.debounce(d20.decks.doRefreshDecksList, 100);
        var e = function(e, t, i) {
            var n = e.get("currentIndex");
            if (1 > t || t > 100)
                return void alert("You must draw between 1 and 100 cards at a time.");
            for (var r = 0; t > r; r++) {
                var o = e.drawCard(n)
                  , a = e.cardAtIndex(o);
                if (!a)
                    return e.finishDrawingCard(n, !0),
                    void alert("Ran out of cards in deck before drawing all cards!");
                n = o,
                d20.Campaign.hands.addCardToHandForPlayer(a, i),
                console.log("Deck index is now: " + n)
            }
            console.log("Setting deck index to: " + n),
            e.finishDrawingCard(n, !0)
        }
        ;
        $("#adddeck").bind("click", function() {
            if (window.is_gm) {
                d20.Campaign.decks.create({
                    name: "New Deck"
                })
            }
        }),
        $("#existingdecks").on("click", ".deck", function() {
            if (window.is_gm) {
                var e = $(this).attr("data-deckid")
                  , t = d20.Campaign.decks.get(e);
                t && t.editor.showDialog()
            }
        }),
        $("#existingdecks").on("click", ".toggledeck", function(e) {
            var t = $(this).parents(".deck").attr("data-deckid")
              , i = d20.Campaign.decks.get(t);
            i && (i.get("shown") ? (i.stack.hideDeck(),
            $(this).text("Show"),
            e.stopPropagation()) : (i.stack.showDeck(),
            $(this).text("Hide"),
            e.stopPropagation()))
        }),
        $("#showndecks").on("click", ".drawable .nextcard", function(t) {
            var i = $(this)
              , n = $(this).parents(".deckstack").attr("data-deckid");
            $(".tipsy").remove();
            var r = d20.Campaign.decks.get(n);
            if (!r)
                return void alert("ERROR: Unable to locate deck!");
            if (t.shiftKey)
                return void e(r, 1, window.currentPlayer);
            var o = r.drawCard();
            i.find(".back img").attr("src", r.imageForCardAtIndex(o)),
            i.addClass("flipped"),
            setTimeout(function() {
                i.addClass("postflip"),
                setTimeout(function() {
                    r.finishDrawingCard(o)
                }, 450)
            }, 450)
        }),
        $("#showndecks").on("click", ".shuffle", function() {
            var e = $(this).parents(".deckstack").attr("data-deckid")
              , t = d20.Campaign.decks.get(e);
            if (!t)
                return void alert("ERROR: Unable to locate deck!");
            var i = t.cards.length
              , n = _.keys(t.findCardsInPlay()).length;
            $("<div><p>Are you sure you want to shuffle the deck?</p>" + (n != i || t.get("infinitecards") ? "" : "<p class='alert alert-danger'>All cards are in play, there are no cards to shuffle!</p>") + "</div>").dialog({
                modal: !0,
                title: "Shuffle Deck?",
                buttons: {
                    Shuffle: function() {
                        t.shuffle(),
                        $(this).dialog("destroy").remove()
                    },
                    Cancel: function() {
                        $(this).dialog("destroy").remove()
                    }
                },
                beforeClose: function() {
                    $(this).dialog("destroy").remove()
                }
            })
        }),
        $("#showndecks").on("click", ".recall", function() {
            var e = $(this).parents(".deckstack").attr("data-deckid")
              , t = d20.Campaign.decks.get(e);
            if (!t)
                return void alert("ERROR: Unable to locate deck!");
            var i = $("<div class='content'></div>");
            i.on("click", ".recall_playerhands", function() {
                t.recallCards("hand"),
                i.find(".shuffle").is(":checked") && t.shuffle(),
                i.dialog("destroy")
            }),
            i.on("click", ".recall_table", function() {
                t.recallCards("graphic"),
                i.find(".shuffle").is(":checked") && t.shuffle(),
                i.dialog("destroy")
            }),
            i.dialog({
                title: "Recall Cards",
                modal: !0,
                height: 350,
                buttons: {
                    "Recall All": function() {
                        t.recallCards("all"),
                        i.find(".shuffle").is(":checked") && t.shuffle(),
                        i.dialog("destroy").remove()
                    },
                    Cancel: function() {
                        i.dialog("destroy").remove()
                    }
                },
                beforeClose: function() {
                    i.dialog("destroy").remove()
                }
            }),
            i.html($("#tmpl_deckrecall").jqote(t.recallCount()))
        }),
        $("#showndecks").on("click", ".deal", function() {
            var e = $(this).parents(".deckstack").attr("data-deckid")
              , t = d20.Campaign.decks.get(e);
            if (!t)
                return void alert("ERROR: Unable to locate deck!");
            var i = $($("#tmpl_deckdeal").jqote(t)).dialog({
                modal: !0,
                title: "Deal Multiple Cards",
                width: 300,
                buttons: {
                    Deal: function() {
                        var e, n = i.find(".toplayers").val(), r = parseInt(i.find(".numcards").val(), 10), o = t.get("currentIndex");
                        if (1 > r || r > 100)
                            return void alert("You must deal between 1 and 100 cards to each player.");
                        if (e = -1 !== _.indexOf(n, "all") ? d20.Campaign.players.pluck("id") : n,
                        e.length < 1)
                            return void alert("You must deal cards to at least 1 player!");
                        for (var a = 0; a < e.length; a++)
                            for (var s = d20.Campaign.players.get(e[a]), l = 0; r > l; l++) {
                                var c = t.drawCard(o)
                                  , d = t.cardAtIndex(c);
                                if (!d)
                                    return t.finishDrawingCard(o, !0),
                                    alert("Ran out of cards in deck before dealing cards to all players!"),
                                    void i.dialog("destroy").remove();
                                o = c,
                                d20.Campaign.hands.addCardToHandForPlayer(d, s),
                                console.log("Deck index is now: " + o)
                            }
                        console.log("Setting deck index to: " + o),
                        t.finishDrawingCard(o, !0),
                        i.dialog("destroy").remove()
                    },
                    Cancel: function() {
                        i.dialog("destroy").remove()
                    }
                },
                beforeClose: function() {
                    i.off(),
                    i.dialog("destroy").remove()
                }
            });
            i.on("click", ".dealtoturn", function() {
                var e = d20.Campaign.initiativewindow.cleanList()
                  , n = t.get("currentIndex");
                return e.length < 1 || e.length > 100 ? void alert("There must be between 1 and 100 entries in the turn order to use this feature.") : (_.each(e, function(r, o) {
                    if (!r.formula) {
                        var a = t.drawCard(n)
                          , s = t.cardAtIndex(a);
                        if (!s)
                            return t.finishDrawingCard(n, !0),
                            alert("Ran out of cards in deck before dealing cards to all turns!"),
                            void i.dialog("destroy").remove();
                        n = a,
                        e[o].pr = s.getAbbreviation(),
                        console.log("Deck index is now: " + n)
                    }
                }),
                console.log("Setting deck index to: " + n),
                t.finishDrawingCard(n, !0),
                d20.Campaign.save({
                    turnorder: JSON.stringify(e)
                }),
                void i.dialog("destroy").remove())
            }),
            i.find(".chosen").chosen()
        }),
        $("#showndecks").on("click", ".drawmultiple", function() {
            var t = $(this).parents(".deckstack").attr("data-deckid")
              , i = d20.Campaign.decks.get(t);
            if (!i)
                return void alert("ERROR: Unable to locate deck!");
            var n = $($("#tmpl_deckdraw").jqote(i)).dialog({
                modal: !0,
                title: "Draw Multiple Cards",
                width: 300,
                buttons: {
                    Draw: function() {
                        e(i, parseInt(n.find(".numcards").val(), 10), window.currentPlayer),
                        n.dialog("destroy").remove()
                    },
                    Cancel: function() {
                        n.dialog("destroy").remove()
                    }
                },
                beforeClose: function() {
                    n.dialog("destroy").remove()
                }
            })
        }),
        $("#showndecks").on("click", ".hidedeck", function() {
            var e = $(this).parents(".deckstack").attr("data-deckid")
              , t = d20.Campaign.decks.get(e);
            t.stack.hideDeck()
        }),
        $("#showndecks").on("mouseup", ".currentcard", function(e) {
            e.preventDefault()
        }),
        $("#showndecks").on("click", ".discardpile", function() {
            var e = $(this).parents(".deckstack").attr("data-deckid")
              , t = d20.Campaign.decks.get(e);
            return t ? void t.discardpile.showDialog() : void alert("ERROR: Unable to locate deck!")
        }),
        $("#showndecks").on("click", ".deckpile", function() {
            var e = $(this).parents(".deckstack").attr("data-deckid")
              , t = d20.Campaign.decks.get(e);
            return t ? void t.deckpile.showDialog() : void alert("ERROR: Unable to locate deck!")
        }),
        d20.decks.appendAllHands = function() {
            d20.Campaign.hands.each(function(e) {
                "playerhand" == e.get("type") && $("#player_" + e.get("parentid")).find(".deckhands").append(e.view.$el)
            })
        }
        ,
        $(".draggablecard").live("dragstart", function() {
            $(".tipsy").remove()
        }),
        $("#playerzone").on("click", ".cardinhand .steal", function() {
            var e = $(this).parents(".player")
              , t = $(this).parents(".cardinhand");
            if (t.hasClass("stealing"))
                return !1;
            t.addClass("stealing"),
            $(this).find("span").text("Stealing ...");
            var i = {
                time: (new Date).getTime(),
                type: "steal_request",
                handid: t.parents(".handcontainer").attr("data-handid"),
                requestedby: window.currentPlayer.id,
                cardid: t.attr("data-cardid"),
                targetplayer: e.attr("id").replace("player_", "")
            };
            d20.textchat.sendShout(i)
        }),
        d20.decks.steal_request = function(e) {
            if (window.currentPlayer && e.targetplayer == window.currentPlayer.id) {
                var t = $("#player_" + e.targetplayer).find(".handcontainer[data-handid=" + e.handid + "] .cardinhand[data-cardid=" + e.cardid + "]")[0];
                e.imgsrc = $(t).find("img").attr("src"),
                e.requester = d20.Campaign.players.get(e.requestedby).toJSON();
                {
                    $($("#tmpl_stealrequest").jqote(e)).dialog({
                        title: "Steal Request",
                        width: 400,
                        buttons: {
                            "Let it Go": function() {
                                var t = d20.Campaign.hands.get(e.handid)
                                  , i = d20.decks.cardByID(e.cardid);
                                t.removeCardsByID([i.id]),
                                d20.textchat.sendShout({
                                    time: (new Date).getTime(),
                                    type: "steal_response",
                                    response: "granted",
                                    handid: t.id,
                                    cardid: i.id,
                                    targetplayer: e.targetplayer,
                                    requestedby: e.requestedby
                                }),
                                $(this).dialog("destroy").remove()
                            },
                            "No way!": function() {
                                $(this).dialog("destroy").remove(),
                                d20.textchat.sendShout({
                                    type: "steal_response",
                                    response: "denied",
                                    time: (new Date).getTime(),
                                    handid: e.handid,
                                    cardid: e.cardid,
                                    targetplayer: e.targetplayer,
                                    requestedby: e.requestedby
                                })
                            }
                        },
                        beforeClose: function() {
                            $(this).dialog("destroy").remove()
                        }
                    })
                }
            }
        }
        ,
        d20.decks.steal_response = function(e) {
            if (window.currentPlayer && e.requestedby == window.currentPlayer.id && ("denied" === e.response && $("#player_" + e.targetplayer).find(".handcontainer[data-handid=" + e.handid + "] .cardinhand.stealing[data-cardid=" + e.cardid + "]").first().each(function() {
                $(this).find("span").text("Denied!"),
                $(this).parents(".cardinhand").removeClass("stealing").addClass("stealdenied")
            }),
            "granted" === e.response)) {
                var t = (d20.Campaign.hands.get(e.handid),
                d20.decks.cardByID(e.cardid));
                d20.Campaign.hands.addCardToHandForPlayer(t, window.currentPlayer)
            }
        }
    }),
    d20.rollabletables = {},
    function() {
        d20.rollabletables.doRefreshTablesList = function() {
            $("#existingrollabletables tbody").html(""),
            d20.Campaign.rollabletables.each(function(e) {
                return window.is_gm || e.get("showplayers") ? void $("#existingrollabletables tbody").append($("#tmpl_existingrollabletables").jqote(e)) : !0
            })
        }
        ,
        d20.rollabletables.refreshTablesList = _.debounce(d20.rollabletables.doRefreshTablesList, 100),
        $("#addrollabletable").bind("click", function() {
            if (window.is_gm) {
                d20.Campaign.rollabletables.create()
            }
        }),
        $("#existingrollabletables").on("click", ".rollabletable", function() {
            if (window.is_gm) {
                var e = $(this).attr("data-rollabletableid")
                  , t = d20.Campaign.rollabletables.get(e);
                t && t.editor.showDialog()
            }
        }),
        $("#existingrollabletables").on("click", ".rolltable", function() {
            var e = $(this).parents(".rollabletable").attr("data-rollabletableid")
              , t = d20.Campaign.rollabletables.get(e);
            return t && d20.textchat.doChatInput("/roll 1t[" + t.get("name") + "]"),
            !1
        }),
        $("#existingrollabletables").on("click", ".tokentable", function() {
            var e = $(this).parents(".rollabletable").attr("data-rollabletableid")
              , t = d20.Campaign.rollabletables.get(e);
            if (t) {
                var i = d20.engine.currentCanvasOffset[0] + Math.floor(d20.engine.canvasWidth / 2)
                  , n = d20.engine.currentCanvasOffset[1] + Math.floor(d20.engine.canvasHeight / 2);
                i > d20.engine.pageWidth / d20.engine.canvasZoom && (i = Math.floor(d20.engine.pageWidth / d20.engine.canvasZoom) - 70),
                n > d20.engine.pageHeight / d20.engine.canvasZoom && (n = Math.floor(d20.engine.pageHeight / d20.engine.canvasZoom) - 70),
                t.createToken(i, n)
            }
            return !1
        }),
        d20.getTableElementCount = function(e) {
            var t = d20.Campaign.rollabletables.findTableByName(e);
            if (t && (t.get("showplayers") === !0 || window.is_gm))
                return t.getWeightedArray().length;
            throw "No table found with that name!"
        }
        ,
        d20.getTableElementValue = function(e, t) {
            var i = d20.Campaign.rollabletables.findTableByName(e);
            if (i && (i.get("showplayers") === !0 || window.is_gm)) {
                var n = i.getWeightedArray();
                if (void 0 !== n[t]) {
                    var r = parseFloat(i.tableitems.get(n[t]).get("name"));
                    return _.isFinite(r) ? r : 0
                }
            }
            return 0
        }
    }(),
    d20.tddice = {
        sceneInitialized: !1,
        rendering: !1,
        rollid: !1,
        additionalRollQueue: {},
        allowClosingDice: !1,
        pauseRendering: !1,
        soundfx: []
    },
    $(function() {
        var e, t, i, n, r, o, a, s, l, c, d, h, u, p, f = {}, g = {}, m = {}, v = $("#editor-wrapper"), y = document.getElementById("tdviewport"), b = [], w = 0, x = 0, E = 0, T = function() {
            return l.next()
        }
        ;
        d20.tddice.stopRendering = function() {
            console.log("STOP RENDERING"),
            d20.tddice.allowClosingDice = !1,
            d20.tddice.rendering = !1,
            d20.tddice.pauseRendering = !1,
            w = 0;
            for (var e = 0; e < b.length; e++)
                r.remove(b[e]),
                b[e].body && d20.tddice.world.remove(b[e].body),
                b[e] = null ;
            b = [],
            d20.tddice.additionalRollQueue = {},
            E = 0,
            d20.tddice.rollid = !1,
            $(y).removeClass("open"),
            x = 0
        }
        ,
        d20.tddice.handleInteraction = function() {
            d20.tddice.allowClosingDice && d20.tddice.stopRendering()
        }
        ;
        var C = []
          , R = function(e, t, i) {
            var n = [];
            for (var r in e) {
                var o = S(t)
                  , a = {
                    x: -1 * t.x,
                    y: -1 * t.y,
                    z: 20
                }
                  , s = Math.abs(o.x / o.y);
                s > 1 ? a.y /= s : a.x *= s;
                var l = S(t)
                  , c = {
                    x: l.x * i,
                    y: l.y * i,
                    z: 10
                };
                minvel = 50,
                maxvel = 500,
                absx = Math.abs(c.x),
                absy = Math.abs(c.y),
                Math.max(absx, absy) < minvel && (absx >= absy ? c.x = c.x < 0 ? -1 * minvel : minvel : c.y = c.y < 0 ? -1 * minvel : minvel),
                Math.max(c.x, c.y) > maxvel && (c.x = c.x > maxvel ? maxvel : c.x,
                c.y = c.y > maxvel ? maxvel : c.y);
                var d = 12
                  , h = {
                    x: -(T() * o.y * 5 + d * o.y),
                    y: T() * o.x * 5 + d * o.x,
                    z: 0
                }
                  , u = {
                    x: T(),
                    y: T(),
                    z: T(),
                    a: T()
                };
                n.push({
                    pos: a,
                    velocity: c,
                    angle: h,
                    axis: u
                })
            }
            return n
        }
          , S = function(e) {
            var t = T() * Math.PI / 5 - Math.PI / 5 / 2
              , i = {
                x: e.x * Math.cos(t) - e.y * Math.sin(t),
                y: e.x * Math.sin(t) + e.y * Math.cos(t)
            };
            return i.x = e.x,
            i.y = e.y,
            0 == i.x && (i.x = .01),
            0 == i.y && (i.y = .01),
            i
        }
          , k = function(e, t) {
            e && (console.log("REDOING ALEA SEED"),
            l = Alea(e)),
            t && (c = t),
            d20.tddice.rendering || d20.tddice.startRendering();
            for (var i = c, n = Math.sqrt(i.x * i.x + i.y * i.y), r = (T() + 3.5) * n * .05, o = R(C, i, r), a = 0; a < C.length; a++)
                d20.tddice.createShape("d" + C[a].maxroll, o[a].pos, o[a].velocity, o[a].angle, o[a].axis, C[a].callback);
            new THREE.Color(+("0x" + d.replace("#", "")));
            C = []
        }
          , M = _.debounce(k, 10);
        d20.tddice.roller = function(e, t) {
            return console.log("Roll d" + e),
            d20.tddice.rendering || 100 !== e && !f["d" + e] || w > 20 ? void _.defer(function() {
                t(d20.textchat.diceengine.random(e) + 1)
            }) : (w++,
            d = window.currentPlayer.get("color"),
            C.push({
                maxroll: e,
                callback: t
            }),
            void M())
        }
        ,
        d20.tddice.canRoll3D = function() {
            if (window.is_playerapp) {
                if (!window.currentPlayer.get("apptddiceenabled"))
                    return !1
            } else if (!window.currentPlayer.get("tddiceenabled"))
                return !1;
            return window.Detector.webgl ? !0 : !1
        }
        ,
        d20.tddice.doRemoteRoll = function(e, t) {
            E++,
            console.log("Executing sequence #" + e.s + " as " + E);
            for (var i = e.dice.split(","), n = 0; n < i.length; n++) {
                if (console.log(i[n]),
                "100" !== i[n] && !f["d" + i[n]])
                    return void console.log("NO GEOM FOR " + i[n]);
                C.push({
                    maxroll: i[n],
                    callback: !1
                })
            }
            var r = d20.Campaign.players.get(e.player);
            d = r ? r.get("color") : "#A8A8A8",
            e.numcalcs && console.log("Expecting " + e.numcalcs + " calculations."),
            k(t ? e.seed : null , e.deltas)
        }
        ,
        d20.tddice.remoteRollQueue = {},
        d20.tddice.remoteRoll = function(e) {
            return console.log("remote Roll!"),
            d20.tddice.canRoll3D() ? void 0 !== e.s && e.s > 1 ? void (d20.tddice.remoteRollQueue[e.rollid] ? d20.tddice.remoteRollQueue[e.rollid].additionalrolls[e.s] = e : console.log("Already rendering, can't show dice roll!")) : void (("gmrollresult" != e.rolltype || window.is_gm) && (d20.tddice.remoteRollQueue[e.rollid] = e,
            d20.tddice.remoteRollQueue[e.rollid].additionalrolls = [],
            d20.textchat && -1 !== d20.textchat.allowed3drolls.indexOf(e.rollid) && (console.log("We're allowed to roll this already!"),
            d20.tddice.handleIncomingChatWith3DRoll(e.rollid, 1)))) : void 0
        }
        ,
        d20.tddice.handleIncomingChatWith3DRoll = function(e) {
            if (console.log("Incoming"),
            d20.tddice.canRoll3D()) {
                if (d20.tddice.rendering && d20.tddice.allowClosingDice && d20.tddice.handleInteraction(),
                d20.tddice.rendering)
                    return void console.log("Already rendering, ignoring.");
                if (!d20.tddice.remoteRollQueue[e] || d20.tddice.remoteRollQueue[e].alreadyshown === !0)
                    return void console.log("I don't know the info for " + e);
                d20.tddice.rollid = e,
                d20.tddice.doRemoteRoll(d20.tddice.remoteRollQueue[e], !0),
                d20.tddice.remoteRollQueue[e].alreadyshown = !0
            }
        }
        ,
        d20.tddice.updateRendererSize = function() {
            if (r) {
                var e = v.innerWidth()
                  , t = v.innerHeight();
                u = e / 2,
                p = t / 2;
                var i = e
                  , n = t;
                e > t ? i = t : t > e && (n = e),
                console.log("ADJUSTING WIDTH AND HEIGHT OF VIEWPORT"),
                d20.tddice.renderer.setSize(i, n),
                y.style.width = i + "px",
                y.style.height = n + "px"
            }
        }
        ,
        d20.tddice.startRendering = function() {
            d20.tddice.rendering = !0,
            d20.tddice.allowClosingDice = !1,
            r || (t(),
            d20.tddice.updateRendererSize()),
            $(y).addClass("open"),
            d20.tddice.rendering = !0,
            requestAnimationFrame(e)
        }
        ,
        d20.tddice.addRenderer = function() {
            if (!n) {
                n = d20.tddice.renderer = new THREE.WebGLRenderer({
                    antialias: !0,
                    alpha: !0
                }),
                h = n.getMaxAnisotropy(),
                n.shadowMapEnabled = window.is_playerapp ? !1 : !0,
                n.shadowMapSoft = !0,
                n.setSize(10, 10),
                y.appendChild(n.domElement),
                a = new THREE.PerspectiveCamera(27,1,1,200),
                a.position.z = 105,
                o = new THREE.DirectionalLight(16777215,.6),
                o.position.set(0, 0, 100),
                o.castShadow = !0,
                o.shadowCameraLeft = -60,
                o.shadowCameraTop = -60,
                o.shadowCameraRight = 60,
                o.shadowCameraBottom = 60,
                o.shadowCameraNear = 20,
                o.shadowCameraFar = 200,
                o.shadowBias = -1e-4,
                o.shadowMapWidth = 2048,
                o.shadowMapHeight = 2048,
                o.shadowDarkness = .75,
                s = new THREE.AmbientLight(12105912);
                var e = new THREE.JSONLoader
                  , t = "js/models/";
                window.is_playerapp || (t = "/" + t),
                e.load(t + "d4/d4tex2014.js?v=3", function(e, t) {
                    f.d4 = e,
                    m.d4 = t
                }),
                e.load(t + "d6/d6tex2014.js?v=7", function(e, t) {
                    f.d6 = e,
                    m.d6 = t
                }),
                e.load(t + "d6Fate/d6fatetex2014.js?v=7", function(e, t) {
                    f.df = e,
                    m.df = t
                }),
                e.load(t + "d8/d8tex2014.js?v=3", function(e, t) {
                    f.d8 = e,
                    m.d8 = t
                }),
                e.load(t + "d10/d10tex2014.js?v=4", function(e, t) {
                    f.d10 = e,
                    m.d10 = t
                }),
                e.load(t + "d10Pct10s/d10pct10stex2014.js?v=1", function(e, t) {
                    f.dpct10s = e,
                    m.dpct10s = t
                }),
                e.load(t + "d10Pct1s/d10pct1stex2014.js?v=1", function(e, t) {
                    f.dpct1s = e,
                    m.dpct1s = t
                }),
                e.load(t + "d12/d12tex2014.js?v=3", function(e, t) {
                    f.d12 = e,
                    m.d12 = t
                }),
                e.load(t + "d20/d20tex2014.js?v=3", function(e, t) {
                    f.d20 = e,
                    m.d20 = t
                }),
                e.load(t + "d6/d6tex2014.js?v=4", function(e) {
                    g.d6 = e
                }),
                d20.tddice.sceneInitialized = !0
            }
        }
        ;
        {
            var A, H, P = !1, O = function() {
                if (0 != b.length && a && a.position && !P && (A = 0,
                x++,
                _.each(b, function(e) {
                    if (e.doneRolling)
                        return A++,
                        !0;
                    e.castShadow !== !0 && (e.castShadow = !0);
                    var t = e.body.angularVelocity
                      , i = e.body.velocity;
                    if (Math.abs(t.x) < 1.5 && Math.abs(t.y) < 1.5 && Math.abs(t.z) < 1.5 && Math.abs(i.x) < 1.5 && Math.abs(i.y) < 1.5 && Math.abs(i.z) < .5 && e.position.z < 3)
                        return e.atRestStart || (e.atRestStart = x),
                        x - e.atRestStart > 2 && (e.doneRolling = !0),
                        !0;
                    P = !1,
                    e.atRestStart = !1;
                    var n = 1;
                    4 === e.maxroll && (n = -1);
                    var r = new THREE.Raycaster(new THREE.Vector3(e.position.x,e.position.y,200 * n),new THREE.Vector3(0,0,-1 * n)).intersectObjects([e]);
                    if (r.length > 0) {
                        var o = r[0].face.materialIndex;
                        e.lastRolled != o && (e.lastRolled = o)
                    }
                }),
                A == b.length && !P)) {
                    P = !0;
                    for (var e = b.length, t = 0; e > t; t++) {
                        var i = b[t];
                        if (i.promise) {
                            if (void 0 !== i.lastRolled && void 0 !== i.material.materials[i.lastRolled])
                                var n = parseInt(i.material.materials[i.lastRolled].name, 10);
                            else {
                                console.log("Couldn't read face!");
                                var n = d20.textchat.diceengine.random(i.maxroll) + 1
                            }
                            n == i.maxroll && console.log("crit!"),
                            i.promise(n),
                            i.promise = null
                        } else
                            console.log("skip this one!")
                    }
                    if (console.log("returned all current rolls"),
                    P)
                        if (console.log("Finsihed after " + x + " calculations."),
                        void 0 !== d20.tddice.remoteRollQueue[d20.tddice.rollid].additionalrolls[E + 1]) {
                            for (var t = 0; t < b.length; t++)
                                b[t].body && (d20.tddice.world.remove(b[t].body),
                                delete b[t].body);
                            d20.tddice.rendering = !1;
                            var r = d20.tddice.remoteRollQueue[d20.tddice.rollid].additionalrolls[E + 1];
                            d20.tddice.doRemoteRoll(r)
                        } else
                            d20.textchat.showHidden3DRolls(),
                            console.log("all done! cleanup!"),
                            d20.tddice.allowClosingDice = !0,
                            d20.tddice.pauseRendering = !0;
                    else
                        console.log("Could have ended but decided not to!")
                }
            }
            ;
            new THREE.MeshFaceMaterial
        }
        d20.tddice.initScene = t = function() {
            if (d20.tddice.addRenderer(),
            r = new THREE.Scene,
            a.lookAt({
                x: 0,
                y: 0,
                z: 0
            }),
            r.add(a),
            o.target.position.copy(r.position),
            r.add(o),
            r.add(s),
            n.shadowMapEnabled)
                var e = ["uniform vec3 diffuse;", "uniform float opacity;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, "void main() {", "gl_FragColor = vec4( 1.0, 1.0, 1.0, 1.0 );", THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 - shadowColor.x );", "}"].join("\n");
            else
                var e = ["uniform vec3 diffuse;", "uniform float opacity;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, "void main() {", "gl_FragColor = vec4( 1.0, 1.0, 1.0, 1.0 );", THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "gl_FragColor = vec4( 0.0, 0.0, 0.0, 0.0 );", "}"].join("\n");
            d20.tddice.world = new CANNON.World,
            d20.tddice.world.gravity.set(0, 0, -1400),
            d20.tddice.world.broadphase = new CANNON.NaiveBroadphase,
            d20.tddice.world.solver.iterations = 20,
            H = new CANNON.Material;
            var t = new CANNON.Material
              , i = new CANNON.Material;
            d20.tddice.world.addContactMaterial(new CANNON.ContactMaterial(t,H,{
                friction: .1,
                restitution: .1
            })),
            d20.tddice.world.addContactMaterial(new CANNON.ContactMaterial(i,H,{
                friction: 0,
                restitution: 1
            })),
            d20.tddice.world.addContactMaterial(new CANNON.ContactMaterial(H,H,{
                friction: .1,
                restitution: 1
            }));
            var l = new THREE.ShaderMaterial({
                uniforms: THREE.ShaderLib.basic.uniforms,
                vertexShader: THREE.ShaderLib.basic.vertexShader,
                fragmentShader: e,
                color: 255
            })
              , c = new THREE.Mesh(new THREE.PlaneGeometry(u,p,1,1),l);
            c.receiveShadow = !0;
            new THREE.MeshLambertMaterial({
                opacity: 0
            });
            r.add(c);
            var d = new CANNON.Body({
                mass: 0
            });
            d.addShape(new CANNON.Plane),
            d.material = t,
            d20.tddice.world.add(d);
            var h;
            h = new CANNON.Body({
                mass: 0
            }),
            h.addShape(new CANNON.Plane),
            h.material = i,
            h.quaternion.setFromAxisAngle(new CANNON.Vec3(1,0,0), Math.PI / 2),
            h.position.set(0, 24, 0),
            d20.tddice.world.add(h),
            h = new CANNON.Body({
                mass: 0
            }),
            h.addShape(new CANNON.Plane),
            h.material = i,
            h.quaternion.setFromAxisAngle(new CANNON.Vec3(1,0,0), -Math.PI / 2),
            h.position.set(0, -24, 0),
            d20.tddice.world.add(h),
            h = new CANNON.Body({
                mass: 0
            }),
            h.addShape(new CANNON.Plane),
            h.material = i,
            h.quaternion.setFromAxisAngle(new CANNON.Vec3(0,1,0), -Math.PI / 2),
            h.position.set(21, 0, 0),
            d20.tddice.world.add(h),
            h = new CANNON.Body({
                mass: 0
            }),
            h.addShape(new CANNON.Plane),
            h.material = i,
            h.quaternion.setFromAxisAngle(new CANNON.Vec3(0,1,0), Math.PI / 2),
            h.position.set(-21, 0, 0),
            d20.tddice.world.add(h)
        }
        ;
        var D = 0
          , L = .025;
        e = d20.tddice.render = function() {
            if (d20.tddice.rendering && !d20.tddice.pauseRendering) {
                var t = (new Date).getTime();
                if ((t - D) / 1e3 > L) {
                    d20.tddice.world.step(1 / 60);
                    for (var i in r.children) {
                        var o = r.children[i];
                        void 0 != o.body && (o.position.copy(o.body.position),
                        o.quaternion.copy(o.body.quaternion)),
                        r.children[i].visible === !1 && (r.children[i].visible = !0)
                    }
                    D = t,
                    O()
                }
                n.render(r, a),
                requestAnimationFrame(e)
            }
        }
        ,
        i = d20.tddice.createShape = function(e, t, i, n, o, a) {
            P = !1;
            var s, l = [];
            l = "d100" === e ? ["dpct10s", "dpct1s"] : [e],
            _.each(l, function(e) {
                s = new THREE.Mesh(f[e],new THREE.MeshFaceMaterial(m[e])),
                s.castShadow = !1;
                for (var l = new THREE.Color(+("0x" + d.replace("#", ""))), c = 0; c < s.material.materials.length; c++)
                    s.material.materials[c].color = l,
                    s.material.materials[c].ambient = l,
                    s.material.materials[c].uniforms && (s.material.materials[c].uniforms.tDiffuse.value.anisotropy = h);
                s.promise = a,
                "d6" === e ? s.scale.set(1.4, 1.4, 1.4) : s.scale.set(1.7, 1.7, 1.7),
                s.dicetype = e,
                s.maxroll = "dpct" === e ? 10 : parseInt(e.replace("d", ""), 10);
                for (var u = f[e].vertices, p = f[e].faces, g = [], v = [], y = 0; y < u.length; y++)
                    g.push(new CANNON.Vec3(u[y].x * s.scale.x,u[y].y * s.scale.y,u[y].z * s.scale.z));
                for (var y = 0; y < p.length; y++)
                    v.push([p[y].a, p[y].b, p[y].c]);
                s.body = new CANNON.Body({
                    mass: 1e3
                }),
                s.body.material = H;
                var w = new CANNON.ConvexPolyhedron(g,v);
                s.body.addShape(w, 0),
                s.body.position.set(t.x + (20 * T() - 10), t.y, t.z + (20 * T() - 10)),
                s.body.quaternion.setFromAxisAngle(new CANNON.Vec3(o.x,o.y,o.z), o.a * Math.PI * 2),
                s.body.angularVelocity.set(n.x, n.y, n.z),
                s.body.velocity.set(i.x, i.y, i.z),
                s.body.linearDamping = .25,
                s.body.angularDamping = .25,
                s.body.isPlayingSound = !1,
                s.body.addEventListener("collide", function(e) {
                    diceid = e.contact.bj.id,
                    colidedwithid = e.contact.bi.id,
                    vel = e.contact.bj.velocity,
                    maxvel = Math.max(Math.abs(i.x), Math.abs(i.y)),
                    s.body.isPlayingSound || (s.body.isPlayingSound = !0,
                    X(diceid, s.dicetype, colidedwithid, maxvel))
                }),
                s.visible = !1,
                r.add(s),
                b.push(s),
                d20.tddice.world.add(s.body)
            })
        }
        ;
        var I = {}
          , F = [["D4_Hard_Roll_001.mp3", "D4_Hard_Roll_002.mp3", "D4_Hard_Roll_003.mp3", "D4_Hard_Roll_004.mp3"], ["D4_Medium_Roll_001.mp3", "D4_Medium_Roll_002.mp3", "D4_Medium_Roll_003.mp3", "D4_Medium_Roll_004.mp3"], ["D4_Soft_Roll_001.mp3", "D4_Soft_Roll_002.mp3", "D4_Soft_Roll_003.mp3", "D4_Soft_Roll_004.mp3"]]
          , B = [["D6_Hard_Roll_001.mp3", "D6_Hard_Roll_002.mp3", "D6_Hard_Roll_003.mp3", "D6_Hard_Roll_004.mp3"], ["D6_Medium_Roll_001.mp3", "D6_Medium_Roll_002.mp3", "D6_Medium_Roll_003.mp3", "D6_Medium_Roll_004.mp3"], ["D6_Soft_Roll_001.mp3", "D6_Soft_Roll_002.mp3", "D6_Soft_Roll_003.mp3", "D6_Soft_Roll_004.mp3"]]
          , j = [["D8_Hard_Roll_001.mp3", "D8_Hard_Roll_002.mp3", "D8_Hard_Roll_003.mp3", "D8_Hard_Roll_004.mp3"], ["D8_Medium_Roll_001.mp3", "D8_Medium_Roll_002.mp3", "D8_Medium_Roll_003.mp3", "D8_Medium_Roll_004.mp3"], ["D8_Soft_Roll_001.mp3", "D8_Soft_Roll_002.mp3", "D8_Soft_Roll_003.mp3", "D8_Soft_Roll_004.mp3"]]
          , N = [["D10_Hard_Roll_001.mp3", "D10_Hard_Roll_002.mp3", "D10_Hard_Roll_003.mp3", "D10_Hard_Roll_004.mp3"], ["D10_Medium_Roll_001.mp3", "D10_Medium_Roll_002.mp3", "D10_Medium_Roll_003.mp3", "D10_Medium_Roll_004.mp3"], ["D10_Soft_Roll_001.mp3", "D10_Soft_Roll_002.mp3", "D10_Soft_Roll_003.mp3", "D10_Soft_Roll_004.mp3"]]
          , z = [["D12_Hard_Roll_001.mp3", "D12_Hard_Roll_002.mp3", "D12_Hard_Roll_003.mp3", "D12_Hard_Roll_004.mp3"], ["D12_Medium_Roll_001.mp3", "D12_Medium_Roll_002.mp3", "D12_Medium_Roll_003.mp3", "D12_Medium_Roll_004.mp3"], ["D12_Soft_Roll_001.mp3", "D12_Soft_Roll_002.mp3", "D12_Soft_Roll_003.mp3", "D12_Soft_Roll_004.mp3"]]
          , U = [["D20_Hard_Roll_001.mp3", "D20_Hard_Roll_002.mp3", "D20_Hard_Roll_003.mp3", "D20_Hard_Roll_004.mp3"], ["D20_Medium_Roll_001.mp3", "D20_Medium_Roll_002.mp3", "D20_Medium_Roll_003.mp3", "D20_Medium_Roll_004.mp3"], ["D20_Soft_Roll_001.mp3", "D20_Soft_Roll_002.mp3", "D20_Soft_Roll_003.mp3", "D20_Soft_Roll_004.mp3"]]
          , V = ["D20_Long_Roll_001.mp3", "D20_Long_Roll_002.mp3", "D20_Long_Roll_003.mp3"]
          , W = [["Cup_Shake_1_Die_001.mp3", "Cup_Shake_1_Die_002.mp3", "Cup_Shake_1_Die_003.mp3"], ["Cup_Shake_2_Dice_001.mp3", "Cup_Shake_2_Dice_002.mp3", "Cup_Shake_2_Dice_003.mp3"], ["Cup_Shake_3_Dice_001.mp3", "Cup_Shake_3_Dice_002.mp3", "Cup_Shake_3_Dice_003.mp3"], ["Cup_Shake_5_Dice_001.mp3", "Cup_Shake_5_Dice_002.mp3", "Cup_Shake_5_Dice_003.mp3"], ["Cup_Shake_10_Dice_001.mp3", "Cup_Shake_10_Dice_002.mp3", "Cup_Shake_10_Dice_003.mp3"]]
          , G = F[0].concat(F[1], F[2], B[0], B[1], B[2], j[0], j[1], j[2], N[0], N[1], N[2], z[0], z[1], z[2], U[0], U[1], U[2], V, W[0], W[1], W[2], W[3], W[4])
          , q = function() {
            window.soundManager && window.soundManager.onready && window.soundManager.onready(function() {
                _.each(G, function(e) {
                    I[e] = soundManager.createSound({
                        id: "dicesound-" + e,
                        url: "https://s3.amazonaws.com/cdn.roll20.net/sounds/" + e,
                        multiShot: !0,
                        autoLoad: !0
                    })
                })
            })
        }
          , X = function(e, t, i, n) {
            "dicecup" == e ? diesounds = "1" == t ? W[0] : "2" == t ? W[1] : "3" == t ? W[2] : "5" >= t ? W[3] : W[4] : n > 150 ? diesounds = V : (velocity = n > 100 ? 0 : n > 55 ? 1 : 2,
            diesounds = "d4" == t ? F[velocity] : "d6" == t ? B[velocity] : "d8" == t ? j[velocity] : "d10" == t ? N[velocity] : "d12" == t ? z[velocity] : U[velocity]),
            mp3 = diesounds[Math.floor(Math.random() * diesounds.length)];
            var r = I[mp3];
            r ? r.play() : console.log("No sound to play")
        }
        ;
        d20.tddice.playsound = X,
        q()
    }),
    d20.apiclient = {},
    function() {
        var e = !1
          , t = function() {
            e || (e = new Firebase(window.FIREBASE_ROOT + "api-notifiers/" + window.campaign_storage_path)),
            e.child("lastactive").set((new Date).getTime()),
            e.child("activegms").child(window.currentPlayer.id).set(window.is_gm),
            setTimeout(t, 3e5)
        }
        ;
        d20.apiclient.ready = function() {
            t()
        }
    }(),
    d20ext.transmogrifier = {},
    function() {
        var e;
        d20ext.transmogrifier.childLoaded = function() {
            e && e.find("iframe").css("height", e.find("iframe")[0].contentWindow.document.body.scrollHeight + 5 + "px")
        }
        ;
        var t = $(window).height() - 250;
        t > 800 && (t = 800),
        $("#transmogrifier").on("click", function() {
            e && e.dialog("destroy"),
            e = $("<div><iframe src='/transmogrifier/app/" + window.campaign_id + "' frameborder=0 style='width: 710px; height: auto;'></iframe></div>"),
            e.dialog({
                title: "Transmogrifier",
                width: 775,
                height: t,
                position: ["center", 30],
                zIndex: 10799
            })
        })
    }(),
    d20.fx = {
        activefx: {},
        numactive: 0
    },
    function() {
        var e = function(e, t) {
            var i = 0
              , n = 0;
            return i = t.x - e.x,
            i *= i,
            n = t.y - e.y,
            n *= n,
            Math.sqrt(i + n)
        }
          , t = {}
          , i = $("#fxtools_type")
          , n = $("#fxtools_color")
          , r = $("#fxtools_edit");
        d20.fx.presetEffects = {
            beam: {
                name: "Beam",
                maxParticles: 3e3,
                size: 15,
                sizeRandom: 0,
                lifeSpan: 15,
                lifeSpanRandom: 0,
                emissionRate: 50,
                speed: 30,
                speedRandom: 7,
                angle: -1,
                angleRandom: 1,
                duration: 25
            },
            bomb: {
                name: "Bomb",
                maxParticles: 500,
                size: 15,
                sizeRandom: 5,
                lifeSpan: 15,
                lifeSpanRandom: 7,
                speed: 5,
                speedRandom: 2,
                angle: 270,
                angleRandom: 75,
                emissionRate: 75,
                duration: 10
            },
            bubbling: {
                name: "Bubbling",
                maxParticles: 200,
                size: 15,
                sizeRandom: 3,
                lifeSpan: 20,
                lifeSpanRandom: 5,
                speed: 7,
                speedRandom: 2,
                gravity: Vector.create(.01, .65),
                angle: 270,
                angleRandom: 35,
                emissionRate: 1
            },
            burn: {
                name: "Burn",
                maxParticles: 100,
                size: 35,
                sizeRandom: 15,
                lifeSpan: 10,
                lifeSpanRandom: 3,
                speed: 3,
                angle: 0,
                emissionRate: 12
            },
            burst: {
                name: "Burst",
                maxParticles: 100,
                size: 35,
                sizeRandom: 15,
                lifeSpan: 10,
                lifeSpanRandom: 3,
                speed: 3,
                angle: 0,
                emissionRate: 12,
                onDeath: "explode"
            },
            breath: {
                name: "Breath",
                maxParticles: 750,
                size: 20,
                sizeRandom: 10,
                lifeSpan: 25,
                lifeSpanRandom: 2,
                emissionRate: 25,
                speed: 15,
                speedRandom: 3,
                angle: -1,
                angleRandom: 30,
                duration: 25
            },
            explode: {
                name: "Explosion",
                maxParticles: 300,
                size: 35,
                sizeRandom: 10,
                duration: 10,
                sharpnessRandom: 10,
                sharpness: 20,
                lifeSpan: 20,
                lifeSpanRandom: 5,
                speed: 7,
                speedRandom: 1,
                angle: 0,
                angleRandom: 360,
                emissionRate: 1e4
            },
            glow: {
                name: "Glow",
                maxParticles: 500,
                size: 5,
                sizeRandom: 3,
                lifeSpan: 17,
                lifeSpanRandom: 5,
                emissionRate: 7,
                speed: 3,
                speedRandom: 2,
                angle: 270,
                angleRandom: 45
            },
            missile: {
                name: "Missile",
                maxParticles: 350,
                size: 7,
                sizeRandom: 3,
                lifeSpan: 7,
                lifeSpanRandom: 5,
                emissionRate: 50,
                speed: 7,
                speedRandom: 5,
                angle: 135,
                angleRandom: 0
            },
            nova: {
                name: "Nova",
                maxParticles: 500,
                size: 15,
                sizeRandom: 0,
                lifeSpan: 30,
                lifeSpanRandom: 0,
                emissionRate: 1e3,
                speed: 7,
                speedRandom: 0,
                angle: 0,
                angleRandom: 180,
                duration: 5
            },
            splatter: {
                name: "Splatter",
                maxParticles: 750,
                size: 7,
                sizeRandom: 3,
                lifeSpan: 20,
                lifeSpanRandom: 5,
                emissionRate: 3,
                speed: 7,
                speedRandom: 2,
                gravity: Vector.create(.01, .5),
                angle: -1,
                angleRandom: 20,
                duration: 10
            }
        },
        d20.fx.presetColors = {
            acid: {
                name: "Acid",
                startColour: [0, 35, 10, 1],
                startColourRandom: [0, 10, 10, .25],
                endColour: [0, 75, 30, 0],
                endColourRandom: [0, 20, 20, 0]
            },
            blood: {
                name: "Blood",
                startColour: [175, 0, 0, 1],
                startColourRandom: [20, 0, 0, 0],
                endColour: [175, 0, 0, 0],
                endColourRandom: [20, 0, 0, 0]
            },
            charm: {
                name: "Charm",
                startColour: [200, 40, 150, 1],
                startColourRandom: [25, 5, 20, .25],
                endColour: [200, 40, 150, 0],
                endColourRandom: [50, 10, 40, 0]
            },
            death: {
                name: "Death",
                startColour: [10, 0, 0, 1],
                startColourRandom: [5, 0, 0, .25],
                endColour: [20, 0, 0, 0],
                endColourRandom: [10, 0, 0, 0]
            },
            fire: {
                name: "Fire",
                startColour: [220, 35, 0, 1],
                startColourRandom: [62, 0, 0, .25],
                endColour: [220, 35, 0, 0],
                endColourRandom: [60, 60, 60, 0]
            },
            frost: {
                name: "Frost",
                startColour: [90, 90, 175, 1],
                startColourRandom: [0, 0, 0, .25],
                endColour: [125, 125, 255, 0],
                endColourRandom: [0, 0, 0, 0]
            },
            holy: {
                name: "Holy",
                startColour: [175, 130, 25, 1],
                startColourRandom: [20, 10, 0, .25],
                endColour: [175, 130, 50, 0],
                endColourRandom: [20, 20, 20, 0]
            },
            magic: {
                name: "Magic",
                startColour: [50, 50, 50, .5],
                startColourRandom: [150, 150, 150, .25],
                endColour: [128, 128, 128, 0],
                endColourRandom: [125, 125, 125, 0]
            },
            slime: {
                name: "Slime",
                startColour: [0, 250, 50, 1],
                startColourRandom: [0, 20, 10, .25],
                endColour: [0, 250, 50, 0],
                endColourRandom: [20, 20, 20, 0]
            },
            smoke: {
                name: "Smoke",
                startColour: [150, 150, 150, 1],
                startColourRandom: [10, 10, 10, .5],
                endColour: [200, 200, 200, 0],
                endColourRandom: [10, 10, 10, 0]
            },
            water: {
                name: "Water",
                startColour: [15, 15, 150, 1],
                startColourRandom: [5, 5, 25, .25],
                endColour: [10, 10, 100, 0],
                endColourRandom: [10, 10, 25, 0]
            }
        },
        d20.fx.handleShout = function(e) {
            if (t[e.content.id] && (clearTimeout(t[e.content.id]),
            delete t[e.content.id]),
            "fx_start" == e.type) {
                if (e.pageid !== d20.Campaign.activePage().id)
                    return;
                "temporaryfx" === e.content.type ? d20.fx.spawnFxByDefinition(e.content.x, e.content.y, e.content.definition, e.content.velocityInfo, e.content.id) : d20.fx.spawnFx(e.content.x, e.content.y, e.content.type, e.content.velocityInfo, e.content.id, !0)
            } else
                "fx_update" == e.type ? (d20.fx.moveFx(e.content.id, e.content.x, e.content.y, !0, !0),
                t[e.content.id] = setTimeout(function() {
                    d20.fx.killFx(e.content.id, !0)
                }, 1e4)) : "fx_kill" == e.type && d20.fx.killFx(e.content.id, !0)
        }
        ,
        d20.fx.spawnFxOnPath = function(e, t) {
            e._attachedFx && (_.each(e._attachedFx, function(e) {
                e.stop()
            }),
            delete e._attachedFx);
            var i, n = [], r = e.left - Math.floor(e.width / 2), o = e.top - Math.floor(e.height / 2);
            _.each(e.path, function(e, a) {
                return "M" !== e[0] && "L" !== e[0] ? !0 : (a > 0 && n.push(d20.fx.spawnFxBetweenPoints({
                    x: i[1] + r,
                    y: i[2] + o
                }, {
                    x: e[1] + r,
                    y: e[2] + o
                }, t)),
                void (i = e))
            }),
            e._attachedFx = n
        }
        ,
        d20.fx.spawnFxBetweenPoints = function(t, i, n) {
            var r = Math.round(e(t, i))
              , o = (Math.ceil(420 / r),
            i.x - t.x)
              , a = i.y - t.y;
            return d20.fx.spawnFx(t.x, t.y, n + "|gravityx:" + .001 * o + ",gravityy:" + .001 * a + ",lifeSpan:40")
        }
        ,
        d20.fx.systemById = function(e) {
            return d20.fx.activefx[e]
        }
        ,
        d20.fx.moveFx = function(e, t, i, n, r) {
            var o = d20.fx.systemById(e);
            return n || d20.textchat.sendShout({
                type: "fx_update",
                playerid: window.currentPlayer.id,
                content: {
                    x: t,
                    y: i,
                    id: e
                },
                time: (new Date).getTime()
            }),
            o && (t -= o.size / 2,
            i -= o.size / 2,
            r ? o.animatePosition = {
                x: t,
                y: i,
                rateX: Math.ceil(Math.abs(t - o.position.x) / 5),
                rateY: Math.ceil(Math.abs(i - o.position.y) / 5)
            } : (o.position.x = t,
            o.position.y = i,
            o.animatePosition && delete o.animatePosition)),
            o
        }
        ,
        d20.fx.killFx = function(e, t) {
            t || d20.textchat.sendShout({
                type: "fx_kill",
                playerid: window.currentPlayer.id,
                content: {
                    id: e
                },
                time: (new Date).getTime()
            });
            var i = d20.fx.systemById(e);
            i && i.stop()
        }
        ,
        d20.fx.agencyFx = function(e, t, i) {
            if (!window.is_playerapp) {
                var n = function(e, t) {
                    var i = 180 * Math.atan2(t, e) / Math.PI;
                    return 0 > i && (i = 360 + i),
                    i
                }
                  , r = function(e, t) {
                    return Math.sqrt(Math.pow(e, 2) + Math.pow(t, 2))
                }
                  , o = function(e, t) {
                    return (e - d20.engine.currentCanvasOffset[t ? 0 : 1]) * d20.engine.canvasZoom + d20.engine.paddingOffset[t ? 0 : 1]
                }
                ;
                if ($("#fxagencyoverlay").is(":visible"))
                    return;
                $("#fxagencyoverlay").show();
                var a = {}
                  , s = $("#fxagencyoverlay svg line")
                  , l = $(window).width()
                  , c = $(window).width()
                  , d = o(t, !0)
                  , h = o(i, !1)
                  , u = {
                    startx: d / l,
                    starty: h / c
                };
                s.attr("x1", d).attr("y1", h).attr("x2", d).attr("y2", h),
                $("#fxagencyoverlay").on("mousemove", function(e) {
                    s.attr("x2", e.clientX).attr("y2", e.clientY)
                }),
                $("#fxagencyoverlay").on("mouseup", function(t) {
                    u.stopx = t.clientX / l,
                    u.stopy = t.clientY / c,
                    a.distance = r(u.stopx - u.startx, u.stopy - u.starty),
                    a.angle = n(u.stopx - u.startx, u.stopy - u.starty),
                    a.distance && a.angle && (s.attr("x1", 0).attr("y1", 0).attr("x2", 0).attr("y2", 0),
                    $("#fxagencyoverlay").off().hide(),
                    e(a))
                })
            }
        }
        ,
        d20.fx.handleClick = function(e, t) {
            var r = i.val()
              , o = n.val()
              , a = "true" === i.find(":selected").attr("data-aimed")
              , s = d20.fx.presetEffects[r] ? r + "-" + o : r;
            return a ? (d20.fx.agencyFx(function(i) {
                d20.fx.spawnFx(e, t, s, i)
            }, e, t),
            !1) : d20.fx.spawnFx(e, t, s)._id
        }
        ,
        d20.fx.changeFx = function() {
            var e = i.val();
            "-" === e.substr(0, 1) ? (n.parent().hide(0),
            r.parent().show(0)) : (r.parent().hide(0),
            "newcustfx" === e ? (n.parent().hide(0),
            window.Campaign.custFx.create({}, {
                success: function(e) {
                    i.val(e.id),
                    r.parent().show(0),
                    r.trigger("click")
                }
            })) : "undefined" != typeof d20.fx.presetEffects[e] ? n.parent().show(0) : n.parent().hide(0))
        }
        ,
        d20.fx.buildFxList = function() {
            r.on("click", function() {
                var e = window.Campaign.custFx.get(i.val());
                e && e.view.showDialog()
            }),
            i.on("change", d20.fx.changeFx),
            $.each(d20.fx.presetEffects, function(e, t) {
                i.append($("<option/>").attr("data-aimed", -1 === t.angle).text(t.name).val(e))
            }),
            $.each(d20.fx.presetColors, function(e, t) {
                n.append($("<option/>").text(t.name).val(e))
            });
            var e = $("#fxtools_type option");
            e.sort(function(e, t) {
                return e.text > t.text ? 1 : -1
            }),
            i.empty().append(e),
            i.val(i.children().first().val()),
            i.append($("<option />").prop("disabled", !0).text("--Custom FX--")),
            i.append($("<option />").val("newcustfx").text("[New Custom FX]")),
            d20.fx.changeFx()
        }
        ,
        d20.fx.refreshCustFxList = function() {
            var e = []
              , t = i.val();
            d20.Campaign.custFx.each(function(t) {
                e.push(t)
            }),
            e = _.sortBy(e, function(e) {
                return e.get("name") || "Untitled"
            }),
            i.find('[data-custom="true"]').remove(),
            _.each(e, function(e) {
                i.append($("<option />").val(e.id).text(e.get("name") || "Untitled").attr("data-custom", !0).attr("data-aimed", -1 === e.get("definition").angle))
            }),
            i.val(t)
        }
        ,
        d20.fx.getFX = function(e, t, n) {
            var r = t.substr(0, t.indexOf("-"))
              , o = t.substr(t.indexOf("-") + 1);
            if (t.startsWith("-")) {
                var a = window.Campaign.custFx.get(t).get("definition");
                if (e.maxParticles = a.maxParticles,
                e.size = a.size || 25,
                e.sizeRandom = a.sizeRandom || 15,
                e.lifeSpan = a.lifeSpan || 10,
                e.lifeSpanRandom = a.lifeSpanRandom || 3,
                e.emissionRate = a.emissionRate || 3,
                e.speed = a.speed || 3,
                e.speedRandom = a.speedRandom || 1.5,
                e.gravity = a.gravity || Vector.create(.01, .01),
                e.angle = (a.angle || 0) >= 0 ? a.angle : n.angle,
                e.angleRandom = "undefined" == typeof a.angleRandom ? 360 : a.angleRandom,
                e.duration = a.duration || 10,
                e.startColour = a.startColour || [220, 35, 0, 1],
                e.startColourRandom = a.startColourRandom || [62, 0, 0, .25],
                e.endColour = a.endColour || [220, 35, 0, 0],
                e.endColourRandom = a.endColourRandom || [60, 60, 60, 0],
                a.onDeath) {
                    var s = i.find(":contains(" + a.onDeath + ')[data-custom="true"]').first().val();
                    s && s !== t && (e.onDeath = s + "|duration:10")
                }
            } else if (d20.fx.presetEffects[r]) {
                var l = d20.fx.presetEffects[r]
                  , c = d20.fx.presetColors[o];
                e.maxParticles = l.maxParticles,
                e.size = l.size,
                e.sizeRandom = l.sizeRandom,
                e.lifeSpan = l.lifeSpan,
                e.lifeSpanRandom = l.lifeSpanRandom,
                e.emissionRate = l.emissionRate,
                e.speed = l.speed || 5,
                e.speedRandom = l.speedRandom || 1.5,
                e.gravity = l.gravity || Vector.create(.01, .01),
                e.angle = (l.angle || 0) >= 0 ? l.angle : n.angle,
                e.angleRandom = "undefined" == typeof l.angleRandom ? 360 : l.angleRandom,
                e.duration = l.duration,
                e.startColour = c.startColour,
                e.startColourRandom = c.startColourRandom,
                e.endColour = c.endColour,
                e.endColourRandom = c.endColourRandom,
                l.onDeath && (e.onDeath = l.onDeath + "-" + o)
            }
            return e
        }
        ,
        d20.fx.spawnFx = function(e, t, i, n, r, o) {
            var a = new cParticleSystem;
            a._id = r || generateUUID(),
            o || d20.textchat.sendShout({
                type: "fx_start",
                playerid: window.currentPlayer.id,
                content: {
                    x: e,
                    y: t,
                    type: i,
                    id: a._id,
                    velocityInfo: n
                },
                pageid: d20.Campaign.activePage().id,
                time: (new Date).getTime()
            });
            var s = i.split("|")
              , l = s[0]
              , c = {};
            if (2 == s.length)
                for (var d = s[1].split(","), h = 0; h < d.length; h++) {
                    var u = d[h].split(":");
                    c[u[0]] = 0 == u.length ? !0 : u[1]
                }
            a = d20.fx.getFX(a, l, n),
            a.position = Vector.create(e - a.size / 2, t - a.size / 2),
            c.gravityx && (a.gravity = Vector.create(parseFloat(c.gravityx), parseFloat(c.gravityy)),
            delete c.gravityy,
            delete c.gravityx),
            c.duration && (a.duration = a.duration >= 0 ? a.duration : c.duration,
            delete c.duration);
            for (var p in c)
                a[p] = parseFloat(c[p]);
            return a.init(),
            d20.fx.activefx[a._id] = a,
            d20.fx.numactive++,
            a
        }
        ,
        d20.fx.spawnFxByDefinition = function(e, t, n, r, o) {
            var a = new cParticleSystem;
            a._id = o || generateUUID();
            var s = n;
            if (console.log(n),
            a.maxParticles = s.maxParticles,
            a.size = s.size || 25,
            a.sizeRandom = s.sizeRandom || 15,
            a.lifeSpan = s.lifeSpan || 10,
            a.lifeSpanRandom = s.lifeSpanRandom || 3,
            a.emissionRate = s.emissionRate || 3,
            a.speed = s.speed || 3,
            a.speedRandom = s.speedRandom || 1.5,
            a.gravity = s.gravity || Vector.create(.01, .01),
            a.angle = (s.angle || 0) >= 0 ? s.angle : r.angle,
            a.angleRandom = "undefined" == typeof s.angleRandom ? 360 : s.angleRandom,
            a.duration = s.duration || 10,
            a.startColour = s.startColour || [220, 35, 0, 1],
            a.startColourRandom = s.startColourRandom || [62, 0, 0, .25],
            a.endColour = s.endColour || [220, 35, 0, 0],
            a.endColourRandom = s.endColourRandom || [60, 60, 60, 0],
            s.onDeath) {
                var l = i.find(":contains(" + s.onDeath + ')[data-custom="true"]').first().val();
                l && l !== fxName && (a.onDeath = l + "|duration:10")
            }
            return a.position = Vector.create(e - a.size / 2, t - a.size / 2),
            console.log(a),
            a.init(),
            d20.fx.activefx[a._id] = a,
            d20.fx.numactive++,
            a
        }
        ,
        d20.fx.update = function(e) {
            for (var t in d20.fx.activefx)
                d20.fx.activefx[t].update(e),
                0 == d20.fx.activefx[t].particleCount && 0 == d20.fx.activefx[t].active && (delete d20.fx.activefx[t],
                d20.fx.numactive--)
        }
        ,
        d20.fx.render = function() {
            if (!(d20.fx.numactive < 1)) {
                d20.canvas_overlay.gl.shadowsDrawnSinceLastFrame || d20.canvas_overlay.postProcessing();
                for (var e in d20.fx.activefx)
                    d20.fx.activefx[e].renderGl(d20.engine.lightingctx, d20.engine.currentCanvasOffset[0], d20.engine.currentCanvasOffset[1], d20.engine.canvas.width, d20.engine.canvas.height);
                d20.canvas_overlay.gl.finishParticleRender()
            }
        }
        ,
        $("#fxtools_spawnonobj").on(clicktype, function() {
            var e = d20.engine.selected();
            e.length > 0 && "path" == e[0].type && d20.fx.spawnFxOnPath(e[0], $("#fxtools_type").val())
        }),
        d20.fx.buildFxList()
    }(),
    d20.tutorial = {
        active: !1
    },
    function() {
        function e(e) {
            var t = $(window).scrollTop()
              , i = t + $(window).height()
              , n = $(window).scrollLeft()
              , r = n + $(window).width()
              , o = $(e).offset().top
              , a = o + $(e).height()
              , s = $(e).offset().left
              , l = s + $(e).width();
            return i + 10 >= a && o >= t - 10 && s >= n - 10 && r + 10 >= l
        }
        function t(e) {
            $("#editor-wrapper").animate({
                scrollTop: Math.floor(e.get("top") * d20.engine.canvasZoom) - Math.floor(d20.engine.canvasHeight / 2) + 20 * d20.engine.canvasZoom,
                scrollLeft: Math.floor(e.get("left") * d20.engine.canvasZoom) - Math.floor(d20.engine.canvasWidth / 2) - 15 * d20.engine.canvasZoom
            })
        }
        var n = {
            1: {
                name: "Welcome to Roll20"
            },
            2: {
                name: "Drawing Tools"
            },
            3: {
                name: "Art Library"
            },
            4: {
                name: "Tokens"
            },
            5: {
                name: "Measurement"
            },
            6: {
                name: "Layers"
            },
            7: {
                name: "Communication"
            },
            8: {
                name: "Text Chat"
            },
            9: {
                name: "Dice GUI"
            },
            10: {
                name: "Page Toolbar"
            },
            11: {
                name: "Fog of War"
            },
            12: {
                name: "Journal"
            },
            13: {
                name: "Jukebox"
            },
            14: {
                name: "Turn Tracker"
            },
            15: {
                name: "Macros"
            },
            16: {
                name: "Card Decks"
            },
            17: {
                name: "Rollable Tables"
            },
            18: {
                name: "Settings"
            }
        }
          , r = [{
            group: 1,
            el: "#tutorial-center",
            text: "Welcome to Roll20.net, the free, easy way to play tabletop games online!",
            place: "top"
        }, {
            group: 1,
            el: "#tutorial-center",
            text: "Let\u2019s go over the Virtual Tabletop, or VTT, and the basic tools available to you in your free Roll20 account.",
            place: "top"
        }, {
            group: 1,
            el: "#tutorial-toc",
            text: "If you'd like to jump to a different section or start the tutorial over, those options are available from this tutorial menu at any time.",
            place: "left"
        }, {
            group: 1,
            el: "#tutorial-center",
            text: "You are logged in as a the Game Master or GM. This gives you complete control over the application and allows you to see everything going on inside your game.",
            place: "top"
        }, {
            group: 1,
            el: "#tutorial-center",
            text: "Your players are restricted to seeing and controlling only what you decide to show them.",
            place: "top"
        }, {
            group: 1,
            el: "#tutorial-center",
            text: "The VTT is the white gridlined area that takes up the majority of the Roll20 application.",
            place: "top"
        }, {
            group: 1,
            el: "#tutorial-center",
            text: "By default, players can see but not control everything placed on the Virtual Tabletop.",
            place: "top"
        }, {
            group: 1,
            el: "#tutorial-center",
            text: "The VTT is updated in real time. There is no \u201cEdit\u201d or \u201cPlay\u201d mode. Settings and objects are adjusted, added, or removed for your players as changes are made.",
            place: "top"
        }, {
            group: 1,
            el: "#tutorial-center",
            text: "Roll20 is system agnostic, meaning that it provides a wide array of tools to play any tabletop game.",
            place: "top"
        }, {
            group: 2,
            el: ".choosepath",
            text: "The first tool we'll examine is the Drawing Tool. Click the Freehand drawing tool icon from the VTT Toolbox dropdown menu to continue.",
            place: "right",
            waitfor: "mode:path",
            auto: !0,
            setup: function() {
                $("#drawingtools div.submenu").addClass("permaopen")
            },
            oncomplete: function() {
                $("#drawingtools div.submenu").removeClass("permaopen")
            }
        }, {
            group: 2,
            el: "#drawingtools",
            text: "You have selected the Freehand drawing tool, the default option for drawing tools. You can click anywhere on the tabletop to add a drawing. Add one now to proceed.",
            place: "right",
            waitfor: "add:path",
            auto: !0
        }, {
            group: 2,
            el: "#secondary-toolbar",
            text: "A secondary pop-up will appear after you click the drawing tool. This additional toolbox allows you to change the stroke width and fill color of your drawings.",
            place: "bottom"
        }, {
            group: 2,
            el: ".video",
            text: "The line color will default to your player color and can be changed at any time by clicking the color box next to your display name.",
            place: "right-top",
            oncomplete: function() {
                $("#drawingtools div.submenu").addClass("permaopen"),
                setMode("rect")
            }
        }, {
            group: 2,
            el: ".chooserect",
            text: "The Draw Shape tool allows you to quickly draw pre-made shapes. By default you'll draw a rectangle. Give it a try! Draw a rectangle on the VTT to continue.",
            place: "right",
            waitfor: "add:path",
            auto: !0,
            oncomplete: function() {
                $("#drawingtools div.submenu").removeClass("permaopen")
            }
        }, {
            group: 2,
            el: "#drawingtools",
            text: "Like many of the other tools, Draw Shape can provide different functionality by holding down the Shift or Alt keys.",
            place: "right"
        }, {
            group: 2,
            el: "#drawingtools",
            text: "The Shift key will cause your shape to snap to the grid, while the Alt key will draw a circle. Give it a try!",
            place: "right",
            waitfor: "add:path",
            oncomplete: function() {
                $("#drawingtools div.submenu").addClass("permaopen"),
                setMode("polygon")
            }
        }, {
            group: 2,
            el: ".choosepolygon",
            text: "The Polygon/Line tool draws lines and polygons by connecting vertices, joints or angles, on the VTT. Left clicking will start your polygon and each additional click will add a new vertex.",
            place: "right"
        }, {
            group: 2,
            el: ".choosepolygon",
            text: "You can right click, hit Esc, or click very close to the starting point to finish the polygon.",
            place: "right"
        }, {
            group: 2,
            el: ".choosepolygon",
            text: "Ctrl/Cmd + Z will undo each consecutive segment if you make a mistake. Add a polygon to continue.",
            place: "right",
            waitfor: "add:path",
            auto: !0,
            oncomplete: function() {
                $("#drawingtools div.submenu").removeClass("permaopen")
            }
        }, {
            group: 2,
            el: "#secondary-toolbar",
            text: "You can change the fill color of your polygons from the secondary drawing toolbox. The default fill color is transparent, represented by the gray and white checkered box. Try changing the fill color and adding a new polygon to your tabletop.",
            place: "right-bottom",
            waitfor: "add:path",
            auto: !0
        }, {
            group: 2,
            el: ".choosetext",
            text: "This is the Text Tool. It allows you to add text to the tabletop, useful for notes, messages, or labels.",
            place: "right",
            setup: function() {
                setMode("text"),
                $("#drawingtools div.submenu").addClass("permaopen")
            },
            oncomplete: function() {
                $("#drawingtools div.submenu").removeClass("permaopen")
            }
        }, {
            group: 2,
            el: "#secondary-toolbar",
            text: "This secondary text toolbox allows you to change the font style, size, and color. Add text to the VTT and then click the Next button to continue.",
            place: "bottom",
            waitfor: "add:text"
        }, {
            group: 2,
            el: "#select",
            text: "Objects are visible and persistent for everyone once the drawing is complete. The Select/Move tool lets you move and alter objects on the VTT.",
            place: "right-bottom",
            setup: function() {
                setMode("select")
            }
        }, {
            group: 2,
            el: "#select",
            text: "In select mode, you can click to highlight, resize, rotate, delete, or move objects on the VTT.",
            place: "right-bottom"
        }, {
            group: 2,
            el: "#select",
            text: "To select multiple objects, click on an empty part of the tabletop and drag to create a selection box around your objects. You can also hold the Shift key to select multiple objects without losing your previous selection.",
            place: "right-bottom"
        }, {
            group: 2,
            el: "#select",
            text: "If you want to only select drawings you can do so by holding down the Alt key while making your selection box. Hold Ctrl/Cmd to select only tokens. Try manipulating your drawings now.",
            place: "right-bottom",
            waitfor: "change:path",
            auto: !0
        }, {
            group: 2,
            el: "#drawingtools",
            text: "You can hover your mouse over the text tool on the toolbar and then click Clear Drawings from the menu to remove all drawings on your tabletop. This includes tokens you\u2019ve set to be drawings.",
            place: "right"
        }, {
            group: 2,
            el: "#drawingtools",
            text: "We've selected this option for you. Confirm the clear on the pop-up to continue.",
            place: "right",
            waitfor: "remove:path",
            auto: !0,
            setup: function() {
                $(".choosecleardrawings").trigger("click")
            }
        }, {
            group: 3,
            el: "#arttab",
            text: "The Art Library tab helps you search for images to use as tokens, portraits, and maps for your games. You can filter your search from the dropdown at the top of this tab.",
            place: "left-bottom",
            setup: function() {
                $("#ui-id-2").trigger("click")
            }
        }, {
            group: 3,
            el: "#imagedialog .keywords",
            text: "Roll20 will automatically search through any files you\u2019ve uploaded, popular RPG forums, sites on the web, and the Roll20 Marketplace.",
            place: "left-bottom"
        }, {
            group: 3,
            el: "#imagedialog .keywords",
            text: "Type the word <span style='color: #ed008c'>Archer</span> in the search box.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "The matches are based on the asset's name, the folder it is in, and any custom tags you add.",
            place: "left",
            setup: function() {
                0 === $("#imagedialog .keywords").val().length && ($("#imagedialog .keywords").val("Archer"),
                $("#imagedialog .keywords").focus(),
                $("#imagedialog .keywords").trigger("keyup"))
            }
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Marketplace assets come with a default set of tags their authors include.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Premium assets, with a gold background, can be expanded to show a massive inventory of art options that can be purchased directly from the Art Library tab.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Web Results, with a blue background, as well as assets From your Library or purchases from the Marketplace can be directly copied from a search into your folder structure by right-clicking.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Copy To Library will add the asset to the top of your folder structure. Copy To Folder adds it to an existing folder you've prepared.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Assets From your Library can also be opened in the folder view by left clicking on them.",
            place: "left"
        }, {
            group: 3,
            el: "#imagedialog .searchstyle",
            text: "The Search View button allows you to toggle the way search results are displayed, from a list view to a large icon view.",
            place: "left-bottom",
            setup: function() {
                $("html, #imagedialog").animate({
                    scrollTop: 0
                })
            }
        }, {
            group: 3,
            el: "#tutorial-center",
            text: "You can drag an image directly from the search onto the tabletop to add it to your game. Drag any image onto the VTT from the art library to continue.",
            place: "top",
            waitfor: "add:graphic",
            auto: !0,
            setup: function() {
                "true" === $("#libraryview").attr("data-isopen") && ($("#libraryview").dialog("close"),
                $("#libraryview").attr("data-isopen", "false"))
            }
        }, {
            group: 3,
            el: "#tutorial-center",
            text: "If the page's grid is enabled, the image will change dimentions to fit. If you wish to keep the original dimentions and size of your asset, hold the <span style='color: #ed008c'>Alt</span> key when dragging and dropping.",
            place: "top"
        }, {
            group: 3,
            el: "#switchtomarketplacelibrary",
            text: "The Premium Assets tab shows you all of your purchased Marketplace assets, the image packs you get as part of your subscription, and free assets that Roll20 provides to all users.",
            place: "left",
            setup: function() {
                $("#switchtomarketplacelibrary").trigger("click")
            }
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Permium Assets remains a static organized list of your important content. You can drag and drop assets from this list directly into your game.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "If you wish to re-organize your Premium Assets you can copy them to your folder structure in the same ways as your library search results. You can even copy entire sets directly into your folders.",
            place: "left"
        }, {
            group: 3,
            el: "#switchtouserlibrary",
            text: "The My Library tab shows all of the assets you've uploaded and the folder structure you can use to organize them.",
            place: "left",
            setup: function() {
                $("#switchtouserlibrary").trigger("click")
            }
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Your Recent Uploads is the home of your uploaded files. You add a file to your art library by dragging it onto the tabletop from outside the app.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Direct uploading supports JPG and PNG file formats.",
            place: "left"
        }, {
            group: 3,
            el: "#imagedialog .btn.showuploaddialog",
            text: "You can also upload files via the Upload button, to browse files on your computer.",
            place: "left",
            setup: function() {
                $("html, #imagedialog").animate({
                    scrollTop: 0
                })
            }
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Once you have the assets you want in your library, you can organize them in the folder structure.",
            place: "left"
        }, {
            group: 3,
            el: "#imagedialog .btn.showuploaddialog",
            text: "You can add folders to your library by clicking on the Add button, or right-clicking and selecting the Add Subfolder option.",
            place: "left-bottom",
            setup: function() {
                $("html, #imagedialog").animate({
                    scrollTop: 0
                })
            }
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "You can drag your art assets into any open folder by its handle, the three lines that appear when hovering over.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Then you can nest assets and folders up to five levels deep.",
            place: "left",
            setup: function() {
                $("html, #imagedialog").animate({
                    scrollTop: $("#imagedialog .recentuploadsfilter").offset().top - $(window).height() / 2
                })
            }
        }, {
            group: 3,
            el: "#imagedialog .recentuploadsfilter",
            text: "Selecting this button will filter your Recent Uploads only showing files that are not already copied into your folder structure. This can help insure you've organized all your files.",
            place: "left"
        }, {
            group: 3,
            el: "#recentuploads",
            text: "Be careful when deleting items from Recent Uploads. Once a file has been deleted from here, it's gone for good. That means it will disspear from all existing games you're using it in and there is no way to recover the image unless you upload it again and re-add it as you need.",
            place: "top"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Clicking on an asset in your library will open a Folder View.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "From the folder view you can mass move assets, mass add or remove tags, or mass delete.",
            place: "left",
            setup: function() {
                "true" != $("#libraryview").attr("data-isopen") && $("#recentuploads").find(".dd-item").length > 0 && $("#recentuploads").find(".dd-item .dd-content").first().trigger("click")
            }
        }, {
            group: 3,
            el: "#libraryview .selected",
            text: "The asset you clicked on to open the Folder View will be highlighted. To select or un-select assets left-click on them.",
            place: "bottom",
            setup: function() {
                0 === $("#libraryview .selected").length && $("#libraryview .library-container").first().trigger("click")
            }
        }, {
            group: 3,
            el: "#tutorial-center",
            text: "You can rename a token by clicking on it's name in the Folder View. You can also add or remove tags in the same way.",
            place: "top"
        }, {
            group: 3,
            el: "#tutorial-center",
            text: "When viewing your Recent Uploads in the Folder View you can also get meta data about your files, including the day they were uploaded, their file size, and your total storage quota and usage.",
            place: "top"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "With at least one item selected, you can drag items from your Folder View into your file structure to Mass Move.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "You can also add files to a folder by dragging them from your folder structure into the Folder View to append them to the begining of that folder.",
            place: "left"
        }, {
            group: 3,
            el: "#tutorial-center",
            text: "The Folder View has a context menu, right-click, with tools to Select All items in the Folder View and Mass Delete Selected Items.",
            place: "top"
        }, {
            group: 3,
            el: "#tutorial-center",
            text: "If you're using the Folder View to organize a folder from your library and not your Recent Uploads, you can also Add Subfolders, Mass Add and Remove Tags, and Sort your folders alphabetically.",
            place: "top"
        }, {
            group: 4,
            el: "#tutorial-center",
            text: "The lines you drew earlier are considered drawings. They are simpler and are not as rigidly attached to the VTT grid as images.",
            place: "top",
            setup: function() {
                "true" === $("#libraryview").attr("data-isopen") && ($("#libraryview").dialog("close"),
                $("#libraryview").attr("data-isopen", "false"))
            }
        }, {
            group: 4,
            el: "#tutorial-center",
            text: "Images added to the VTT are considered \u201cTokens\u201d. Tokens have many features that drawings do not have, like radial bubbles, status icons, and can be paired to represent characters.",
            place: "top",
            setup: function() {
                a()
            }
        }, {
            group: 4,
            el: "#tutorial-center",
            text: "Click your token. The eight blue boxes around the token allow you to resize the image. The single blue box coming from the top of the token allows you to rotate your image. Give it a try! Rotate or resize your image to continue.",
            place: "top",
            waitfor: "change:graphic",
            auto: !0,
            oncomplete: function() {
                extoken = page.thegraphics.models[0],
                d20.engine.unselect(),
                d20.engine.select(extoken.view.graphic),
                t(extoken)
            }
        }, {
            group: 4,
            el: "#tutorial-center",
            text: "Clicking on your token will reveal its Radial Menus.",
            place: "bottom"
        }, {
            group: 4,
            el: ".button.button-3",
            text: "The colors for the three radial menu bubbles can be customized by visiting the My Settings tab discussed later in this tutorial.",
            place: "bottom"
        }, {
            group: 4,
            el: ".button.button-3",
            text: "The radial menu bubbles are good for tracking stats that might change regularly, like ammo or HP. These stats can be linked to an attribute once a character sheet has been assigned to the token.",
            place: "bottom",
            setup: function() {
                extoken = page.thegraphics.models[0],
                d20.engine.unselect(),
                d20.engine.select(extoken.view.graphic)
            }
        }, {
            group: 4,
            el: ".button.button-3",
            text: "Add numbers to the radial menu bubbles by clicking on the radial, adding a number and hitting Enter. Try updating a bubble to continue.",
            place: "bottom",
            waitfor: "change:graphic",
            auto: !0
        }, {
            group: 4,
            el: ".button.button-3",
            text: "You can also apply math to bubbles that already have a number. For example, if you were tracking hit points you could type '-1' after a hit and it would subtract one from the current total or '+5' after drinking a potion.",
            place: "bottom"
        }, {
            group: 4,
            el: ".button.button-2",
            text: "The Icon Menu is good for tracking conceptual ideas or status effects on a token. You can click to add any number of markers. Reselecting the marker from the menu removes the status icon.",
            place: "left"
        }, {
            group: 4,
            el: ".button.button-2",
            text: "Optionally you can hover over the icon in the menu and press the number keys, zero through nine, to add numbers to the icon marker. Give it a try! Add a status icon to your token from the icon menu to continue. ",
            place: "left",
            waitfor: "change:graphic",
            auto: !0,
            oncomplete: function() {
                extoken = page.thegraphics.models[0],
                d20.engine.unselect(),
                d20.engine.select(extoken.view.graphic)
            }
        }, {
            group: 4,
            el: ".button.button-1",
            text: "The Token Settings Menu allows you to set the player permissions for the token. You can access the token settings by clicking this icon or double-clicking the token.",
            place: "left"
        }, {
            group: 4,
            el: ".button.button-1",
            text: "By default players have no control over a token. If you are using characters from the journal in your game, a token can also be assigned to represent a specific character and share its attributes.",
            place: "left",
            oncomplete: function() {
                extoken = page.thegraphics.models[0],
                extoken.trigger("showtokeneditor")
            }
        }, {
            group: 4,
            el: ".basic.tab-pane .name",
            text: "This is what the token settings menu looks like when it's open. You can name your token from this box. To make the token's name visible to everyone from the VTT check the \u201cShow nameplate?\u201d checkbox.",
            place: "right"
        }, {
            group: 4,
            el: ".basic.tab-pane .name",
            text: "To update a field, like the name box, click on the field, type in the new value, and either press the enter key or click outside of the field. Give your token a name to continue.",
            place: "right",
            waitfor: "blur:.name",
            auto: !0
        }, {
            group: 4,
            el: ".basic.tab-pane .chzn-container",
            text: "In this box you can select which players can manipulate or use this token. By default only the GM can control a token until other players are added to this field. Some or all players can be given access.",
            place: "right"
        }, {
            group: 4,
            el: ".basic.tab-pane .represents",
            text: "If a player controls a character and the token has been set to represent that character, the player will automatically gain control over the token.",
            place: "right"
        }, {
            group: 4,
            el: ".basic.tab-pane .bar1_value",
            text: "You can also set the maximum for a radial attribute. The box to the left represents the current value displayed above the token. The box on the right represents the maximum value.",
            place: "left"
        }, {
            group: 4,
            el: ".basic.tab-pane .bar1_value",
            text: "Max attributes are useful for settings things like total hit points or the number of arrows that fit in a quiver. Once a max attribute is filled out the token will display a bar above, representing the ratio of current to maximum.",
            place: "left"
        }, {
            group: 4,
            el: ".basic.tab-pane .bar1_value",
            text: "Set the Max number for your Token's Bar 1 Radial Menu Bubble, then hit the Enter key or click outside of the field to continue.",
            place: "left",
            waitfor: "blur:.bar1_max",
            auto: !0
        }, {
            group: 4,
            el: ".basic.tab-pane .aura1_radius",
            text: "Up to two auras can be set to represent ranges, fields of vision, or other indicators. Auras can be circular or square, and have the same color options as players.",
            place: "left"
        }, {
            group: 4,
            el: ".basic.tab-pane .aura1_radius",
            text: "Auras default to circular unless the 'Square' checkbox is selected. They measure the radius of the aura by the same dimensions the tabletop uses for measurement, in this case feet, customizable from the Page Settings Menu discussed later in this tutorial.",
            place: "left"
        }, {
            group: 4,
            el: ".basic.tab-pane .aura1_radius",
            text: "Adding a numerical value to the box will automatically turn on the aura. Try adding a 10 foot aura now to continue.",
            place: "left",
            waitfor: "blur:.aura1_radius",
            auto: !0
        }, {
            group: 4,
            el: ".ui-dialog .ui-dialog-buttonset",
            text: "The 'Save Changes' button will save and impliment your changes. The 'Cancel' button will discard your changes. Go ahead and 'Save Changes' now to continue.",
            place: "left",
            waitfor: "change:graphic",
            auto: !0
        }, {
            group: 4,
            el: "#tutorial-center",
            text: "As you can see your named token now has both a status bar and an aura.",
            place: "top"
        }, {
            group: 5,
            el: "#measure",
            text: "The Measure Tool allows you to determine distances between locations on the VTT.",
            place: "right",
            setup: function() {
                $("#measure").trigger("click")
            }
        }, {
            group: 5,
            el: "#measure",
            text: "The measure tool uses the same units of measurement as the page, which can be adjusted from the Page Settings discussed later in this tutorial.",
            place: "right"
        }, {
            group: 5,
            el: "#measure",
            text: "Click and drag anywhere on the VTT to measure the distance from the starting point.",
            place: "right",
            waitfor: "measure",
            auto: !0
        }, {
            group: 5,
            el: "#measure",
            text: "With the grid turned on the measuring tool rigidly snaps to the page unit. By holding the Alt key, you can detach the measure tool to get a more granular measurement.",
            place: "right"
        }, {
            group: 5,
            el: "#tutorial-center",
            text: "Similar to the measure tool, you can check the distance of how far a token has been moved.",
            place: "top",
            setup: function() {
                a()
            }
        }, {
            group: 5,
            el: "#tutorial-center",
            text: "While moving a token with the select tool, you can press the Spacebar key to check the distance you've moved the token. Try measuring while you move with the Spacebar now to continue.",
            place: "top",
            waitfor: "change:graphic",
            auto: !0,
            setup: function() {
                $("#select").trigger("click"),
                extoken = page.thegraphics.models[0],
                d20.engine.unselect(),
                d20.engine.select(extoken.view.graphic)
            }
        }, {
            group: 5,
            el: "#tutorial-center",
            text: "You can also set waypoints by pressing the Spacebar key multiple times before setting the token down, creating a defined path for the token. Try moving the token and pressing the Spacebar multipletimes before setting the token down.",
            place: "top",
            waitfor: "change:graphic",
            auto: !0
        }, {
            group: 5,
            el: "#tutorial-center",
            text: "Pressing Spacebar after you've set a token down will show it's last movement, the starting point, and the distance it traveled.",
            place: "top"
        }, {
            group: 5,
            el: "#measure",
            text: "All players can see the measure tool and token path for a few seconds after you've finished measuring.",
            place: "right",
            setup: function() {
                d20.engine.canvas.fire("selection:cleared"),
                d20.engine.renderAll()
            }
        }, {
            group: 6,
            el: "#editinglayer",
            text: "The VTT is organized into several layers. The Token Layer is selected by default and is what players can see and interact with.",
            place: "right-bottom",
            setup: function() {
                a()
            }
        }, {
            group: 6,
            el: "#editinglayer",
            text: "The other layers we'll explore today are the GM Layer and the Maps and Background Layer.",
            place: "right-bottom"
        }, {
            group: 6,
            el: "#editinglayer",
            text: "There is one additional layer used for dynamic lighting effects that is only available to users with a premium subscription. We won't be covering dynamic lighting in this tutorial so for more information check out <a href='https://wiki.roll20.net/Dynamic_Lighting?utm_source=	roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=dynamic%20lighting'>Dynamic Lighting</a> on the Roll20 Wiki.",
            place: "right-bottom",
            oncomplete: function() {
                $(".choosemap").trigger("click")
            }
        }, {
            group: 6,
            el: "#editinglayer",
            text: "The map layer is behind all other objects. Players can see images on the map layer but can never interact with them.",
            place: "right-bottom"
        }, {
            group: 6,
            el: "#tutorial-center",
            text: "We've selected the map & background layer for you. As you can see objects like drawings and tokens that were on the token layer are now semi-opaque and are no longer targetable. This ensures that as you add new elements to either layer you won't disrupt your work on the other.",
            place: "top",
            oncomplete: function() {
                $("#ui-id-2").trigger("click"),
                $("html, #imagedialog").animate({
                    scrollTop: 0
                })
            }
        }, {
            group: 6,
            el: "#rightsidebar",
            text: "You can add a background image to the tabletop by using the art library. Try searching for 'dungeon' making sure to switch your search to \u201cMaps, Tiles, Textures\u201d, or you can import your own map from the desktop. Drag and drop a background onto the map & background layer continue.",
            place: "left-bottom",
            waitfor: "add:graphic",
            auto: !0
        }, {
            group: 6,
            el: "#tutorial-center",
            text: "You can move and resize map pieces in the same way you were able to edit your token.",
            place: "top"
        }, {
            group: 6,
            el: "#tutorial-center",
            text: "Right clicking on your map reveals a context menu that will allow you to set the map as a drawing, flip, reorder layers, and much more. Try editing your map now.",
            place: "top",
            oncomplete: function() {
                $(".choosegmlayer").trigger("click")
            }
        }, {
            group: 6,
            el: "#editinglayer",
            text: "We've activated the GM Info Layer for you. This layer is unique in that the players will never be able to see or interact with anything on this layer, making it an ideal place to leave notes or labels with the text tool, stage hidden enemies, place traps, or other prepared events.",
            place: "right-bottom",
            oncomplete: function() {
                $(".chooseobjects").trigger("click")
            }
        }, {
            group: 6,
            el: "#editinglayer",
            text: "Switching back to the object & token layer essentially \u201clocks\u201d the GM and map layers, allowing you to move tokens without accidentally editing the map or your notes.",
            place: "right-bottom"
        }, {
            group: 6,
            el: "#editinglayer",
            text: "Items on the GM layer are slightly transparent, a setting that can be adjusted from the page settings menu and will be explained later in this tutorial.",
            place: "right-bottom"
        }, {
            group: 7,
            el: "#tutorial-center",
            text: "There are several ways to communicate with your players. You can \u201cping\u201d a location on the map by holding left click on the VTT.",
            place: "top"
        }, {
            group: 7,
            el: "#tutorial-center",
            text: "A circular \u201cping\u201d that is visible to all players will appear on the map. The color of the ping matches your player color.",
            place: "top"
        }, {
            group: 7,
            el: "#tutorial-center",
            text: "GM\u2019s can hold Shift and \u201dping\u201d to focus the map on the area for all players, drawing their focus.  \u201cPing\u201d or Shift-\u201dping\u201d anywhere on your map to continue.",
            place: "top",
            waitfor: "userSentPing",
            auto: !0,
            oncomplete: function() {
                a()
            }
        }, {
            group: 7,
            el: "#tutorial-center",
            text: "Pressing Z on a highlighted token or drawing will open a shadow box, allowing you to see your Token at high resolution.",
            place: "top"
        }, {
            group: 7,
            el: "#tutorial-center",
            text: "GM\u2019s can also hold Shift-Z to open the item for all players, useful for highlighting a piece of art or revealing previously unknown details. Press Z to reveal the shadow box to continue.",
            place: "top",
            waitfor: "keydown:90",
            auto: !0,
            setup: function() {
                extoken = page.thegraphics.models[0],
                d20.engine.unselect(),
                d20.engine.select(extoken.view.graphic),
                $("#upperCanvas").focus()
            }
        }, {
            group: 7,
            el: ".video",
            text: "Click anywhere on the VTT to close the shadow box.",
            place: "top-right",
            oncomplete: function() {
                $("#lightly-overlay").trigger("click")
            }
        }, {
            group: 7,
            el: "#tutorial-center",
            text: "Voice and video are the primary communication methods used on Roll20. The default method uses the internal video and voice options powered by TokBox using WebRTC technology.",
            place: "top"
        }, {
            group: 7,
            el: ".player",
            text: "Video and voice will automatically turn on as soon as one other player joins the game. The GM can choose to disable or change the size options for the video display from the My Settings tab discussed later in this tutorial.",
            place: "top-right"
        }, {
            group: 7,
            el: "#tutorial-center",
            text: "Players can use voice and video through Google Hangouts by selecting the dropdown arrow next to the Join Game button on the <a href='https://wiki.roll20.net/Game_Management?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=game%20details#Game_Details'>Game Detail's page</a>, outside of the VTT.",
            place: "top",
            oncomplete: function() {
                $("#ui-id-1").trigger("click")
            }
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "The Text Chat tab has many uses. It's primarily function is communicating in text between players.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "Chat is persistent, meaning it doesn't dissapear, between game sessions and can be reviewed any time from the <a href='https://wiki.roll20.net/Game_Management?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=chat%20archive#Menu'>Chat Archive</a> available from the Game Details page.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "In a normal game you would also be provided with a join link, visible only to the GM. This link is the key to getting into your game. Only share this link with players you would like to invite to play.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "If you kick a player out of a game, an option available from the <a href='https://wiki.roll20.net/Game_Management?utm_source=roll20&utm_medium=tutoril&utm_content=wiki&utm_campaign=kick%20player#Players'>Game Detail's</a> page, the join link will automatically change.",
            place: "left"
        }, {
            group: 8,
            el: "#textchat-input",
            text: "The are several ways to communicate through the chat box, from emotes to whispers and more.",
            place: "top"
        }, {
            group: 8,
            el: "#textchat-input",
            text: "You can speak as the GM or a character using the chat box. By default you'll speak Out of Character. Use the 'As:' dropdown menu to select a different character.",
            place: "top"
        }, {
            group: 8,
            el: "#textchat-input",
            text: "Emotes are formatted as center aligned, bold, italicized, and set in an orange font to highlight. Give it a try! Type <span style='color:#ed008c'>/em waves</span> and click the Send button or hit the Enter key to continue.",
            place: "top",
            waitfor: "receivedChat:emote",
            auto: !0
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "You can Whisper to other players or the GM in the Chat box. A whisper is a private message that no one else can see except the sender and the recipient.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "Type '/w name message' to whisper.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "For complex multiword names you can put the name in quotes. To whisper the GM of the game you can just type '/w gm'.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "There is a tab-auto-complete function for names to speed up this process. Once you start typing Roll20 will show you a list of players and characters to choose from. Hit tab to allow the autocomplete to fill in the selected choice.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "When new players join your game their names will be added to the auto complete list. Give it a try! Type <span style='color: #ed008c'>/w gm Hello!</span> to continue.",
            place: "left",
            waitfor: "receivedChat:whisper",
            auto: !0
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "You can talk out of character using the chat box. Type /ooc or /o and your text to speak as yourself. OOC entries always appear as the player rather than the Character you have selected in the \"Speaking As\" drop-down. Give it a try! Type <span style='color: #ed008c'>/ooc I love Roll20</span> to speak out of character.",
            place: "left",
            waitfor: "receivedChat:general",
            auto: !0
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "GM\u2019s have exclusive chat commands available, /desc, /as, and /emas.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "Adding text following the /desc command will appear as description not having been spoken by anyone.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "This is a great tool for the GM to describe or announce something in a scene without having to go out of character. Descriptions are formatted as center aligned, bold, italicized, and set in a black font with a light grey highlight.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "The GM can speak or emote as a character if an entry has been made in the Journal Tab. The GM uses the /as or /emas commands to quickly assume the identity of a character without having to change the 'As:' dropdown.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "You can use basic Markdown syntax in your text chat messages. You can use **text to bold**, *text to italicize*, and [link or image](url).",
            place: "left"
        }, {
            group: 8,
            el: "#textchat-input",
            text: "Give it a try! Click the Send button to continue.",
            place: "top",
            waitfor: "receivedChat:general",
            auto: !0,
            setup: function() {
                $("#textchat-input textarea").val("*I* **love** [Roll20](https://app.roll20.net)")
            }
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "Rolling dice in Roll20 is easy. You can use /roll or /r and then a dice formula to make a roll. Give it a try! Type <span style='color: #ed008c'>/r 1d20+5</span> and hit Send to continue.",
            place: "left",
            waitfor: "receivedChat:rollresult",
            auto: !0
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "If you want to roll in secret, you can use /gmroll plus a dice formula to perform a roll that only you and the GM can see. GM\u2019s can use /gmroll to roll in secret to themselves. Give it a try! Type <span style='color: #ed008c'>/gmroll 1d20+5</span> and hit Send to continue.",
            place: "left",
            waitfor: "receivedChat:gmrollresult",
            auto: !0
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "For a more compact roll representation, take advantage of inline dice rolls. Inline rolls can be used inside other types of chat messages like emotes or whispers.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "Inline rolls can use normal dice formulas. They only show the result of the total roll in a compact format and feature critical/success color coding. Give it a try! Type <span style='color: #ed008c'>Attack: [[1d20+5]]</span> and hit Send to continue.",
            place: "left",
            waitfor: "receivedChat:general",
            auto: !0
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "Hover your mouse over the result, the small yellow box in the chat, to see a tool tip with the full roll.",
            place: "left"
        }, {
            group: 9,
            el: "#diceroller",
            text: "The Dice Rolling GUI (Graphical User Interface) is an easy to use dice rolling tool. Click the d20 icon in the Toolbox to continue.",
            place: "right",
            waitfor: "click:#diceroller",
            auto: !0,
            setup: function() {
                $("#enable3ddice:checked").length > 0 && ($("#enable3ddice").trigger("click"),
                window.currentPlayer.save({
                    tddiceenabled: !1
                }))
            }
        }, {
            group: 9,
            el: ".basicroll",
            text: "Basic rolls can be performed from the GUI. Perform a basic roll by clicking on any of the quick roll buttons to continue.",
            place: "left",
            waitfor: "click:.basicroll",
            auto: !0
        }, {
            group: 9,
            el: ".numdice",
            text: "Advanced rolls such as adding a modifier can be performed from the GUI too. Change the options as needed. Perform an advanced such as 2d6+5 and hit Roll! to continue.",
            place: "left",
            waitfor: "click:.rolladvanced",
            auto: !0
        }, {
            group: 9,
            el: ".recentroll",
            text: "Your last 10 rolls are displayed in the GUI. Save time by clicking on commonly used formulas during your game.",
            place: "left"
        }, {
            group: 9,
            el: "#tutorial-center",
            text: "We've enabled 3D Dice which can be enabled or disabled from the My Settings tab at any time.",
            place: "top",
            setup: function() {
                $(".ui-dialog-titlebar-close").trigger("click"),
                0 === $("#enable3ddice:checked").length && ($("#enable3ddice").trigger("click"),
                window.currentPlayer.save({
                    tddiceenabled: !0
                }),
                d20.tddice.addRenderer())
            },
            dostepif: window.Detector.webgl
        }, {
            group: 9,
            el: "#tutorial-center",
            text: "Try out the 3D dice now by making a roll from the dice GUI or the chat tab. Follow the click and drag instructions to roll the dice and continue.",
            place: "top",
            waitfor: "receivedChat:rollresult",
            auto: !0,
            dostepif: window.Detector.webgl
        }, {
            group: 9,
            el: "#tutorial-center",
            text: "You can turn off Dice Agency, so that the 3D dice roll automatically without you having to 'throw' them. You can find this option in the My Settings tab or by clicking the 'Disable' option when prompted.",
            place: "top",
            dostepif: window.Detector.webgl
        }, {
            group: 9,
            el: "#tutorial-center",
            text: "You don't currently have WebGL enabled and so aren't able to take advantage of Roll20's 3D dice. Consider enabling WebGL in order to get the most out of your Roll20 experience.",
            place: "top",
            dostepif: !window.Detector.webgl
        }, {
            group: 9,
            el: "#tutorial-center",
            text: "Roll20 supports a wide array of dice mechanics. Visit our <a href='https://wiki.roll20.net/Dice_Reference?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=dice%20reference'>Dice Reference</a> Wiki for more information.",
            place: "top"
        }, {
            group: 10,
            el: ".handle.showtip",
            text: "Select the page icon to open the Page Toolbar dropdown.",
            place: "bottom",
            waitfor: "click:.handle.showtip",
            auto: !0
        }, {
            group: 10,
            el: ".pages.ui-sortable",
            text: "Pages are an excellent way to managing locations, settings, time, encounters, or content. The red Player Bookmark determines what page the players are on. You can click and drag the bookmark to move your players from page to page.",
            place: "bottom"
        }, {
            group: 10,
            el: ".video",
            text: "Once you have other players in your game, you can click and drag a player\u2019s portrait from the bottom of the VTT onto a page. This will split the party placing that player on a different page than the player bookmark. You can recombine the group by dragging their portraits back onto the player bookmark.",
            place: "right-top"
        }, {
            group: 10,
            el: ".availablepage",
            text: "Add new pages from the page toolbar. Click on the Create New Page button to add a new Untitled page to the end of your page list to continue.",
            place: "bottom-right",
            waitfor: "add:page",
            auto: !0
        }, {
            group: 10,
            el: "#page-toolbar",
            text: "You can rename your page by clicking on its name to enter edit mode.",
            place: "bottom"
        }, {
            group: 10,
            el: ".playerbookmark",
            text: "Hover over the page that has the player bookmark to access the Page Settings. Click the gear icon to continue.",
            place: "bottom",
            waitfor: "click:.settings",
            auto: !0
        }, {
            group: 10,
            el: ".ui-dialog",
            text: "You can use the page settings to change the dimensions of your scene, the unit of measurement, and the page's background color.",
            place: "left"
        }, {
            group: 10,
            el: ".ui-dialog",
            text: "You can also enable or disable the grid and change its settings, such as square or hex grids or the color and opacity of the grid lines.",
            place: "left"
        }, {
            group: 10,
            el: ".ui-dialog",
            text: "At the bottom of the page settings are options to archive or delete the page. An archived page isn't loaded normally with the game but can be recovered at any time. A deleted page is gone for good.",
            place: "left"
        }, {
            group: 10,
            el: ".ui-dialog",
            text: "Just above these buttons you can set the page's lighting options. Enable Fog of War by checking the box to continue.",
            place: "left",
            waitfor: "click:.darknessenabled",
            auto: !0,
            oncomplete: function() {
                $(".ui-button").trigger("click"),
                $(".handle.showtip").trigger("click")
            }
        }, {
            group: 11,
            el: "#fogcontrols",
            text: "With fog of war enabled the map appears semi-opaque. This opacity can be set from the page settings menu. To your players the page appears completely black. They are unable to see anything on the token or map layers.",
            place: "right",
            setup: function() {
                page = d20.Campaign.activePage(),
                page.save(page.attributes.showdarkness === !1 ? {
                    showdarkness: !0,
                    fog_opacity: .35
                } : {
                    fog_opacity: .35
                })
            },
            oncomplete: function() {
                setMode("fog-reveal")
            }
        }, {
            group: 11,
            el: "#fogcontrols",
            text: "We've selected the Reveal tool for you. Click and drag on the tabletop to create a box to be revealed, making the area you select visible to all your players. Hold Shift to snap your reveal to the grid. Give it a try! Reveal a section of the VTT to continue.",
            place: "right",
            waitfor: "fogReveal",
            auto: !0,
            oncomplete: function() {
                setMode("fog-hide")
            }
        }, {
            group: 11,
            el: "#fogcontrols",
            text: "You can use the Hide Areas tool to cover any parts of the map you may have revealed. This will obscure that part of the map again for all of your players. Click and drag on the VTT to recover part of your revealed area to continue.",
            place: "right",
            waitfor: "fogHide",
            auto: !0
        }, {
            group: 11,
            el: "#fogcontrols",
            text: "There are two other options available from the fog of war toolbox. The Polygonal tool allows you to cut out pieces of fog in the same way the polygonal draw tool allowed you to create shapes. While the Reset Fog option blankets the map in perfect darkness again.",
            place: "right"
        }, {
            group: 11,
            el: "#tutorial-center",
            text: "Roll20 offers Dynamic Lighting features that will automatically adjust vision and lighting in real time. For more information visit our <a href='https://wiki.roll20.net/Dynamic_Lighting'>Dynamic Lighting</a> Wiki.",
            place: "top",
            oncomplete: function() {
                page = d20.Campaign.activePage(),
                page.attributes.showdarkness === !0 && page.save({
                    showdarkness: !1
                })
            }
        }, {
            group: 12,
            el: "#ui-id-3",
            text: "The Journal Tab allows GMs to create Handouts, Characters, and organize Folders for their game.",
            place: "left-bottom",
            setup: function() {
                $("#select").trigger("click"),
                $("#ui-id-3").trigger("click")
            }
        }, {
            group: 12,
            el: ".superadd",
            text: "The +Add button allows you to add a new item to the game\u2019s journal. Click the +Add button and then select a Handout to continue.",
            place: "left-top",
            waitfor: "add:handout",
            auto: !0
        }, {
            group: 12,
            el: ".ui-dialog",
            text: "From this pop-up you can rename the handout, add an image, or add public or private notes.",
            place: "left"
        }, {
            group: 12,
            el: ".textboxlist",
            text: "Tags can be added for quick searching items in your journal. Giving journal items common sets of tags is useful for categorizing and quickly sorting sets of related journal entries. Like adding the tags 'Monster' and 'Swamp' to a NPC troll.",
            place: "left"
        }, {
            group: 12,
            el: "#selN0M_chzn",
            text: "By default your players can't see journal entries you've added. From this option you can set which players can view the handout from their journal and give them editing privileges.",
            place: "left"
        }, {
            group: 12,
            el: ".ui-dialog .ui-dialog-buttonset",
            text: "To confirm your changes click the Save Changes button to continue.",
            place: "left",
            waitfor: "click:.ui-button",
            auto: !0
        }, {
            group: 12,
            el: ".edithandout",
            text: "Along the top of the handout are several buttons. The Edit button opens the popout you first saw when you created your handout.",
            place: "left-bottom"
        }, {
            group: 12,
            el: ".broadcasthandout",
            text: "The Show to Players button will open the handout for your players on their screens. This button will only show the handout to players who have permission to view it. If no players have permission, you'll be prompted to show it to All Players.",
            place: "left-bottom"
        }, {
            group: 12,
            el: ".showpopout",
            text: "The popout button will open the handout in a new window, outside of the main browser window the VTT is in. This is useful for opening multiple character sheets or handouts.",
            place: "bottom-right",
            oncomplete: function() {
                $(".ui-dialog-titlebar").dblclick()
            }
        }, {
            group: 12,
            el: ".ui-dialog-titlebar",
            text: "Another useful trick is minimizing journal items. You can minimize by double clicking the title bar of any popup. You can maximize the handout again by double clicking.",
            place: "bottom",
            oncomplete: function() {
                $(".ui-dialog-titlebar").dblclick()
            }
        }, {
            group: 12,
            el: ".ui-dialog-titlebar",
            text: "Close the handout by clicking the X in the top right of your handout to continue.",
            place: "bottom",
            waitfor: "click:.ui-dialog-titlebar-close",
            auto: !0
        }, {
            group: 12,
            el: "#rightsidebar",
            text: "From the Journal tab, you can also right click on a journal item to reveal a context menu. This menu allows you to quickly show the journal item to players or delete it.",
            place: "left"
        }, {
            group: 12,
            el: ".video",
            text: "You can also click and drag the handout to a player portrait along the bottom of the screen to add it to the player\u2019s journal and immediately open it on their screen. Give it a try! Click and drag the top handout to your portrait.",
            place: "top-right",
            oncomplete: function() {
                $(".ui-dialog-titlebar-close").trigger("click")
            }
        }, {
            group: 12,
            el: "#rightsidebar",
            text: "The colored dots to the right of journal items represent which players have viewing privilages. If a journal item is visible to all players it will have a light blue dot. Otherwise the dot will correspond with the player's color.",
            place: "left"
        }, {
            group: 12,
            el: ".superadd",
            text: "Characters have all of the same options as handouts, including show to players and pop out, plus a few more. Click the +Add button, then select Character from the drop down to continue.",
            place: "left-top",
            waitfor: "add:character",
            auto: !0
        }, {
            group: 12,
            el: ".bioinfo",
            text: "From this window you can edit all of the same properties available to handouts. Name, access, tags, player and GM notes, and even add an avatar picture.",
            place: "left"
        }, {
            group: 12,
            el: "#selMNE_chzn",
            text: "When you give a player control over a character they have control over all of its tokens and are granted access to view and edit the character sheet.",
            place: "left"
        }, {
            group: 12,
            el: "#selMNE_chzn",
            text: "You can add a character sheet to your game from the Game Settings dropdown on the game settings page, outside of the VTT. For more information on character sheets and a guide to adding them to your game check out the <a href'https://wiki.roll20.net/Character_Sheets?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=character%20sheets#Choosing_a_Character_Sheet'>Roll20 Wiki</a>.",
            place: "left"
        }, {
            group: 12,
            el: ".defaulttoken",
            text: "The Default Token field gives you the ability to select a token on the tabletop and use it as a template for future tokens for that character.",
            place: "right"
        }, {
            group: 12,
            el: ".defaulttoken",
            text: "This is an ideal way to quickly add tokens to a page that are tied to characters you've prepared in advance. Instead of needing to set up a token each time you wish to use that character you can instead use the default token attached to the character sheet.",
            place: "right",
            setup: function() {
                a()
            }
        }, {
            group: 12,
            el: ".defaulttoken",
            text: "We've selected your token for you. Click the \u201cUse Selected Token\u201d button from the Edit Character window.",
            place: "right",
            waitfor: "change:character",
            auto: !0,
            setup: function() {
                setTimeout(function() {
                    extoken = page.thegraphics.models[0],
                    d20.engine.select(extoken.view.graphic),
                    $("#upperCanvas").focus()
                }, 100)
            },
            oncomplete: function() {
                $(".ui-button").trigger("click"),
                setTimeout(function() {
                    $(".ui-dialog-titlebar-close").trigger("click")
                })
            }
        }, {
            group: 12,
            el: ".journalitem.character",
            text: "Now that the default token is saved you can click and drag the character's name from the journal onto the VTT in order to make a copy of the default token. Drag a new copy of your character's token onto the VTT to continue.",
            place: "left",
            waitfor: "add:graphic",
            auto: !0
        }, {
            group: 12,
            el: "#tutorial-center",
            text: "The default token isn't paired with the token on the VTT. Changes made to the table token won't be reflected or remembered by the default token, which acts like a template producing 'fresh' copies with the settings from when the default token was first saved to the character.",
            place: "top"
        }, {
            group: 12,
            el: "#tutorial-center",
            text: "To make changes to the default template you have to remove the existing default token and select a new one from the VTT with the updated setting you wish to save.",
            place: "top",
            oncomplete: function() {
                charobj = d20.Campaign.characters.models[0],
                charobj.view.showDialog()
            }
        }, {
            group: 12,
            el: "a[data-tab=bioinfo]",
            text: "There are 3 character tabs. The first is a Bio & Info tab, similar to the description section of handouts. The other two are Character Sheet and Abilities & Attributes.",
            place: "bottom-right",
            oncomplete: function() {
                $("a[data-tab=charsheet]").trigger("click")
            }
        }, {
            group: 12,
            el: "a[data-tab=charsheet]",
            text: "The character sheet tab is only visible if a character sheet has been set from the game settings page accessible from outside the VTT on the game details page.",
            place: "bottom-right"
        }, {
            group: 12,
            el: "a[data-tab=charsheet]",
            text: "Each community-made character sheet is wildly different and has been created to suit the needs of the system it was designed for.",
            place: "bottom-right",
            oncomplete: function() {
                $("a[data-tab=attributesabilities]").trigger("click")
            }
        }, {
            group: 12,
            el: ".attributesabilities .span6",
            text: "The Attributes & Abilities tab has two lists. Attributes are automatically populated from the character sheet and represent persistent stats attached to the character.",
            place: "bottom"
        }, {
            group: 12,
            el: ".attributesabilities .span6",
            text: "You can manually add attributes here and if you modify them from this page the changes will be reflected on the character sheet.",
            place: "bottom"
        }, {
            group: 12,
            el: ".attributesabilities .span6:nth-child(2)",
            text: "Abilities are personal macros that only apply to this character. They use slightly different syntax than regular macros and are called using a different method.",
            place: "bottom"
        }, {
            group: 12,
            el: ".attributesabilities .span6:nth-child(2)",
            text: "This is a great space for players to prepare and automate their most common rolls. Abilities are copied over between games if the character is transferred.",
            place: "bottom",
            oncomplete: function() {
                $(".ui-dialog-titlebar-close").trigger("click")
            }
        }, {
            group: 12,
            el: "#rightsidebar",
            text: "Folders can be added to the journal to help organize your characters and handouts.",
            place: "left"
        }, {
            group: 12,
            el: ".superadd",
            text: "To continue, add a folder by clicking the +Add button and selecting Folder. Name the folder <span style='color: #ed008c'>Important Locations</span> and click OK to add it to your journal.",
            place: "left-top",
            waitfor: "folderChange",
            auto: !0
        }, {
            group: 12,
            el: ".dd-item.dd-folder",
            text: "Right click on the folder to reveal a context menu allowing you to directly add subfolders, characters, or handouts, as well as sort, rename, or delete folders.",
            place: "left"
        }, {
            group: 12,
            el: "#rightsidebar",
            text: "You can also rearrange folders or journal items by click on the three horizontal bars (the handle) that appears when hovering over the journal item and repositioning the item before letting go.",
            place: "left"
        }, {
            group: 12,
            el: "#rightsidebar",
            text: "Give it a try! Hover your mouse over one of your handouts, grab the three horizontal bars, and drag your handout just below your new folder.",
            place: "left",
            waitfor: "folderChange",
            auto: !0
        }, {
            group: 12,
            el: "#rightsidebar",
            text: "Characters and handouts can be sorted together and journal items can be nested, folders inside folders, up to four levels deep.",
            place: "left"
        }, {
            group: 13,
            el: "#rightsidebar",
            text: "The Jukebox allows you to add background music, sound effects, and more by accessing the SoundCloud music and sounds library.",
            place: "left",
            setup: function() {
                $("#ui-id-4").trigger("click")
            }
        }, {
            group: 13,
            el: "#jukebox > div > button",
            text: "Click the +Add button to continue.",
            place: "left",
            waitfor: "click:.superadd.btn",
            auto: !0
        }, {
            group: 13,
            el: "#superjukeboxadd",
            text: "Click the Track option to open the Add Sound popup.",
            place: "left",
            waitfor: "click:#superjukeboxadd",
            auto: !0
        }, {
            group: 13,
            el: "#jukebox_search",
            text: "Using the Search For dropdown, select Sound Effects, enter a keyword like <span style='color: #ed008c'>Water</span>.",
            place: "left"
        }, {
            group: 13,
            el: "#jukebox_search",
            text: "To preview the tracks press the play button, and click the + icon on the track you wish to add. Add a track to your game to continue.",
            place: "left",
            waitfor: "add:playlist",
            auto: !0,
            oncomplete: function() {
                $("a[data-tab=tabletopaudio]").trigger("click")
            }
        }, {
            group: 13,
            el: "#jukebox_search",
            text: "These preloaded Tabletop Audio tracks are a great way to add ambiance to your games. You can browse the tracks by genre from the dropdown above.",
            place: "left"
        }, {
            group: 13,
            el: "#jukeboxfolderroot",
            text: "You can rename the tracks in your jukebox for easy management. Click the track name and change it to something like <span style='color: #ed008c'>Water</span> and hit the Enter key on your keyboard to continue.",
            place: "left",
            waitfor: "change:playlist",
            auto: !0
        }, {
            group: 13,
            el: "#jukeboxfolderroot",
            text: "All players will hear the track playing. You can control the volume from the slider and set the track to repeat by checking the Loop icon.",
            place: "left",
            oncomplete: function() {
                $(".ui-dialog-titlebar-close").trigger("click")
            }
        }, {
            group: 13,
            el: "#jukeboxfolderroot",
            text: "Playlists act much like journal folders, letting you sort and organize your tracks.",
            place: "left"
        }, {
            group: 13,
            el: "#jukebox > div > button",
            text: "You can add as many playlists to your game as you'd like from the +Add button.",
            place: "left",
            waitfor: "click:.superadd.btn",
            auto: !0
        }, {
            group: 13,
            el: "#addnewjukeboxfolder",
            text: "Click the Playlist option to add a newplaylist to your jukebox. Name your playlist <span style='color: #ed008c'>Water Effects</span> and hit OK to continue.",
            place: "left",
            waitfor: "click:#addnewjukeboxfolder",
            auto: !0
        }, {
            group: 13,
            el: ".dd-folder .dd-content",
            text: "Playlists have a few features and limitations that folders don't. Play lists can not be nested, playlists inside playlists, the way folders can.",
            place: "left"
        }, {
            group: 13,
            el: ".playlistcontrols",
            text: "Playlists also have three play options, shuffle, play all, and back-to-back. You can cycle through these options by clicking the icon next to the playlist.",
            place: "left"
        }, {
            group: 13,
            el: ".playlistcontrols",
            text: "Shuffling playlists will randomly select tracks. The track order is synced amongst players, so the order of music will stay the same.",
            place: "left"
        }, {
            group: 13,
            el: ".playlistcontrols",
            text: "Tracks will continue to play indefinitely until you stop the playlist, select a different playlist, or play an individual track.",
            place: "left"
        }, {
            group: 13,
            el: ".playlistcontrols",
            text: "Play all will simultaniously play every track in the playlist. This is a good option for creating sound scapes or enivornments, such as a cave soundscape made of a track that has dripping water and another that has echoing footsteps. Be sure to loop the individual tracks if you wish them to repeat.",
            place: "left"
        }, {
            group: 13,
            el: ".playlistcontrols",
            text: "The last playlist option plays each track in turn, back to back. When the last track of the playlist is finished, it will loop back to the top of the playlist and play again.",
            place: "left"
        }, {
            group: 13,
            el: "#jukeboxwhatsplaying",
            text: "Unlike the folder system, your players don't see any of your tracks or playlists. The only thing they see is this Now Playing widget, which shows which songs are actively playing.",
            place: "left"
        }, {
            group: 13,
            el: "#jukeboxwhatsplaying",
            text: "As the GM you can also stop any tracks playing right from the widget instead of having to scroll through your playlists to find the active one.",
            place: "left"
        }, {
            group: 13,
            el: ".handle.showtip",
            text: "A useful tool for prepared GMs is to set pages to automatically play a playlist or track when the player bookmark is moved.",
            place: "bottom"
        }, {
            group: 13,
            el: ".handle.showtip",
            text: "You can set this option from the page settings menu in the page toolbar.",
            place: "bottom"
        }, {
            group: 14,
            el: "#startrounds",
            text: "The Turn Tracker tool aids you and your players with turn-based games by presenting an interactive list to the group. Once it is open, the turn tracker is visible to all of the players.",
            place: "right",
            setup: function() {
                d20.Campaign.save({
                    initiativepage: !1
                }),
                d20.Campaign.save({
                    turnorder: "[]"
                })
            }
        }, {
            group: 14,
            el: "#startrounds",
            text: "Players will only see tokens that have been given turns on this page. As the GM you will see all tokens for all pages. Click the turn tracker tool in the toolbox to continue.",
            place: "right",
            waitfor: "click:#startrounds",
            auto: !0
        }, {
            group: 14,
            el: "#tutorial-center",
            text: "Add a token to the turn order by right clicking on the token to open the context menu and then selecting Add Turn. You can add multiple turns per token.",
            place: "left",
            setup: function() {
                a()
            }
        }, {
            group: 14,
            el: "#tutorial-center",
            text: "Give it a try! Right click your token and select Add Turn to add it to the turn order.",
            place: "left",
            waitfor: "addedTurn",
            auto: !0
        }, {
            group: 14,
            el: "#initiativewindow",
            text: "Clicking the number next to the token will allow you to track a turn related value, like initiative. You can also drag a roll result directly from the text chat to update the turn tracker.",
            place: "right"
        }, {
            group: 14,
            el: "#initiativewindow",
            text: "Optionally there are roll macros that will automatically add the selected token to the tracker with the result of the macro\u2019s roll. Learn more from our <a href='https://wiki.roll20.net/Macros?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=macros#Rolling_For_Initiative'>Macros wiki</a>.",
            place: "right"
        }, {
            group: 14,
            el: ".ui-dialog .ui-dialog-buttonset button:nth-child(2)",
            text: "To advance the turn in the tracker, click the arrow button to move the current turn from the top to the bottom of the list. Give it a try! Click the arrow to continue.",
            place: "right",
            waitfor: "click:.ui-dialog-buttonset button:nth-child(2)",
            auto: !0,
            setup: function() {
                if (initlist = JSON.parse(d20.Campaign.attributes.turnorder),
                initlist.length < 4) {
                    for (i = initlist.length; 4 > i; i++)
                        initlist[i] = {
                            id: initlist[0].id,
                            pr: Math.floor(10 * Math.random()) + 1
                        };
                    d20.Campaign.save({
                        turnorder: JSON.stringify(initlist)
                    })
                }
            }
        }, {
            group: 14,
            el: ".ui-dialog .ui-dialog-buttonset",
            text: "Click the gear icon to open the tracker options menu.",
            place: "top",
            waitfor: "click:.ui-dialog-buttonset button:nth-child(1)",
            auto: !0
        }, {
            group: 14,
            el: "#initiativewindow_settings",
            text: "The tracker can be sorted numerically, alphabetically, or by card suit.",
            place: "left"
        }, {
            group: 14,
            el: ".customentry",
            text: "You can also add Custom Items that are not tied to the page or a token. Custom items can be given a Round Calculation that will modify their value every time they reach the top of the tracker.",
            place: "left"
        }, {
            group: 14,
            el: ".customentry",
            text: "For example creating a custom item with a round calculation of +1 would make a good round counter. The counter would increase by one every time it rotated back to the top of the turn order.",
            place: "left"
        }, {
            group: 14,
            el: ".clearlist",
            text: "After the end of every turn or page change, the turn order should be cleared. Click the red Remove All Turns (Clear List) button to continue.",
            place: "bottom",
            waitfor: "click:.clearlist",
            auto: !0,
            oncomplete: function() {
                $(".ui-dialog-buttonset button:nth-child(1)").trigger("click"),
                $(".ui-dialog-titlebar-close").trigger("click"),
                d20.Campaign.save({
                    initiativepage: !1
                })
            }
        }, {
            group: 15,
            el: "#ui-id-5",
            text: "The Macros section is located at the top of the Collection tab.",
            place: "left-bottom",
            setup: function() {
                $("#ui-id-5").trigger("click"),
                $("html, #deckstables").animate({
                    scrollTop: 0
                })
            }
        }, {
            group: 15,
            el: "#existingmacros",
            text: "You have the option to set up Global Macros from this area. As the GM you can make these macros accessible to some or all of your players.",
            place: "left"
        }, {
            group: 15,
            el: "#existingmacros",
            text: "Players can also create their own macros. Player created macros are not attached to a particular character the way abilities are.",
            place: "left"
        }, {
            group: 15,
            el: "#addmacro",
            text: "A macro requires both a name and an action, which could be a commonly used roll or text. To continue click the +Add button.",
            place: "left-bottom",
            waitfor: "click:#addmacro",
            auto: !0
        }, {
            group: 15,
            el: ".ui-dialog .tokenizer",
            text: "Name your macro and add text, an emote, or a roll to the Actions field. An example would be <span style='color: #ed008c'>/me stabs with their dagger</span> or <span style='color: #ed008c'>/roll 1d20+10 vs AC</span>.",
            place: "left"
        }, {
            group: 15,
            el: ".ui-dialog .tokenizer",
            text: "You can have several actions, texts, emotes, and rolls in the same macro. Each action must be on its own line.",
            place: "left"
        }, {
            group: 15,
            el: ".ui-dialog .btn.testmacro",
            text: "After you've input an action, click the Test Macro button to continue.",
            place: "bottom",
            waitfor: "click:.btn.testmacro",
            auto: !0,
            oncomplete: function() {
                $("#ui-id-1").trigger("click"),
                $("html, #textchat").animate({
                    scrollTop: $("#textchat").prop("scrollHeight")
                })
            }
        }, {
            group: 15,
            el: "#rightsidebar",
            text: "The results of the macro are automatically output to the Chat Tab.",
            place: "left",
            oncomplete: function() {
                $("#ui-id-5").trigger("click")
            }
        }, {
            group: 15,
            el: ".ui-dialog .istokenaction",
            text: "You can set the macro to be a Token Action. This displays the macro as a quickly selectable button hovering near the top left of the VTT near the toolbox whenever you have a token selected, set the player visibility, or delete the macro from the Edit Macro popup.",
            place: "left"
        }, {
            group: 15,
            el: ".ui-dialog .ui-dialog-buttonset button:nth-child(1)",
            text: "Click Save Changes to add your macro the the My Settings tab.",
            place: "left",
            waitfor: "click:.ui-dialog-buttonset button:nth-child(1)",
            auto: !0
        }, {
            group: 15,
            el: "#existingmacros",
            text: "After you have saved your macro, you can roll it from the My Settings tab by clicking on the d20 icon to the left of the macro's name.",
            place: "left"
        }, {
            group: 15,
            el: "#existingmacros",
            text: "You can add your macro to the Macro Quickbar located at the bottom of the screen by clicking on the In Bar checkbox.",
            place: "left"
        }, {
            group: 15,
            el: ".bartoggle",
            text: "Check the In Bar option to continue.",
            place: "left",
            waitfor: "click:.bartoggle",
            auto: !0
        }, {
            group: 15,
            el: "#macrobar_macros",
            text: "The macro quickbar is a useful place to store your most common rolls and access them at the touch of a button.",
            place: "right-top"
        }, {
            group: 15,
            el: "#macrobar_macros",
            text: "While hovering over a quickbar macro a small handle will appear to the right of the macro. Clicking and dragging that handle allows you to sort your macros in any order that works best for your game.",
            place: "right-top"
        }, {
            group: 15,
            el: "#macrobar_macros",
            text: "You can also right click on your quickbar macros to open a context menu with options to rename your macros or give them a color for better organization.",
            place: "right-top"
        }, {
            group: 15,
            el: "#existingmacros",
            text: "There are many options to customize macros, including nesting macros, calling abilities, selected and targeted macros, and much more. Please refer to our <a href='https://wiki.roll20.net/Macros?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=macros'>Macros wiki</a> to learn more.",
            place: "left"
        }, {
            group: 16,
            el: "#ui-id-5",
            text: "Decks of cards are available on the Collection tab.",
            place: "left-bottom",
            setup: function() {
                $("#ui-id-5").trigger("click"),
                $(d20.Campaign.decks).each(function(e) {
                    d20.Campaign.decks.models[e].attributes.shown === !0 && d20.Campaign.decks.models[e].save({
                        shown: !1
                    })
                })
            }
        }, {
            group: 16,
            el: "#existingdecks",
            text: "Every game has the traditional deck of 54 playing cards by default. You can show a deck by selecting the Show button which will make it visible to you and all of your players. Give it a try! Continue by clicking the Show button.",
            place: "left",
            waitfor: "click:.btn.toggledeck",
            auto: !0
        }, {
            group: 16,
            el: "#showndecks",
            text: "Decks that have been shown are visible along the right hand side of the VTT.",
            place: "top"
        }, {
            group: 16,
            el: "#showndecks",
            text: "Hover your mouse over the deck to reveal a context menu. This menu allows you to deal or recall cards as well as shuffle or hide the deck. To continue click the Shuffle option and confirm the shuffle in the popup.",
            place: "top",
            waitfor: "change:deck",
            auto: !0
        }, {
            group: 16,
            el: "#showndecks",
            text: "Hover your mouse over the deck. You should notice a card move up as you hover. Click and drag this card from the deck onto the VTT to continue.",
            place: "top",
            waitfor: "add:graphic",
            auto: !0
        }, {
            group: 16,
            el: ".video",
            text: "You can also drop cards onto a player portrait to deal to the player.",
            place: "top-right"
        }, {
            group: 16,
            el: "#tutorial-center",
            text: "Right click the card on the VTT to reveal its context menu. There you will find options like flipping the card over, putting the card into your hand, or using it to add a turn to the turn tracker.",
            place: "top"
        }, {
            group: 16,
            el: "#existingdecks",
            text: "Access the Card Menu by clicking the deck's name in the Decks & Tables tab.",
            place: "left",
            waitfor: "click:#existingdecks tr.deck",
            auto: !0
        }, {
            group: 16,
            el: ".playerscandraw",
            text: "You can edit the default behavior of a deck. These options include whether cards are drawn face up or down, if the player's hands are visible to each other, and much more.",
            place: "left"
        }, {
            group: 16,
            el: ".ui-dialog-buttonset",
            text: "Give it a try! Adjust any settings you desire and click Save Changes to continue.",
            place: "left",
            waitfor: "click:.ui-dialog-buttonset button:nth-child(1)",
            auto: !0
        }, {
            group: 16,
            el: "#existingdecks",
            text: "Players also have other options with cards, including stealing cards from each other, playing cards face up or down, and more. Check out our <a href='https://wiki.roll20.net/Card_Decks_and_Rollable_Tables?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=decks'>Card Deck wiki</a> for more information, including details on creating your own custom decks.",
            place: "left"
        }, {
            group: 17,
            el: "#ui-id-5",
            text: "The last group on the Collection tab are Rollable Tables.",
            place: "left-bottom",
            setup: function() {
                if ($("#ui-id-5").trigger("click"),
                d20.Campaign.rollabletables.length < 1) {
                    var e = d20.Campaign.rollabletables.create({
                        name: "Example-Table",
                        showplayers: !0,
                        id: "-JwckdXhGhOq66Pxt8CR"
                    });
                    e.tableitems.reset([{
                        id: "-JwckjGkDol1pNX_nslE",
                        avatar: "https://s3.amazonaws.com/files.staging.d20.io/images/37/tbRr3EhexsmNXLf0BG0LTw/med.png?1439498093",
                        id: "-JwckjGkDol1pNX_nslE",
                        name: "Rock"
                    }, {
                        id: "-JwclTFJOiV8tYoOO9Gx",
                        avatar: "https://s3.amazonaws.com/files.staging.d20.io/images/38/_RLVKkuiAmyuCkrN4hDPOg/med.png?1439498119",
                        id: "-JwclTFJOiV8tYoOO9Gx",
                        name: "Scissors"
                    }, {
                        id: "-JwclYPib8kYd8IiUFHm",
                        avatar: "https://s3.amazonaws.com/files.staging.d20.io/images/39/Z4zHrraGXYsfeYxtfVxmdg/med.png?1439498131",
                        id: "-JwclYPib8kYd8IiUFHm",
                        name: "Paper"
                    }])
                }
            }
        }, {
            group: 17,
            el: "#existingrollabletables",
            text: "Unlike decks there are no default rollable tables, but one has been included here as an example.",
            place: "left"
        }, {
            group: 17,
            el: "#existingrollabletables",
            text: "Rollable Tables can be used to create a result from a weighted list or randomly generate a token.",
            place: "left"
        }, {
            group: 17,
            el: "#existingrollabletables",
            text: "Rollable Tables are useful for fulfilling certain system mechanics, creating random tokens (such as randomly choosing from a pool of similar monster tokens), or tokens that have multiple images (such as a shape changer).",
            place: "left"
        }, {
            group: 17,
            el: ".rollabletable",
            text: "The Roll button will roll the table based on the table\u2019s weighted items. Give it a try! Click the Roll button to continue.",
            place: "left",
            waitfor: "click:.btn.rolltable",
            auto: !0,
            oncomplete: function() {
                $("#ui-id-1").trigger("click"),
                $("html, #textchat").animate({
                    scrollTop: $("#textchat").prop("scrollHeight")
                })
            }
        }, {
            group: 17,
            el: "#ui-id-1",
            text: "The table's result will be displayed in the text chat.",
            place: "left-bottom"
        }, {
            group: 17,
            el: "#textchat-input textarea",
            text: "You can roll tables directly from the chat with the syntax of '/roll 1t[table-name]'. For example you could roll the Example-Table twice by typing <span style='color: #ed008c'>/r 2t[Example-Table]</span>.",
            place: "left-top",
            oncomplete: function() {
                $("#ui-id-5").trigger("click")
            }
        }, {
            group: 17,
            el: "#existingrollabletables",
            text: "The Token button will create a new token from the roll result and place it on the table top. Give it a try! Continue by clicking Token to add the roll table Token to the VTT.",
            place: "left",
            waitfor: "click:.btn.tokentable",
            auto: !0
        }, {
            group: 17,
            el: "#tutorial-center",
            text: "Right click the rollable table token to reveal a context menu. Options are similar to the token and shape context menus with an additional \u201cMulti-Sided\u201d option. Use this to option to quickly change graphics for your tokens.",
            place: "right"
        }, {
            group: 17,
            el: "#existingrollabletables",
            text: "Add new tables using the +Add button and edit tables by clicking on the rollable table's name to open the table editor window. Items can be added to the list, each with their own name, image, and table weight.",
            place: "left"
        }, {
            group: 17,
            el: "#rightsidebar",
            text: "Rollable tables are very flexible tools. More information on this feature can be found on our <a href='https://wiki.roll20.net/Card_Decks_and_Rollable_Tables?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=rollable%20tables#Rollable_Tables'>Rollable Tables wiki</a>.",
            place: "left"
        }, {
            group: 18,
            el: "#ui-id-6",
            text: "Each player has their own settings accessible through the My Settings tab.",
            place: "left-bottom",
            setup: function() {
                $("#ui-id-6").trigger("click")
            },
            oncomplete: function() {
                $("html, #mysettings").animate({
                    scrollTop: $("#globalvolume").offset().top - $(window).height() / 2
                })
            }
        }, {
            group: 18,
            el: "#rightsidebar",
            text: "You can adjust the Master Volume slider to control your personal internal audio, music, and sound effect volume. This will not adjust the volume for your players who control their master volume from this same menu.",
            place: "left",
            oncomplete: function() {
                $("html, #mysettings").animate({
                    scrollTop: $("#videoplayersize").offset().top - $(window).height() / 2
                })
            }
        }, {
            group: 18,
            el: "#rightsidebar",
            text: "The My Settings menu also has options to adjust your video and voice preferences, including Avatar Size.",
            place: "left"
        }, {
            group: 18,
            el: "#rightsidebar",
            text: "Experienced users may find the Advanced Keyboard Shortcuts a critical time saver. Advanced shortcuts allow you to swap objects between layers or select tools at the touch of a button.",
            place: "left"
        }, {
            group: 18,
            el: "#rightsidebar",
            text: "To learn more about the other options listed in this tab, visit our <a href='https://wiki.roll20.net/My_Settings?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=my%20settings'>My Settings wiki</a>.",
            place: "left"
        }, {
            group: 19,
            el: "#tutorial-center",
            text: "Thank you for completing the Roll20 Tutorial!",
            place: "top",
            setup: function() {
                $("#ui-id-6").trigger("click"),
                $("html, #mysettings").animate({
                    scrollTop: $("#exitroll20game").offset().top
                })
            }
        }, {
            group: 19,
            el: "#exitroll20game",
            text: "Visit our <a href='https://wiki.roll20.net/Main_Page?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=main%20page'>wiki</a> for more insight into Roll20. To complete the tutorial, click the Exit Game button. Happy Rolling!",
            place: "bottom",
            waitfor: "We believe in nothing, Lebowski. Nothing. And tomorrow we come back and we cut off your chonson.",
            auto: !0,
            setup: function() {
                $.post("/editor/add_tutorial_achievement/")
            }
        }];
        d20.tutorial.begin = function() {
            d20.tutorial.active = !0,
            $("<div id='tutorial-center'></div>").appendTo("body"),
            $tutorial_toc = $("<div id='tutorial-toc'><p>Tutorial<span id='tutorial-hide' data-alt-text='show'>hide</span></p><div id='tutorial-content'><ul></ul></div></div>"),
            $tutorial_toc.appendTo("body"),
            $("#tutorial-hide").on("click", function() {
                var e = $(this).data("alt-text");
                $(this).data("alt-text", $(this).text()),
                $(this).text(e),
                $("#tutorial-content").slideToggle("fast")
            });
            for (var e in n)
                $tutorial_toc.find("ul").append("<li data-groupid='" + e + "'>" + n[e].name + "</li>");
            $tutorial_toc.on("click", "li", function() {
                $("#drawingtools div.submenu").hasClass("permaopen") && $("#drawingtools div.submenu").removeClass("permaopen");
                var e = 0
                  , t = !1
                  , i = parseInt($(this).attr("data-groupid"), 10);
                _.each(r, function(n) {
                    t || (void 0 !== n.group && n.group === i && (t = !0,
                    l(e)),
                    e++)
                })
            }),
            tcenter = $("#tutorial-center").offset(),
            page = d20.Campaign.activePage(),
            l(0),
            d20.textchat.talktomyself = !0
        }
        ,
        checkcount = 0;
        var o = function(t, i) {
            return checkcount > 30 ? (console.log("CANNOT FIND ELEMENT"),
            void (checkcount = 0)) : e(t.element) !== !1 ? void (checkcount = 0) : (t.position(i),
            t.show(),
            checkcount++,
            setTimeout(function() {
                o(t, i)
            }, 100),
            void 0)
        }
          , a = function() {
            page = d20.Campaign.activePage();
            var e = Math.floor(d20.engine.currentCanvasOffset[0]) - d20.engine.paddingOffset[0];
            e += $(window).width() / 2,
            e += 15;
            var i = Math.floor(d20.engine.currentCanvasOffset[1]) - d20.engine.paddingOffset[1];
            i += $(window).height() / 2,
            i += 105,
            page.thegraphics.length < 1 ? (page.thegraphics.create({
                imgsrc: "https://s3.amazonaws.com/files.d20.io/marketplace/24942/ZV3yO__eTZQdD0zD5JLYhg/max.png?1377959792",
                top: i,
                left: e,
                height: 70,
                width: 70
            }),
            extoken = page.thegraphics.models[0],
            t(extoken)) : (extoken = page.thegraphics.models[0],
            extoken.save({
                top: i,
                left: e,
                lastmove: ""
            }),
            t(extoken))
        }
          , s = new Tooltip("Loading...")
          , l = function(e) {
            console.log("Show tutorial step " + e);
            var t = r[e];
            $("#tutorial-toc li").removeClass("active"),
            $("#tutorial-toc li[data-groupid=" + t.group + "]").addClass("active"),
            void 0 !== t.dostepif && setTimeout(function() {
                t.dostepif === !1 && r.length - 1 > e && setTimeout(function() {
                    l(e + 1)
                })
            }),
            void 0 !== t.setup && setTimeout(function() {
                t.setup()
            });
            var i = t.text + "<div id='activetutorialbutton' style='text-align: right; margin-top: 5px; display: none;'><a href='javascript:void(0);'>Next &rarr;</a></div>";
            s.content(i),
            s.place(t.place || "top"),
            s.position($(t.el)[0]),
            s.show(),
            o(s, $(t.el)[0]);
            var n = !1
              , a = function() {
                return n ? void 0 : (n = !0,
                t.auto === !0 ? (r.length - 1 > e && setTimeout(function() {
                    l(e + 1)
                }, 100),
                void (void 0 !== t.oncomplete && setTimeout(function() {
                    t.oncomplete()
                }, 1e3))) : void $("#activetutorialbutton").show())
            }
            ;
            if (t.waitfor) {
                var c = t.waitfor.split(":");
                if ("mode" === c[0])
                    var d = setInterval(function() {
                        d20.engine.mode === c[1] && (a(),
                        clearInterval(d))
                    }, 100);
                else if ("add" === c[0] || "change" === c[0] || "remove" === c[0]) {
                    var h;
                    "path" === c[1] ? h = d20.Campaign.activePage().thepaths : "token" === c[1] || "graphic" === c[1] ? h = d20.Campaign.activePage().thegraphics : "text" === c[1] ? h = d20.Campaign.activePage().thetexts : "character" === c[1] ? h = d20.Campaign.characters : "handout" === c[1] ? h = d20.Campaign.handouts : "page" === c[1] ? h = d20.Campaign.pages : "playlist" === c[1] ? h = window.Jukebox.playlist : "deck" === c[1] ? h = d20.Campaign.decks : "rollabletable" === c[1] && (h = d20.Campaign.rollabletables);
                    var u = function() {
                        console.log("Heard " + c[0]),
                        h.off(c[0], u),
                        a()
                    }
                    ;
                    h.on(c[0], u)
                } else if (-1 !== ["blur", "click"].indexOf(c[0])) {
                    var u = function() {
                        console.log("Heard " + c[0]),
                        $(c[1]).off(c[0], u),
                        a()
                    }
                    ;
                    $(c[1]).on(c[0], u)
                } else if ("keydown" === c[0]) {
                    var u = function(e) {
                        e.which === parseInt(c[1], 10) && (console.log("Heard " + c[0]),
                        $(document).off(c[0], u),
                        a())
                    }
                    ;
                    $(document).on("keydown", u)
                } else if (-1 !== ["userSentPing", "fogReveal", "fogHide", "folderChange", "addedTurn", "measure"].indexOf(c[0])) {
                    var u = function() {
                        console.log("Heard " + c[0]),
                        $(document).off(c[0], u),
                        a()
                    }
                    ;
                    $(document).on(c[0], u)
                } else if ("receivedChat" === c[0]) {
                    var u = function(e, t) {
                        console.log("Heard " + c[0]),
                        console.log(t),
                        t.type === c[1] && ($(document).off(c[0], u),
                        a())
                    }
                    ;
                    $(document).on(c[0], u)
                }
            } else
                a();
            $("#activetutorialbutton").on("click", function() {
                $("#activetutorialbutton").off(),
                console.log("Click!"),
                s.hide(),
                void 0 !== t.oncomplete && setTimeout(function() {
                    t.oncomplete()
                }),
                r.length - 1 > e && setTimeout(function() {
                    l(e + 1)
                }, 100)
            })
        }
          , c = function() {
            d20.tutorial.begin(),
            d20.Campaign.decks.reset([{
                name: "Playing Cards",
                currentDeck: "",
                currentIndex: -1,
                currentCardShown: !0,
                showplayers: !0,
                playerscandraw: !0,
                avatar: "http://files.d20.io/images/1433/med.png?1335737429",
                shown: !1,
                players_seenumcards: !0,
                players_seefrontofcards: !1,
                gm_seenumcards: !0,
                gm_seefrontofcards: !1,
                infinitecards: !1,
                cardSequencer: -1,
                cardsplayed: "faceup",
                defaultheight: "",
                defaultwidth: "",
                discardpilemode: "none",
                discardPile: "",
                deckpilemode: "none",
                treatasdrawing: !0,
                id: "A778E120-672D-49D0-BAF8-8646DA3D3FAC",
                showhands: !0
            }]),
            d20.Campaign.decks.trigger("add"),
            d20.Campaign.decks.first().cards.reset([{
                name: "Six of Hearts",
                avatar: "http://files.d20.io/images/1464/med.png?1335737697",
                placement: 99,
                id: "0E7F0D1B-48B9-4B89-B848-76ECC494D3E1"
            }, {
                name: "Eight of Hearts",
                avatar: "http://files.d20.io/images/1466/med.png?1335737714",
                placement: 99,
                id: "110C9DF1-360D-40CC-ADAB-1D99F7FC302A"
            }, {
                name: "Seven of Hearts",
                avatar: "http://files.d20.io/images/1465/med.png?1335737705",
                placement: 99,
                id: "1252C24A-32B6-499E-A212-355ACAF3C732"
            }, {
                name: "Ace of Hearts",
                avatar: "http://files.d20.io/images/1472/med.png?1335737762",
                placement: 99,
                id: "13401808-636C-41AA-B7F0-A34D7ED987BF"
            }, {
                name: "Five of Spades",
                avatar: "http://files.d20.io/images/1476/med.png?1335737796",
                placement: 99,
                id: "190FCDB6-0271-481F-9F1A-BBC127287E39"
            }, {
                name: "Black Joker",
                avatar: "http://files.d20.io/images/1486/med.png?1335737876",
                placement: 99,
                id: "1E728ADC-33D0-4CD9-A1DE-D345C250845D"
            }, {
                name: "Six of Clubs",
                avatar: "http://files.d20.io/images/1438/med.png?1335737473",
                placement: 99,
                id: "2257A8D3-74C0-405A-A1EF-504EC2382D09"
            }, {
                name: "Seven of Clubs",
                avatar: "http://files.d20.io/images/1439/med.png?1335737481",
                placement: 99,
                id: "2AFEBEF8-3706-4F25-A3B9-2ECE232E1EC5"
            }, {
                name: "King of Hearts",
                avatar: "http://files.d20.io/images/1471/med.png?1335737754",
                placement: 99,
                id: "2D55728D-BC3C-41CF-9516-6E55D66ABBEE"
            }, {
                name: "Five of Diamonds",
                avatar: "http://files.d20.io/images/1450/med.png?1335737569",
                placement: 99,
                id: "33DA353A-C68E-4227-96C5-FA0F0F31341B"
            }, {
                name: "Five of Clubs",
                avatar: "http://files.d20.io/images/1437/med.png?1335737465",
                placement: 99,
                id: "34C6DEF9-ADEF-4F6B-9404-19B0861871C7"
            }, {
                name: "King of Diamonds",
                avatar: "http://files.d20.io/images/1458/med.png?1335737641",
                placement: 99,
                id: "3567727D-69A1-4B57-B08A-023412437248"
            }, {
                name: "Queen of Spades",
                avatar: "http://files.d20.io/images/1483/med.png?1335737852",
                placement: 99,
                id: "3666790F-C0DA-43AD-8E8E-23F59F00A0CF"
            }, {
                name: "Ten of Hearts",
                avatar: "http://files.d20.io/images/1468/med.png?1335737729",
                placement: 99,
                id: "36D907D6-B340-4809-A033-216C8BCF7159"
            }, {
                name: "Jack of Hearts",
                avatar: "http://files.d20.io/images/1469/med.png?1335737737",
                placement: 99,
                id: "41B8D164-53E3-4825-B34A-90516FDDECA8"
            }, {
                name: "Ten of Spades",
                avatar: "http://files.d20.io/images/1481/med.png?1335737835",
                placement: 99,
                id: "4288EF3F-19A8-4DB2-B8E9-BFBAD14A9500"
            }, {
                name: "Ten of Diamonds",
                avatar: "http://files.d20.io/images/1455/med.png?1335737614",
                placement: 99,
                id: "4C00B0FB-566A-4B3B-987A-C1851E593AA5"
            }, {
                name: "Ten of Clubs",
                avatar: "http://files.d20.io/images/1442/med.png?1335737503",
                placement: 99,
                id: "51403249-45D7-45C8-B87E-2863DA016499"
            }, {
                name: "Six of Diamonds",
                avatar: "http://files.d20.io/images/1451/med.png?1335737579",
                placement: 99,
                id: "5B37E3FE-B99A-4594-92D9-E2C2C0008FFF"
            }, {
                name: "Queen of Diamonds",
                avatar: "http://files.d20.io/images/1457/med.png?1335737632",
                placement: 99,
                id: "5F602642-A624-4877-B1B9-5715DF8D02B0"
            }, {
                name: "Three of Diamonds",
                avatar: "http://files.d20.io/images/1448/med.png?1335737552",
                placement: 99,
                id: "61C9F0F0-BFE4-4ED5-8A55-2B75274702AD"
            }, {
                name: "Two of Hearts",
                avatar: "http://files.d20.io/images/1460/med.png?1335737667",
                placement: 99,
                id: "64CC77BB-4565-496A-8871-94BF93401B67"
            }, {
                name: "Ace of Diamonds",
                avatar: "http://files.d20.io/images/1459/med.png?1335737651",
                placement: 99,
                id: "65965D14-1AFA-45F1-B106-8235361F7C15"
            }, {
                name: "Seven of Spades",
                avatar: "http://files.d20.io/images/1478/med.png?1335737811",
                placement: 99,
                id: "67388D62-EDF6-4A1F-935A-43EE6BD41FD8"
            }, {
                name: "Three of Clubs",
                avatar: "http://files.d20.io/images/1435/med.png?1335737450",
                placement: 99,
                id: "68AC642B-9C27-42E7-93B0-920B9164C622"
            }, {
                name: "Nine of Hearts",
                avatar: "http://files.d20.io/images/1467/med.png?1335737721",
                placement: 99,
                id: "6A6C3284-EFF1-449C-A02B-B7B0FDF7A5D5"
            }, {
                name: "King of Clubs",
                avatar: "http://files.d20.io/images/1445/med.png?1335737528",
                placement: 99,
                id: "6C8DF866-9243-4575-8F88-19C27AB39D27"
            }, {
                name: "Four of Spades",
                avatar: "http://files.d20.io/images/1475/med.png?1335737788",
                placement: 99,
                id: "855E050F-EA2D-4B32-901D-56BB7E4B5857"
            }, {
                name: "Seven of Diamonds",
                avatar: "http://files.d20.io/images/1452/med.png?1335737590",
                placement: 99,
                id: "8E949576-4946-4AC4-9522-D3E4C4E50741"
            }, {
                name: "Jack of Clubs",
                avatar: "http://files.d20.io/images/1443/med.png?1335737512",
                placement: 99,
                id: "901BFB44-C41A-450F-B35D-868BCDE6CCFE"
            }, {
                name: "King of Spades",
                avatar: "http://files.d20.io/images/1484/med.png?1335737860",
                placement: 99,
                id: "9E920B87-A20E-42BA-B6E0-DD9022AE1DD2"
            }, {
                name: "Jack of Spades",
                avatar: "http://files.d20.io/images/1482/med.png?1335737844",
                placement: 99,
                id: "9FCC0D54-ACC0-4C6F-AB0F-3422851A90BE"
            }, {
                name: "Four of Clubs",
                avatar: "http://files.d20.io/images/1436/med.png?1335737458",
                placement: 99,
                id: "9FFA798A-11F0-46DA-9807-9DC13FE366E4"
            }, {
                name: "Nine of Spades",
                avatar: "http://files.d20.io/images/1480/med.png?1335737829",
                placement: 99,
                id: "A5AD4508-1C42-40F3-BE37-4812C8012D65"
            }, {
                name: "Eight of Diamonds",
                avatar: "http://files.d20.io/images/1453/med.png?1335737598",
                placement: 99,
                id: "A9B74EFD-47F1-4CC7-B472-7478D6D70C50"
            }, {
                name: "Five of Hearts",
                avatar: "http://files.d20.io/images/1463/med.png?1335737690",
                placement: 99,
                id: "AB23A388-7747-4F7A-8F24-5220CCE2D25A"
            }, {
                name: "Queen of Clubs",
                avatar: "http://files.d20.io/images/1444/med.png?1335737521",
                placement: 99,
                id: "AE50176D-2206-4738-B229-9886EB3DA253"
            }, {
                name: "Three of Spades",
                avatar: "http://files.d20.io/images/1474/med.png?1335737781",
                placement: 99,
                id: "B4CF2B55-F81E-4508-9AE1-8019B0F04E7E"
            }, {
                name: "Four of Hearts",
                avatar: "http://files.d20.io/images/1462/med.png?1335737682",
                placement: 99,
                id: "B8F435D9-9B46-4F54-A1A1-1EEDCD099FC2"
            }, {
                name: "Six of Spades",
                avatar: "http://files.d20.io/images/1477/med.png?1335737804",
                placement: 99,
                id: "BBC550AA-8E90-4DBD-B6BF-CC4EE5358DF4"
            }, {
                name: "Four of Diamonds",
                avatar: "http://files.d20.io/images/1449/med.png?1335737560",
                placement: 99,
                id: "BBF9DF2E-F7B8-4F74-B7A1-91CF426C582E"
            }, {
                name: "Two of Clubs",
                avatar: "http://files.d20.io/images/1434/med.png?1335737442",
                placement: 99,
                id: "C0062CB1-16E7-49AC-84D1-CB6213C9F2AF"
            }, {
                name: "Eight of Spades",
                avatar: "http://files.d20.io/images/1479/med.png?1335737819",
                placement: 99,
                id: "C1E084D4-EC4F-4BF7-B9D3-BE99FAED12CF"
            }, {
                name: "Three of Hearts",
                avatar: "http://files.d20.io/images/1461/med.png?1335737674",
                placement: 99,
                id: "C8E365C7-C67E-4E71-BB17-68468C9E626F"
            }, {
                name: "Nine of Diamonds",
                avatar: "http://files.d20.io/images/1454/med.png?1335737606",
                placement: 99,
                id: "C98763E1-4BB5-4D13-A1EC-3F7357F9CC4B"
            }, {
                name: "Jack of Diamonds",
                avatar: "http://files.d20.io/images/1456/med.png?1335737624",
                placement: 99,
                id: "CB1B06E8-D1CE-4838-B4B7-B658132999CB"
            }, {
                name: "Nine of Clubs",
                avatar: "http://files.d20.io/images/1441/med.png?1335737495",
                placement: 99,
                id: "CB38D043-5B95-4813-B039-60253A020CD6"
            }, {
                name: "Ace of Clubs",
                avatar: "http://files.d20.io/images/1446/med.png?1335737536",
                placement: 99,
                id: "D949193A-FC9B-48FC-8CAD-5BD4071A7E18"
            }, {
                name: "Two of Spades",
                avatar: "http://files.d20.io/images/1473/med.png?1335737774",
                placement: 99,
                id: "E18687DE-9AFD-4F78-BC4D-7DDBC7943528"
            }, {
                name: "Eight of Clubs",
                avatar: "http://files.d20.io/images/1440/med.png?1335737488",
                placement: 99,
                id: "EB0BD770-5E05-4488-AC58-88196BD442A1"
            }, {
                name: "Queen of Hearts",
                avatar: "http://files.d20.io/images/1470/med.png?1335737745",
                placement: 99,
                id: "EB7D24C2-30B9-4D96-890A-1C064C90D050"
            }, {
                name: "Ace of Spades",
                avatar: "http://files.d20.io/images/1485/med.png?1335737869",
                placement: 99,
                id: "EFDB047C-C683-4623-86D5-DBA4E4ED058E"
            }, {
                name: "Red Joker",
                avatar: "http://files.d20.io/images/1487/med.png?1335737884",
                placement: 99,
                id: "F2D8AE23-CF91-4CEA-BC17-AEB643A17BC9"
            }, {
                name: "Two of Diamonds",
                avatar: "http://files.d20.io/images/1447/med.png?1335737545",
                placement: 99,
                id: "F92A58C4-8349-426D-9930-98AB387981BD"
            }]),
            d20.Campaign.decks.first().cards.trigger("add")
        }
          , d = function() {
            d20.Campaign && d20.Campaign.activePage() ? c() : setTimeout(d, 1e3)
        }
        ;
        window.DO_TUTORIAL === !0 && d()
    }(),
    d20.compendium = {},
    $(function() {
        if (d20.compendium = "development" === d20ext.environment ? {
            compendiumBase: "http://app.roll20.local:5000/"
        } : {
            compendiumBase: "https://app.roll20.net/"
        },
        window.COMPENDIUM_BOOK_NAME) {
            var e = $("#compendium .searchroot")
              , t = $("#compendium .compendiumindex")
              , i = $("#compendium .searchbox input");
            e.nestable(),
            e.nestable("collapseAll");
            var n = function(i) {
                "" === i ? (t.show(),
                e.hide()) : (t.hide(),
                e.show(),
                e.html("<p>Searching...</p>"),
                $.get(d20.compendium.compendiumBase + "compendium/compendium/globalsearch/" + COMPENDIUM_BOOK_NAME + "/?terms=" + escape(i), function(t) {
                    var i = JSON.parse(t)
                      , n = {};
                    0 === i.length ? e.html("<p>No results found.</p>") : (_.each(i, function(e) {
                        void 0 === n[e.category] && (n[e.category] = []);
                        var t = e.value;
                        e.value !== e.pagename && (e.value = e.pagename + ": " + e.value),
                        n[e.category].push({
                            pagename: e.pagename,
                            value: e.value,
                            jumpheader: t
                        })
                    }),
                    a(n))
                }))
            }
              , r = function() {
                n(i.val())
            }
              , o = _.debounce(r, 250);
            i.on("keyup", function() {
                o()
            }),
            i.addClear();
            var a = function(t) {
                var i = "";
                i += "<ol class='dd-list'>";
                for (var n in t)
                    i += "<li class='dd-item dd-folder'>",
                    i += "<button class='dd-unsortable' data-action='collapse' type='button'>Collapse</button>",
                    i += "<button class='dd-unsortable' data-action='expand' type='button' style='display: none;'>Expand</button>",
                    i += "<div class='dd-content'>",
                    i += "<div class='folder-title'>" + n + "</div>",
                    i += "</div>",
                    i += "<ol class='dd-list'>",
                    t[n] = _.sortBy(t[n], function(e) {
                        return e.value
                    }),
                    _.each(t[n], function(e) {
                        i += "<li class='dd-item compendium-item' data-pagename=\"" + encodeURIComponent(n + ":" + e.pagename) + '" data-uniquename="' + encodeURIComponent(n + ":" + e.pagename) + "/#h-" + encodeURIComponent(e.jumpheader) + "\"><div class='dd-content'><div class='namecontainer'>" + e.value + "</div></div></li>"
                    }),
                    i += "</ol>",
                    i += "</li>";
                i += "</ol>",
                e.html(i),
                e.nestable("serialize"),
                e.find(".compendium-item").draggable({
                    revert: !0,
                    distance: 10,
                    revertDuration: 0,
                    helper: "clone",
                    appendTo: "body",
                    scroll: !1
                }).addTouch()
            }
            ;
            e.on("click", ".compendium-item", function() {
                s($(this).find(".namecontainer").text(), $(this).attr("data-uniquename"))
            });
            var s = function(e, t) {
                console.log("Opening compendium window for " + t);
                var i = 750
                  , n = 800
                  , r = $(window).height() - 100;
                r > n && (r = n);
                var o = $(window).width() - 50;
                o > i && (o = i);
                var a = $("<div class='compendiumpopup'><iframe src=\"" + d20.compendium.compendiumBase + "compendium/" + COMPENDIUM_BOOK_NAME + "/" + t + "\" style='width: 100%; height: calc(100% - 5px);' frameborder='0'></iframe></div>");
                a.dialog({
                    modal: !1,
                    title: "<button class='showpopout btn pictos' style='margin-right: 15px;'>|</button>" + e.split(":")[0],
                    beforeClose: function() {
                        a.dialog("destroy").remove()
                    },
                    width: o + 40,
                    height: r,
                    zIndex: 11e3
                });
                var s = function() {
                    var i = a
                      , n = 900
                      , r = 750;
                    n = i.width(),
                    r = i.height(),
                    i.dialog("close");
                    var o = window.open("/editor/popout", "Popout" + t, "menubar=0,location=0,toolbar=0,status=0,scrollbars=1,width=" + n + ",height=" + r);
                    window.allChildWindows.push(o),
                    o.onload = function() {
                        i.appendTo(o.document.getElementById("containerdiv")),
                        i.show(),
                        o.document.title = e
                    }
                    ,
                    o.onbeforeunload = function() {
                        window.allChildWindows = _.without(window.allChildWindows, othis.childWindow),
                        o = null ,
                        i.html(""),
                        i = null
                    }
                }
                ;
                a.parent().on("click", ".showpopout", function() {
                    s()
                })
            }
            ;
            t.on("click", ".dd-item", function() {
                var e = $(this).find(".dd-content").text();
                i.val("Category:" + e),
                r()
            }),
            $.get(d20.compendium.compendiumBase + "compendium/" + COMPENDIUM_BOOK_NAME + "/_CatIndex.json", function(e) {
                var t = "<ol class='dd-list'>";
                _.each(e, function(e) {
                    t += "<li class='dd-item'><div class='dd-content'>" + e + "</div></li>"
                }),
                t += "</ol>",
                $("#compendium .compendiumindex").html(t)
            })
        }
    }),
    d20.library = "development" === d20ext.environment ? {
        libraryBase: "http://app.roll20.local:5000"
    } : {
        libraryBase: "https://app.roll20.net"
    },
    d20.library.lastMultipleDragInfo = [],
    d20.library.recentuploadspage = 0,
    $(function() {
        "staging" === d20ext.environment && $.ajaxPrefilter(function(e) {
            -1 !== e.url.indexOf("app.roll20.net") && -1 !== e.url.indexOf("image_library") && (e.crossDomain = {
                crossDomain: !0
            },
            e.xhrFields = {
                withCredentials: !0
            })
        });
        var e = $("#imagedialog #libraryfolderroot")
          , t = $("#imagedialog #marketplacelibrary")
          , i = $("#imagedialog #userlibrary")
          , n = $("#imagedialog #recentuploads")
          , r = $("#imagedialog #librarysearchroot")
          , o = ($("#imagedialog input.keywords"),
        $("#imagedialog #marketplaceresults"))
          , a = $("#imagedialog #libraryresults")
          , s = $("#imagedialog #googleresults")
          , l = $("#upperCanvas");
        e.nestable({
            dropOutsideListHandler: function(e, t, i) {
                if (0 !== t.length && t[0] === l[0] && (console.log("Dropped outside list!"),
                i.hasClass("draggableresult"))) {
                    var n = i.attr("data-fullsizeurl")
                      , r = Math.floor(e.originalEvent.pageX / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] / d20.engine.canvasZoom)
                      , o = Math.floor(e.originalEvent.pageY / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] / d20.engine.canvasZoom)
                      , a = !1;
                    e.altKey && (a = !0);
                    var s = d20.engine.snapTo
                      , c = d20.engine.snapTo;
                    0 != d20.engine.snapTo && a === !1 && "map" != window.currentEditingLayer ? (s = d20.engine.snapTo,
                    c = d20.engine.snapTo) : i.attr("data-width") ? (s = parseInt(i.attr("data-width"), 10),
                    c = parseInt(i.attr("data-height"), 10)) : (s = i.find("img")[0].naturalWidth,
                    c = i.find("img")[0].naturalHeight);
                    {
                        var d = {
                            x: r,
                            y: o,
                            width: s,
                            height: c,
                            imgsrc: n,
                            imgwidth: s,
                            imgheight: c
                        };
                        d20.Campaign.activePage().addImage(d, a, !1)
                    }
                }
            }
        }),
        r.nestable(),
        $("#imagedialog .keywords").bind("keyup", function() {
            d20.lazySearch()
        }),
        $("#imagedialog .searchbox").on("click", "a", function() {
            "" != $("#imagedialog .keywords").val() && ($("#imagedialog .keywords").val(""),
            e.show(),
            r.hide()),
            "switchtomarketplacelibrary" === this.id && ($(this).hasClass("active") || ($("#marketplacelibrary").show(),
            $("#userlibrary").hide(),
            $("#recentuploads").hide(),
            $(this).addClass("active"),
            $("#switchtouserlibrary").removeClass("active")),
            window.currentPlayer && window.currentPlayer.save({
                librarytab: "marketplace"
            })),
            "switchtouserlibrary" === this.id && ($(this).hasClass("active") || ($("#marketplacelibrary").hide(),
            $("#userlibrary").show(),
            $("#recentuploads").show(),
            $(this).addClass("active"),
            $("#switchtomarketplacelibrary").removeClass("active")),
            window.currentPlayer && window.currentPlayer.save({
                librarytab: "library"
            }))
        }),
        window.currentPlayer && "library" === window.currentPlayer.get("librarytab") ? $("#switchtouserlibrary").trigger("click") : $("#switchtomarketplacelibrary").trigger("click"),
        $("#imagedialog").on("click", ".addlibraryfolder", function() {
            var e = prompt("What do you want to call the new folder?");
            null != e && d20.library.addFolder(e, "root", $("#userlibrary"))
        }),
        $("#imagedialog").on("click", ".showuploaddialog", function() {
            d20.library.showUploadDialog()
        }),
        $("#imagedialog").on("click", ".recentuploadsfilter", function() {
            window.currentPlayer && ($(this).hasClass("filtered") ? (window.currentPlayer.save({
                recentuploadsfilter: !1
            }),
            $(this).switchClass("filtered", "notfiltered")) : (window.currentPlayer.save({
                recentuploadsfilter: !0
            }),
            $(this).switchClass("notfiltered", "filtered")),
            d20.library.buildRecentUploads())
        }),
        $("#imagedialog").on("click", ".searchstyle", function() {
            window.currentPlayer && ($(this).hasClass("filtered") ? (window.currentPlayer.save({
                bigsearchstyle: !1
            }),
            $(this).switchClass("filtered", "notfiltered"),
            $("#librarysearchroot").removeClass("fullsizesearch")) : (window.currentPlayer.save({
                bigsearchstyle: !0
            }),
            $(this).switchClass("notfiltered", "filtered"),
            $("#librarysearchroot").addClass("fullsizesearch")),
            d20.library.buildRecentUploads())
        }),
        $("#imagedialog").on("click", ".searchinfotoggle", function() {
            $("#searchinfo").is(":visible") ? $("#searchinfo").hide() : $("#searchinfo").show()
        }),
        $("#userlibrary").on("click", ".dd-content", function() {
            var e = $(this).closest(".dd-folder")
              , t = $(this).parent().attr("data-folderid") ? "folder" : "item"
              , i = $(this).parent().attr("folder" === t ? "data-folderid" : "data-imageid");
            d20.library.doRenderFolder(e, "", t, i)
        }),
        $("#recentuploads").on("click", ".dd-content", function() {
            var e = $(this).parent().attr("data-imageid");
            d20.library.doRecentUploads(e)
        }),
        $("#libraryresults").on("click", ".libraryresult.library-item .dd-content", function() {
            var e = $(this).parent().attr("data-foldertags");
            if ("" === e)
                var t = [];
            else
                var t = e.split(",");
            if (t && t.length > 0) {
                var i, n = "item", r = $(this).parent().attr("data-imageid");
                d20.library.doRenderFolder(i, t[0], n, r)
            } else {
                var r = $(this).parent().attr("data-imageid");
                d20.library.doRecentUploads(r)
            }
        }),
        $("#libraryview").on("click", ".library-imgcontainer", function() {
            $(this).parent().toggleClass("selected")
        }),
        $("#libraryview").on("dblclick", ".library-imgcontainer", function() {
            var e = $(this).parents(".folder");
            if (e.length) {
                var t = $("#userlibrary").find("*[data-folderid='" + e.attr("data-folderid") + "']");
                d20.library.doRenderFolder(t, e.attr("data-folderid"), "folder", $("#libraryview").attr("data-folderid"))
            }
        }),
        $("#libraryview").on("click", ".library-labelcontainer", function() {
            $(this).after("<input type='text' style='width: calc(100% + 10px); margin-left: -10px;' class='libraryeditbox editbox' value='" + $(this).text() + "'' />"),
            $(this).hide(),
            $(this).next(".editbox").focus()
        }),
        $("#libraryview").on("blur", ".libraryeditbox", function() {
            var e = $(this).closest(".library-container");
            if (e.hasClass("folder"))
                d20.library.renameFolder($(this).val(), e.attr("data-folderid"), e, !0);
            else {
                var t = e.index();
                d20.library.renameItem($(this).val(), e.attr("data-imageid"), e, e.find(".library-labelcontainer").text(), $("#libraryview").attr("data-folderid"), !0, t)
            }
        }),
        $("#libraryview").on("keydown", ".editbox", function(e) {
            (13 === e.which || 27 === e.witch) && $(this).trigger("blur")
        }),
        $("#libraryview").on("click", function() {
            var e = $(this).find(".textboxlist:not('.noedit')");
            e.find(".input").hide(),
            e.addClass("noedit")
        }),
        $("#libraryview").on("click", ".upcontainer", function() {
            $.get(d20.library.libraryBase + "/image_library/fetchfolderinfo/" + $("#libraryview").attr("data-folderid"), function(e) {
                var t = JSON.parse(e)
                  , i = $("#userlibrary").find("*[data-folderid='" + t.parent + "']");
                d20.library.doRenderFolder(i, t.parent, "folder", $("#libraryview").attr("data-folderid"))
            })
        }),
        d20.library.renderLibraryView = function(e, t, i) {
            $("#libraryview").attr("data-isopen", !0);
            var n = "";
            if (_.each(e, function(e) {
                "folder" === e.t ? n += "<div class='library-container folder' data-folderid='" + e.id + "'><div class='library-imgcontainer'><span class='pictos' style='cursor: default;'>o</span></div><div class='library-labelcontainer'><span>" + e.n + "</span></div><div class='editbox'><span></span></div><div style='clear: both;'></div></div>" : "item" === e.t && (n += "<div class='library-container item' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "'><div class='library-imgcontainer'><img src='" + e.img_url + "'></div><div class='library-labelcontainer'><span>" + e.n + "</span></div><div class='yourtags editbox' data-imageid='" + e.id + "' data-editable='true' style='position: relative;'></div><div style='clear: both;'></div></div>")
            }),
            "root" != $("#libraryview").attr("data-folderid") && (n += "<div class='upcontainer' style='cursor: pointer; position: absolute; top: 10px; right: 10px;'><span class='pictos gouplevel' title='Go up a level in the folder structure'>{</span></div>"),
            $("#libraryview").html(n),
            "folder" === t)
                $("*[data-folderid=" + i + "]").addClass("selected"),
                $("#libraryview").scrollTo("*[data-folderid=" + i + "]");
            else if ("item" === t)
                $("*[data-imageid=" + i + "]").addClass("selected"),
                $("#libraryview").scrollTo("*[data-imageid=" + i + "]");
            else if ("massdrop" === t) {
                var r = JSON.parse(i);
                _.each(r, function(e) {
                    "folder" === e.t ? $("*[data-folderid=" + e.id + "]").addClass("selected") : "item" === e.t && $("*[data-imageid=" + e.id + "]").addClass("selected")
                }),
                r[0] && ("folder" === r[0].t ? $("#libraryview").scrollTo("*[data-folderid=" + r[0].id + "]") : "item" === r[0].t && $("#libraryview").scrollTo("*[data-imageid=" + r[0].id + "]"))
            }
            d20.library.processView()
        }
        ,
        $("#libraryview").droppable({
            accept: ".draggableresult, .dd-dragel",
            tolerance: "pointer",
            drop: function(t, i) {
                t.preventDefault(),
                t.stopPropagation(),
                t.originalEvent.dropHandled = !0,
                console.log("drop on library view");
                var n = $(i.draggable)
                  , r = $("#libraryview").attr("data-folderid")
                  , o = $("root" === r ? "#userlibrary" : "#userlibrary *[data-folderid='" + r + "']")
                  , a = n.attr("data-oldparent")
                  , s = $("*[data-folderid='" + a + "']")
                  , l = n.hasClass("libraryfolder") ? "folder" : "item";
                if (itemid = n.attr("folder" === l ? "data-folderid" : "data-imageid"),
                r !== a && "recentuploads" !== r && n.hasClass("draggableresult"))
                    if (n.parents("#userlibrary").length > 0) {
                        var c = []
                          , d = 0
                          , h = n.attr("data-oldindex")
                          , u = "";
                        if (0 === s.length && (s = $("#userlibrary")),
                        n.hasClass("libraryfolder")) {
                            var p = html_sanitize(n.children(".dd-content").children(".folder-title").text());
                            c.push({
                                id: n.attr("data-folderid"),
                                n: p,
                                t: "folder"
                            })
                        } else if (n.hasClass("library-item")) {
                            var f = n.find("img").prop("src")
                              , g = html_sanitize(n.find(".namecontainer").text());
                            c.push({
                                id: n.attr("data-imageid"),
                                n: g,
                                t: "item",
                                fullsize_url: n.attr("data-fullsizeurl"),
                                img_url: f
                            })
                        }
                        $.post(d20.library.libraryBase + "/image_library/movelibraryitem/", {
                            appid: itemid,
                            parent: r,
                            type: l,
                            oldparent: a,
                            newindex: d,
                            oldindex: h,
                            placedafterid: u,
                            itemstructure: JSON.stringify(c)
                        }, function(t) {
                            if (!y(t, "move")) {
                                var i = "";
                                c[0] && "folder" === c[0].t ? i = "<div class='library-container folder' data-folderid='" + c[0].id + "'><div class='library-imgcontainer'><span class='pictos' style='cursor: default;'>o</span></div><div class='library-labelcontainer'><span>" + c[0].n + "</span></div><div class='editbox'><span></span></div><div style='clear: both;'></div></div>" : c[0] && "item" === c[0].t && (i = "<div class='library-container item' data-fullsizeurl='" + c[0].fullsize_url + "' data-imageid='" + c[0].id + "'><div class='library-imgcontainer'><img src='" + c[0].img_url + "'></div><div class='library-labelcontainer'><span>" + c[0].n + "</span></div><div class='yourtags editbox' data-imageid='" + c[0].id + "' data-editable='true' style='position: relative;'></div><div style='clear: both;'></div></div>"),
                                $("#libraryview").prepend(i),
                                n.remove(),
                                o && "true" === o.attr("data-content") && (c[0] && "item" === c[0].t && (o.children(".dd-list").prepend("<li class='dd-item library-item draggableresult recentupload' data-fullsizeurl='" + c[0].fullsize_url + "' data-imageid='" + c[0].id + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + c[0].img_url + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + c[0].n + "</div></div></div></li>"),
                                d20.library.buildRecentUploads()),
                                c[0] && "folder" === c[0].t && o.children(".dd-list").prepend("<li class='dd-item dd-folder dd-collapsed libraryfolder' data-folderid='" + c[0].id + "'><button class='dd-sortablehandle' data-action='collapse' type='button' style='display: none;'>Collapse</button><button class='dd-sortablehandle' data-action='expand' type='button'>Expand</button><div class='dd-content'><div class='folder-title'>" + c[0].n + "</div></div><ol class='dd-list'></ol>"),
                                $("#imagedialog #userlibrary .draggableresult").draggable({
                                    handle: ".namecontainer",
                                    revert: !0,
                                    revertDuration: 0,
                                    helper: "clone",
                                    appendTo: "body",
                                    start: function() {
                                        e.addClass("externaldrag"),
                                        $(this).attr("data-oldindex", $(this).index()),
                                        $(this).parents(".libraryfolder").length > 0 ? $(this).attr("data-oldparent", $(this).parent().closest(".libraryfolder").attr("data-folderid")) : $(this).attr("data-oldparent", "root")
                                    },
                                    stop: function() {
                                        e.removeClass("externaldrag")
                                    }
                                }).addTouch())
                            }
                        })
                    } else {
                        var m = $("#imagedialog .keywords").val()
                          , p = html_sanitize(o ? o.children(".dd-content").children(".folder-title").text() : $("#libraryview").parent().find("span.ui-dialog-title").text().substring(2));
                        d20.library.doCopyToFolder(p, r, l, itemid, html_sanitize(n.find(".namecontainer").text()), n.find("img").prop("src"), n, m)
                    }
            }
        }),
        d20.library.renderRecentView = function(e, t, i) {
            if ($("#libraryview").attr("data-isopen", !0),
            e.length > 0) {
                var n = "";
                n += "<div style='color: red; background-color: rgb(247,235,235); padding: 5px; border-radius: 5px; font-size: 14px; margin-bottom: 2px;'><em>WARNING: Items deleted from the Recent Uploads folder are permanently removed from Roll20. Images will dissapear from all games they're being used in and the image will no longer count towards your total storage quota. This action cannot be undone.</em></div>",
                n += "<div class='quota' style='text-align: right;'><em>Level: </em><span class='highestbadgelevel'></span> <em style='margin-left: 20px;'>Storage Quota: </em><span class='storagequota'></span></div>",
                _.each(e, function(e) {
                    var t = new Date(parseInt(e.upload_date, 10));
                    n += "<div class='library-container item' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "'><div class='library-imgcontainer'><img src='" + e.image_url + "'></div><div class='library-labelcontainer'><span>" + e.name + "</span></div><div class='yourtags editbox' data-imageid='" + e.id + "' data-editable='true' style='position: relative;'></div><div class='metadata'><span>" + ("null" != e.upload_date && null != e.upload_date ? t.format("{yyyy}-{MM}-{dd}") : "") + "</span><span>" + ("null" != e.file_size && null != e.file_size ? e.file_size : "") + "</span></div><div style='clear: both;'></div></div>"
                }),
                $("#libraryview").html(n),
                $("*[data-imageid=" + t + "]").addClass("selected"),
                $("#libraryview").scrollTo("*[data-imageid=" + t + "]"),
                d20.library.processView(),
                c(),
                $("#libraryview").off("infinitescroll.scrollpage-library"),
                $("#libraryview").off("scroll.is-library"),
                $("#libraryview").infinitescroll({
                    url: d20.library.libraryBase + "/image_library/fetchorphanassets/" + i,
                    appendTo: $("#libraryview"),
                    container: $("#libraryview"),
                    page: d20.library.recentuploadspage + 1,
                    precheck: function() {
                        return $("#libraryview").attr("data-isopen")
                    },
                    eventsuffix: "-library",
                    triggerAt: 50,
                    requestType: "get",
                    callback: function(e) {
                        var t = JSON.parse(e)
                          , i = "";
                        _.each(t, function(e) {
                            var t = new Date(parseInt(e.upload_date, 10));
                            i += "<div class='library-container item' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "'><div class='library-imgcontainer'><img src='" + e.image_url + "'></div><div class='library-labelcontainer'><span>" + e.name + "</span></div><div class='yourtags editbox' data-imageid='" + e.id + "' data-editable='true' style='position: relative;'></div><div class='metadata'><span>" + ("null" != e.upload_date && null != e.upload_date ? t.format("{yyyy}-{MM}-{dd}") : "") + "</span><span>" + ("null" != e.file_size && null != e.file_size ? e.file_size : "") + "</span></div><div style='clear: both;'></div></span></div></div>"
                        }),
                        50 === t.length && (i += "<div class='alert orange'><img src='/images/load.gif' width='15' height='15' /> Loading Recent Uploads...</div>"),
                        $("#libraryview").find(".alert").remove(),
                        $("#libraryview").append(i),
                        d20.library.processView()
                    }
                })
            }
        }
        ,
        d20.library.doRenderFolder = function(e, t, i, n) {
            var r = "";
            if (e || (e = $("#userlibrary").find("*[data-folderid='" + t + "']"),
            0 === e.length && (e = !1)),
            e) {
                var t = e.attr("data-folderid");
                r = html_sanitize(e.children(".dd-content").children(".folder-title").text()),
                r || (r = "My Library"),
                t || (t = "root")
            } else
                $.get(d20.library.libraryBase + "/image_library/fetchfolderinfo/" + t, function(e) {
                    var t = JSON.parse(e);
                    r = html_sanitize(t.name)
                });
            if ($("#libraryview").attr("data-folderid", t),
            $("#libraryview").off("infinitescroll.scrollpage-library"),
            $("#libraryview").off("scroll.is-library"),
            e && "true" === e.attr("data-content")) {
                var o = [];
                _.each(e.children(".dd-list").children("li"), function(e) {
                    if ($item = $(e),
                    $item.hasClass("dd-folder")) {
                        var t = html_sanitize($item.children(".dd-content").children(".folder-title").text());
                        o.push({
                            id: $item.attr("data-folderid"),
                            n: t,
                            t: "folder"
                        })
                    } else {
                        var i = $item.find("img").prop("src")
                          , t = html_sanitize($item.find(".namecontainer").text());
                        o.push({
                            id: $item.attr("data-imageid"),
                            n: t,
                            t: "item",
                            fullsize_url: $item.attr("data-fullsizeurl"),
                            img_url: i
                        })
                    }
                }),
                "true" === $("#libraryview").attr("data-isopen") && d20.library.renderLibraryView(o, i, n),
                $("#libraryview").dialog({
                    title: "<span class='pictos showtip tipsy' style='font-size: 1.1em; cursor: help; position: absolute; right: 35px;' title='The Folder view allows you to select multiple assets at the same time. Click on the asset to select it. Once selected you can move grouped assets, tag grouped items, or mass delete items and folders.'>?</span> " + r,
                    width: "610px",
                    height: .85 * $(window).height(),
                    zIndex: 10600,
                    open: function() {
                        d20.library.renderLibraryView(o, i, n)
                    },
                    beforeClose: function() {
                        $("#libraryview").attr("data-isopen", !1)
                    }
                })
            } else
                $.get(d20.library.libraryBase + "/image_library/fetchlibraryfolder/" + t, function(t) {
                    if (!y(t)) {
                        var o = JSON.parse(t);
                        e && (b(e, o),
                        e.attr("data-content", !0)),
                        "true" === $("#libraryview").attr("data-isopen") && d20.library.renderLibraryView(o, i, n),
                        $("#libraryview").dialog({
                            title: "<span class='pictos showtip tipsy' style='font-size: 1.1em; cursor: help; position: absolute; right: 35px;' title='The Folder view allows you to select multiple assets at the same time. Click on the asset to select it. Once selected you can move grouped assets, tag grouped items, or mass delete items and folders.'>?</span> " + r,
                            width: "610px",
                            height: .85 * $(window).height(),
                            zIndex: 10600,
                            open: function() {
                                d20.library.renderLibraryView(o, i, n)
                            },
                            beforeClose: function() {
                                $("#libraryview").attr("data-isopen", !1)
                            }
                        })
                    }
                })
        }
        ,
        d20.library.doRecentUploads = function(e) {
            $("#libraryview").attr("data-folderid", "recentuploads");
            var t = !1;
            window.currentPlayer && (t = window.currentPlayer.get("recentuploadsfilter"));
            var i = [];
            _.each($("#recentuploads .dd-list li"), function(e) {
                $item = $(e);
                var t = $item.find("img").prop("src")
                  , n = html_sanitize($item.find(".namecontainer").text());
                i.push({
                    id: $item.attr("data-imageid"),
                    name: n,
                    t: "item",
                    fullsize_url: $item.attr("data-fullsizeurl"),
                    image_url: t,
                    file_size: $item.attr("data-filesize"),
                    upload_date: $item.attr("data-uploaddate")
                })
            }),
            "true" === $("#libraryview").attr("data-isopen") ? d20.library.renderRecentView(i, e, t) : $("#libraryview").dialog({
                title: "<span class='pictos showtip tipsy' style='font-size: 1.1em; cursor: help; position: absolute; right: 35px;' title='The Folder view allows you to select multiple assets at the same time. Click on the asset to select it. Once selected you can move grouped assets, tag grouped items, or mass delete items and folders.'>?</span> Recent Uploads",
                width: "610px",
                height: .85 * $(window).height(),
                zIndex: 10600,
                open: function() {
                    d20.library.renderRecentView(i, e, t)
                },
                beforeClose: function() {
                    $("#libraryview").attr("data-isopen", !1),
                    $("#libraryview").off("infinitescroll.scrollpage-library"),
                    $("#libraryview").off("scroll.is-library")
                }
            })
        }
        ,
        d20.library.processView = function() {
            window.yourTagViews = Array(),
            $(".yourtags:not(:has(*))").each(function() {
                var e = new window.YourTagsView({
                    el: $(this)
                });
                window.yourTagViews.push(e)
            });
            var e;
            $("#libraryview .library-container").draggable({
                revert: !0,
                distance: 10,
                revertDuration: 0,
                cursorAt: {
                    left: -20,
                    top: 10
                },
                helper: function() {
                    var e = d20.library.getSelected();
                    return 0 === e.count ? (d20.library.lastMultipleDragInfo = [],
                    "<div></div>") : "<div class='libraryviewhelper'>" + e.count + " Items</div>"
                },
                appendTo: "body",
                scroll: !1,
                zIndex: 1e6,
                start: function(t) {
                    $("#recentuploads").addClass("nestable-nodrop"),
                    $("#imagedialog").on("mouseenter", function() {
                        $("#imagedialog").off("mouseenter"),
                        e = $("<li data-massdrop='true'></li>"),
                        e.addClass("dd-item"),
                        e.appendTo($("#userlibrary > ol.dd-list")),
                        $("#libraryfolderroot").data("nestable").dragStart(t, e)
                    })
                },
                stop: function() {
                    $("#recentuploads").removeClass("nestable-nodrop"),
                    $("#imagedialog").off("mouseenter")
                }
            }).addTouch()
        }
        ;
        var c = function() {
            $.get(d20.library.libraryBase + "/image_library/fetchquota/", function(e) {
                var t = JSON.parse(e);
                $("#libraryview .quota .highestbadgelevel").text(t.level),
                $("#libraryview .quota .storagequota").text(t.curquota + "MB / " + t.quota + "MB"),
                t.curquota > t.quota ? $("#libraryview .quota .storagequota").addClass("red") : $("#libraryview .quota .storagequota").hasClass("red") && $("#libraryview .quota .storagequota").removeClass("red")
            })
        }
          , d = function() {
            e.hide(),
            r.show(),
            $("#switchtouserlibrary").removeClass("active"),
            $("#switchtomarketplacelibrary").removeClass("active"),
            $("#imagedialog").unbind("scroll.is");
            for (var t = $("#imagedialog .searchbox .searchtype").val(), i = ($("#searchsettings input[name=webimages]").is(":checked"),
            0); i < d20.searchRequests.length; i++)
                d20.searchRequests[i].abort();
            var n = encodeURIComponent($("#imagedialog .keywords").val());
            return "" == n ? (e.show(),
            r.hide(),
            window.currentPlayer && ("marketplace" === window.currentPlayer.librarytab ? $("#switchtomarketplacelibrary").trigger("click") : $("#switchtouserlibrary").trigger("click")),
            !0) : (o.html("<div class='alert orange'><img src='/images/load.gif' width='15' height='15' /> Searching Purchases...</div>"),
            d20.searchRequests.push($.get(d20.library.libraryBase + "/image_library/search_marketplace/" + t + "/" + n, function(e) {
                var t = JSON.parse(e)
                  , i = "";
                i += "<ol class='dd-list'>",
                o.html(""),
                _.isEmpty(t) || (_.each(["purchases", "ttfsets", "mentorsets", "free"], function(e) {
                    if (t[e]) {
                        fname = "free" === e ? "Free Assets" : "purchases" === e ? "Marketplace Purchases" : "mentorsets" === e ? "Pro Sets" : "ttfsets" === e ? "Backer Sets" : e,
                        i += "<li class='dd-item dd-folder'>",
                        i += "<button class='dd-unsortable' data-action='collapse' type='button'>Collapse</button>",
                        i += "<button class='dd-unsortable' data-action='expand' type='button' style='display: none;'>Expand</button>",
                        i += "<div class='dd-content'>",
                        i += "<div class='folder-title'>" + fname + "</div>",
                        i += "</div>",
                        i += "<ol class='dd-list'>";
                        var n = [];
                        for (var r in t[e])
                            n.push([r, t[e][r]]);
                        n.sort(function(e, t) {
                            return e[1] < t[1] ? -1 : e[1] > t[1] ? 1 : 0
                        }),
                        _.each(n, function(e) {
                            i += "<li class='dd-item dd-folder tokenset' data-setid='" + e[0] + "' >",
                            i += "<button class='dd-unsortable' data-action='collapse' type='button'>Collapse</button>",
                            i += "<button class='dd-unsortable' data-action='expand' type='button' style='display: none;'>Expand</button>",
                            i += "<div class='dd-content'>",
                            i += "<div class='folder-title'>" + e[1][0].setname + "</div>",
                            i += "</div>",
                            i += "<ol class='dd-list'>",
                            _.each(e[1], function(e) {
                                i += "<li class='dd-item library-item draggableresult' data-fullsizeurl='" + e.fullsize_url + "' data-itemid='" + e.id + "'><div class='dd-content'><div class='token'><img src='" + e.image_url + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.credit + "</div></div></div></li>"
                            }),
                            i += "</ol>"
                        }),
                        i += "</ol>",
                        i += "</li>"
                    }
                }),
                t.marketplace && t.marketplace.length > 0 && (i += "<li class='dd-item dd-folder'>",
                i += "<button class='dd-unsortable' data-action='collapse' type='button'>Collapse</button>",
                i += "<button class='dd-unsortable' data-action='expand' type='button' style='display: none;'>Expand</button>",
                i += "<div class='dd-content marketplacead'>",
                i += "<div class='folder-title'>Premium Assets</div>",
                i += "</div>",
                i += "<ol class='dd-list'>",
                _.each(t.marketplace, function(e, t) {
                    i += 3 > t ? "<li class='dd-item library-item marketplacead'><div class='dd-content'><div class='token'><a class='buyart' data-href='" + e.buy_url + "'><img src='" + e.image_url + "' draggable='false'></a></div><div class='name'><div class='namecontainer'><a class='buyart' data-href='" + e.buy_url + "'>" + e.credit + "</a></div></div></div></li>" : "<li style='display: none;' class='dd-item library-item marketplacead'><div class='dd-content'><div class='token'><a class='buyart' data-href='" + e.buy_url + "'><img src='" + e.image_url + "' draggable='false'></a></div><div class='name'><div class='namecontainer'><a class='buyart' data-href='" + e.buy_url + "'>" + e.credit + "</a></div></div></div></li>"
                }),
                t.marketplace.length > 3 && (i += "<a class='expandsearch' href='javascript:void(0);'>More Premium Assets &raquo</a>"),
                i += "</ol>",
                i += "</li>")),
                i += "</ol>",
                o.html(i),
                $("#imagedialog #marketplaceresults .draggableresult").draggable({
                    handle: ".dd-content",
                    revert: !0,
                    revertDuration: 0,
                    helper: "clone",
                    appendTo: "body"
                }).addTouch()
            })),
            a.html("<div class='alert orange'><img src='/images/load.gif' width='15' height='15' /> Searching your Library...</div>"),
            d20.searchRequests.push($.post(d20.library.libraryBase + "/image_library/usersearch", {
                keywords: n
            }, function(e) {
                var t = JSON.parse(e);
                a.html("");
                var i = "";
                i += "<ol class='dd-list'>",
                t.length > 0 ? (i += "<li class='dd-item dd-folder libraryresult'>",
                i += "<button class='dd-unsortable' data-action='collapse' type='button'>Collapse</button>",
                i += "<button class='dd-unsortable' data-action='expand' type='button' style='display: none;'>Expand</button>",
                i += "<div class='dd-content'>",
                i += "<div class='folder-title'>From your Library</div>",
                i += "</div>",
                i += "<ol class='dd-list libraryresultfolder'>",
                _.each(t, function(e) {
                    i += "<li class='dd-item library-item draggableresult libraryresult' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "' data-foldertags='" + e.foldertags.join(",") + "'><div class='dd-content'><div class='token'><img src='" + e.image_url + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.credit + "</div></div></div></li>"
                }),
                i += "</ol>",
                i += "</li>") : i += "<div class='alert white'>No results found in your library for those keywords.</div>",
                i += "</ol>",
                a.html(i),
                $("#imagedialog #libraryresults .draggableresult").draggable({
                    handle: ".dd-content",
                    revert: !0,
                    revertDuration: 0,
                    helper: "clone",
                    appendTo: "body"
                }).addTouch()
            })),
            s.html("<div class='alert orange'><img src='/images/load.gif' width='15' height='15' /> Searching the Web...</div>"),
            void d20.searchRequests.push($.get(d20.library.libraryBase + "/image_library/websearch/" + t + "/" + escape(n) + "/1", function(e) {
                var i = JSON.parse(e);
                s.html("");
                var o = "";
                o += "<ol class='dd-list'>",
                i.length > 0 ? (o += "<li class='dd-item dd-folder googleresult'>",
                o += "<button class='dd-unsortable' data-action='collapse' type='button'>Collapse</button>",
                o += "<button class='dd-unsortable' data-action='expand' type='button' style='display: none;'>Expand</button>",
                o += "<div class='dd-content'>",
                o += "<div class='folder-title'>From the Web <small>Powered by Google</small></div>",
                o += "</div>",
                o += "<ol class='dd-list googleresultfolder'>",
                _.each(i, function(e) {
                    o += "<li class='dd-item library-item draggableresult googleresult' data-fullsizeurl='" + e.fullsize_url + "'><div class='dd-content'><div class='token'><img src='" + e.image_url + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.credit + "</div></div></div></li>"
                }),
                o += "</ol>",
                o += "</li>",
                $("#imagedialog").infinitescroll({
                    url: d20.library.libraryBase + "/image_library/websearch/" + t + "/" + escape(n),
                    appendTo: s.find(".dd-list"),
                    container: r,
                    precheck: function() {
                        return $("#arttab").hasClass("ui-state-active") && r.is(":visible")
                    },
                    triggerAt: 50,
                    requestType: "get",
                    callback: function(e) {
                        $("#imagedialog #googleresults .alert").remove();
                        var t = JSON.parse(e)
                          , i = "";
                        _.each(t, function(e) {
                            i += "<li class='dd-item library-item draggableresult googleresult' data-fullsizeurl='" + e.fullsize_url + "'><div class='dd-content'><div class='token'><img src='" + e.image_url + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.credit + "</div></div></div></li>"
                        });
                        var n = s.find(".googleresultfolder");
                        n.append(i),
                        n.append("<div class='alert orange'><img src='/images/load.gif' width='15' height='15' /> Looking on the web...</div>"),
                        $("#imagedialog #googleresults .draggableresult").not(".ui-draggable").draggable({
                            handle: ".dd-content",
                            revert: !0,
                            revertDuration: 0,
                            helper: "clone",
                            appendTo: "body"
                        }).addTouch()
                    }
                })) : o += "<div class='alert white'>No results found on the web for those keywords.</div>",
                o += "</ol>",
                s.html(o),
                $("#imagedialog #googleresults .draggableresult").draggable({
                    handle: ".dd-content",
                    revert: !0,
                    revertDuration: 0,
                    helper: "clone",
                    appendTo: "body"
                }).addTouch(),
                setTimeout(function() {
                    ga("send", {
                        hitType: "event",
                        eventCategory: "Web Image Search",
                        eventAction: "In-app",
                        eventLabel: escape(n.toLowerCase())
                    })
                }, 0)
            })))
        }
        ;
        d20.lazySearch = _.debounce(d, 500),
        d20.searchRequests = [],
        t.on("click", ".tokenset .dd-unsortable[data-action='expand']", function() {
            var t = $(this).parent(".tokenset");
            if (!(t.find("ol.dd-list").length > 0)) {
                t.append("<div class='alert orange'><img src='/images/load.gif' width='15' height='15' /> Loading Set...</div>");
                var i = t.attr("data-setid");
                d20.searchRequests.push($.get(d20.library.libraryBase + "/image_library/fetchsetresults/" + i, function(i) {
                    var n = JSON.parse(i)
                      , r = "";
                    r += "<ol class='dd-list'>",
                    _.each(n, function(e, t) {
                        r += "<li class='dd-item library-item draggableresult' data-fullsizeurl='" + e.fullsize_url + "' data-itemid='" + t + "'><div class='dd-content'><div class='token'><img src='" + e.image_url + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.name + "</div></div></div></li>"
                    }),
                    r += "</ol>",
                    t.children(".alert").remove(),
                    t.append(r),
                    window.is_gm && !window.is_playerapp && $("#marketplacelibrary .library-item").not(".ui-draggable").draggable({
                        handle: ".dd-content",
                        revert: !0,
                        distance: 10,
                        revertDuration: 0,
                        helper: "clone",
                        appendTo: "body",
                        scroll: !1,
                        start: function() {
                            e.addClass("externaldrag")
                        },
                        stop: function() {
                            e.removeClass("externaldrag")
                        }
                    }).addTouch()
                }))
            }
        }),
        i.on("click", ".libraryfolder button[data-action='expand']", function() {
            var e = $(this).parent(".libraryfolder")
              , t = e.attr("data-folderid");
            "true" !== e.attr("data-content") && (e.append("<div class='alert orange'><img src='/images/load.gif' width='15' height='15' /> Loading Set...</div>"),
            $.get(d20.library.libraryBase + "/image_library/fetchlibraryfolder/" + t, function(t) {
                if (!y(t)) {
                    var i = JSON.parse(t);
                    e.children(".alert").remove(),
                    b(e, i)
                }
            }),
            e.attr("data-content", !0))
        }),
        $("body").append("<img id='fullsizepopup' src='' style='display: none;'>");
        var h = $("body").find("#fullsizepopup");
        e.add(r).on({
            mouseenter: function() {
                if (!($("body .ui-draggable-dragging").length > 0 || $(this).parents("#librarysearchroot.fullsizesearch").length > 0)) {
                    var t = $(this).find("img").attr("src");
                    h.attr("src") != t && h.attr("src", t);
                    var i = h.width() + 50
                      , n = h.height() / 2;
                    e.add(r).on("mousemove", function(e) {
                        return 50 === i || 0 === n ? (i = h.width() + 50,
                        void (n = h.height() / 2)) : void h.css({
                            position: "absolute",
                            "z-index": "100000",
                            "max-width": "256px",
                            "max-height": "256px",
                            left: e.clientX - i,
                            top: e.clientY - n
                        }).show()
                    }),
                    $(this).on("mousedown", function() {
                        e.add(r).off("mousemove"),
                        h.hide()
                    })
                }
            },
            mouseleave: function() {
                e.add(r).off("mousemove"),
                h.hide()
            }
        }, ".library-item"),
        r.on("click", ".expandsearch", function() {
            $(this).siblings().show(),
            $(this).hide()
        });
        var u, p = $("#librarymenu"), f = $("#libraryitemmenu"), g = $("#librarycopymenu"), m = $("#libraryviewmenu"), v = $("#libraryrecentviewmenu");
        $("#libraryfolderroot").on("contextmenu", ".dd-content", function(e) {
            window.is_gm && ($(this).parents("#userlibrary").length > 0 && ($(this).parent().hasClass("dd-folder") ? (p.show(),
            p.css({
                top: e.pageY + "px",
                left: e.pageX + "px"
            }),
            u = $(this).parent()) : $(this).parent().hasClass("dd-item") && (f.show(),
            f.css({
                top: e.pageY + "px",
                left: e.pageX + "px"
            }),
            $currentItemTarget = $(this).parent())),
            $(this).parents("#marketplacelibrary").length > 0 && ($currentTarget = $(this).parent(),
            ($currentTarget.attr("data-itemid") || $currentTarget.attr("data-setid")) && (g.find("li[data-action-type='permdelete']").hide(),
            g.find("li[data-action-type='renameitem']").hide(),
            g.show(),
            g.css({
                top: e.pageY + "px",
                left: e.pageX + "px"
            }))),
            e.preventDefault(),
            e.stopPropagation())
        }),
        $("#librarysearchroot").on("contextmenu", ".googleresult, .library-item, .dd-folder", function(e) {
            e.preventDefault(),
            e.stopPropagation(),
            $(this).hasClass("marketplacead") || $(this).hasClass("dd-folder") && !$(this).hasClass("tokenset") || ($currentTarget = $(this),
            $(this).hasClass("library-item") && $(this).parents("#libraryresults").length > 0 ? (g.find("li[data-action-type='permdelete']").show(),
            g.find("li[data-action-type='renameitem']").show()) : (g.find("li[data-action-type='permdelete']").hide(),
            g.find("li[data-action-type='renameitem']").hide()),
            g.show(),
            g.css({
                top: e.pageY + "px",
                left: e.pageX + "px"
            }))
        }),
        $("#recentuploads").on("contextmenu", ".library-item", function(e) {
            $currentTarget = $(this),
            g.find("li[data-action-type='permdelete']").show(),
            g.find("li[data-action-type='renameitem']").show(),
            g.show(),
            g.css({
                top: e.pageY + "px",
                left: e.pageX + "px"
            }),
            e.preventDefault(),
            e.stopPropagation()
        }),
        $("#libraryview").on("contextmenu", function(e) {
            $currentTarget = $(this),
            "recentuploads" === $("#libraryview").attr("data-folderid") ? (v.show(),
            v.css({
                top: e.pageY + "px",
                left: e.pageX + "px"
            })) : (m.show(),
            m.css({
                top: e.pageY + "px",
                left: e.pageX + "px"
            })),
            e.preventDefault(),
            e.stopPropagation()
        }),
        $("#librarymenu ul").on(mousedowntype, "li[data-action-type=addfolder]", function() {
            $("#librarymenu").hide();
            var e = prompt("What do you want to call the new folder?");
            if (null != e) {
                var t = u.attr("data-folderid");
                t && "recentuploads" !== t || (t = "root");
                var i = u;
                3 === u.parents(".dd-folder").length && (i = u.parent().closest(".dd-folder"),
                t = i.attr("data-folderid")),
                d20.library.addFolder(e, t, i)
            }
        }),
        $("#librarymenu ul").on(mousedowntype, "li[data-action-type=renamefolder]", function() {
            var e = prompt("What do you want to rename the new folder?");
            if (null != e) {
                var t = u.attr("data-folderid");
                t && "recentuploads" !== t || (t = "root"),
                $("#librarymenu").hide(),
                d20.library.renameFolder(e, t, u)
            }
        }),
        $("#librarymenu ul").on(mousedowntype, "li[data-action-type=deletefolder]", function() {
            if (confirm("Are you sure you want to delete this folder?")) {
                var e = u.attr("data-folderid");
                e && "recentuploads" !== e || (e = "root");
                var t = u.index();
                $("#librarymenu").hide(),
                d20.library.deleteFolder(e, u, t)
            }
        }),
        $("#librarymenu ul").on(mousedowntype, "li[data-action-type=sortalpha]", function() {
            var e = u.attr("data-folderid");
            e && "recentuploads" !== e || (e = "root"),
            $("#librarymenu").hide(),
            d20.library.sortFolder(e, u)
        }),
        $("#libraryitemmenu ul").on(mousedowntype, "li[data-action-type=deleteitem]", function() {
            $("#libraryitemmenu").hide();
            var e = $currentItemTarget.attr("data-imageid");
            if (!e)
                return void console.log("ERROR: Cannot find item.");
            var t = $currentItemTarget.parent().closest(".libraryfolder")
              , i = "";
            t.length > 0 ? i = t.attr("data-folderid") : (t = $("#userlibrary"),
            i = "root");
            var n = $currentItemTarget.index();
            $currentItemTarget.remove();
            var r = 0 === t.children(".dd-list").children('*[data-imageid="' + e + '"]').length ? !0 : !1;
            d20.library.deleteItem(e, r, i, n)
        }),
        $("#libraryitemmenu ul").on(mousedowntype, "li[data-action-type=renameitem]", function() {
            $("#libraryitemmenu").hide();
            var e = prompt("What do you want to rename the item?");
            if (null != e) {
                var t = $currentItemTarget.attr("data-imageid");
                if (t) {
                    var i = $currentItemTarget.find(".namecontainer").text()
                      , n = $currentItemTarget.parent().closest(".libraryfolder").attr("data-folderid") ? $currentItemTarget.parent().closest(".libraryfolder").attr("data-folderid") : "root"
                      , r = $currentItemTarget.index();
                    d20.library.renameItem(e, t, $currentItemTarget, i, n, !1, r)
                }
            }
        }),
        $("#librarycopymenu ul").on(mousedowntype, "li[data-action-type=renameitem]", function() {
            $("#librarycopymenu").hide();
            var e = prompt("What do you want to rename the item?");
            if (null != e) {
                var t = $currentTarget.attr("data-imageid");
                if (t) {
                    var i = $currentTarget.find(".namecontainer").text()
                      , n = "recentuploads"
                      , r = $currentTarget.index();
                    d20.library.renameItem(e, t, $currentTarget, i, n, !1, r)
                }
            }
        }),
        $("#librarycopymenu ul").on(mousedowntype, "li[data-action-type=copyasset]", function() {
            $("#librarycopymenu").hide();
            var e = ""
              , t = "";
            if ($currentTarget.hasClass("dd-folder"))
                var i = html_sanitize($currentTarget.find(".folder-title").text());
            else
                var i = html_sanitize($currentTarget.find(".namecontainer").text());
            var n = "";
            if ($currentTarget.hasClass("dd-folder") ? (e = "folder",
            t = $currentTarget.attr("data-setid")) : $currentTarget.hasClass("googleresult") ? (e = "item",
            t = "googleresult",
            n = $currentTarget.attr("data-fullsizeurl")) : $currentTarget.attr("data-imageid") ? (e = "item",
            t = $currentTarget.attr("data-imageid"),
            n = $currentTarget.find("img").prop("src")) : (e = "item",
            t = $currentTarget.attr("data-itemid"),
            n = $currentTarget.find("img").prop("src")),
            !t)
                return void console.log("ERROR: No ID found.");
            var r = $("#imagedialog .keywords").val();
            d20.library.copyAsset(e, t, i, n, $currentTarget, r)
        }),
        $("#librarycopymenu ul").on(mousedowntype, "li[data-action-type=copyassetfolder]", function(e) {
            e.preventDefault(),
            e.stopPropagation();
            var t = ""
              , i = "";
            if ($currentTarget.hasClass("dd-folder"))
                var n = html_sanitize($currentTarget.find(".folder-title").text());
            else
                var n = html_sanitize($currentTarget.find(".namecontainer").text());
            var r = "";
            return $currentTarget.hasClass("dd-folder") ? (t = "folder",
            i = $currentTarget.attr("data-setid")) : $currentTarget.hasClass("googleresult") ? (t = "item",
            i = "googleresult",
            r = $currentTarget.attr("data-fullsizeurl")) : $currentTarget.attr("data-imageid") ? (t = "item",
            i = $currentTarget.attr("data-imageid"),
            r = $currentTarget.find("img").prop("src")) : (t = "item",
            i = $currentTarget.attr("data-itemid"),
            r = $currentTarget.find("img").prop("src")),
            i ? void $.get(d20.library.libraryBase + "/image_library/fetchfolderlist/", function(e) {
                jsonobj = JSON.parse(e),
                $("#copytofolderinput").show(),
                $("#copytofolderinput").focus(),
                $("#copytofolderinput").autocomplete({
                    delay: 100,
                    autoFocus: !0,
                    position: {
                        my: "left top",
                        at: "left bottom",
                        collision: "fit"
                    },
                    source: function(e, t) {
                        var i = e.term
                          , n = [];
                        _.each(jsonobj, function(e) {
                            n.push({
                                label: e.path,
                                value: e.n,
                                id: e.id
                            })
                        });
                        var r = $.ui.autocomplete.filter(n, i);
                        t(r)
                    },
                    minLength: 2,
                    focus: function() {
                        return !1
                    },
                    select: function(e, o) {
                        var a = $("#imagedialog .keywords").val();
                        $("#copytofolderinput").autocomplete("close"),
                        $("#copytofolderinput").hide(),
                        setTimeout(function() {
                            $("#copytofolderinput").val("")
                        }, 200),
                        $("#librarycopymenu").hide(),
                        d20.library.doCopyToFolder(o.item.value, o.item.id, t, i, n, r, $currentTarget, a)
                    },
                    open: function() {
                        autoCompleteOpen = !0
                    },
                    close: function() {
                        setTimeout(function() {
                            autoCompleteOpen = !1
                        }, 250)
                    }
                })
            }) : void console.log("ERROR: No ID found.")
        }),
        $("#librarycopymenu").on("keydown", "#copytofolderinput", function(e) {
            27 === e.which && ($("#copytofolderinput").autocomplete("close"),
            $("#copytofolderinput").hide(),
            setTimeout(function() {
                $("#copytofolderinput").val("")
            }, 200),
            $("#librarycopymenu").hide())
        }),
        $("#libraryviewmenu ul").on(mousedowntype, "li[data-action-type=selectall]", function() {
            var e = $("#libraryview .library-container:not(.selected)");
            e.length > 0 ? $("#libraryview .library-container:not(.selected)").addClass("selected") : $("#libraryview .selected").removeClass("selected")
        }),
        $("#libraryrecentviewmenu ul").on(mousedowntype, "li[data-action-type=selectall]", function() {
            var e = $("#libraryview .library-container:not(.selected)");
            e.length > 0 ? $("#libraryview .library-container:not(.selected)").addClass("selected") : $("#libraryview .selected").removeClass("selected")
        }),
        $("#libraryviewmenu ul").on(mousedowntype, "li[data-action-type=addfolder]", function() {
            var e = prompt("What do you want to call the new folder?");
            if (null != e) {
                var t = $("#libraryview").attr("data-folderid");
                t && "recentuploads" !== t || (t = "root");
                var i = $("#userlibrary").find("*[data-folderid='" + t + "']");
                3 === i.parents(".dd-folder").length && (i = i.parent().closest(".dd-folder"),
                t = i.attr("data-folderid")),
                d20.library.addFolder(e, t, i, !0)
            }
        }),
        $("#libraryviewmenu ul").on(mousedowntype, "li[data-action-type=sortalpha]", function() {
            var e = $("#libraryview").attr("data-folderid");
            e && "recentuploads" !== e || (e = "root");
            var t = $("#userlibrary").find("*[data-folderid='" + e + "']");
            d20.library.sortFolder(e, t, !0)
        }),
        $("#libraryviewmenu ul").on(mousedowntype, "li[data-action-type=massdelete]", function() {
            var e = d20.library.getSelected();
            if (0 === e.count)
                return void alert("No items selected to delete.");
            if (confirm("Are you sure you want to delete the " + e.count + " selected items from this folder?")) {
                var t = [];
                $("#libraryview .library-container").each(function(e, i) {
                    $(i).hasClass("selected") && t.push(e)
                }),
                $("#libraryview .selected").remove();
                var i = $("#userlibrary").find("*[data-folderid='" + $("#libraryview").attr("data-folderid") + "']");
                if (i && "true" === i.attr("data-content") || "root" === $("#libraryview").attr("data-folderid")) {
                    var n = i.children(".dd-list").children();
                    _.each(n, function(e, i) {
                        t.indexOf(i) > -1 && e.remove()
                    })
                }
                d20.library.massDelete($("#libraryview").attr("data-folderid"), e.folderids, e.imageids, t)
            }
        }),
        $("#libraryviewmenu ul").on(mousedowntype, "li[data-action-type=masstag]", function() {
            var e = d20.library.getSelected();
            if (0 === e.count)
                return void alert("No items selected to tag.");
            var t = prompt("What tag do you want to add to these " + e.count + " items?");
            null != t && $.post(d20.library.libraryBase + "/image_library/masstag/", {
                ids: _.uniq(e.imageids),
                tagname: t
            }, function() {
                $.get(d20.library.libraryBase + "/image_library/fetchlibraryfolder/" + $("#libraryview").attr("data-folderid"), function(e) {
                    if (!y(e)) {
                        var t = JSON.parse(e);
                        "true" === $("#libraryview").attr("data-isopen") && d20.library.renderLibraryView(t, "", "")
                    }
                })
            })
        }),
        $("#libraryviewmenu ul").on(mousedowntype, "li[data-action-type=massremovetag]", function() {
            var e = d20.library.getSelected();
            if (0 === e.count)
                return void alert("No items selected to remove tags from.");
            var t = prompt("What tag do you want to remove from these " + e.count + " items?");
            null != t && $.post(d20.library.libraryBase + "/image_library/massremovetag/", {
                ids: _.uniq(e.imageids),
                tagname: t
            }, function() {
                $.get(d20.library.libraryBase + "/image_library/fetchlibraryfolder/" + $("#libraryview").attr("data-folderid"), function(e) {
                    if (!y(e)) {
                        var t = JSON.parse(e);
                        "true" === $("#libraryview").attr("data-isopen") && d20.library.renderLibraryView(t, "", "")
                    }
                })
            })
        }),
        $("#libraryrecentviewmenu ul").on(mousedowntype, "li[data-action-type=permdelete]", function() {
            var e = d20.library.getSelected();
            return 0 === e.count ? void alert("No items selected to delete.") : void (confirm("Are you sure you want to delete the " + e.count + " selected items? These items will be permanently removed from your library. This action cannot be undone.") && d20.library.permDelete(e))
        }),
        $("#librarycopymenu ul").on(mousedowntype, "li[data-action-type=permdelete]", function() {
            var e = $currentTarget.attr("data-imageid");
            if (!e)
                return void console.log("ERROR: No ID found.");
            if (confirm("Are you sure you want to delete " + html_sanitize($currentTarget.find(".namecontainer").text()) + "? This item will be permanently removed from your library and all games it's used in. This action cannot be undone.")) {
                var t = {
                    count: 1,
                    imageids: [e],
                    folderids: []
                };
                d20.library.permDelete(t),
                $currentTarget.remove()
            }
        }),
        $("body").on(mousedowntype, function() {
            "none" !== p[0].style.display && (p[0].style.display = "none"),
            f.length > 0 && "none" !== f[0].style.display && (f[0].style.display = "none"),
            g.length > 0 && ("none" !== g[0].style.display && (g[0].style.display = "none"),
            $("#copytofolderinput").hide(),
            setTimeout(function() {
                $("#copytofolderinput").val("")
            }, 200),
            $("#librarycopymenu").hide()),
            "none" !== m[0].style.display && (m[0].style.display = "none"),
            "none" !== v[0].style.display && (v[0].style.display = "none")
        }),
        $("#libraryfolderroot").on("change", function(t, i) {
            var n, r = $(i), o = r.parent().closest(".libraryfolder"), a = r.hasClass("libraryfolder") ? "folder" : "item", s = [], l = "", c = "", d = r.attr("data-oldparent"), h = $("*[data-folderid='" + d + "']"), u = i.getAttribute("data-massdrop"), p = r.attr("data-oldindex"), f = "", r = $(i);
            if (l = r.attr("folder" === a ? "data-folderid" : "data-imageid"),
            o.length > 0 ? c = o.attr("data-folderid") : r.parents("#recentuploads").length > 0 ? (o = $("#recentuploads"),
            c = "recentuploads",
            r.addClass("recentupload")) : (o = $("#userlibrary"),
            c = "root"),
            0 === h.length && (h = $("#userlibrary")),
            "recentuploads" != c) {
                if (n = r.index(),
                c === d && parseInt(n, 10) === parseInt(p, 10))
                    return;
                var g = r.prev()
                  , f = "";
                if (r.hasClass("libraryfolder")) {
                    var m = html_sanitize(r.children(".dd-content").children(".folder-title").text());
                    s.push({
                        id: r.attr("data-folderid"),
                        n: m,
                        t: "folder"
                    })
                } else if (r.hasClass("library-item")) {
                    var v = r.find("img").prop("src")
                      , b = html_sanitize(r.find(".namecontainer").text());
                    s.push({
                        id: r.attr("data-imageid"),
                        n: b,
                        t: "item",
                        fullsize_url: r.attr("data-fullsizeurl"),
                        img_url: v
                    })
                }
                g && g.hasClass("libraryfolder") ? f = g.attr("data-folderid") : g && g.hasClass("library-item") && (f = g.attr("data-imageid"))
            }
            if (u) {
                if (0 === d20.library.lastMultipleDragInfo.length)
                    return void r.remove();
                if (a = "massdrop",
                d = $("#libraryview").attr("data-folderid"),
                "root" === d)
                    var h = $("#userlibrary");
                else
                    var h = $("*[data-folderid='" + d + "']");
                l = JSON.stringify(d20.library.lastMultipleDragInfo),
                p = [],
                $("#libraryview .library-container").each(function(e, t) {
                    $(t).hasClass("selected") && p.push(e)
                });
                var g = r.prev()
                  , f = "";
                if (g && g.hasClass("libraryfolder") ? f = g.attr("data-folderid") : g && g.hasClass("library-item") && (f = g.attr("data-imageid")),
                d === c) {
                    var w = h.children(".dd-list").children()
                      , x = [];
                    _.each(w, function(e) {
                        var t = $(e);
                        t.is(".library-item, .libraryfolder") && x.push(e)
                    }),
                    _.each(x, function(e, t) {
                        p.indexOf(t) > -1 && e.remove()
                    })
                } else if (h && "true" === h.attr("data-content") || "root" === d) {
                    var w = h.children(".dd-list").children();
                    _.each(w, function(e, t) {
                        p.indexOf(t) > -1 && e.remove()
                    })
                } else if ("recentuploads" === d && window.currentPlayer && window.currentPlayer.get("recentuploadsfilter") === !0) {
                    var w = $("#recentuploads").children(".dd-list").children();
                    _.each(w, function(e, t) {
                        p.indexOf(t) > -1 && e.remove()
                    })
                }
                var E = "";
                ("recentuploads" != d || window.currentPlayer && window.currentPlayer.get("recentuploadsfilter") === !0) && $("#libraryview .selected").remove(),
                _.each(d20.library.lastMultipleDragInfo, function(e) {
                    "item" === e.t && (E += "<li class='dd-item library-item draggableresult' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + e.img_url + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.n + "</div></div></div></li>"),
                    "folder" === e.t && (E += "<li class='dd-item dd-folder dd-collapsed libraryfolder' data-folderid='" + e.id + "'>",
                    E += "<button class='dd-sortablehandle' data-action='collapse' type='button' style='display: none;'>Collapse</button>",
                    E += "<button class='dd-sortablehandle' data-action='expand' type='button'>Expand</button>",
                    E += "<div class='dd-content'>",
                    E += "<div class='folder-title'>" + e.n + "</div>",
                    E += "</div>",
                    E += "<ol class='dd-list'>",
                    E += "</ol>")
                }),
                r.replaceWith(E),
                $("#userlibrary").find(".draggableresult").not(".ui-draggable").draggable({
                    handle: ".namecontainer",
                    revert: !0,
                    revertDuration: 0,
                    helper: "clone",
                    appendTo: "body",
                    start: function() {
                        e.addClass("externaldrag")
                    },
                    stop: function() {
                        e.removeClass("externaldrag")
                    }
                }).addTouch()
            }
            $.post(d20.library.libraryBase + "/image_library/movelibraryitem/", {
                appid: l,
                parent: c,
                type: a,
                oldparent: d,
                newindex: n,
                oldindex: p,
                placedafterid: f,
                itemstructure: JSON.stringify(s)
            }, function(e) {
                y(e, "move") || ("true" === $("#libraryview").attr("data-isopen") && $("#libraryview").attr("data-folderid") === c && d20.library.doRenderFolder(o, c, a, l),
                "true" === $("#libraryview").attr("data-isopen") && $("#libraryview").attr("data-folderid") === d && "recentuploads" != d && d20.library.doRenderFolder(h, d, a, l))
            })
        }),
        d20.library.buildLibraryIndex = function() {
            e.show(),
            $.get(d20.library.libraryBase + "/image_library/marketplace_purchases_index", function(i) {
                var n = JSON.parse(i)
                  , r = "";
                r += "<ol class='dd-list'>";
                for (var o in n) {
                    fname = "free" === o ? "Free Assets" : "purchases" === o ? "Marketplace Purchases" : "mentorsets" === o ? "Pro Sets" : "ttfsets" === o ? "Backer Sets" : o,
                    r += "<li class='dd-item dd-folder dd-collapsed'>",
                    r += "<button class='dd-unsortable' data-action='collapse' type='button'>Collapse</button>",
                    r += "<button class='dd-unsortable' data-action='expand' type='button' style='display: none;'>Expand</button>",
                    r += "<div class='dd-content'>",
                    r += "<div class='folder-title'>" + fname + "</div>",
                    r += "</div>",
                    r += "<ol class='dd-list'>";
                    var a = [];
                    for (var s in n[o])
                        a.push([s, n[o][s]]);
                    a.sort(function(e, t) {
                        return e[1] < t[1] ? -1 : e[1] > t[1] ? 1 : 0
                    }),
                    _.each(a, function(e) {
                        r += "<li class='dd-item dd-folder dd-collapsed tokenset' data-setid='" + e[0] + "' >",
                        r += "<button class='dd-unsortable' data-action='collapse' type='button' style='display: none;'>Collapse</button>",
                        r += "<button class='dd-unsortable' data-action='expand' type='button'>Expand</button>",
                        r += "<div class='dd-content'>",
                        r += "<div class='folder-title'>" + e[1] + "</div>",
                        r += "</div>"
                    }),
                    r += "</ol>",
                    r += "</li>"
                }
                r += "</ol>",
                t.html(r),
                e.nestable("serialize"),
                e.nestable("collapseAll")
            }),
            $.get(d20.library.libraryBase + "/image_library/fetchroot", function(t) {
                var n = JSON.parse(t)
                  , r = "";
                r += "<div><button class='btn addlibraryfolder' style='float: right;'><span class='pictos'>o</span> Add</button><button class='btn showuploaddialog' style='float: right; margin-right: 15px;'><span class='pictos'>c</span> Upload</div><div class='clear'></div>",
                r += "<ol class='dd-list' style='min-height: 15px;'>",
                _.each(n, function(e) {
                    "item" === e.t && (r += "<li class='dd-item library-item draggableresult' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + e.img_url + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.n + "</div></div></div></li>"),
                    "folder" === e.t && (r += "<li class='dd-item dd-folder dd-collapsed libraryfolder' data-folderid='" + e.id + "'>",
                    r += "<button class='dd-sortablehandle' data-action='collapse' type='button' style='display: none;'>Collapse</button>",
                    r += "<button class='dd-sortablehandle' data-action='expand' type='button'>Expand</button>",
                    r += "<div class='dd-content'>",
                    r += "<div class='folder-title'>" + e.n + "</div>",
                    r += "</div>",
                    r += "<ol class='dd-list'>",
                    r += "</ol>")
                }),
                r += "</ol>",
                r += "<div class='clear' style='height: 15px;'></div><div class='tabcontainer' style='min-width: 265px;'><span class='pictos'>F</span> Recent Uploads<span style='float:right; cursor:pointer;' class='pictos recentuploadsfilter' title='Filter out items already in your library'>|</span></div>",
                i.html(r),
                $("#imagedialog #userlibrary .draggableresult").draggable({
                    handle: ".namecontainer",
                    revert: !0,
                    revertDuration: 0,
                    helper: "clone",
                    appendTo: "body",
                    start: function() {
                        e.addClass("externaldrag"),
                        $(this).attr("data-oldindex", $(this).index()),
                        $(this).parents(".libraryfolder").length > 0 ? $(this).attr("data-oldparent", $(this).parent().closest(".libraryfolder").attr("data-folderid")) : $(this).attr("data-oldparent", "root")
                    },
                    stop: function() {
                        e.removeClass("externaldrag")
                    }
                }).addTouch()
            })
        }
        ,
        d20.library.buildLibraryIndex(),
        d20.library.buildRecentUploads = function() {
            n.html("<div class='alert orange'><img src='/images/load.gif' width='15' height='15' /> Loading Recent Uploads...</div>");
            var t = !1;
            window.currentPlayer && (t = window.currentPlayer.get("recentuploadsfilter")),
            $.get(d20.library.libraryBase + "/image_library/fetchorphanassets/" + t + "/1", function(i) {
                var r = JSON.parse(i);
                if (d20.library.recentuploadspage = 1,
                r.length > 0) {
                    var o = "";
                    o += "<ol class='dd-list'>",
                    _.each(r, function(e) {
                        o += "<li class='dd-item library-item draggableresult recentupload' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "' data-filesize='" + e.file_size + "' data-uploaddate='" + e.upload_date + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + e.image_url + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.name + "</div></div></div></li>"
                    }),
                    o += "</ol>",
                    n.html(o),
                    e.nestable("serialize"),
                    $("#imagedialog #recentuploads .draggableresult").draggable({
                        handle: ".namecontainer",
                        revert: !0,
                        revertDuration: 0,
                        helper: "clone",
                        appendTo: "body",
                        start: function() {
                            e.addClass("externaldrag")
                        },
                        stop: function() {
                            e.removeClass("externaldrag")
                        }
                    }).addTouch(),
                    $("#imagedialog").off("infinitescroll.scrollpage-library"),
                    $("#imagedialog").off("scroll.is-library"),
                    $("#imagedialog").infinitescroll({
                        url: d20.library.libraryBase + "/image_library/fetchorphanassets/" + t,
                        appendTo: n.find(".dd-list"),
                        container: e,
                        precheck: function() {
                            return $("#arttab").hasClass("ui-state-active") && $("#switchtouserlibrary").hasClass("active")
                        },
                        eventsuffix: "-library",
                        triggerAt: 50,
                        requestType: "get",
                        callback: function(t) {
                            var i = JSON.parse(t);
                            d20.library.recentuploadspage += 1;
                            var r = "";
                            _.each(i, function(e) {
                                r += "<li class='dd-item library-item draggableresult recentupload' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "' data-filesize='" + e.file_size + "' data-uploaddate='" + e.upload_date + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + e.image_url + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.name + "</div></div></div></li>"
                            }),
                            50 === i.length && (r += "<div class='alert orange'><img src='/images/load.gif' width='15' height='15' /> Loading Recent Uploads...</div>");
                            var o = n.find(".dd-list");
                            o.find(".alert").remove(),
                            o.append(r),
                            $("#imagedialog #recentuploads .draggableresult").not(".ui-draggable").draggable({
                                handle: ".namecontainer",
                                revert: !0,
                                revertDuration: 0,
                                helper: "clone",
                                appendTo: "body",
                                start: function() {
                                    e.addClass("externaldrag")
                                },
                                stop: function() {
                                    e.removeClass("externaldrag")
                                }
                            }).addTouch()
                        }
                    })
                } else
                    n.find(".alert").remove()
            })
        }
        ,
        d20.library.validateFolderStructure = function() {
            window.is_gm && $.post(d20.library.libraryBase + "/image_library/validatefolderstructure/", {
                isgm: window.is_gm
            }, function(e) {
                "reload" === e && (console.log("RESCUING ORPHANED FOLDERS"),
                d20.library.buildLibraryIndex())
            })
        }
        ,
        d20.library.showUploadDialog = function() {
            var e = $("<div class='uploaddialog'></div>").html($("#tmpl_uploaddialog").html())
              , t = e.find(".avatar");
            t.dndUploader({
                url: "/image_library/newupload",
                method: "POST",
                allowMultiple: !0
            }),
            e.find(".manual").on("change", function() {
                t.trigger("triggermanual")
            }),
            t.bind("uploadcomplete", function(t, i) {
                return t.stopPropagation(),
                "overquota" == i ? (d20.utils.showOverQuota(),
                !1) : ((void 0 === i.multiUploadTotal || i.multiUploadNum >= i.multiUploadTotal - 1) && (e.find(".progress").remove(),
                d20.library.buildRecentUploads()),
                void e.find(".completed").text("Upload complete. Uploaded files are available under your Recent Uploads to add to the tabletop."))
            }),
            e.dialog({
                zIndex: 11e3,
                width: 400,
                height: 400,
                title: "Upload Files...",
                beforeClose: function() {
                    $(this).dialog("destroy")
                }
            })
        }
        ,
        d20.library.addFolder = function(e, t, i, n) {
            var r = generateUUID();
            $.post(d20.library.libraryBase + "/image_library/addlibraryfolder/", {
                appid: r,
                parent: t,
                name: e,
                items: "[]"
            }, function(o) {
                if (!y(o, "add")) {
                    ("root" === t || i.attr("data-content") && "true" === i.attr("data-content")) && b(i, [{
                        n: e,
                        t: "folder",
                        id: r
                    }]);
                    var a = i.attr("data-folderid");
                    a || (a = "root"),
                    ("true" === $("#libraryview").attr("data-isopen") && $("#libraryview").attr("data-folderid") === a || n) && $("#libraryview").prepend("<div class='library-container folder' data-folderid='" + r + "'><div class='library-imgcontainer'><span class='pictos' style='cursor: default;'>o</span></div><div class='library-labelcontainer'><span>" + e + "</span></div><div class='editbox'><span></span></div><div style='clear: both;'></div></div>")
                }
            })
        }
        ,
        d20.library.renameFolder = function(e, t, i, n) {
            $.post(d20.library.libraryBase + "/image_library/renamelibraryfolder/", {
                appid: t,
                name: e
            }, function(r) {
                if (!y(r, "rename"))
                    if (n) {
                        var o = i.children(".library-labelcontainer")
                          , a = i.children(".libraryeditbox");
                        o.text(e),
                        o.show(),
                        a.remove(),
                        $("#userlibrary").find("*[data-folderid=" + t + "]").children(".dd-content").children(".folder-title").text(e)
                    } else {
                        i.children(".dd-content").children(".folder-title").text(e);
                        var s = i.parent().closest(".dd-folder").attr("data-folderid");
                        if (s || (s = "root"),
                        "true" === $("#libraryview").attr("data-isopen") && $("#libraryview").attr("data-folderid") === s) {
                            var o = $("#libraryview *[data-folderid=" + t + "]").children(".library-labelcontainer");
                            o.text(e)
                        }
                    }
            })
        }
        ,
        d20.library.deleteFolder = function(e, t, i) {
            var r = t.parent().closest(".dd-folder").attr("data-folderid");
            r || (r = "root"),
            $.post(d20.library.libraryBase + "/image_library/deletelibraryfolder/", {
                appid: e,
                localparentid: r,
                deleteindex: i
            }, function(i) {
                y(i, "delete"),
                "true" === $("#libraryview").attr("data-isopen") && $("#libraryview").attr("data-folderid") === r ? $("#libraryview *[data-folderid=" + e + "]").remove() : "true" === $("#libraryview").attr("data-isopen") && $("#libraryview").attr("data-folderid") === e ? $("#libraryview").dialog("close") : $("#userlibrary *[data-folderid=" + $("#libraryview").attr("data-folderid") + "]").parents("*[data-folderid=" + e + "]").length && $("#libraryview").dialog("close"),
                t.remove(),
                n.empty(),
                d20.library.buildRecentUploads()
            })
        }
        ,
        d20.library.sortFolder = function(e, t, i) {
            $.get(d20.library.libraryBase + "/image_library/sortlibraryfolder/" + e, function(n) {
                if (!y(n, "sort")) {
                    if (i) {
                        var r = $("#libraryview").attr("data-imageid");
                        $.get(d20.library.libraryBase + "/image_library/fetchlibraryfolder/" + e, function(e) {
                            if (!y(e)) {
                                var t = JSON.parse(e);
                                "true" === $("#libraryview").attr("data-isopen") && d20.library.renderLibraryView(t, "folder", r)
                            }
                        })
                    }
                    var o = JSON.parse(n);
                    t.children(".dd-list").empty(),
                    ("root" == e || t.attr("data-content") && "true" == t.attr("data-content")) && b(t, o)
                }
            })
        }
        ,
        d20.library.deleteItem = function(e, t, i, n) {
            $.post(d20.library.libraryBase + "/image_library/deletelibraryitem/", {
                appid: e,
                removetag: t,
                parent: i,
                deleteindex: n
            }, function(e) {
                y(e, "delete") || ((window.currentPlayer && window.currentPlayer.get("recentuploadsfilter") === !0 || -1 === $currentItemTarget.attr("data-fullsizeurl").indexOf("marketplace")) && d20.library.buildRecentUploads(),
                "true" === $("#libraryview").attr("data-isopen") && $("#libraryview").attr("data-folderid") === i && $("#libraryview").children().eq(n).remove())
            })
        }
        ,
        d20.library.renameItem = function(e, t, i, n, r, o, a) {
            $.post(d20.library.libraryBase + "/image_library/renamelibraryitem/", {
                appid: t,
                name: e,
                oldname: n,
                parent: r,
                index: a
            }, function(s) {
                if (!y(s, "rename"))
                    if (o) {
                        var l = i.children(".library-labelcontainer")
                          , c = i.children(".libraryeditbox");
                        l.text(e),
                        l.show(),
                        c.remove(),
                        "recentuploads" === r ? $("#recentuploads").find("*[data-imageid=" + t + "]").find(".namecontainer").text(e) : $("#userlibrary").find("*[data-imageid=" + t + "]").find(".namecontainer").text(e);
                        var d = i.find(".textboxlist-bit:contains('" + n + "')");
                        d.length > 0 ? d.text(e) : i.find(".textboxlist-bits").append("<li class='textboxlist-bit textboxlist-bit-box textboxlist-bit-box-deleteable'>" + e + "<a href='#' class='textboxlist-bit-box-deletebutton'</a></li>")
                    } else {
                        i.find(".namecontainer").text(e);
                        var h = i.parent().closest(".dd-folder").attr("data-folderid");
                        if (h || (h = "root"),
                        "true" === $("#libraryview").attr("data-isopen") && $("#libraryview").attr("data-folderid") === h) {
                            var u = $("#libraryview").children().eq(a);
                            if (u && u.attr("data-imageid") === t) {
                                u.children(".library-labelcontainer").text(e);
                                var d = u.find(".textboxlist-bit").filter(function() {
                                    return $(this).text() === e
                                });
                                0 === d.length && (u.find(".yourtags").empty(),
                                d20.library.processView())
                            }
                        }
                        i.parents("#libraryresults").length > 0 && d20.library.buildRecentUploads()
                    }
            })
        }
        ,
        d20.library.copyAsset = function(t, n, r, o, a, s) {
            var l = generateUUID();
            $.post(d20.library.libraryBase + "/image_library/copy_asset_to_library/", {
                type: t,
                id: n,
                name: r,
                url: o,
                newid: l,
                keywords: s
            }, function(t) {
                if (!y(t, "copy")) {
                    var n = JSON.parse(t);
                    "item" === n.t && (i.children(".dd-list").prepend("<li class='dd-item library-item draggableresult recentupload' data-fullsizeurl='" + n.fullsize_url + "' data-imageid='" + n.id + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + n.img_url + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + n.n + "</div></div></div></li>"),
                    d20.library.buildRecentUploads()),
                    "folder" === n.t && i.children(".dd-list").prepend("<li class='dd-item dd-folder dd-collapsed libraryfolder' data-folderid='" + l + "'><button class='dd-sortablehandle' data-action='collapse' type='button' style='display: none;'>Collapse</button><button class='dd-sortablehandle' data-action='expand' type='button'>Expand</button><div class='dd-content'><div class='folder-title'>" + n.n + "</div></div><ol class='dd-list'></ol>"),
                    $("#imagedialog #userlibrary .draggableresult").not(".ui-draggable").draggable({
                        handle: ".namecontainer",
                        revert: !0,
                        revertDuration: 0,
                        helper: "clone",
                        appendTo: "body",
                        start: function() {
                            e.addClass("externaldrag"),
                            $(this).attr("data-oldindex", $(this).index()),
                            $(this).parents(".libraryfolder").length > 0 ? $(this).attr("data-oldparent", $(this).parent().closest(".libraryfolder").attr("data-folderid")) : $(this).attr("data-oldparent", "root")
                        },
                        stop: function() {
                            e.removeClass("externaldrag")
                        }
                    }).addTouch()
                }
            })
        }
        ,
        d20.library.doCopyToFolder = function(t, i, n, r, o, a, s, l) {
            var c = generateUUID();
            $.post(d20.library.libraryBase + "/image_library/copy_asset_to_library/", {
                type: n,
                id: r,
                name: o,
                url: a,
                newid: c,
                foldername: t,
                folderid: i,
                keywords: l
            }, function(t) {
                if (!y(t, "copy")) {
                    var o = JSON.parse(t)
                      , a = $("#libraryfolderroot *[data-folderid=" + o.parentid + "]");
                    if (a && "true" === a.attr("data-content") && ("item" === o.t && (a.children(".dd-list").prepend("<li class='dd-item library-item draggableresult recentupload' data-fullsizeurl='" + o.fullsize_url + "' data-imageid='" + o.id + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + o.img_url + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + o.n + "</div></div></div></li>"),
                    d20.library.buildRecentUploads()),
                    "folder" === o.t && a.children(".dd-list").prepend("<li class='dd-item dd-folder dd-collapsed libraryfolder' data-folderid='" + c + "'><button class='dd-sortablehandle' data-action='collapse' type='button' style='display: none;'>Collapse</button><button class='dd-sortablehandle' data-action='expand' type='button'>Expand</button><div class='dd-content'><div class='folder-title'>" + o.n + "</div></div><ol class='dd-list'></ol>"),
                    $("#imagedialog #userlibrary .draggableresult").not(".ui-draggable").draggable({
                        handle: ".namecontainer",
                        revert: !0,
                        revertDuration: 0,
                        helper: "clone",
                        appendTo: "body",
                        start: function() {
                            e.addClass("externaldrag"),
                            $(this).attr("data-oldindex", $(this).index()),
                            $(this).parents(".libraryfolder").length > 0 ? $(this).attr("data-oldparent", $(this).parent().closest(".libraryfolder").attr("data-folderid")) : $(this).attr("data-oldparent", "root")
                        },
                        stop: function() {
                            e.removeClass("externaldrag")
                        }
                    }).addTouch()),
                    "true" === $("#libraryview").attr("data-isopen") && $("#libraryview").attr("data-folderid") === i) {
                        var s = $("#userlibrary").find("*[data-folderid='" + i + "']");
                        d20.library.doRenderFolder(s, i, n, r)
                    }
                }
            })
        }
        ,
        d20.library.getSelected = function() {
            var e = []
              , t = [];
            return d20.library.lastMultipleDragInfo = [],
            _.each($("#libraryview .library-container.selected"), function(i) {
                if (i.hasAttribute("data-folderid")) {
                    t.push(i.getAttribute("data-folderid"));
                    var n = $(i).children(".library-labelcontainer").text();
                    d20.library.lastMultipleDragInfo.push({
                        n: n,
                        t: "folder",
                        id: i.getAttribute("data-folderid")
                    })
                } else if (i.hasAttribute("data-imageid")) {
                    e.push(i.getAttribute("data-imageid"));
                    var r = $(i).children(".library-labelcontainer").text()
                      , o = $(i).find("img").attr("src");
                    d20.library.lastMultipleDragInfo.push({
                        n: r,
                        t: "item",
                        id: i.getAttribute("data-imageid"),
                        fullsize_url: i.getAttribute("data-fullsizeurl"),
                        img_url: o
                    })
                }
            }),
            {
                count: e.length + t.length,
                imageids: e,
                folderids: t
            }
        }
        ,
        d20.library.massDelete = function(e, t, i, n) {
            $.post(d20.library.libraryBase + "/image_library/massdelete/", {
                parentid: e,
                folderids: t,
                imageids: i,
                deleteindex: n
            }, function(t) {
                if (!y(t, "delete")) {
                    d20.library.buildRecentUploads();
                    var i;
                    "recentuploads" === e ? i = $("#recentuploads") : (i = $("#userlibrary *[data-folderid=" + e + "]"),
                    0 === i.length && (i = $("#userlibrary"))),
                    i && "true" === i.attr("data-content") && i.children(".dd-list").children().eq(n).remove()
                }
            })
        }
        ,
        d20.library.permDelete = function(e) {
            $("#libraryview .selected").remove(),
            _.each(e.imageids, function(e) {
                $("#libraryfolderroot *[data-imageid=" + e + "]").remove()
            }),
            _.each(e.folderids, function(e) {
                $("#libraryfolderroot *[data-folderid=" + e + "]").remove()
            }),
            $.post(d20.library.libraryBase + "/image_library/permdelete/", {
                ids: e
            }, function(e) {
                y(e, "delete")
            })
        }
        ;
        var y = function(e, t) {
            var i = "";
            switch (e) {
            case "notfound":
                i = "Failed to " + t + " folder. This folder was not found.";
                break;
            case "parentnotfound":
                i = "Failed to " + t + " folder. This folder's parent was not found.";
                break;
            case "itemnotfound":
                i = "Failed to " + t + " item. This item was not found.";
                break;
            case "itemparentnotfound":
                i = "Failed to " + t + " item. This item's parent was not found.";
                break;
            case "selfmove":
                i = "Failed to " + t + " folder. You attempted to move a folder into itself.";
                break;
            case "recentuploadsmove":
                i = "Failed to" + t + " item. You attempted to move a copy into the Recent Uploads. Delete the copy instead."
            }
            if ("" != i) {
                if (console.log(i),
                alert(i),
                d20.library.buildLibraryIndex(),
                d20.library.buildRecentUploads(),
                "true" === $("#libraryview").attr("data-isopen")) {
                    var n = $("#userlibrary *[data-folderid='" + $("#libraryview").attr("data-folderid") + "'");
                    n.length > 0 ? n.children(".dd-content").trigger("click") : "root" === $("#libraryview").attr("data-folderid") && $("#userlibrary").children(".dd-list").children(".library-item").length > 0 ? $("#userlibrary").children(".dd-list").children(".library-item").first().children(".dd-content").trigger("click") : $("#libraryview").dialog("close")
                }
                return !0
            }
            return !1
        }
          , b = function(t, i) {
            var n = "";
            _.each(i, function(e) {
                "item" === e.t ? n += "<li class='dd-item library-item draggableresult' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + e.img_url + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.n + "</div></div></div></li>" : "folder" === e.t && (n += "<li class='dd-item dd-folder dd-collapsed libraryfolder' data-folderid='" + e.id + "'>",
                n += "<button class='dd-sortablehandle' data-action='collapse' type='button' style='display: none;'>Collapse</button>",
                n += "<button class='dd-sortablehandle' data-action='expand' type='button'>Expand</button>",
                n += "<div class='dd-content'>",
                n += "<div class='folder-title'>" + e.n + "</div>",
                n += "</div>",
                n += "<ol class='dd-list'>",
                n += "</ol>")
            }),
            t.children(".dd-list").prepend(n),
            t.find(".draggableresult").not(".ui-draggable").draggable({
                handle: ".namecontainer",
                revert: !0,
                revertDuration: 0,
                helper: "clone",
                appendTo: "body",
                start: function() {
                    e.addClass("externaldrag"),
                    $(this).attr("data-oldindex", $(this).index()),
                    $(this).parents(".libraryfolder").length > 0 ? $(this).attr("data-oldparent", $(this).parent().closest(".libraryfolder").attr("data-folderid")) : $(this).attr("data-oldparent", "root")
                },
                stop: function() {
                    e.removeClass("externaldrag")
                }
            }).addTouch()
        }
        ;
        window.YourTag = Backbone.Model.extend({
            defaults: {
                tokenid: 0,
                tag: ""
            },
            nofirebase: !0
        }),
        window.YourTagCollection = Backbone.Collection.extend({
            model: YourTag,
            nofirebase: !0,
            url: "/browse/yourtags/0"
        }),
        window.YourTagView = Backbone.View.extend({
            _template: $.jqotec("#tmpl_yourtag"),
            events: {
                click: "destroy"
            },
            initialize: function() {
                _.bindAll(this, "render"),
                this.model.bind("change", this.render)
            },
            render: function() {
                $(this.el).html(this._template(this.model.toJSON()))
            },
            destroy: function() {
                $(this.el).remove(),
                this.model.destroy()
            }
        }),
        window.YourTagsView = Backbone.View.extend({
            _template: $.jqotec("#tmpl_yourtags"),
            events: {
                "click .textboxlist.noedit": "toggleEditing"
            },
            initialize: function() {
                _.bindAll(this, "render", "addAll", "initTextboxlist", "addFromBitBox", "removeFromBitBox", "beginEditing", "stopEditing");
                var e = this;
                if (this.editable = $(this.el).attr("data-editable"),
                this.editing = !1,
                this.YourTags = new YourTagCollection,
                void 0 !== this.$el.attr("data-imageid") ? (this.tokenid = $(this.el).attr("data-imageid"),
                this.YourTags.url = d20.library.libraryBase + "/image_library/yourtags/" + this.tokenid) : console.log("ERROR: NO IMAGEID FOUND"),
                $(this.el).html(this._template(this)),
                this.input = $(this.el).find("input"),
                this.textboxlist = new $.TextboxList(this.input,{
                    encode: function() {},
                    decode: function() {},
                    startEditableBit: !1,
                    inBetweenEditableBits: !1,
                    unique: !0,
                    plugins: {
                        autocomplete: {
                            minLength: 3,
                            queryRemote: !0,
                            remote: {
                                url: d20.library.libraryBase + "/image_library/yourtag_autocomplete"
                            }
                        }
                    }
                }),
                this.YourTags.bind("refresh", this.addAll),
                0 != this.tokenid)
                    if (_.isUndefined(window.BOOTSTRAP_YOUR_TAGS) || _.isUndefined(BOOTSTRAP_YOUR_TAGS[this.tokenid]))
                        this.YourTags.fetch({
                            success: function() {
                                e.addAll()
                            }
                        });
                    else {
                        for (var t = 0; t < BOOTSTRAP_YOUR_TAGS[this.tokenid].length; t++)
                            this.YourTags.add(BOOTSTRAP_YOUR_TAGS[this.tokenid][t]);
                        this.addAll()
                    }
                if (this.textboxlist.addEvent("bitBoxAdd", this.addFromBitBox),
                this.textboxlist.addEvent("bitBoxRemove", this.removeFromBitBox),
                this.stopEditing(),
                "true" == $(this.el).attr("data-hide-edit-button") && $(this.el).find(".add").hide(),
                "true" == $(this.el).attr("data-auto-edit") && this.toggleEditing(!0),
                $(this.el).attr("data-initial-tags"))
                    for (var i = JSON.parse($(this.el).attr("data-initial-tags")), t = 0; t < i.length; t++)
                        console.log("adding " + i[t].tag),
                        this.textboxlist.add(i[t].tag);
                $(this.el).on("click", function(e) {
                    e.stopPropagation()
                })
            },
            render: function() {},
            addFromBitBox: function(e, t) {
                if (this.editing || t) {
                    var i = this.YourTags.create({
                        tag: e.getValue()[1]
                    });
                    e.setValue([i.cid, i.get("tag"), e.getValue()[2]])
                }
            },
            removeFromBitBox: function(e) {
                var t;
                this.YourTags.each(function(i) {
                    i.cid === e.getValue()[0] && (t = i)
                }),
                void 0 != t && t.destroy()
            },
            addAll: function() {
                this.YourTags.each(this.initTextboxlist)
            },
            initTextboxlist: function(e) {
                "f|" != e.get("tag").substring(0, 2) && this.textboxlist.add(e.get("tag"), e.cid)
            },
            toggleEditing: function(e) {
                this.editing ? (this.stopEditing(),
                this.editing = !1) : (this.beginEditing(e),
                this.editing = !0)
            },
            beginEditing: function(e) {
                $(this.el).find(".textboxlist").removeClass("noedit").find("input").show(),
                ("undefined" == typeof e || 1 != e) && setTimeout(this.textboxlist.focusLast, 0)
            },
            stopEditing: function() {
                $(this.el).find(".textboxlist input").hide(),
                $(this.el).find(".textboxlist").addClass("noedit")
            }
        })
    })
}();
